bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[01234]>  but  was:<[  [FE]    junit.framework.ComparisonFailure:  expected:<[]01234>  but  was:<[    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append( ",n ");  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append( ",n ");	      result.append(   ",   ");    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[01234]>  but  was:<[  	21	1	replace
2	[BUG]  [BUGGY]  result.append( ",n ");  [FE]  junit.framework.ComparisonFailure:  expected:<[01234]>  but  was:<[  [FE]    junit.framework.ComparisonFailure:  expected:<[]01234>  but  was:<[    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append( ",n ");  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append( ",n ");	      result.append(   ",   ");    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[01234]>  but  was:<[  	21	1	replace
3	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(lower,  upper),  index);  [CE]  no  suitable  method  found  for  defaultString(int,int)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(StringUtils.defaultString(lower,  upper),  index);  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(StringUtils.defaultString(lower,  upper),  index);	      result.append(StringUtils.defaultString(lower,    upper));    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int,int)	22	None	replace
4	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(lower,  index,  upper));  [CE]  no  suitable  method  found  for  defaultString(int,int,int)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(StringUtils.defaultString(lower,  index,  upper));  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(StringUtils.defaultString(lower,  index,  upper));	      result.append(StringUtils.defaultString(lower,    upper));    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int,int,int)	22	None	replace
5	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(lower,  upper,  index));  [CE]  no  suitable  method  found  for  defaultString(int,int,int)  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(StringUtils.defaultString(lower,  upper,  index));  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(StringUtils.defaultString(lower,  upper,  index));	      result.append(StringUtils.defaultString(lower,    upper));    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int,int,int)	22	None	replace
6	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(upper,  lower));  [CE]  no  suitable  method  found  for  defaultString(int,int)  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(StringUtils.defaultString(upper,  lower));  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(StringUtils.defaultString(upper,  lower));	      result.append(StringUtils.defaultString(lower,    upper));    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int,int)	22	None	replace
7	[BUG]  [BUGGY]  Result.append(str.substring(0,  index  +  1));  [CE]  cannot  find  symbol  Result  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  Result.append(str.substring(0,  index  +  1));  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	Result.append(str.substring(0,  index  +  1));	  Result.append(str.substring(0,    index));    	non-compiled	[CE]  cannot  find  symbol  Result	9	None	replace
8	[BUG]  [BUGGY]  Result.append(str.substring(0,  index),  lower);  [CE]  cannot  find  symbol  Result  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  Result.append(str.substring(0,  index),  lower);  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	Result.append(str.substring(0,  index),  lower);	  Result.append(str.substring(0,    index));    	non-compiled	[CE]  cannot  find  symbol  Result	9	None	replace
9	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(0,  index  +  1));  result.append(str.substring(0,  index  +  1));  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append(str.substring(0,    index    +    1));    result.append(str.substring(0,  index  +  1));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	7	1	add
10	[BUG]  [BUGGY]  result.append(str.substring(0,  index  +  1));  result.append(str.substring(0,  index  +  1));  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(0,  index  +  1));  result.append(str.substring(0,  index  +  1));  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(0,    index    +    1));    result.append(str.substring(0,  index  +  1));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	7	1	add
11	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(0,  index  +  1));  if(index  >=  -1)  {  result.append(str.substring(0,  index  +  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append(str.substring(0,    index    +    1));    if(index  >=  -1)  {  result.append(str.substring(0,  index  +  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	7	1	add
12	[BUG]  [BUGGY]  result.append(str.substring(0,  index  +  1));  if(index  >=  -1)  {  result.append(str.substring(0,  index  +  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(0,  index  +  1));  if(index  >=  -1)  {  result.append(str.substring(0,  index  +  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(0,    index    +    1));    if(index  >=  -1)  {  result.append(str.substring(0,  index  +  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	7	1	add
13	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(0,  index  +  1));  if(index  >=  -1)  {  result.append(str.substring(0,  index  +  1));  }  else  {  result.append(str.substring(0,  index  +  1));  }  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append(str.substring(0,    index    +    1));    if(index  >=  -1)  {  result.append(str.substring(0,  index  +  1));  }  else  {  result.append(str.substring(0,  index  +  1));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	7	1	add
14	[BUG]  [BUGGY]  result.append(str.substring(0,  index  +  1));  if(index  >=  -1)  {  result.append(str.substring(0,  index  +  1));  }  else  {  result.append(str.substring(0,  index  +  1));  }  [FE]  StringIndexOutOfBoundsException  [FE]        ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(0,  index  +  1));  if(index  >=  -1)  {  result.append(str.substring(0,  index  +  1));  }  else  {  result.append(str.substring(0,  index  +  1));  }  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(0,    index    +    1));    if(index  >=  -1)  {  result.append(str.substring(0,  index  +  1));  }  else  {  result.append(str.substring(0,  index  +  1));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	7	1	add
15	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(0,  index  +  1));  if(index  >=  -1)  {  result.append(str.substring(0,  index  +  1));  }  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append(str.substring(0,    index    +    1));    if(index  >=  -1)  {  result.append(str.substring(0,  index  +  1));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	7	1	add
16	[BUG]  [BUGGY]  result.append(str.substring(0,  index  +  1));  if(index  >=  -1)  {  result.append(str.substring(0,  index  +  1));  }  [FE]  StringIndexOutOfBoundsException  [FE]          ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(0,  index  +  1));  if(index  >=  -1)  {  result.append(str.substring(0,  index  +  1));  }  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(0,    index    +    1));    if(index  >=  -1)  {  result.append(str.substring(0,  index  +  1));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	7	1	add
17	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(0,  index  +  1));  result.append(str.substring(0,  index  +  1));  if(index  >  upper)  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append(str.substring(0,    index    +    1));    result.append(str.substring(0,  index  +  1));  if(index  >  upper)  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	7	1	add
18	[BUG]  [BUGGY]  result.append(str.substring(0,  index  +  1));  result.append(str.substring(0,  index  +  1));  if(index  >  upper)  {  result.append(StringUtils.defaultString(appendToEnd));  }  [FE]  StringIndexOutOfBoundsException  [FE]            ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(0,  index  +  1));  result.append(str.substring(0,  index  +  1));  if(index  >  upper)  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(0,    index    +    1));    result.append(str.substring(0,  index  +  1));  if(index  >  upper)  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	7	1	add
19	[BUG]  [BUGGY]  result.append(StringUtils.indexOf(str,  lower,  upper,  index));  [CE]  no  suitable  method  found  for  indexOf(String,int,int,int)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(StringUtils.indexOf(str,  lower,  upper,  index));  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(StringUtils.indexOf(str,  lower,  upper,  index));	      result.append(StringUtils.indexOf(str,    lower,    upper));    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(String,int,int,int)	19	None	replace
20	[BUG]  [BUGGY]  result.append(StringUtils.indexOf(str,  index,  lower,  upper));  [CE]  no  suitable  method  found  for  indexOf(String,int,int,int)  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(StringUtils.indexOf(str,  index,  lower,  upper));  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(StringUtils.indexOf(str,  index,  lower,  upper));	      result.append(StringUtils.indexOf(str,    lower,    upper));    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(String,int,int,int)	19	None	replace
21	[BUG]  [BUGGY]  result.append(StringUtils.indexOf(str,  lower,  index,  upper));  [CE]  no  suitable  method  found  for  indexOf(String,int,int,int)  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(StringUtils.indexOf(str,  lower,  index,  upper));  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(StringUtils.indexOf(str,  lower,  index,  upper));	      result.append(StringUtils.indexOf(str,    lower,    upper));    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(String,int,int,int)	19	None	replace
22	[BUG]  [BUGGY]  result.append(StringUtils.indexOf(str,  lower,  index));  [CE]  no  suitable  method  found  for  indexOf(String,int,int)  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(StringUtils.indexOf(str,  lower,  index));  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(StringUtils.indexOf(str,  lower,  index));	      result.append(StringUtils.indexOf(str,    lower,    upper));    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(String,int,int)	19	None	replace
23	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(0,  index  -  1));  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append(str.substring(0,  index  -  1));	      result.append(str.substring(0,    index));    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	1	replace
24	[BUG]  [BUGGY]  result.append(str.substring(0,  index  -  1));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(0,  index  -  1));  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(0,  index  -  1));	      result.append(str.substring(0,    index));    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	1	replace
25	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(0,  index  +  2));  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append(str.substring(0,  index  +  2));	  result.append(str.substring(0,    index    +    1));    	compilable	  [FE]  ComparisonFailure  	8	1	replace
26	[BUG]  [BUGGY]  result.append(str.substring(0,  index  +  2));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(0,  index  +  2));  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(0,  index  +  2));	  result.append(str.substring(0,    index    +    1));    	compilable	  [FE]  ComparisonFailure  	8	1	replace
27	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(index,  lower));  result.append(str.substring(index,  lower));  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append(str.substring(index,    lower));    result.append(str.substring(index,  lower));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	25	1	add
28	[BUG]  [BUGGY]  result.append(str.substring(index,  lower));  result.append(str.substring(index,  lower));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(index,  lower));  result.append(str.substring(index,  lower));  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(index,    lower));    result.append(str.substring(index,  lower));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	25	1	add
29	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(index,  lower));  result.append(str.substring(index,  upper));  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append(str.substring(index,    lower));    result.append(str.substring(index,  upper));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	25	1	add
30	[BUG]  [BUGGY]  result.append(str.substring(index,  lower));  result.append(str.substring(index,  upper));  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(index,  lower));  result.append(str.substring(index,  upper));  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(index,    lower));    result.append(str.substring(index,  upper));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	25	1	add
31	[BUG]  [BUGGY]  result.append(str.substring(index,  lower));  result.append(str.substring(index,  low));  [CE]  cannot  find  symbol  low  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(index,  lower));  result.append(str.substring(index,  low));  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(index,    lower));    result.append(str.substring(index,  low));	  	non-compiled	[CE]  cannot  find  symbol  low	25	None	add
32	[BUG]  [BUGGY]  result.append(str.substring(index,  lower));  String  str  =  str.substring(index,  lower));  [CE]  ';'  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(index,  lower));  String  str  =  str.substring(index,  lower));  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(index,    lower));    String  str  =  str.substring(index,  lower));	  	non-compiled	[CE]  ';'  expected	25	None	add
33	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(lower,  index));  [CE]  no  suitable  method  found  for  defaultString(int,int)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(StringUtils.defaultString(lower,  index));  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(StringUtils.defaultString(lower,  index));	      result.append(StringUtils.defaultString(index));    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int,int)	4	None	replace
34	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(upper,  index));  [CE]  no  suitable  method  found  for  defaultString(int,int)  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(StringUtils.defaultString(upper,  index));  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(StringUtils.defaultString(upper,  index));	      result.append(StringUtils.defaultString(index));    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int,int)	4	None	replace
35	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(lower),  index);  [CE]  no  suitable  method  found  for  defaultString(int)  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(StringUtils.defaultString(lower),  index);  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(StringUtils.defaultString(lower),  index);	      result.append(StringUtils.defaultString(index));    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int)	4	None	replace
36	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(index,  upper));  result.append(str.substring(index,  upper));  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append(str.substring(index,    upper));    result.append(str.substring(index,  upper));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	10	1	add
37	[BUG]  [BUGGY]  result.append(str.substring(index,  upper));  result.append(str.substring(index,  upper));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(index,  upper));  result.append(str.substring(index,  upper));  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(index,    upper));    result.append(str.substring(index,  upper));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	10	1	add
38	[BUG]  [BUGGY]  result.append(str.substring(index,  upper));  StringBuffer  result.append(str.substring(index,  upper));  [CE]  ';'  expected  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(index,  upper));  StringBuffer  result.append(str.substring(index,  upper));  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(index,    upper));    StringBuffer  result.append(str.substring(index,  upper));	  	non-compiled	[CE]  ';'  expected	10	None	add
39	[BUG]  [BUGGY]  result.append(str.substring(index,  upper));  String  str  =  str.substring(index,  upper));  [CE]  ';'  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(index,  upper));  String  str  =  str.substring(index,  upper));  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(index,    upper));    String  str  =  str.substring(index,  upper));	  	non-compiled	[CE]  ';'  expected	10	None	add
40	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(index,  upper));  result.append(str.substring(index,  lower));  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append(str.substring(index,    upper));    result.append(str.substring(index,  lower));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	10	1	add
41	[BUG]  [BUGGY]  result.append(str.substring(index,  upper));  result.append(str.substring(index,  lower));  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(index,  upper));  result.append(str.substring(index,  lower));  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(index,    upper));    result.append(str.substring(index,  lower));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	10	1	add
42	[BUG]  [BUGGY]  result.append(str.substring(0,  index),  upper);  [CE]  no  suitable  method  found  for  append(String,int)  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(0,  index),  upper);  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(0,  index),  upper);	      result.append(str.substring(0,    index),    lower);    	non-compiled	[CE]  no  suitable  method  found  for  append(String,int)	6	None	replace
43	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(0,  index),  lower,  index);  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append(str.substring(0,  index),  lower,  index);	      result.append(str.substring(0,    index),    lower);    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	replace
44	[BUG]  [BUGGY]  result.append(str.substring(0,  index),  lower,  index);  [FE]  StringIndexOutOfBoundsException  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(0,  index),  lower,  index);  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(0,  index),  lower,  index);	      result.append(str.substring(0,    index),    lower);    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	replace
45	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]                    StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(0,  index),  lower,  upper);  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append(str.substring(0,  index),  lower,  upper);	      result.append(str.substring(0,    index),    lower);    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	replace
46	[BUG]  [BUGGY]  result.append(str.substring(0,  index),  lower,  upper);  [FE]  StringIndexOutOfBoundsException  [FE]                    StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(0,  index),  lower,  upper);  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(0,  index),  lower,  upper);	      result.append(str.substring(0,    index),    lower);    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	replace
47	[BUG]  [BUGGY]  result.append(str.substring(0,  index),  lower,  appendToEnd);  [CE]  no  suitable  method  found  for  append(String,int,String)  [FE]                      StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(0,  index),  lower,  appendToEnd);  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(0,  index),  lower,  appendToEnd);	      result.append(str.substring(0,    index),    lower);    	non-compiled	[CE]  no  suitable  method  found  for  append(String,int,String)	6	None	replace
48	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.charAt(index  +  1));  result.append(str.charAt(index  +  1));  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append(str.charAt(index    +    1));    result.append(str.charAt(index  +  1));	  	compilable	  [FE]  ComparisonFailure  	14	1	add
49	[BUG]  [BUGGY]  result.append(str.charAt(index  +  1));  result.append(str.charAt(index  +  1));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.charAt(index  +  1));  result.append(str.charAt(index  +  1));  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.charAt(index    +    1));    result.append(str.charAt(index  +  1));	  	compilable	  [FE]  ComparisonFailure  	14	1	add
50	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.charAt(index  +  1));  if(str.charAt(index  +  1)!=  '-')  {  result.append(str.charAt(index  +  1));  }  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append(str.charAt(index    +    1));    if(str.charAt(index  +  1)!=  '-')  {  result.append(str.charAt(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	14	1	add
51	[BUG]  [BUGGY]  result.append(str.charAt(index  +  1));  if(str.charAt(index  +  1)!=  '-')  {  result.append(str.charAt(index  +  1));  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.charAt(index  +  1));  if(str.charAt(index  +  1)!=  '-')  {  result.append(str.charAt(index  +  1));  }  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.charAt(index    +    1));    if(str.charAt(index  +  1)!=  '-')  {  result.append(str.charAt(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	14	1	add
52	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.charAt(index  +  1));  if(str.charAt(index  +  1)!=  -1)  {  result.append(str.charAt(index  +  1));  }  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append(str.charAt(index    +    1));    if(str.charAt(index  +  1)!=  -1)  {  result.append(str.charAt(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	14	1	add
53	[BUG]  [BUGGY]  result.append(str.charAt(index  +  1));  if(str.charAt(index  +  1)!=  -1)  {  result.append(str.charAt(index  +  1));  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.charAt(index  +  1));  if(str.charAt(index  +  1)!=  -1)  {  result.append(str.charAt(index  +  1));  }  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.charAt(index    +    1));    if(str.charAt(index  +  1)!=  -1)  {  result.append(str.charAt(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	14	1	add
54	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.charAt(index  +  1));  if(index  >=  -1)  {  result.append(str.charAt(index  +  1));  }  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append(str.charAt(index    +    1));    if(index  >=  -1)  {  result.append(str.charAt(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	14	1	add
55	[BUG]  [BUGGY]  result.append(str.charAt(index  +  1));  if(index  >=  -1)  {  result.append(str.charAt(index  +  1));  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.charAt(index  +  1));  if(index  >=  -1)  {  result.append(str.charAt(index  +  1));  }  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.charAt(index    +    1));    if(index  >=  -1)  {  result.append(str.charAt(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	14	1	add
56	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.charAt(index  +  1));  if(str.charAt(index  +  1)!=  'n')  {  result.append(str.charAt(index  +  1));  }  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append(str.charAt(index    +    1));    if(str.charAt(index  +  1)!=  'n')  {  result.append(str.charAt(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	14	1	add
57	[BUG]  [BUGGY]  result.append(str.charAt(index  +  1));  if(str.charAt(index  +  1)!=  'n')  {  result.append(str.charAt(index  +  1));  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.charAt(index  +  1));  if(str.charAt(index  +  1)!=  'n')  {  result.append(str.charAt(index  +  1));  }  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.charAt(index    +    1));    if(str.charAt(index  +  1)!=  'n')  {  result.append(str.charAt(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	14	1	add
58	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	        result.append(str.substring(0,    index));    result.append(str.substring(0,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
59	[BUG]  [BUGGY]      result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	        result.append(str.substring(0,    index));    result.append(str.substring(0,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
60	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	        result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
61	[BUG]  [BUGGY]      result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	        result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
62	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	        result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
63	[BUG]  [BUGGY]      result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	        result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
64	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	        result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
65	[BUG]  [BUGGY]      result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	        result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
66	[BUG]  [BUGGY]      result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StdUtils.defaultString(appendToEnd));  }  [CE]  cannot  find  symbol  StdUtils  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StdUtils.defaultString(appendToEnd));  }  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	        result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StdUtils.defaultString(appendToEnd));  }	  	non-compiled	[CE]  cannot  find  symbol  StdUtils	1	None	add
67	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append('  ').append(index);  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append('  ').append(index);	      result.append('    ');    	compilable	  [FE]  ComparisonFailure  	24	1	replace
68	[BUG]  [BUGGY]  result.append('  ').append(index);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append('  ').append(index);  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append('  ').append(index);	      result.append('    ');    	compilable	  [FE]  ComparisonFailure  	24	1	replace
69	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append('  ').append(index  +  1);  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append('  ').append(index  +  1);	      result.append('    ');    	compilable	  [FE]  ComparisonFailure  	24	1	replace
70	[BUG]  [BUGGY]  result.append('  ').append(index  +  1);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append('  ').append(index  +  1);  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append('  ').append(index  +  1);	      result.append('    ');    	compilable	  [FE]  ComparisonFailure  	24	1	replace
71	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append( "  n ");  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append( "  n ");	      result.append('    ');    	compilable	  [FE]  ComparisonFailure  	24	1	replace
72	[BUG]  [BUGGY]  result.append( "  n ");  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append( "  n ");  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append( "  n ");	      result.append('    ');    	compilable	  [FE]  ComparisonFailure  	24	1	replace
73	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(index,  index  +  1));  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append(str.substring(index,  index  +  1));	  result.append(str.substring(index,    upper));    	compilable	  [FE]  StringIndexOutOfBoundsException  	11	1	replace
74	[BUG]  [BUGGY]  result.append(str.substring(index,  index  +  1));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(index,  index  +  1));  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(index,  index  +  1));	  result.append(str.substring(index,    upper));    	compilable	  [FE]  StringIndexOutOfBoundsException  	11	1	replace
75	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(index,  lower));  [CE]  no  suitable  method  found  for  defaultString(int,int)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(StringUtils.defaultString(index,  lower));  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(StringUtils.defaultString(index,  lower));	      result.append(StringUtils.defaultString(lower));    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int,int)	3	None	replace
76	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[]01234>  but  was:<[  [FE]    junit.framework.ComparisonFailure:  expected:<[]01234>  but  was:<[    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append(   ",   ");  result.append( ",   ");  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	        result.append(   ",   ");    result.append( ",   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[]01234>  but  was:<[  	20	1	add
77	[BUG]  [BUGGY]      result.append(   ",   ");  result.append( ",   ");  [FE]  junit.framework.ComparisonFailure:  expected:<[]01234>  but  was:<[  [FE]    junit.framework.ComparisonFailure:  expected:<[]01234>  but  was:<[    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append(   ",   ");  result.append( ",   ");  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	        result.append(   ",   ");    result.append( ",   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[]01234>  but  was:<[  	20	1	add
78	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[]01234>  but  was:<[  [FE]      junit.framework.ComparisonFailure:  expected:<[]01234>  but  was:<[    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append(   ",   ");  result.append(',');  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	        result.append(   ",   ");    result.append(',');	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[]01234>  but  was:<[  	20	1	add
79	[BUG]  [BUGGY]      result.append(   ",   ");  result.append(',');  [FE]  junit.framework.ComparisonFailure:  expected:<[]01234>  but  was:<[  [FE]      junit.framework.ComparisonFailure:  expected:<[]01234>  but  was:<[    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append(   ",   ");  result.append(',');  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	        result.append(   ",   ");    result.append(',');	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[]01234>  but  was:<[  	20	1	add
80	[BUG]  [BUGGY]  result.append(str.substring(index  +  1),  lower);  [CE]  no  suitable  method  found  for  append(String,int)  [FE]    ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(index  +  1),  lower);  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(index  +  1),  lower);	      result.append(str.substring(index    +    1));    	non-compiled	[CE]  no  suitable  method  found  for  append(String,int)	17	None	replace
81	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.charAt(index  +  1)+  1);  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append(str.charAt(index  +  1)+  1);	  result.append(str.charAt(index    +    1));    	compilable	  [FE]  ComparisonFailure  	15	1	replace
82	[BUG]  [BUGGY]  result.append(str.charAt(index  +  1)+  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.charAt(index  +  1)+  1);  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.charAt(index  +  1)+  1);	  result.append(str.charAt(index    +    1));    	compilable	  [FE]  ComparisonFailure  	15	1	replace
83	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.charAt(index  -  1));  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append(str.charAt(index  -  1));	  result.append(str.charAt(index    +    1));    	compilable	  [FE]  StringIndexOutOfBoundsException  	15	1	replace
84	[BUG]  [BUGGY]  result.append(str.charAt(index  -  1));  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.charAt(index  -  1));  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.charAt(index  -  1));	  result.append(str.charAt(index    +    1));    	compilable	  [FE]  StringIndexOutOfBoundsException  	15	1	replace
85	[BUG]  [BUGGY]  result.append(str.charAt(index  +  1),  lower);  [CE]  no  suitable  method  found  for  append(char,int)  [FE]        ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.charAt(index  +  1),  lower);  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.charAt(index  +  1),  lower);	  result.append(str.charAt(index    +    1));    	non-compiled	[CE]  no  suitable  method  found  for  append(char,int)	15	None	replace
86	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(1,  index  +  1));  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append(str.substring(1,  index  +  1));	  result.append(str.substring(1,    index));    	compilable	  [FE]  StringIndexOutOfBoundsException  	13	1	replace
87	[BUG]  [BUGGY]  result.append(str.substring(1,  index  +  1));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(1,  index  +  1));  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(1,  index  +  1));	  result.append(str.substring(1,    index));    	compilable	  [FE]  StringIndexOutOfBoundsException  	13	1	replace
88	[BUG]  [BUGGY]  result.append(StringUtils.indexOf(str,  upper,  lower));  [CE]  no  suitable  method  found  for  indexOf(String,int,int)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(StringUtils.indexOf(str,  upper,  lower));  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(StringUtils.indexOf(str,  upper,  lower));	      result.append(StringUtils.indexOf(str,    lower));    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(String,int,int)	18	None	replace
89	[BUG]  [BUGGY]  result.append(StringUtils.indexOf(str,  index,  lower));  [CE]  no  suitable  method  found  for  indexOf(String,int,int)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(StringUtils.indexOf(str,  index,  lower));  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(StringUtils.indexOf(str,  index,  lower));	      result.append(StringUtils.indexOf(str,    lower));    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(String,int,int)	18	None	replace
90	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(index,  upper));  [CE]  no  suitable  method  found  for  defaultString(int,int)  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(StringUtils.defaultString(index,  upper));  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(StringUtils.defaultString(index,  upper));	      result.append(StringUtils.defaultString(upper));    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int,int)	5	None	replace
91	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append(str.substring(index  +  1));  result.append(str.substring(index  +  1));  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	        result.append(str.substring(index    +    1));    result.append(str.substring(index  +  1));	  	compilable	  [FE]  ComparisonFailure  	16	1	add
92	[BUG]  [BUGGY]      result.append(str.substring(index  +  1));  result.append(str.substring(index  +  1));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append(str.substring(index  +  1));  result.append(str.substring(index  +  1));  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	        result.append(str.substring(index    +    1));    result.append(str.substring(index  +  1));	  	compilable	  [FE]  ComparisonFailure  	16	1	add
93	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	        result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  ComparisonFailure  	16	1	add
94	[BUG]  [BUGGY]      result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	        result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  ComparisonFailure  	16	1	add
95	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	        result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	16	1	add
96	[BUG]  [BUGGY]      result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	        result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	16	1	add
97	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	        result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	16	1	add
98	[BUG]  [BUGGY]      result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	        result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	16	1	add
99	[BUG]  [BUGGY]      result.append('  ');  result.append('  ');  [CE]  unclosed  character  literal  [FE]    ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append('  ');  result.append('  ');  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	        result.append('    ');    result.append('  ');	  	non-compiled	[CE]  unclosed  character  literal	23	None	add
100	[BUG]  [BUGGY]      result.append('  ');  if(index  ==  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  }  [CE]  unclosed  character  literal  [FE]      ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append('  ');  if(index  ==  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	        result.append('    ');    if(index  ==  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  }	  	non-compiled	[CE]  unclosed  character  literal	23	None	add
101	[BUG]  [BUGGY]      result.append('  ');  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  }  [CE]  unclosed  character  literal  [FE]        ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append('  ');  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	        result.append('    ');    if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  }	  	non-compiled	[CE]  unclosed  character  literal	23	None	add
102	[BUG]  [BUGGY]      result.append('  ');  if('  '!=  0)  {  result.append('  ');  }  else  {  result.append(  str.substring(0,  index));  }  [CE]  unclosed  character  literal  [FE]          ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append('  ');  if('  '!=  0)  {  result.append('  ');  }  else  {  result.append(  str.substring(0,  index));  }  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	        result.append('    ');    if('  '!=  0)  {  result.append('  ');  }  else  {  result.append(  str.substring(0,  index));  }	  	non-compiled	[CE]  unclosed  character  literal	23	None	add
103	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(index,  lower  +  1));  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append(str.substring(index,  lower  +  1));	  result.append(str.substring(index,    lower));    	compilable	  [FE]  StringIndexOutOfBoundsException  	26	1	replace
104	[BUG]  [BUGGY]  result.append(str.substring(index,  lower  +  1));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(index,  lower  +  1));  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(index,  lower  +  1));	  result.append(str.substring(index,    lower));    	compilable	  [FE]  StringIndexOutOfBoundsException  	26	1	replace
105	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(1,  index));  result.append(str.substring(1,  index));  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append(str.substring(1,    index));    result.append(str.substring(1,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	12	1	add
106	[BUG]  [BUGGY]  result.append(str.substring(1,  index));  result.append(str.substring(1,  index));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(1,  index));  result.append(str.substring(1,  index));  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(1,    index));    result.append(str.substring(1,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	12	1	add
107	[BUG]  [BUGGY]  result.append(str.substring(1,  index));  if(str.charAt(1,  index)!=  '-')  {  result.append(str.substring(1,  index));  }  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(1,  index));  if(str.charAt(1,  index)!=  '-')  {  result.append(str.substring(1,  index));  }  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(1,    index));    if(str.charAt(1,  index)!=  '-')  {  result.append(str.substring(1,  index));  }	  	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	12	None	add
108	[BUG]  [BUGGY]  result.append(str.substring(1,  index));  if(str.charAt(1,  index)!=  'n')  {  result.append(str.substring(1,  index));  }  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(1,  index));  if(str.charAt(1,  index)!=  'n')  {  result.append(str.substring(1,  index));  }  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(1,    index));    if(str.charAt(1,  index)!=  'n')  {  result.append(str.substring(1,  index));  }	  	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	12	None	add
109	[BUG]  [BUGGY]  result.append(str.substring(1,  index));  if(str.charAt(1,  index)!=  '0')  {  result.append(str.substring(1,  index));  }  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(1,  index));  if(str.charAt(1,  index)!=  '0')  {  result.append(str.substring(1,  index));  }  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(1,    index));    if(str.charAt(1,  index)!=  '0')  {  result.append(str.substring(1,  index));  }	  	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	12	None	add
110	[BUG]  [BUGGY]  result.append(str.substring(1,  index));  if(str.charAt(1,  index)  ==  '-')  {  result.append(str.substring(1,  index));  }  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(1,  index));  if(str.charAt(1,  index)  ==  '-')  {  result.append(str.substring(1,  index));  }  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(1,    index));    if(str.charAt(1,  index)  ==  '-')  {  result.append(str.substring(1,  index));  }	  	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	12	None	add
111	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(0,  index  +  1));  result.append(str.substring(0,  index  +  1));  if  (upper  >=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append(str.substring(0,    index    +    1));    result.append(str.substring(0,  index  +  1));  if  (upper  >=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	7	1	add
112	[BUG]  [BUGGY]  result.append(str.substring(0,  index  +  1));  result.append(str.substring(0,  index  +  1));  if  (upper  >=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(0,  index  +  1));  result.append(str.substring(0,  index  +  1));  if  (upper  >=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(0,    index    +    1));    result.append(str.substring(0,  index  +  1));  if  (upper  >=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	7	1	add
113	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    junit.framework.ComparisonFailure:  expected:<[]01234>  but  was:<[    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append( "  }   ");  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append( "  }   ");	      result.append(   ",   ");    	compilable	  [FE]  ComparisonFailure  	21	1	replace
114	[BUG]  [BUGGY]  result.append( "  }   ");  [FE]  ComparisonFailure  [FE]    junit.framework.ComparisonFailure:  expected:<[]01234>  but  was:<[    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append( "  }   ");  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append( "  }   ");	      result.append(   ",   ");    	compilable	  [FE]  ComparisonFailure  	21	1	replace
115	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(0,  index  +  1)+  1);  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append(str.substring(0,  index  +  1)+  1);	  result.append(str.substring(0,    index    +    1));    	compilable	  [FE]  ComparisonFailure  	8	1	replace
116	[BUG]  [BUGGY]  result.append(str.substring(0,  index  +  1)+  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(0,  index  +  1)+  1);  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(0,  index  +  1)+  1);	  result.append(str.substring(0,    index    +    1));    	compilable	  [FE]  ComparisonFailure  	8	1	replace
117	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(lower),  upper);  [CE]  no  suitable  method  found  for  defaultString(int)  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(StringUtils.defaultString(lower),  upper);  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(StringUtils.defaultString(lower),  upper);	      result.append(StringUtils.defaultString(upper));    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int)	5	None	replace
118	[BUG]  [BUGGY]  result.append(StringUtils.indexOf(lower,  str));  [CE]  no  suitable  method  found  for  indexOf(int,String)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(StringUtils.indexOf(lower,  str));  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(StringUtils.indexOf(lower,  str));	      result.append(StringUtils.indexOf(str,    lower));    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(int,String)	18	None	replace
119	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.charAt(index  +  1));  if(index  >=  -1)  {  result.append(str.charAt(index  +  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append(str.charAt(index    +    1));    if(index  >=  -1)  {  result.append(str.charAt(index  +  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  ComparisonFailure  	14	1	add
120	[BUG]  [BUGGY]  result.append(str.charAt(index  +  1));  if(index  >=  -1)  {  result.append(str.charAt(index  +  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.charAt(index  +  1));  if(index  >=  -1)  {  result.append(str.charAt(index  +  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.charAt(index    +    1));    if(index  >=  -1)  {  result.append(str.charAt(index  +  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  ComparisonFailure  	14	1	add
121	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.charAt(index  +  1));  if(index  >=  -1)  {  result.append(str.charAt(index  +  1));  }  else  {  result.append(str.charAt(index  +  1));  }  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append(str.charAt(index    +    1));    if(index  >=  -1)  {  result.append(str.charAt(index  +  1));  }  else  {  result.append(str.charAt(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	14	1	add
122	[BUG]  [BUGGY]  result.append(str.charAt(index  +  1));  if(index  >=  -1)  {  result.append(str.charAt(index  +  1));  }  else  {  result.append(str.charAt(index  +  1));  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.charAt(index  +  1));  if(index  >=  -1)  {  result.append(str.charAt(index  +  1));  }  else  {  result.append(str.charAt(index  +  1));  }  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.charAt(index    +    1));    if(index  >=  -1)  {  result.append(str.charAt(index  +  1));  }  else  {  result.append(str.charAt(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	14	1	add
123	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.charAt(index  +  1));  result.append(str.charAt(index  +  1));  if  (upper  >=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append(str.charAt(index    +    1));    result.append(str.charAt(index  +  1));  if  (upper  >=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  ComparisonFailure  	14	1	add
124	[BUG]  [BUGGY]  result.append(str.charAt(index  +  1));  result.append(str.charAt(index  +  1));  if  (upper  >=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.charAt(index  +  1));  result.append(str.charAt(index  +  1));  if  (upper  >=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.charAt(index    +    1));    result.append(str.charAt(index  +  1));  if  (upper  >=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  ComparisonFailure  	14	1	add
125	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append(str.substring(index  +  1));  result.append(str.substring(index  +  1));  if(upper!=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	        result.append(str.substring(index    +    1));    result.append(str.substring(index  +  1));  if(upper!=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  ComparisonFailure  	16	1	add
126	[BUG]  [BUGGY]      result.append(str.substring(index  +  1));  result.append(str.substring(index  +  1));  if(upper!=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append(str.substring(index  +  1));  result.append(str.substring(index  +  1));  if(upper!=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	        result.append(str.substring(index    +    1));    result.append(str.substring(index  +  1));  if(upper!=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  ComparisonFailure  	16	1	add
127	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(lower,  lower));  [CE]  no  suitable  method  found  for  defaultString(int,int)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(StringUtils.defaultString(lower,  lower));  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(StringUtils.defaultString(lower,  lower));	      result.append(StringUtils.defaultString(lower));    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int,int)	3	None	replace
128	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(index,  upper));  if(index  >=  -1)  {  result.append(str.substring(index,  upper));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append(str.substring(index,    upper));    if(index  >=  -1)  {  result.append(str.substring(index,  upper));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	10	1	add
129	[BUG]  [BUGGY]  result.append(str.substring(index,  upper));  if(index  >=  -1)  {  result.append(str.substring(index,  upper));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(index,  upper));  if(index  >=  -1)  {  result.append(str.substring(index,  upper));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(index,    upper));    if(index  >=  -1)  {  result.append(str.substring(index,  upper));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	10	1	add
130	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(index,  upper));  if(index  >=  -1)  {  result.append(str.substring(index,  upper));  }  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append(str.substring(index,    upper));    if(index  >=  -1)  {  result.append(str.substring(index,  upper));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	10	1	add
131	[BUG]  [BUGGY]  result.append(str.substring(index,  upper));  if(index  >=  -1)  {  result.append(str.substring(index,  upper));  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(index,  upper));  if(index  >=  -1)  {  result.append(str.substring(index,  upper));  }  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(index,    upper));    if(index  >=  -1)  {  result.append(str.substring(index,  upper));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	10	1	add
132	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(index,  upper));  if(index  >=  -1)  {  result.append(str.substring(index,  upper));  }  else  {  result.append(str.substring(index,  upper));  }  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append(str.substring(index,    upper));    if(index  >=  -1)  {  result.append(str.substring(index,  upper));  }  else  {  result.append(str.substring(index,  upper));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	10	1	add
133	[BUG]  [BUGGY]  result.append(str.substring(index,  upper));  if(index  >=  -1)  {  result.append(str.substring(index,  upper));  }  else  {  result.append(str.substring(index,  upper));  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(index,  upper));  if(index  >=  -1)  {  result.append(str.substring(index,  upper));  }  else  {  result.append(str.substring(index,  upper));  }  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(index,    upper));    if(index  >=  -1)  {  result.append(str.substring(index,  upper));  }  else  {  result.append(str.substring(index,  upper));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	10	1	add
134	[BUG]  [BUGGY]  result.append(str.substring(index,  upper));  if(index  >=  -1)  {  result.append(str.substring(index,  upper));  }  else  {  result.append(StringUtils.defaultString(appendToStart));  }  [CE]  cannot  find  symbol  appendToStart  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(index,  upper));  if(index  >=  -1)  {  result.append(str.substring(index,  upper));  }  else  {  result.append(StringUtils.defaultString(appendToStart));  }  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(index,    upper));    if(index  >=  -1)  {  result.append(str.substring(index,  upper));  }  else  {  result.append(StringUtils.defaultString(appendToStart));  }	  	non-compiled	[CE]  cannot  find  symbol  appendToStart	10	None	add
135	[BUG]  [BUGGY]  result.append(StringUtils.indexOf(str,  lower,  upper),  index);  [CE]  no  suitable  method  found  for  indexOf(String,int,int)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(StringUtils.indexOf(str,  lower,  upper),  index);  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(StringUtils.indexOf(str,  lower,  upper),  index);	      result.append(StringUtils.indexOf(str,    lower,    upper));    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(String,int,int)	19	None	replace
136	[BUG]  [BUGGY]  result.append(StringUtils.indexOf(lower,  upper,  index));  [CE]  no  suitable  method  found  for  indexOf(int,int,int)  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(StringUtils.indexOf(lower,  upper,  index));  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(StringUtils.indexOf(lower,  upper,  index));	      result.append(StringUtils.indexOf(str,    lower,    upper));    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(int,int,int)	19	None	replace
137	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append( "n ");  }  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	        result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append( "n ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
138	[BUG]  [BUGGY]      result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append( "n ");  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append( "n ");  }  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	        result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append( "n ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
139	[BUG]  [BUGGY]  result.append(str.substring(0,  index)+  1,  lower);  [CE]  no  suitable  method  found  for  append(String,int)  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(0,  index)+  1,  lower);  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(0,  index)+  1,  lower);	      result.append(str.substring(0,    index),    lower);    	non-compiled	[CE]  no  suitable  method  found  for  append(String,int)	6	None	replace
140	[BUG]  [BUGGY]  result.append(str.substring(0,  index),  lower  +  1);  [CE]  no  suitable  method  found  for  append(String,int)  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(0,  index),  lower  +  1);  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(0,  index),  lower  +  1);	      result.append(str.substring(0,    index),    lower);    	non-compiled	[CE]  no  suitable  method  found  for  append(String,int)	6	None	replace
141	[BUG]  [BUGGY]      result.append('  ');  if('  '!=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  result.append('  ');  }  [CE]  unclosed  character  literal  [FE]    ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append('  ');  if('  '!=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  result.append('  ');  }  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	        result.append('    ');    if('  '!=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  result.append('  ');  }	  	non-compiled	[CE]  unclosed  character  literal	23	None	add
142	[BUG]  [BUGGY]      result.append('  ');  if('  '!=  -1)  {  result.append('  ');  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [CE]  unclosed  character  literal  [FE]      ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append('  ');  if('  '!=  -1)  {  result.append('  ');  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	        result.append('    ');    if('  '!=  -1)  {  result.append('  ');  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	non-compiled	[CE]  unclosed  character  literal	23	None	add
143	[BUG]  [BUGGY]      result.append('  ');  if('  '!=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  }  [CE]  unclosed  character  literal  [FE]        ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append('  ');  if('  '!=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	        result.append('    ');    if('  '!=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  }	  	non-compiled	[CE]  unclosed  character  literal	23	None	add
144	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(index  +  1)+  1);  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append(str.substring(index  +  1)+  1);	      result.append(str.substring(index    +    1));    	compilable	  [FE]  ComparisonFailure  	17	1	replace
145	[BUG]  [BUGGY]  result.append(str.substring(index  +  1)+  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(index  +  1)+  1);  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(index  +  1)+  1);	      result.append(str.substring(index    +    1));    	compilable	  [FE]  ComparisonFailure  	17	1	replace
146	[BUG]  [BUGGY]  Result.append(str.substring(0,  index),  upper);  [CE]  cannot  find  symbol  Result  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  Result.append(str.substring(0,  index),  upper);  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	Result.append(str.substring(0,  index),  upper);	  Result.append(str.substring(0,    index));    	non-compiled	[CE]  cannot  find  symbol  Result	9	None	replace
147	[BUG]  [BUGGY]  result.append(str.substring(1,  index));  StringBuffer  result.append(str.substring(1,  index));  [CE]  ';'  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(1,  index));  StringBuffer  result.append(str.substring(1,  index));  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(1,    index));    StringBuffer  result.append(str.substring(1,  index));	  	non-compiled	[CE]  ';'  expected	12	None	add
148	[BUG]  [BUGGY]  result.append(str.substring(1,  index));  String  str.append(str.substring(1,  index));  [CE]  ';'  expected  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(1,  index));  String  str.append(str.substring(1,  index));  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(1,    index));    String  str.append(str.substring(1,  index));	  	non-compiled	[CE]  ';'  expected	12	None	add
149	[BUG]  [BUGGY]  result.append(str.substring(1,  index));  Result.append(str.substring(1,  index));  [CE]  cannot  find  symbol  Result  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(1,  index));  Result.append(str.substring(1,  index));  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(1,    index));    Result.append(str.substring(1,  index));	  	non-compiled	[CE]  cannot  find  symbol  Result	12	None	add
150	[BUG]  [BUGGY]  result.append(str.substring(index,  lower));  StringBuffer  result.append(str.substring(index,  lower));  [CE]  ';'  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(index,  lower));  StringBuffer  result.append(str.substring(index,  lower));  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(index,    lower));    StringBuffer  result.append(str.substring(index,  lower));	  	non-compiled	[CE]  ';'  expected	25	None	add
151	[BUG]  [BUGGY]  result.append(''+  str.substring(index  +  1));  [CE]  empty  character  literal  [FE]    ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(''+  str.substring(index  +  1));  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(''+  str.substring(index  +  1));	      result.append('    ');    	non-compiled	[CE]  empty  character  literal	24	None	replace
152	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(lower,  upper),  str);  [CE]  no  suitable  method  found  for  defaultString(int,int)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(StringUtils.defaultString(lower,  upper),  str);  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(StringUtils.defaultString(lower,  upper),  str);	      result.append(StringUtils.defaultString(lower,    upper));    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int,int)	22	None	replace
153	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.charAt(index  +  1));  if(str.charAt(index  +  1)!=  ')')  {  result.append(str.charAt(index  +  1));  }  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append(str.charAt(index    +    1));    if(str.charAt(index  +  1)!=  ')')  {  result.append(str.charAt(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	14	1	add
154	[BUG]  [BUGGY]  result.append(str.charAt(index  +  1));  if(str.charAt(index  +  1)!=  ')')  {  result.append(str.charAt(index  +  1));  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.charAt(index  +  1));  if(str.charAt(index  +  1)!=  ')')  {  result.append(str.charAt(index  +  1));  }  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.charAt(index    +    1));    if(str.charAt(index  +  1)!=  ')')  {  result.append(str.charAt(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	14	1	add
155	[BUG]  [BUGGY]  result.append(str.charAt(index  +  1));  if(str.charAt(index  +  1)!='')  {  result.append(str.charAt(index  +  1));  }  [CE]  empty  character  literal  [FE]      ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.charAt(index  +  1));  if(str.charAt(index  +  1)!='')  {  result.append(str.charAt(index  +  1));  }  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.charAt(index    +    1));    if(str.charAt(index  +  1)!='')  {  result.append(str.charAt(index  +  1));  }	  	non-compiled	[CE]  empty  character  literal	14	None	add
156	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(StringUtils.defaultString(str));  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append(StringUtils.defaultString(str));	      result.append(StringUtils.defaultString(lower));    	compilable	  [FE]  ComparisonFailure  	3	1	replace
157	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(str));  [FE]  ComparisonFailure  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(StringUtils.defaultString(str));  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(StringUtils.defaultString(str));	      result.append(StringUtils.defaultString(lower));    	compilable	  [FE]  ComparisonFailure  	3	1	replace
158	[BUG]  [BUGGY]  result.append('  ',  index);  [CE]  no  suitable  method  found  for  append(char,int)  [FE]    ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append('  ',  index);  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append('  ',  index);	      result.append('    ');    	non-compiled	[CE]  no  suitable  method  found  for  append(char,int)	24	None	replace
159	[BUG]  [BUGGY]  result.append(str.substring(index,  upper));  Result.append(str.substring(index,  upper));  [CE]  cannot  find  symbol  Result  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(index,  upper));  Result.append(str.substring(index,  upper));  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(index,    upper));    Result.append(str.substring(index,  upper));	  	non-compiled	[CE]  cannot  find  symbol  Result	10	None	add
160	[BUG]  [BUGGY]  result.append(StringUtils.indexOf(str,  lower,  0));  [CE]  no  suitable  method  found  for  indexOf(String,int,int)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(StringUtils.indexOf(str,  lower,  0));  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(StringUtils.indexOf(str,  lower,  0));	      result.append(StringUtils.indexOf(str,    lower));    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(String,int,int)	18	None	replace
161	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(1,  index));  result.append(str.substring(2,  index));  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append(str.substring(1,    index));    result.append(str.substring(2,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	12	1	add
162	[BUG]  [BUGGY]  result.append(str.substring(1,  index));  result.append(str.substring(2,  index));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(1,  index));  result.append(str.substring(2,  index));  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(1,    index));    result.append(str.substring(2,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	12	1	add
163	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(1,  index));  result.append(str.substring(3,  index));  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append(str.substring(1,    index));    result.append(str.substring(3,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	12	1	add
164	[BUG]  [BUGGY]  result.append(str.substring(1,  index));  result.append(str.substring(3,  index));  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(str.substring(1,  index));  result.append(str.substring(3,  index));  [BUGGY]      if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(str.substring(1,    index));    result.append(str.substring(3,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	12	1	add
165	[BUG]  [BUGGY]  result.append(StringUtils.indexOf(str,  lower,  upper  +  1));  [CE]  no  suitable  method  found  for  indexOf(String,int,int)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(StringUtils.indexOf(str,  lower,  upper  +  1));  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(StringUtils.indexOf(str,  lower,  upper  +  1));	      result.append(StringUtils.indexOf(str,    lower,    upper));    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(String,int,int)	19	None	replace
166	[BUG]  [BUGGY]      result.append('  ');  if('  '!=  str.length())  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  }  [CE]  unclosed  character  literal  [FE]    ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append('  ');  if('  '!=  str.length())  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	        result.append('    ');    if('  '!=  str.length())  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  }	  	non-compiled	[CE]  unclosed  character  literal	23	None	add
167	[BUG]  [BUGGY]      result.append('  ');  if('  '!=  str.length())  {  result.append('  ');  }  [CE]  unclosed  character  literal  [FE]      ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append('  ');  if('  '!=  str.length())  {  result.append('  ');  }  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	        result.append('    ');    if('  '!=  str.length())  {  result.append('  ');  }	  	non-compiled	[CE]  unclosed  character  literal	23	None	add
168	[BUG]  [BUGGY]      result.append('  ');  if('  '!=  str.length())  {  result.append('  ');  }  else  {  result.append(str.charAt(index  +  1));  }  [CE]  unclosed  character  literal  [FE]        ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append('  ');  if('  '!=  str.length())  {  result.append('  ');  }  else  {  result.append(str.charAt(index  +  1));  }  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	        result.append('    ');    if('  '!=  str.length())  {  result.append('  ');  }  else  {  result.append(str.charAt(index  +  1));  }	  	non-compiled	[CE]  unclosed  character  literal	23	None	add
169	[BUG]  [BUGGY]      result.append(str.substring(0,  index));  if(str.charAt(0,  index)!=  '-')  {  result.append(str.substring(0,  index));  }  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append(str.substring(0,  index));  if(str.charAt(0,  index)!=  '-')  {  result.append(str.substring(0,  index));  }  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	        result.append(str.substring(0,    index));    if(str.charAt(0,  index)!=  '-')  {  result.append(str.substring(0,  index));  }	  	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	1	None	add
170	[BUG]  [BUGGY]      result.append(str.substring(0,  index));  if(str.charAt(0,  index)!=  'n')  {  result.append(str.substring(0,  index));  }  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append(str.substring(0,  index));  if(str.charAt(0,  index)!=  'n')  {  result.append(str.substring(0,  index));  }  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	        result.append(str.substring(0,    index));    if(str.charAt(0,  index)!=  'n')  {  result.append(str.substring(0,  index));  }	  	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	1	None	add
171	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append( ", ");  }  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	        result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append( ", ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
172	[BUG]  [BUGGY]      result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append( ", ");  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append( ", ");  }  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	        result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append( ", ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
173	[BUG]  [BUGGY]  result.append(StringUtils.indexOf(lower,  index));  [CE]  no  suitable  method  found  for  indexOf(int,int)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(StringUtils.indexOf(lower,  index));  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(StringUtils.indexOf(lower,  index));	      result.append(StringUtils.defaultString(index));    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(int,int)	4	None	replace
174	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(str,  index));  [CE]  no  suitable  method  found  for  defaultString(String,int)  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(StringUtils.defaultString(str,  index));  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(StringUtils.defaultString(str,  index));	      result.append(StringUtils.defaultString(index));    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(String,int)	4	None	replace
175	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append( ", ");  }  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	        result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append( ", ");  }	  	compilable	  [FE]  ComparisonFailure  	16	1	add
176	[BUG]  [BUGGY]      result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append( ", ");  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append( ", ");  }  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	        result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append( ", ");  }	  	compilable	  [FE]  ComparisonFailure  	16	1	add
177	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append(str.substring(index  +  1));  if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append( ", ");  }  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	        result.append(str.substring(index    +    1));    if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append( ", ");  }	  	compilable	  [FE]  ComparisonFailure  	16	1	add
178	[BUG]  [BUGGY]      result.append(str.substring(index  +  1));  if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append( ", ");  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append(str.substring(index  +  1));  if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append( ", ");  }  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	        result.append(str.substring(index    +    1));    if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append( ", ");  }	  	compilable	  [FE]  ComparisonFailure  	16	1	add
179	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append(str.substring(index  +  1));  if(index  <  0)  {  result.append(str.substring(index  +  1));  }  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	        result.append(str.substring(index    +    1));    if(index  <  0)  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	16	1	add
180	[BUG]  [BUGGY]      result.append(str.substring(index  +  1));  if(index  <  0)  {  result.append(str.substring(index  +  1));  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]      result.append(str.substring(index  +  1));  if(index  <  0)  {  result.append(str.substring(index  +  1));  }  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	        result.append(str.substring(index    +    1));    if(index  <  0)  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	16	1	add
181	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[01234]>  but  was:<[  [FE]    junit.framework.ComparisonFailure:  expected:<[]01234>  but  was:<[    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(',');  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	add	result.append(',');	      result.append(   ",   ");    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[01234]>  but  was:<[  	21	1	replace
182	[BUG]  [BUGGY]  result.append(',');  [FE]  junit.framework.ComparisonFailure:  expected:<[01234]>  but  was:<[  [FE]    junit.framework.ComparisonFailure:  expected:<[]01234>  but  was:<[    [CONTEXT]    upper  =  str.length();  }  if  (upper  <  lower)  {  upper  =  lower;  }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {    [BUGGY]  result.append(',');  [BUGGY]    result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }  }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	629	629	1	replace	result.append(',');	      result.append(   ",   ");    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[01234]>  but  was:<[  	21	1	replace
