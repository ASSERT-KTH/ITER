bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]      result.append('  ');  result.append('  ');  [CE]  unclosed  character  literal  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append('  ');  result.append('  ');  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append('    ');    result.append('  ');	  	non-compiled	[CE]  unclosed  character  literal	28	None	add
2	[BUG]  [BUGGY]      result.append('  ');  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  }  [CE]  unclosed  character  literal  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append('  ');  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append('    ');    if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  }	  	non-compiled	[CE]  unclosed  character  literal	28	None	add
3	[BUG]  [BUGGY]      result.append('  ');  if(index  ==  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  }  [CE]  unclosed  character  literal  [FE]        ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append('  ');  if(index  ==  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append('    ');    if(index  ==  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  }	  	non-compiled	[CE]  unclosed  character  literal	28	None	add
4	[BUG]  [BUGGY]      result.append('  ');  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  [CE]  unclosed  character  literal  [FE]          ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append('  ');  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append('    ');    if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }	  	non-compiled	[CE]  unclosed  character  literal	28	None	add
5	[BUG]  [BUGGY]      result.append('  ');  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index),  lower);  result.append(str.substring(index  +  1));  }  [CE]  unclosed  character  literal  [FE]            ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append('  ');  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index),  lower);  result.append(str.substring(index  +  1));  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append('    ');    if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index),  lower);  result.append(str.substring(index  +  1));  }	  	non-compiled	[CE]  unclosed  character  literal	28	None	add
6	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  ==  upper)  {  }  else  if(index  ==  upper)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {	  	compilable	  [FE]  StringIndexOutOfBoundsException  	10	1	add
7	[BUG]  [BUGGY]  }  else  if(index  ==  upper)  {  }  else  if(index  ==  upper)  {  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  ==  upper)  {  }  else  if(index  ==  upper)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {	  	compilable	  [FE]  StringIndexOutOfBoundsException  	10	1	add
8	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  ==  upper)  {  }  else  if(index  ==  lower)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    ==    upper)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	10	1	add
9	[BUG]  [BUGGY]  }  else  if(index  ==  upper)  {  }  else  if(index  ==  lower)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  ==  upper)  {  }  else  if(index  ==  lower)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    ==    upper)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	10	1	add
10	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  ==  upper)  {  }  else  if(index  >=  upper)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    ==    upper)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	10	1	add
11	[BUG]  [BUGGY]  }  else  if(index  ==  upper)  {  }  else  if(index  >=  upper)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  ==  upper)  {  }  else  if(index  >=  upper)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    ==    upper)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	10	1	add
12	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  ==  upper)  {  }  else  if(index!=  upper)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    ==    upper)    {    }  else  if(index!=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	10	1	add
13	[BUG]  [BUGGY]  }  else  if(index  ==  upper)  {  }  else  if(index!=  upper)  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  ==  upper)  {  }  else  if(index!=  upper)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    ==    upper)    {    }  else  if(index!=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	10	1	add
14	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  >=  0)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}  else  if(index  >=  0)  {	  }    else    if(index    >=    upper)    {    	compilable	  [FE]  ComparisonFailure  	9	1	replace
15	[BUG]  [BUGGY]  }  else  if(index  >=  0)  {  [FE]  ComparisonFailure  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  >=  0)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  >=  0)  {	  }    else    if(index    >=    upper)    {    	compilable	  [FE]  ComparisonFailure  	9	1	replace
16	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  ==  lower)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}  else  if(index  ==  lower)  {	  }    else    if(index    >=    upper)    {    	compilable	  [FE]  ComparisonFailure  	9	1	replace
17	[BUG]  [BUGGY]  }  else  if(index  ==  lower)  {  [FE]  ComparisonFailure  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  ==  lower)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  ==  lower)  {	  }    else    if(index    >=    upper)    {    	compilable	  [FE]  ComparisonFailure  	9	1	replace
18	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  >  0)  {  }  else  if(index  >  0)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    >    0)    {    }  else  if(index  >  0)  {	  	compilable	  [FE]  ComparisonFailure  	24	1	add
19	[BUG]  [BUGGY]  }  else  if(index  >  0)  {  }  else  if(index  >  0)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  >  0)  {  }  else  if(index  >  0)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    >    0)    {    }  else  if(index  >  0)  {	  	compilable	  [FE]  ComparisonFailure  	24	1	add
20	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  >  0)  {  result.append(str.substring(0,  index));  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    >    0)    {    result.append(str.substring(0,  index));	  	compilable	  [FE]  ComparisonFailure  	24	1	add
21	[BUG]  [BUGGY]  }  else  if(index  >  0)  {  result.append(str.substring(0,  index));  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  >  0)  {  result.append(str.substring(0,  index));  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    >    0)    {    result.append(str.substring(0,  index));	  	compilable	  [FE]  ComparisonFailure  	24	1	add
22	[BUG]  [BUGGY]  }  else  if(index  >  0)  {  result.append(StringUtils.defaultString(lower));  [CE]  no  suitable  method  found  for  defaultString(int)  [FE]        ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  >  0)  {  result.append(StringUtils.defaultString(lower));  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    >    0)    {    result.append(StringUtils.defaultString(lower));	  	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int)	24	None	add
23	[BUG]  [BUGGY]  }  else  if(index  >  0)  {  result.append(StringUtils.defaultString(upper));  [CE]  no  suitable  method  found  for  defaultString(int)  [FE]          ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  >  0)  {  result.append(StringUtils.defaultString(upper));  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    >    0)    {    result.append(StringUtils.defaultString(upper));	  	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int)	24	None	add
24	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(   "n   ");  result.append(   "n   ");  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	        result.append(   "n   ");    result.append(   "n   ");	  	compilable	  [FE]  ComparisonFailure  	20	1	add
25	[BUG]  [BUGGY]      result.append(   "n   ");  result.append(   "n   ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(   "n   ");  result.append(   "n   ");  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append(   "n   ");    result.append(   "n   ");	  	compilable	  [FE]  ComparisonFailure  	20	1	add
26	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(   "n   ");  result.append('n');  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	        result.append(   "n   ");    result.append('n');	  	compilable	  [FE]  ComparisonFailure  	20	1	add
27	[BUG]  [BUGGY]      result.append(   "n   ");  result.append('n');  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(   "n   ");  result.append('n');  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append(   "n   ");    result.append('n');	  	compilable	  [FE]  ComparisonFailure  	20	1	add
28	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[n    [FE]        ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(   "n   ");  result.append( ",n   ");  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	        result.append(   "n   ");    result.append( ",n   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[n    	20	1	add
29	[BUG]  [BUGGY]      result.append(   "n   ");  result.append( ",n   ");  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[n    [FE]        ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(   "n   ");  result.append( ",n   ");  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append(   "n   ");    result.append( ",n   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[n    	20	1	add
30	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  >=  lower)  {  }  else  if(index  >=  lower)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    >=    lower)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	12	1	add
31	[BUG]  [BUGGY]  }  else  if(index  >=  lower)  {  }  else  if(index  >=  lower)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  >=  lower)  {  }  else  if(index  >=  lower)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    >=    lower)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	12	1	add
32	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  >=  lower)  {  }  else  if(index  >=  upper)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    >=    lower)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	12	1	add
33	[BUG]  [BUGGY]  }  else  if(index  >=  lower)  {  }  else  if(index  >=  upper)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  >=  lower)  {  }  else  if(index  >=  upper)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    >=    lower)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	12	1	add
34	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  >=  lower)  {  }  else  if(index!=  lower)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    >=    lower)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	12	1	add
35	[BUG]  [BUGGY]  }  else  if(index  >=  lower)  {  }  else  if(index!=  lower)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  >=  lower)  {  }  else  if(index!=  lower)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    >=    lower)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	12	1	add
36	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  >=  lower)  {  }  else  if(index  ==  lower)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    >=    lower)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	12	1	add
37	[BUG]  [BUGGY]  }  else  if(index  >=  lower)  {  }  else  if(index  ==  lower)  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  >=  lower)  {  }  else  if(index  ==  lower)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    >=    lower)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	12	1	add
38	[BUG]  [BUGGY]  }  else  if(index  >=  lower)  {  }  else  if(index  >>  lower)  {  [CE]  incompatible  types  [FE]            ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  >=  lower)  {  }  else  if(index  >>  lower)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    >=    lower)    {    }  else  if(index  >>  lower)  {	  	non-compiled	[CE]  incompatible  types	12	None	add
39	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  ==  0)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}  else  if(index  ==  0)  {	  }    else    if(index    ==    upper)    {    	compilable	  [FE]  ComparisonFailure  	11	1	replace
40	[BUG]  [BUGGY]  }  else  if(index  ==  0)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  ==  0)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  ==  0)  {	  }    else    if(index    ==    upper)    {    	compilable	  [FE]  ComparisonFailure  	11	1	replace
41	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(str.substring(0,  index  +  1));  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,  index  +  1));	      result.append(str.substring(index    +    1));    	compilable	  [FE]  ComparisonFailure  	17	1	replace
42	[BUG]  [BUGGY]  result.append(str.substring(0,  index  +  1));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(str.substring(0,  index  +  1));  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index  +  1));	      result.append(str.substring(index    +    1));    	compilable	  [FE]  ComparisonFailure  	17	1	replace
43	[BUG]  [BUGGY]  result.append(str.substring(index  +  1),  lower);  [CE]  no  suitable  method  found  for  append(String,int)  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(str.substring(index  +  1),  lower);  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index  +  1),  lower);	      result.append(str.substring(index    +    1));    	non-compiled	[CE]  no  suitable  method  found  for  append(String,int)	17	None	replace
44	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(str.substring(index  +  1)+  1);  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(index  +  1)+  1);	      result.append(str.substring(index    +    1));    	compilable	  [FE]  ComparisonFailure  	17	1	replace
45	[BUG]  [BUGGY]  result.append(str.substring(index  +  1)+  1);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(str.substring(index  +  1)+  1);  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index  +  1)+  1);	      result.append(str.substring(index    +    1));    	compilable	  [FE]  ComparisonFailure  	17	1	replace
46	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index!=  upper)  {  }  else  if(index!=  upper)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index!=    upper)    {    }  else  if(index!=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	14	1	add
47	[BUG]  [BUGGY]  }  else  if(index!=  upper)  {  }  else  if(index!=  upper)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index!=  upper)  {  }  else  if(index!=  upper)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index!=    upper)    {    }  else  if(index!=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	14	1	add
48	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index!=  upper)  {  }  else  if(index  >=  upper)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index!=    upper)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	14	1	add
49	[BUG]  [BUGGY]  }  else  if(index!=  upper)  {  }  else  if(index  >=  upper)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index!=  upper)  {  }  else  if(index  >=  upper)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index!=    upper)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	14	1	add
50	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index!=  upper)  {  }  else  if(index!=  lower)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index!=    upper)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	14	1	add
51	[BUG]  [BUGGY]  }  else  if(index!=  upper)  {  }  else  if(index!=  lower)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index!=  upper)  {  }  else  if(index!=  lower)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index!=    upper)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	14	1	add
52	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index!=  upper)  {  }  else  if(index  ==  upper)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index!=    upper)    {    }  else  if(index  ==  upper)  {	  	compilable	  [FE]  ComparisonFailure  	14	1	add
53	[BUG]  [BUGGY]  }  else  if(index!=  upper)  {  }  else  if(index  ==  upper)  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index!=  upper)  {  }  else  if(index  ==  upper)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index!=    upper)    {    }  else  if(index  ==  upper)  {	  	compilable	  [FE]  ComparisonFailure  	14	1	add
54	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index!=  upper)  {  }  else  if(index  >=  lower)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index!=    upper)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	14	1	add
55	[BUG]  [BUGGY]  }  else  if(index!=  upper)  {  }  else  if(index  >=  lower)  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index!=  upper)  {  }  else  if(index  >=  lower)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index!=    upper)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	14	1	add
56	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  <  0)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}  else  if(index  <  0)  {	  }    else    if(index    >    0)    {    	compilable	  [FE]  ComparisonFailure  	25	1	replace
57	[BUG]  [BUGGY]  }  else  if(index  <  0)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  <  0)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  <  0)  {	  }    else    if(index    >    0)    {    	compilable	  [FE]  ComparisonFailure  	25	1	replace
58	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index!=  0)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}  else  if(index!=  0)  {	  }    else    if(index    >    0)    {    	compilable	  [FE]  ComparisonFailure  	25	1	replace
59	[BUG]  [BUGGY]  }  else  if(index!=  0)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index!=  0)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index!=  0)  {	  }    else    if(index    >    0)    {    	compilable	  [FE]  ComparisonFailure  	25	1	replace
60	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append('n');  result.append('n');  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	        result.append('n');    result.append('n');	  	compilable	  [FE]  ComparisonFailure  	26	1	add
61	[BUG]  [BUGGY]      result.append('n');  result.append('n');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append('n');  result.append('n');  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append('n');    result.append('n');	  	compilable	  [FE]  ComparisonFailure  	26	1	add
62	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	        result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
63	[BUG]  [BUGGY]      result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
64	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	        result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
65	[BUG]  [BUGGY]      result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
66	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	        result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
67	[BUG]  [BUGGY]      result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
68	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	        result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
69	[BUG]  [BUGGY]      result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
70	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(str.substring(index,  lower));  result.append(str.substring(index,  lower));  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	        result.append(str.substring(index,    lower));    result.append(str.substring(index,  lower));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	18	1	add
71	[BUG]  [BUGGY]      result.append(str.substring(index,  lower));  result.append(str.substring(index,  lower));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(str.substring(index,  lower));  result.append(str.substring(index,  lower));  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append(str.substring(index,    lower));    result.append(str.substring(index,  lower));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	18	1	add
72	[BUG]  [BUGGY]      result.append(str.substring(index,  lower));  StringBuffer  result.append(str.substring(index,  lower));  [CE]  ';'  expected  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(str.substring(index,  lower));  StringBuffer  result.append(str.substring(index,  lower));  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append(str.substring(index,    lower));    StringBuffer  result.append(str.substring(index,  lower));	  	non-compiled	[CE]  ';'  expected	18	None	add
73	[BUG]  [BUGGY]      result.append(str.substring(index,  lower));  result.append(str.substring(index,  low));  [CE]  cannot  find  symbol  low  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(str.substring(index,  lower));  result.append(str.substring(index,  low));  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append(str.substring(index,    lower));    result.append(str.substring(index,  low));	  	non-compiled	[CE]  cannot  find  symbol  low	18	None	add
74	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(str.substring(0,  index  -  1));  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,  index  -  1));	      result.append(str.substring(0,    index));    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	1	replace
75	[BUG]  [BUGGY]  result.append(str.substring(0,  index  -  1));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(str.substring(0,  index  -  1));  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index  -  1));	      result.append(str.substring(0,    index));    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	1	replace
76	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(str.substring(0,  index  +  2));  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,  index  +  2));	      result.append(str.substring(0,    index));    	compilable	  [FE]  ComparisonFailure  	2	1	replace
77	[BUG]  [BUGGY]  result.append(str.substring(0,  index  +  2));  [FE]  ComparisonFailure  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(str.substring(0,  index  +  2));  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index  +  2));	      result.append(str.substring(0,    index));    	compilable	  [FE]  ComparisonFailure  	2	1	replace
78	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  <  lower)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}  else  if(index  <  lower)  {	  }    else    if(index    <    upper)    {    	compilable	  [FE]  ComparisonFailure  	23	1	replace
79	[BUG]  [BUGGY]  }  else  if(index  <  lower)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  <  lower)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  <  lower)  {	  }    else    if(index    <    upper)    {    	compilable	  [FE]  ComparisonFailure  	23	1	replace
80	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	        result.append(str.substring(0,    index));    result.append(str.substring(0,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
81	[BUG]  [BUGGY]      result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append(str.substring(0,    index));    result.append(str.substring(0,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
82	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	        result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
83	[BUG]  [BUGGY]      result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
84	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	        result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
85	[BUG]  [BUGGY]      result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
86	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	        result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
87	[BUG]  [BUGGY]      result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
88	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append( ", ");  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	        result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append( ", ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
89	[BUG]  [BUGGY]      result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append( ", ");  }  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append( ", ");  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append( ", ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
90	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(str.substring(0,  index),  lower,  upper);  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,  index),  lower,  upper);	      result.append(str.substring(0,    index),    lower);    	compilable	  [FE]  StringIndexOutOfBoundsException  	5	1	replace
91	[BUG]  [BUGGY]  result.append(str.substring(0,  index),  lower,  upper);  [FE]  StringIndexOutOfBoundsException  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(str.substring(0,  index),  lower,  upper);  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index),  lower,  upper);	      result.append(str.substring(0,    index),    lower);    	compilable	  [FE]  StringIndexOutOfBoundsException  	5	1	replace
92	[BUG]  [BUGGY]  result.append(str.substring(0,  index),  upper);  [CE]  no  suitable  method  found  for  append(String,int)  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(str.substring(0,  index),  upper);  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index),  upper);	      result.append(str.substring(0,    index),    lower);    	non-compiled	[CE]  no  suitable  method  found  for  append(String,int)	5	None	replace
93	[BUG]  [BUGGY]  result.append(str.substring(0,  index),  lower,  appendToEnd);  [CE]  no  suitable  method  found  for  append(String,int,String)  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(str.substring(0,  index),  lower,  appendToEnd);  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index),  lower,  appendToEnd);	      result.append(str.substring(0,    index),    lower);    	non-compiled	[CE]  no  suitable  method  found  for  append(String,int,String)	5	None	replace
94	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]                    StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(str.substring(0,  index),  lower,  -1);  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,  index),  lower,  -1);	      result.append(str.substring(0,    index),    lower);    	compilable	  [FE]  StringIndexOutOfBoundsException  	5	1	replace
95	[BUG]  [BUGGY]  result.append(str.substring(0,  index),  lower,  -1);  [FE]  StringIndexOutOfBoundsException  [FE]                    StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(str.substring(0,  index),  lower,  -1);  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index),  lower,  -1);	      result.append(str.substring(0,    index),    lower);    	compilable	  [FE]  StringIndexOutOfBoundsException  	5	1	replace
96	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  <  upper)  {  }  else  if(index  <  upper)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {	  	compilable	  [FE]  ComparisonFailure  	22	1	add
97	[BUG]  [BUGGY]  }  else  if(index  <  upper)  {  }  else  if(index  <  upper)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  <  upper)  {  }  else  if(index  <  upper)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {	  	compilable	  [FE]  ComparisonFailure  	22	1	add
98	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  <  upper)  {  }  else  if(index  <  lower)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    <    upper)    {    }  else  if(index  <  lower)  {	  	compilable	  [FE]  ComparisonFailure  	22	1	add
99	[BUG]  [BUGGY]  }  else  if(index  <  upper)  {  }  else  if(index  <  lower)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  <  upper)  {  }  else  if(index  <  lower)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    <    upper)    {    }  else  if(index  <  lower)  {	  	compilable	  [FE]  ComparisonFailure  	22	1	add
100	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  <  upper)  {  }  else  if(index  >=  upper)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    <    upper)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	22	1	add
101	[BUG]  [BUGGY]  }  else  if(index  <  upper)  {  }  else  if(index  >=  upper)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  <  upper)  {  }  else  if(index  >=  upper)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    <    upper)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	22	1	add
102	[BUG]  [BUGGY]  }  else  if(index  <  upper)  {  }  else  if(index  <  >)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  <  upper)  {  }  else  if(index  <  >)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    <    upper)    {    }  else  if(index  <  >)  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
103	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(lower,  upper));  [CE]  no  suitable  method  found  for  defaultString(int,int)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(StringUtils.defaultString(lower,  upper));  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(StringUtils.defaultString(lower,  upper));	      result.append(StringUtils.defaultString(upper));    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int,int)	4	None	replace
104	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(lower),  upper);  [CE]  no  suitable  method  found  for  defaultString(int)  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(StringUtils.defaultString(lower),  upper);  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(StringUtils.defaultString(lower),  upper);	      result.append(StringUtils.defaultString(upper));    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int)	4	None	replace
105	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(index,  upper));  [CE]  no  suitable  method  found  for  defaultString(int,int)  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(StringUtils.defaultString(index,  upper));  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(StringUtils.defaultString(index,  upper));	      result.append(StringUtils.defaultString(upper));    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int,int)	4	None	replace
106	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append('N');  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('N');	      result.append('n');    	compilable	  [FE]  ComparisonFailure  	27	1	replace
107	[BUG]  [BUGGY]  result.append('N');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append('N');  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('N');	      result.append('n');    	compilable	  [FE]  ComparisonFailure  	27	1	replace
108	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(str.substring(index  +  1));  result.append(str.substring(index  +  1));  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	        result.append(str.substring(index    +    1));    result.append(str.substring(index  +  1));	  	compilable	  [FE]  ComparisonFailure  	16	1	add
109	[BUG]  [BUGGY]      result.append(str.substring(index  +  1));  result.append(str.substring(index  +  1));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(str.substring(index  +  1));  result.append(str.substring(index  +  1));  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append(str.substring(index    +    1));    result.append(str.substring(index  +  1));	  	compilable	  [FE]  ComparisonFailure  	16	1	add
110	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(str.substring(index  +  1));  if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	        result.append(str.substring(index    +    1));    if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	16	1	add
111	[BUG]  [BUGGY]      result.append(str.substring(index  +  1));  if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(str.substring(index  +  1));  if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append(str.substring(index    +    1));    if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	16	1	add
112	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	        result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	16	1	add
113	[BUG]  [BUGGY]      result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	16	1	add
114	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(str.substring(index,  lower  +  1));  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(index,  lower  +  1));	      result.append(str.substring(index,    lower));    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	1	replace
115	[BUG]  [BUGGY]  result.append(str.substring(index,  lower  +  1));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(str.substring(index,  lower  +  1));  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index,  lower  +  1));	      result.append(str.substring(index,    lower));    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	1	replace
116	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(str.substring(index,  index  +  1));  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(index,  index  +  1));	      result.append(str.substring(index,    lower));    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	1	replace
117	[BUG]  [BUGGY]  result.append(str.substring(index,  index  +  1));  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(str.substring(index,  index  +  1));  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index,  index  +  1));	      result.append(str.substring(index,    lower));    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	1	replace
118	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(str.substring(index,  upper));  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(index,  upper));	      result.append(str.substring(index,    lower));    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	1	replace
119	[BUG]  [BUGGY]  result.append(str.substring(index,  upper));  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(str.substring(index,  upper));  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index,  upper));	      result.append(str.substring(index,    lower));    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	1	replace
120	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  >=  upper)  {  }  else  if(index  >=  upper)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    >=    upper)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	8	1	add
121	[BUG]  [BUGGY]  }  else  if(index  >=  upper)  {  }  else  if(index  >=  upper)  {  [FE]  ComparisonFailure  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  >=  upper)  {  }  else  if(index  >=  upper)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    >=    upper)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	8	1	add
122	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  >=  upper)  {  }  else  if(index!=  upper)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    >=    upper)    {    }  else  if(index!=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	8	1	add
123	[BUG]  [BUGGY]  }  else  if(index  >=  upper)  {  }  else  if(index!=  upper)  {  [FE]  ComparisonFailure  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  >=  upper)  {  }  else  if(index!=  upper)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    >=    upper)    {    }  else  if(index!=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	8	1	add
124	[BUG]  [BUGGY]  }  else  if(index  >=  upper)  {  }  else  if(index  >>  upper)  {  [CE]  incompatible  types  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  >=  upper)  {  }  else  if(index  >>  upper)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    >=    upper)    {    }  else  if(index  >>  upper)  {	  	non-compiled	[CE]  incompatible  types	8	None	add
125	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  >=  upper)  {  }  else  if(index  ==  upper)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    >=    upper)    {    }  else  if(index  ==  upper)  {	  	compilable	  [FE]  ComparisonFailure  	8	1	add
126	[BUG]  [BUGGY]  }  else  if(index  >=  upper)  {  }  else  if(index  ==  upper)  {  [FE]  ComparisonFailure  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  >=  upper)  {  }  else  if(index  ==  upper)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    >=    upper)    {    }  else  if(index  ==  upper)  {	  	compilable	  [FE]  ComparisonFailure  	8	1	add
127	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  >=  upper)  {  }  else  if(index  >=  lower)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    >=    upper)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	8	1	add
128	[BUG]  [BUGGY]  }  else  if(index  >=  upper)  {  }  else  if(index  >=  lower)  {  [FE]  ComparisonFailure  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  >=  upper)  {  }  else  if(index  >=  lower)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    >=    upper)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	8	1	add
129	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index!=  lower)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}  else  if(index!=  lower)  {	  }    else    if(index!=    upper)    {    	compilable	  [FE]  ComparisonFailure  	15	1	replace
130	[BUG]  [BUGGY]  }  else  if(index!=  lower)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index!=  lower)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index!=  lower)  {	  }    else    if(index!=    upper)    {    	compilable	  [FE]  ComparisonFailure  	15	1	replace
131	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]    junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append( ",n ");  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append( ",n ");	      result.append(   ",   ");    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	7	1	replace
132	[BUG]  [BUGGY]  result.append( ",n ");  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]    junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append( ",n ");  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append( ",n ");	      result.append(   ",   ");    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	7	1	replace
133	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]      junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(',');  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(',');	      result.append(   ",   ");    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	7	1	replace
134	[BUG]  [BUGGY]  result.append(',');  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]      junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(',');  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(',');	      result.append(   ",   ");    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	7	1	replace
135	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append('  ').append(index);  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('  ').append(index);	      result.append('    ');    	compilable	  [FE]  ComparisonFailure  	29	1	replace
136	[BUG]  [BUGGY]  result.append('  ').append(index);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append('  ').append(index);  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('  ').append(index);	      result.append('    ');    	compilable	  [FE]  ComparisonFailure  	29	1	replace
137	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append('  ').append(index  +  1);  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('  ').append(index  +  1);	      result.append('    ');    	compilable	  [FE]  ComparisonFailure  	29	1	replace
138	[BUG]  [BUGGY]  result.append('  ').append(index  +  1);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append('  ').append(index  +  1);  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('  ').append(index  +  1);	      result.append('    ');    	compilable	  [FE]  ComparisonFailure  	29	1	replace
139	[BUG]  [BUGGY]  result.append(''+  str.substring(0,  index));  [CE]  empty  character  literal  [FE]        ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(''+  str.substring(0,  index));  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(''+  str.substring(0,  index));	      result.append('    ');    	non-compiled	[CE]  empty  character  literal	29	None	replace
140	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]    junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(   ",   ");  result.append( ",   ");  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	        result.append(   ",   ");    result.append( ",   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	6	1	add
141	[BUG]  [BUGGY]      result.append(   ",   ");  result.append( ",   ");  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]    junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(   ",   ");  result.append( ",   ");  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append(   ",   ");    result.append( ",   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	6	1	add
142	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]      junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(   ",   ");  result.append(',');  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	        result.append(   ",   ");    result.append(',');	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	6	1	add
143	[BUG]  [BUGGY]      result.append(   ",   ");  result.append(',');  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]      junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(   ",   ");  result.append(',');  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append(   ",   ");    result.append(',');	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	6	1	add
144	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  >=  lower  &&  index  <  str.length())  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}  else  if(index  >=  lower  &&  index  <  str.length())  {	  }    else    if(index    >=    lower)    {    	compilable	  [FE]  ComparisonFailure  	13	1	replace
145	[BUG]  [BUGGY]  }  else  if(index  >=  lower  &&  index  <  str.length())  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  >=  lower  &&  index  <  str.length())  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  >=  lower  &&  index  <  str.length())  {	  }    else    if(index    >=    lower)    {    	compilable	  [FE]  ComparisonFailure  	13	1	replace
146	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append( "null ");  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append( "null ");	      result.append(   "n   ");    	compilable	  [FE]  ComparisonFailure  	21	1	replace
147	[BUG]  [BUGGY]  result.append( "null ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append( "null ");  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append( "null ");	      result.append(   "n   ");    	compilable	  [FE]  ComparisonFailure  	21	1	replace
148	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append( "   ");  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append( "   ");	      result.append(   "n   ");    	compilable	  [FE]  ComparisonFailure  	21	1	replace
149	[BUG]  [BUGGY]  result.append( "   ");  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append( "   ");  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append( "   ");	      result.append(   "n   ");    	compilable	  [FE]  ComparisonFailure  	21	1	replace
150	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(lower,  index));  [CE]  no  suitable  method  found  for  defaultString(int,int)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(StringUtils.defaultString(lower,  index));  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(StringUtils.defaultString(lower,  index));	      result.append(StringUtils.defaultString(lower));    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int,int)	3	None	replace
151	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(lower,  lower));  [CE]  no  suitable  method  found  for  defaultString(int,int)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(StringUtils.defaultString(lower,  lower));  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(StringUtils.defaultString(lower,  lower));	      result.append(StringUtils.defaultString(lower));    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int,int)	3	None	replace
152	[BUG]  [BUGGY]  result.append('n',  upper);  [CE]  no  suitable  method  found  for  append(char,int)  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append('n',  upper);  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('n',  upper);	      result.append('n');    	non-compiled	[CE]  no  suitable  method  found  for  append(char,int)	27	None	replace
153	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append('/');  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('/');	      result.append('n');    	compilable	  [FE]  ComparisonFailure  	27	1	replace
154	[BUG]  [BUGGY]  result.append('/');  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append('/');  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('/');	      result.append('n');    	compilable	  [FE]  ComparisonFailure  	27	1	replace
155	[BUG]  [BUGGY]      result.append('  ');  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  result.append('  ');  }  [CE]  unclosed  character  literal  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append('  ');  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  result.append('  ');  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append('    ');    if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  result.append('  ');  }	  	non-compiled	[CE]  unclosed  character  literal	28	None	add
156	[BUG]  [BUGGY]      result.append('  ');  if(index  ==  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  result.append('  ');  }  [CE]  unclosed  character  literal  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append('  ');  if(index  ==  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  result.append('  ');  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append('    ');    if(index  ==  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  result.append('  ');  }	  	non-compiled	[CE]  unclosed  character  literal	28	None	add
157	[BUG]  [BUGGY]      result.append('  ');  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(index,  lower));  result.append('  ');  }  [CE]  unclosed  character  literal  [FE]        ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append('  ');  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(index,  lower));  result.append('  ');  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append('    ');    if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(index,  lower));  result.append('  ');  }	  	non-compiled	[CE]  unclosed  character  literal	28	None	add
158	[BUG]  [BUGGY]      result.append('  ');  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(index  +  1));  result.append('  ');  }  [CE]  unclosed  character  literal  [FE]          ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append('  ');  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(index  +  1));  result.append('  ');  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append('    ');    if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(index  +  1));  result.append('  ');  }	  	non-compiled	[CE]  unclosed  character  literal	28	None	add
159	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  ==  upper)  {  result.append(str.substring(0,  index));  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    ==    upper)    {    result.append(str.substring(0,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	10	1	add
160	[BUG]  [BUGGY]  }  else  if(index  ==  upper)  {  result.append(str.substring(0,  index));  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  ==  upper)  {  result.append(str.substring(0,  index));  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    ==    upper)    {    result.append(str.substring(0,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	10	1	add
161	[BUG]  [BUGGY]  }  else  if(index  ==  upper)  {  result.append(str.substring(0,  index),  lower);  [CE]  no  suitable  method  found  for  append(String,int)  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  ==  upper)  {  result.append(str.substring(0,  index),  lower);  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    ==    upper)    {    result.append(str.substring(0,  index),  lower);	  	non-compiled	[CE]  no  suitable  method  found  for  append(String,int)	10	None	add
162	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	        result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	16	1	add
163	[BUG]  [BUGGY]      result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	16	1	add
164	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append( ", ");  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	        result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append( ", ");  }	  	compilable	  [FE]  ComparisonFailure  	16	1	add
165	[BUG]  [BUGGY]      result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append( ", ");  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append( ", ");  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append( ", ");  }	  	compilable	  [FE]  ComparisonFailure  	16	1	add
166	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  >  0)  {  result.append(str.substring(0,  lower));  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    >    0)    {    result.append(str.substring(0,  lower));	  	compilable	  [FE]  ComparisonFailure  	24	1	add
167	[BUG]  [BUGGY]  }  else  if(index  >  0)  {  result.append(str.substring(0,  lower));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  >  0)  {  result.append(str.substring(0,  lower));  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    >    0)    {    result.append(str.substring(0,  lower));	  	compilable	  [FE]  ComparisonFailure  	24	1	add
168	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  >  0)  {  result.append(str.substring(0,  upper));  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    >    0)    {    result.append(str.substring(0,  upper));	  	compilable	  [FE]  ComparisonFailure  	24	1	add
169	[BUG]  [BUGGY]  }  else  if(index  >  0)  {  result.append(str.substring(0,  upper));  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  >  0)  {  result.append(str.substring(0,  upper));  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    >    0)    {    result.append(str.substring(0,  upper));	  	compilable	  [FE]  ComparisonFailure  	24	1	add
170	[BUG]  [BUGGY]  }  else  if(index  >  0)  {  result.append(str.substring(0,  index),  lower);  [CE]  no  suitable  method  found  for  append(String,int)  [FE]        ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  >  0)  {  result.append(str.substring(0,  index),  lower);  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    >    0)    {    result.append(str.substring(0,  index),  lower);	  	non-compiled	[CE]  no  suitable  method  found  for  append(String,int)	24	None	add
171	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append( "n ");  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	        result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append( "n ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
172	[BUG]  [BUGGY]      result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append( "n ");  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append( "n ");  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append( "n ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
173	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(index,  lower));  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	        result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(index,  lower));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	18	1	add
174	[BUG]  [BUGGY]      result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(index,  lower));  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(index,  lower));  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(index,  lower));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	18	1	add
175	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append( ", ");  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	        result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append( ", ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	18	1	add
176	[BUG]  [BUGGY]      result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append( ", ");  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append( ", ");  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append( ", ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	18	1	add
177	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	        result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	18	1	add
178	[BUG]  [BUGGY]      result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(0,  index));  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	18	1	add
179	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	        result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	18	1	add
180	[BUG]  [BUGGY]      result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	18	1	add
181	[BUG]  [BUGGY]  }  else  if(index!=  upper)  {  }  else  if(index  >>  upper)  {  [CE]  incompatible  types  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index!=  upper)  {  }  else  if(index  >>  upper)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index!=    upper)    {    }  else  if(index  >>  upper)  {	  	non-compiled	[CE]  incompatible  types	14	None	add
182	[BUG]  [BUGGY]  result.append(''+  lower);  [CE]  empty  character  literal  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(''+  lower);  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(''+  lower);	      result.append('    ');    	non-compiled	[CE]  empty  character  literal	29	None	replace
183	[BUG]  [BUGGY]  result.append('  ',  upper);  [CE]  no  suitable  method  found  for  append(char,int)  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append('  ',  upper);  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('  ',  upper);	      result.append('    ');    	non-compiled	[CE]  no  suitable  method  found  for  append(char,int)	29	None	replace
184	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append('  ').append(upper);  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('  ').append(upper);	      result.append('    ');    	compilable	  [FE]  ComparisonFailure  	29	1	replace
185	[BUG]  [BUGGY]  result.append('  ').append(upper);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append('  ').append(upper);  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('  ').append(upper);	      result.append('    ');    	compilable	  [FE]  ComparisonFailure  	29	1	replace
186	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append( "  }   ");  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append( "  }   ");	      result.append(   ",   ");    	compilable	  [FE]  ComparisonFailure  	7	1	replace
187	[BUG]  [BUGGY]  result.append( "  }   ");  [FE]  ComparisonFailure  [FE]    junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append( "  }   ");  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append( "  }   ");	      result.append(   ",   ");    	compilable	  [FE]  ComparisonFailure  	7	1	replace
188	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(upper,  lower));  [CE]  no  suitable  method  found  for  defaultString(int,int)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(StringUtils.defaultString(upper,  lower));  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(StringUtils.defaultString(upper,  lower));	      result.append(StringUtils.defaultString(lower));    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int,int)	3	None	replace
189	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(upper),  lower);  [CE]  no  suitable  method  found  for  defaultString(int)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(StringUtils.defaultString(upper),  lower);  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(StringUtils.defaultString(upper),  lower);	      result.append(StringUtils.defaultString(lower));    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int)	3	None	replace
190	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append( "  lower= ");  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append( "  lower= ");	      result.append(   "n   ");    	compilable	  [FE]  ComparisonFailure  	21	1	replace
191	[BUG]  [BUGGY]  result.append( "  lower= ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append( "  lower= ");  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append( "  lower= ");	      result.append(   "n   ");    	compilable	  [FE]  ComparisonFailure  	21	1	replace
192	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append( "  - ");  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append( "  - ");	      result.append(   "n   ");    	compilable	  [FE]  ComparisonFailure  	21	1	replace
193	[BUG]  [BUGGY]  result.append( "  - ");  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append( "  - ");  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append( "  - ");	      result.append(   "n   ");    	compilable	  [FE]  ComparisonFailure  	21	1	replace
194	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append('n');  result.append('m');  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	        result.append('n');    result.append('m');	  	compilable	  [FE]  ComparisonFailure  	26	1	add
195	[BUG]  [BUGGY]      result.append('n');  result.append('m');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append('n');  result.append('m');  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append('n');    result.append('m');	  	compilable	  [FE]  ComparisonFailure  	26	1	add
196	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append('n');  result.append('r');  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	        result.append('n');    result.append('r');	  	compilable	  [FE]  ComparisonFailure  	26	1	add
197	[BUG]  [BUGGY]      result.append('n');  result.append('r');  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append('n');  result.append('r');  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append('n');    result.append('r');	  	compilable	  [FE]  ComparisonFailure  	26	1	add
198	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append('n');  result.append('N');  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	        result.append('n');    result.append('N');	  	compilable	  [FE]  ComparisonFailure  	26	1	add
199	[BUG]  [BUGGY]      result.append('n');  result.append('N');  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append('n');  result.append('N');  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append('n');    result.append('N');	  	compilable	  [FE]  ComparisonFailure  	26	1	add
200	[BUG]  [BUGGY]      result.append('n');  Result.append('n');  [CE]  cannot  find  symbol  Result  [FE]          ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append('n');  Result.append('n');  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append('n');    Result.append('n');	  	non-compiled	[CE]  cannot  find  symbol  Result	26	None	add
201	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(str.substring(0,  lower));  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,  lower));	      result.append(str.substring(index,    lower));    	compilable	  [FE]  ComparisonFailure  	19	1	replace
202	[BUG]  [BUGGY]  result.append(str.substring(0,  lower));  [FE]  ComparisonFailure  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(str.substring(0,  lower));  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  lower));	      result.append(str.substring(index,    lower));    	compilable	  [FE]  ComparisonFailure  	19	1	replace
203	[BUG]  [BUGGY]  result.append(str.substring(0,  index)+  1,  lower);  [CE]  no  suitable  method  found  for  append(String,int)  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(str.substring(0,  index)+  1,  lower);  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index)+  1,  lower);	      result.append(str.substring(0,    index),    lower);    	non-compiled	[CE]  no  suitable  method  found  for  append(String,int)	5	None	replace
204	[BUG]  [BUGGY]  result.append(str.substring(0,  index),  lower  +  1);  [CE]  no  suitable  method  found  for  append(String,int)  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(str.substring(0,  index),  lower  +  1);  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index),  lower  +  1);	      result.append(str.substring(0,    index),    lower);    	non-compiled	[CE]  no  suitable  method  found  for  append(String,int)	5	None	replace
205	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    <    upper)    {    result.append(str.substring(0,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	22	1	add
206	[BUG]  [BUGGY]  }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    <    upper)    {    result.append(str.substring(0,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	22	1	add
207	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  <  upper)  {  }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));	  	compilable	  [FE]  ComparisonFailure  	22	1	add
208	[BUG]  [BUGGY]  }  else  if(index  <  upper)  {  }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  <  upper)  {  }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));	  	compilable	  [FE]  ComparisonFailure  	22	1	add
209	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  <  upper)  {  }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));	  	compilable	  [FE]  ComparisonFailure  	22	1	add
210	[BUG]  [BUGGY]  }  else  if(index  <  upper)  {  }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  <  upper)  {  }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));	  	compilable	  [FE]  ComparisonFailure  	22	1	add
211	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  ==  -1)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}  else  if(index  ==  -1)  {	  }    else    if(index    >    0)    {    	compilable	  [FE]  ComparisonFailure  	25	1	replace
212	[BUG]  [BUGGY]  }  else  if(index  ==  -1)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  ==  -1)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  ==  -1)  {	  }    else    if(index    >    0)    {    	compilable	  [FE]  ComparisonFailure  	25	1	replace
213	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  >=  -1)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}  else  if(index  >=  -1)  {	  }    else    if(index    >    0)    {    	compilable	  [FE]  ComparisonFailure  	25	1	replace
214	[BUG]  [BUGGY]  }  else  if(index  >=  -1)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  >=  -1)  {  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  >=  -1)  {	  }    else    if(index    >    0)    {    	compilable	  [FE]  ComparisonFailure  	25	1	replace
215	[BUG]  [BUGGY]  result.append( ".append(upper).append( ", ").append(index  +  1).append('  '));  [CE]  unclosed  string  literal  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append( ".append(upper).append( ", ").append(index  +  1).append('  '));  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append( ".append(upper).append( ", ").append(index  +  1).append('  '));	      result.append('    ');    	non-compiled	[CE]  unclosed  string  literal	29	None	replace
216	[BUG]  [BUGGY]  result.append( ".append(upper).append('  ').append(index  +  1).append('  ');  [CE]  unclosed  string  literal  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append( ".append(upper).append('  ').append(index  +  1).append('  ');  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append( ".append(upper).append('  ').append(index  +  1).append('  ');	      result.append('    ');    	non-compiled	[CE]  unclosed  string  literal	29	None	replace
217	[BUG]  [BUGGY]  result.append( ".append(upper).append( ", ").append(index  +  1).append('  ');  [CE]  unclosed  string  literal  [FE]        ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append( ".append(upper).append( ", ").append(index  +  1).append('  ');  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append( ".append(upper).append( ", ").append(index  +  1).append('  ');	      result.append('    ');    	non-compiled	[CE]  unclosed  string  literal	29	None	replace
218	[BUG]  [BUGGY]  }  else  if(index  <  upper)  {  }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  <  upper)  {  }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }	  	non-compiled	[CE]  illegal  start  of  type	22	None	add
219	[BUG]  [BUGGY]  }  else  if(index  <  upper)  {  }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  }  [CE]  illegal  start  of  type  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  <  upper)  {  }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  }	  	non-compiled	[CE]  illegal  start  of  type	22	None	add
220	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  <  upper)  {  }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));	  	compilable	  [FE]  ComparisonFailure  	22	1	add
221	[BUG]  [BUGGY]  }  else  if(index  <  upper)  {  }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  <  upper)  {  }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));	  	compilable	  [FE]  ComparisonFailure  	22	1	add
222	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  <  upper)  {  }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));	  	compilable	  [FE]  ComparisonFailure  	22	1	add
223	[BUG]  [BUGGY]  }  else  if(index  <  upper)  {  }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  <  upper)  {  }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));	  	compilable	  [FE]  ComparisonFailure  	22	1	add
224	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(str.substring(index,  lower));  result.append(str.substring(index,  upper));  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	        result.append(str.substring(index,    lower));    result.append(str.substring(index,  upper));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	18	1	add
225	[BUG]  [BUGGY]      result.append(str.substring(index,  lower));  result.append(str.substring(index,  upper));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append(str.substring(index,  lower));  result.append(str.substring(index,  upper));  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append(str.substring(index,    lower));    result.append(str.substring(index,  upper));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	18	1	add
226	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(str.substring(0,  index)+  1);  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,  index)+  1);	      result.append(str.substring(0,    index));    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	1	replace
227	[BUG]  [BUGGY]  result.append(str.substring(0,  index)+  1);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(str.substring(0,  index)+  1);  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index)+  1);	      result.append(str.substring(0,    index));    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	1	replace
228	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append( ",  lower= ");  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append( ",  lower= ");	      result.append(   "n   ");    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	21	1	replace
229	[BUG]  [BUGGY]  result.append( ",  lower= ");  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append( ",  lower= ");  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append( ",  lower= ");	      result.append(   "n   ");    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	21	1	replace
230	[BUG]  [BUGGY]  }  else  if(index  ==  upper)  {  }  else  if(index  ==  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  }  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  ==  upper)  {  }  else  if(index  ==  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  }	  	non-compiled	[CE]  illegal  start  of  type	10	None	add
231	[BUG]  [BUGGY]  }  else  if(index  ==  upper)  {  }  else  if(index  ==  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  [CE]  illegal  start  of  type  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  ==  upper)  {  }  else  if(index  ==  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }	  	non-compiled	[CE]  illegal  start  of  type	10	None	add
232	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  ==  upper)  {  }  else  if(index  ==  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	10	1	add
233	[BUG]  [BUGGY]  }  else  if(index  ==  upper)  {  }  else  if(index  ==  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  [FE]  StringIndexOutOfBoundsException  [FE]        ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  }  else  if(index  ==  upper)  {  }  else  if(index  ==  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  [BUGGY]    result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	10	1	add
234	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(str.substring(1,  lower));  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(1,  lower));	      result.append(str.substring(index,    lower));    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	1	replace
235	[BUG]  [BUGGY]  result.append(str.substring(1,  lower));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(str.substring(1,  lower));  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(1,  lower));	      result.append(str.substring(index,    lower));    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	1	replace
236	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('n');  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	        result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
237	[BUG]  [BUGGY]      result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('n');  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('n');  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
238	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index,  lower));  result.append('n');  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	        result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index,  lower));  result.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
239	[BUG]  [BUGGY]      result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index,  lower));  result.append('n');  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index,  lower));  result.append('n');  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index,  lower));  result.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
240	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	        result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
241	[BUG]  [BUGGY]      result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]      result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	        result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
242	[BUG]  [BUGGY]  result.append(str.substring(0,  index  +  1),  lower);  [CE]  no  suitable  method  found  for  append(String,int)  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append(str.substring(0,  index  +  1),  lower);  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index  +  1),  lower);	      result.append(str.substring(0,    index),    lower);    	non-compiled	[CE]  no  suitable  method  found  for  append(String,int)	5	None	replace
243	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append('-');  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('-');	      result.append('n');    	compilable	  [FE]  ComparisonFailure  	27	1	replace
244	[BUG]  [BUGGY]  result.append('-');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,     "     ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }    [BUGGY]  result.append('-');  [BUGGY]    }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('-');	      result.append('n');    	compilable	  [FE]  ComparisonFailure  	27	1	replace
