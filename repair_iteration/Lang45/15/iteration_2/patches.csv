bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index    +    1));    result.append('n');    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	240	1	add
2	[BUG]  [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index    +    1));    result.append('n');    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	240	1	add
3	[BUG]  [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('  [CE]  illegal  line  end  in  character  literal  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index    +    1));    result.append('n');    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('	  	non-compiled	[CE]  illegal  line  end  in  character  literal	240	None	add
4	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index    +    1));    result.append('n');    }    result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	240	1	add
5	[BUG]  [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index    +    1));    result.append('n');    }    result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	240	1	add
6	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index    +    1));    result.append('n');    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  ComparisonFailure  	240	1	add
7	[BUG]  [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index    +    1));    result.append('n');    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  ComparisonFailure  	240	1	add
8	[BUG]  [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index    +    1));    result.append('n');    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));	  	non-compiled	[CE]  'else'  without  'if'	240	None	add
9	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('n');  result.append('n');  result.append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        result.append('n');    result.append('n');  result.append('n');	  	compilable	  [FE]  ComparisonFailure  	60	1	add
10	[BUG]  [BUGGY]          result.append('n');    result.append('n');  result.append('n');  result.append('n');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('n');  result.append('n');  result.append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        result.append('n');    result.append('n');  result.append('n');	  	compilable	  [FE]  ComparisonFailure  	60	1	add
11	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('n');  if(index  >=  -1)  {  result.append('n');  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        result.append('n');    if(index  >=  -1)  {  result.append('n');  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  ComparisonFailure  	60	1	add
12	[BUG]  [BUGGY]          result.append('n');    result.append('n');  if(index  >=  -1)  {  result.append('n');  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('n');  if(index  >=  -1)  {  result.append('n');  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        result.append('n');    if(index  >=  -1)  {  result.append('n');  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  ComparisonFailure  	60	1	add
13	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('n');  if(index  >=  -1)  {  result.append('n');  result.append('n');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        result.append('n');    if(index  >=  -1)  {  result.append('n');  result.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	60	1	add
14	[BUG]  [BUGGY]          result.append('n');    result.append('n');  if(index  >=  -1)  {  result.append('n');  result.append('n');  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('n');  if(index  >=  -1)  {  result.append('n');  result.append('n');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        result.append('n');    if(index  >=  -1)  {  result.append('n');  result.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	60	1	add
15	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('n');  if(index  ==  -1)  {  result.append('n');  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        result.append('n');    if(index  ==  -1)  {  result.append('n');  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  ComparisonFailure  	60	1	add
16	[BUG]  [BUGGY]          result.append('n');    result.append('n');  if(index  ==  -1)  {  result.append('n');  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('n');  if(index  ==  -1)  {  result.append('n');  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        result.append('n');    if(index  ==  -1)  {  result.append('n');  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  ComparisonFailure  	60	1	add
17	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('n');  if(index  ==  -1)  {  result.append('n');  result.append('n');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        result.append('n');    if(index  ==  -1)  {  result.append('n');  result.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	60	1	add
18	[BUG]  [BUGGY]          result.append('n');    result.append('n');  if(index  ==  -1)  {  result.append('n');  result.append('n');  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('n');  if(index  ==  -1)  {  result.append('n');  result.append('n');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        result.append('n');    if(index  ==  -1)  {  result.append('n');  result.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	60	1	add
19	[BUG]  [BUGGY]  }  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}	  }    else    if(index    <    upper)    {    }    else    if(index    <    upper)    {    result.append(str.substring(0,    lower));    	non-compiled	[CE]  illegal  start  of  type	208	None	replace
20	[BUG]  [BUGGY]  result.append(lower.substring(0,  index));  [CE]  int  cannot  be  dereferenced  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(lower.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(lower.substring(0,  index));	  }    else    if(index    <    upper)    {    }    else    if(index    <    upper)    {    result.append(str.substring(0,    lower));    	non-compiled	[CE]  int  cannot  be  dereferenced	208	None	replace
21	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index  +  1),  lower,  upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(index  +  1),  lower,  upper);	  result.append(str.substring(index    +    1),    lower);    	compilable	  [FE]  ComparisonFailure  	43	1	replace
22	[BUG]  [BUGGY]  result.append(str.substring(index  +  1),  lower,  upper);  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index  +  1),  lower,  upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index  +  1),  lower,  upper);	  result.append(str.substring(index    +    1),    lower);    	compilable	  [FE]  ComparisonFailure  	43	1	replace
23	[BUG]  [BUGGY]  result.append(str.substring(index,  index  +  1),  lower);  [CE]  no  suitable  method  found  for  append(String,int)  [FE]            ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  index  +  1),  lower);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index,  index  +  1),  lower);	  result.append(str.substring(index    +    1),    lower);    	non-compiled	[CE]  no  suitable  method  found  for  append(String,int)	43	None	replace
24	[BUG]  [BUGGY]  result.append(str.substring(index  +  1,  lower),  upper);  [CE]  no  suitable  method  found  for  append(String,int)  [FE]              ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index  +  1,  lower),  upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index  +  1,  lower),  upper);	  result.append(str.substring(index    +    1),    lower);    	non-compiled	[CE]  no  suitable  method  found  for  append(String,int)	43	None	replace
25	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  start  0  [FE]                ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index  +  1),  lower,  index);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(index  +  1),  lower,  index);	  result.append(str.substring(index    +    1),    lower);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  start  0  	43	1	replace
26	[BUG]  [BUGGY]  result.append(str.substring(index  +  1),  lower,  index);  [FE]  java.lang.IndexOutOfBoundsException:  start  0  [FE]                ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index  +  1),  lower,  index);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index  +  1),  lower,  index);	  result.append(str.substring(index    +    1),    lower);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  start  0  	43	1	replace
27	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   "  -   ");  result.append(   "  -   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(   "    -   ");    result.append(   "  -   ");	  	compilable	  [FE]  ComparisonFailure  	192	1	add
28	[BUG]  [BUGGY]  result.append(   "  -   ");  result.append(   "  -   ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   "  -   ");  result.append(   "  -   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(   "    -   ");    result.append(   "  -   ");	  	compilable	  [FE]  ComparisonFailure  	192	1	add
29	[BUG]  [BUGGY]  result.append(   "  -   ");  result.append('  -   ");  [CE]  unclosed  character  literal  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   "  -   ");  result.append('  -   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(   "    -   ");    result.append('  -   ");	  	non-compiled	[CE]  unclosed  character  literal	192	None	add
30	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  -    [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   "  -   ");  result.append( ",  -   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(   "    -   ");    result.append( ",  -   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    -    	192	1	add
31	[BUG]  [BUGGY]  result.append(   "  -   ");  result.append( ",  -   ");  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  -    [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   "  -   ");  result.append( ",  -   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(   "    -   ");    result.append( ",  -   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    -    	192	1	add
32	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  +  1)+  1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,  index  +  1)+  1);	  result.append(str.substring(index    +    1)+    1);    	compilable	  [FE]  ComparisonFailure  	45	1	replace
33	[BUG]  [BUGGY]  result.append(str.substring(0,  index  +  1)+  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  +  1)+  1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index  +  1)+  1);	  result.append(str.substring(index    +    1)+    1);    	compilable	  [FE]  ComparisonFailure  	45	1	replace
34	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index  +  1)+  2);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(index  +  1)+  2);	  result.append(str.substring(index    +    1)+    1);    	compilable	  [FE]  ComparisonFailure  	45	1	replace
35	[BUG]  [BUGGY]  result.append(str.substring(index  +  1)+  2);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index  +  1)+  2);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index  +  1)+  2);	  result.append(str.substring(index    +    1)+    1);    	compilable	  [FE]  ComparisonFailure  	45	1	replace
36	[BUG]  [BUGGY]  result.append('  ',  lower,  upper);  [CE]  no  suitable  method  found  for  append(char,int,int)  [FE]          ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('  ',  lower,  upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('  ',  lower,  upper);	  result.append('    ',    upper);    	non-compiled	[CE]  no  suitable  method  found  for  append(char,int,int)	183	None	replace
37	[BUG]  [BUGGY]  result.append('  ',  index,  upper);  [CE]  no  suitable  method  found  for  append(char,int,int)  [FE]            ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('  ',  index,  upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('  ',  index,  upper);	  result.append('    ',    upper);    	non-compiled	[CE]  no  suitable  method  found  for  append(char,int,int)	183	None	replace
38	[BUG]  [BUGGY]  result.append('  ',  lower);  [CE]  no  suitable  method  found  for  append(char,int)  [FE]              ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('  ',  lower);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('  ',  lower);	  result.append('    ',    upper);    	non-compiled	[CE]  no  suitable  method  found  for  append(char,int)	183	None	replace
39	[BUG]  [BUGGY]  result.append('  ',  upper,  index);  [CE]  no  suitable  method  found  for  append(char,int,int)  [FE]                ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('  ',  upper,  index);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('  ',  upper,  index);	  result.append('    ',    upper);    	non-compiled	[CE]  no  suitable  method  found  for  append(char,int,int)	183	None	replace
40	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(upper);	          result.append(str.substring(index,    lower));    if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    else    {    result.append(str.substring(0,    index));    }    	compilable	  [FE]  ComparisonFailure  	178	1	replace
41	[BUG]  [BUGGY]  result.append(upper);  [FE]  ComparisonFailure  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(upper);	          result.append(str.substring(index,    lower));    if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    else    {    result.append(str.substring(0,    index));    }    	compilable	  [FE]  ComparisonFailure  	178	1	replace
42	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index        +        1));        if(index    >=    -1)    {    result.append(str.substring(index    +    1));    }    result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	162	1	add
43	[BUG]  [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index        +        1));        if(index    >=    -1)    {    result.append(str.substring(index    +    1));    }    result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	162	1	add
44	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index!=  -1)  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index        +        1));        if(index    >=    -1)    {    result.append(str.substring(index    +    1));    }    result.append(str.substring(index  +  1));  if(index!=  -1)  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	162	1	add
45	[BUG]  [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index!=  -1)  {  result.append(str.substring(index  +  1));  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index!=  -1)  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index        +        1));        if(index    >=    -1)    {    result.append(str.substring(index    +    1));    }    result.append(str.substring(index  +  1));  if(index!=  -1)  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	162	1	add
46	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index        +        1));        if(index    >=    -1)    {    result.append(str.substring(index    +    1));    }    result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  ComparisonFailure  	162	1	add
47	[BUG]  [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(StringUtils.defaultString(appendToEnd));  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index        +        1));        if(index    >=    -1)    {    result.append(str.substring(index    +    1));    }    result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  ComparisonFailure  	162	1	add
48	[BUG]  [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  >>  -1)  {  result.append(str.substring(index  +  1));  }  [CE]  incompatible  types  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  >>  -1)  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index        +        1));        if(index    >=    -1)    {    result.append(str.substring(index    +    1));    }    result.append(str.substring(index  +  1));  if(index  >>  -1)  {  result.append(str.substring(index  +  1));  }	  	non-compiled	[CE]  incompatible  types	162	None	add
49	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  ==  -1)  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index        +        1));        if(index    >=    -1)    {    result.append(str.substring(index    +    1));    }    result.append(str.substring(index  +  1));  if(index  ==  -1)  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	162	1	add
50	[BUG]  [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  ==  -1)  {  result.append(str.substring(index  +  1));  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  ==  -1)  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index        +        1));        if(index    >=    -1)    {    result.append(str.substring(index    +    1));    }    result.append(str.substring(index  +  1));  if(index  ==  -1)  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	162	1	add
51	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  result.append('  ');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  result.append('  ');  }	          result.append('    ');    if(index    >=    -1)    {    result.append('    ');    }    else    {    result.append(str.substring(0,    index));    result.append('    ');    }    	compilable	  [FE]  ComparisonFailure  	155	1	replace
52	[BUG]  [BUGGY]  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  result.append('  ');  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  result.append('  ');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  result.append('  ');  }	          result.append('    ');    if(index    >=    -1)    {    result.append('    ');    }    else    {    result.append(str.substring(0,    index));    result.append('    ');    }    	compilable	  [FE]  ComparisonFailure  	155	1	replace
53	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('  ');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('  ');  }	          result.append('    ');    if(index    >=    -1)    {    result.append('    ');    }    else    {    result.append(str.substring(0,    index));    result.append('    ');    }    	compilable	  [FE]  ComparisonFailure  	155	1	replace
54	[BUG]  [BUGGY]  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('  ');  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('  ');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('  ');  }	          result.append('    ');    if(index    >=    -1)    {    result.append('    ');    }    else    {    result.append(str.substring(0,    index));    result.append('    ');    }    	compilable	  [FE]  ComparisonFailure  	155	1	replace
55	[BUG]  [BUGGY]  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index),  lower);  result.append('  ');  }  [CE]  no  suitable  method  found  for  append(String,int)  [FE]            ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index),  lower);  result.append('  ');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index),  lower);  result.append('  ');  }	          result.append('    ');    if(index    >=    -1)    {    result.append('    ');    }    else    {    result.append(str.substring(0,    index));    result.append('    ');    }    	non-compiled	[CE]  no  suitable  method  found  for  append(String,int)	155	None	replace
56	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(1,  lower));  result.append(str.substring(1,  lower));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(1,    lower));    result.append(str.substring(1,  lower));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	234	1	add
57	[BUG]  [BUGGY]  result.append(str.substring(1,  lower));  result.append(str.substring(1,  lower));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(1,  lower));  result.append(str.substring(1,  lower));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(1,    lower));    result.append(str.substring(1,  lower));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	234	1	add
58	[BUG]  [BUGGY]  result.append(str.substring(1,  lower));  StringBuffer  result.append(str.substring(1,  lower));  [CE]  ';'  expected  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(1,  lower));  StringBuffer  result.append(str.substring(1,  lower));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(1,    lower));    StringBuffer  result.append(str.substring(1,  lower));	  	non-compiled	[CE]  ';'  expected	234	None	add
59	[BUG]  [BUGGY]  result.append(str.substring(1,  lower));  result.append(str.substring(1,  low));  [CE]  cannot  find  symbol  low  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(1,  lower));  result.append(str.substring(1,  low));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(1,    lower));    result.append(str.substring(1,  low));	  	non-compiled	[CE]  cannot  find  symbol  low	234	None	add
60	[BUG]  [BUGGY]  result.append(str.substring(1,  lower));  Result.append(str.substring(1,  lower));  [CE]  cannot  find  symbol  Result  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(1,  lower));  Result.append(str.substring(1,  lower));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(1,    lower));    Result.append(str.substring(1,  lower));	  	non-compiled	[CE]  cannot  find  symbol  Result	234	None	add
61	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(     "n     ");    result.append('n');  result.append( "n   ");  result.append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(       "n       ");        result.append('n');    result.append( "n   ");  result.append('n');	  	compilable	  [FE]  ComparisonFailure  	26	1	add
62	[BUG]  [BUGGY]          result.append(     "n     ");    result.append('n');  result.append( "n   ");  result.append('n');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(     "n     ");    result.append('n');  result.append( "n   ");  result.append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(       "n       ");        result.append('n');    result.append( "n   ");  result.append('n');	  	compilable	  [FE]  ComparisonFailure  	26	1	add
63	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(     "n     ");    result.append('n');  result.append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(       "n       ");        result.append('n');    result.append('n');	  	compilable	  [FE]  ComparisonFailure  	26	1	add
64	[BUG]  [BUGGY]          result.append(     "n     ");    result.append('n');  result.append('n');  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(     "n     ");    result.append('n');  result.append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(       "n       ");        result.append('n');    result.append('n');	  	compilable	  [FE]  ComparisonFailure  	26	1	add
65	[BUG]  [BUGGY]          result.append(     "n     ");    result.append('n');  result.append( "n');  result.append('n');  [CE]  unclosed  string  literal  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(     "n     ");    result.append('n');  result.append( "n');  result.append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(       "n       ");        result.append('n');    result.append( "n');  result.append('n');	  	non-compiled	[CE]  unclosed  string  literal	26	None	add
66	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    result.append(str.substring(index  +  1));  result.append(str.substring(index  +  1));  result.append(str.substring(index  +  1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index        +        1));        result.append(str.substring(index    +    1));    result.append(str.substring(index  +  1));  result.append(str.substring(index  +  1));	  	compilable	  [FE]  ComparisonFailure  	108	1	add
67	[BUG]  [BUGGY]          result.append(str.substring(index    +    1));    result.append(str.substring(index  +  1));  result.append(str.substring(index  +  1));  result.append(str.substring(index  +  1));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    result.append(str.substring(index  +  1));  result.append(str.substring(index  +  1));  result.append(str.substring(index  +  1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index        +        1));        result.append(str.substring(index    +    1));    result.append(str.substring(index  +  1));  result.append(str.substring(index  +  1));	  	compilable	  [FE]  ComparisonFailure  	108	1	add
68	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index        +        1));        result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	108	1	add
69	[BUG]  [BUGGY]          result.append(str.substring(index    +    1));    result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  result.append(str.substring(index  +  1));  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index        +        1));        result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	108	1	add
70	[BUG]  [BUGGY]          result.append(str.substring(index    +    1));    result.append(str.substring(index  +  1));  Result.append(str.substring(index  +  1));  result.append(str.substring(index  +  1));  [CE]  cannot  find  symbol  Result  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    result.append(str.substring(index  +  1));  Result.append(str.substring(index  +  1));  result.append(str.substring(index  +  1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index        +        1));        result.append(str.substring(index    +    1));    Result.append(str.substring(index  +  1));  result.append(str.substring(index  +  1));	  	non-compiled	[CE]  cannot  find  symbol  Result	108	None	add
71	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  result.append(str.substring(index  +  1));  }  else  {  result.append( ", ");  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index        +        1));        result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  result.append(str.substring(index  +  1));  }  else  {  result.append( ", ");  }	  	compilable	  [FE]  ComparisonFailure  	108	1	add
72	[BUG]  [BUGGY]          result.append(str.substring(index    +    1));    result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  result.append(str.substring(index  +  1));  }  else  {  result.append( ", ");  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  result.append(str.substring(index  +  1));  }  else  {  result.append( ", ");  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index        +        1));        result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  result.append(str.substring(index  +  1));  }  else  {  result.append( ", ");  }	  	compilable	  [FE]  ComparisonFailure  	108	1	add
73	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(lower);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(lower);	          result.append(str.substring(0,    index));    if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(   ",   ");    }    	compilable	  [FE]  ComparisonFailure  	89	1	replace
74	[BUG]  [BUGGY]  result.append(lower);  [FE]  ComparisonFailure  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(lower);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(lower);	          result.append(str.substring(0,    index));    if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(   ",   ");    }    	compilable	  [FE]  ComparisonFailure  	89	1	replace
75	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    result.append(str.substring(index    +    1));    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	68	1	add
76	[BUG]  [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index  +  1));  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    result.append(str.substring(index    +    1));    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	68	1	add
77	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    result.append(str.substring(index    +    1));    }    result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	68	1	add
78	[BUG]  [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index  +  1));  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    result.append(str.substring(index    +    1));    }    result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	68	1	add
79	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  if(index!=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    result.append(str.substring(index    +    1));    }    result.append('n');  if(index!=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	68	1	add
80	[BUG]  [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  if(index!=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index  +  1));  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  if(index!=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    result.append(str.substring(index    +    1));    }    result.append('n');  if(index!=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	68	1	add
81	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    result.append(str.substring(index    +    1));    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	68	1	add
82	[BUG]  [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd  +  1));  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    result.append(str.substring(index    +    1));    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	68	1	add
83	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( "  }  n ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append( "  }  n ");	  result.append(   "    }       ");    	compilable	  [FE]  ComparisonFailure  	187	1	replace
84	[BUG]  [BUGGY]  result.append( "  }  n ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( "  }  n ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append( "  }  n ");	  result.append(   "    }       ");    	compilable	  [FE]  ComparisonFailure  	187	1	replace
85	[BUG]  [BUGGY]  result.append('  }  ');  [CE]  unclosed  character  literal  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('  }  ');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('  }  ');	  result.append(   "    }       ");    	non-compiled	[CE]  unclosed  character  literal	187	None	replace
86	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( "  }  :n ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append( "  }  :n ");	  result.append(   "    }       ");    	compilable	  [FE]  ComparisonFailure  	187	1	replace
87	[BUG]  [BUGGY]  result.append( "  }  :n ");  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( "  }  :n ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append( "  }  :n ");	  result.append(   "    }       ");    	compilable	  [FE]  ComparisonFailure  	187	1	replace
88	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  upper));  result.append(str.substring(index,  upper));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(index,    upper));    result.append(str.substring(index,  upper));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	118	1	add
89	[BUG]  [BUGGY]  result.append(str.substring(index,  upper));  result.append(str.substring(index,  upper));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  upper));  result.append(str.substring(index,  upper));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index,    upper));    result.append(str.substring(index,  upper));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	118	1	add
90	[BUG]  [BUGGY]  result.append(str.substring(index,  upper));  StringBuffer  result.append(str.substring(index,  upper));  [CE]  ';'  expected  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  upper));  StringBuffer  result.append(str.substring(index,  upper));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index,    upper));    StringBuffer  result.append(str.substring(index,  upper));	  	non-compiled	[CE]  ';'  expected	118	None	add
91	[BUG]  [BUGGY]  result.append(str.substring(index,  upper));  Result.append(str.substring(index,  upper));  [CE]  cannot  find  symbol  Result  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  upper));  Result.append(str.substring(index,  upper));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index,    upper));    Result.append(str.substring(index,  upper));	  	non-compiled	[CE]  cannot  find  symbol  Result	118	None	add
92	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    result.append(str.substring(index,  lower));  result.append(str.substring(index,  lower));  result.append(str.substring(index,  lower));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index,        lower));        result.append(str.substring(index,    lower));    result.append(str.substring(index,  lower));  result.append(str.substring(index,  lower));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	70	1	add
93	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    result.append(str.substring(index,  lower));  result.append(str.substring(index,  lower));  result.append(str.substring(index,  lower));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    result.append(str.substring(index,  lower));  result.append(str.substring(index,  lower));  result.append(str.substring(index,  lower));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        result.append(str.substring(index,    lower));    result.append(str.substring(index,  lower));  result.append(str.substring(index,  lower));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	70	1	add
94	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    result.append(str.substring(index,  lower));  result.append(str.substring(0,  lower));  result.append(str.substring(index,  lower));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index,        lower));        result.append(str.substring(index,    lower));    result.append(str.substring(0,  lower));  result.append(str.substring(index,  lower));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	70	1	add
95	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    result.append(str.substring(index,  lower));  result.append(str.substring(0,  lower));  result.append(str.substring(index,  lower));  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    result.append(str.substring(index,  lower));  result.append(str.substring(0,  lower));  result.append(str.substring(index,  lower));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        result.append(str.substring(index,    lower));    result.append(str.substring(0,  lower));  result.append(str.substring(index,  lower));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	70	1	add
96	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    result.append(str.substring(index,  lower));  Result.append(str.substring(index,  lower));  result.append(str.substring(index,  lower));  [CE]  cannot  find  symbol  Result  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    result.append(str.substring(index,  lower));  Result.append(str.substring(index,  lower));  result.append(str.substring(index,  lower));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        result.append(str.substring(index,    lower));    Result.append(str.substring(index,  lower));  result.append(str.substring(index,  lower));	  	non-compiled	[CE]  cannot  find  symbol  Result	70	None	add
97	[BUG]  [BUGGY]  result.append(''+upper);  [CE]  empty  character  literal  [FE]        ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(''+upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(''+upper);	  result.append(''+    lower);    	non-compiled	[CE]  empty  character  literal	182	None	replace
98	[BUG]  [BUGGY]  result.append(''+  lower  +  1);  [CE]  empty  character  literal  [FE]          ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(''+  lower  +  1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(''+  lower  +  1);	  result.append(''+    lower);    	non-compiled	[CE]  empty  character  literal	182	None	replace
99	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    result.append(str.substring(0,  index));  }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  }  [CE]  illegal  start  of  type  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    result.append(str.substring(0,  index));  }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        result.append(str.substring(0,    index));    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  }	  	non-compiled	[CE]  illegal  start  of  type	205	None	add
100	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    result.append(str.substring(0,  index));  }  else  if(index  <  upper)  {  result.append(StringUtils.defaultString(appendToEnd));  }  [CE]  illegal  start  of  type  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    result.append(str.substring(0,  index));  }  else  if(index  <  upper)  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        result.append(str.substring(0,    index));    }  else  if(index  <  upper)  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	non-compiled	[CE]  illegal  start  of  type	205	None	add
101	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    result.append(str.substring(0,  index));  }  else  if(index  <  lower)  {  result.append(str.substring(0,  index));  }  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    result.append(str.substring(0,  index));  }  else  if(index  <  lower)  {  result.append(str.substring(0,  index));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        result.append(str.substring(0,    index));    }  else  if(index  <  lower)  {  result.append(str.substring(0,  index));  }	  	non-compiled	[CE]  illegal  start  of  type	205	None	add
102	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    result.append(str.substring(0,  index));  }  else  if(index  <  upper)  {  result.append(StringUtils.defaultString(upper));  }  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    result.append(str.substring(0,  index));  }  else  if(index  <  upper)  {  result.append(StringUtils.defaultString(upper));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        result.append(str.substring(0,    index));    }  else  if(index  <  upper)  {  result.append(StringUtils.defaultString(upper));  }	  	non-compiled	[CE]  illegal  start  of  type	205	None	add
103	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    result.append(str.substring(0,  index));  }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        <        upper)        {        result.append(str.substring(0,    index));    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	205	1	add
104	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    result.append(str.substring(0,  index));  }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    result.append(str.substring(0,  index));  }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        result.append(str.substring(0,    index));    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	205	1	add
105	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  >=  lower)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index!=        upper)        {        }    else    if(index    >=    lower)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	54	1	add
106	[BUG]  [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  >=  lower)  {  }  else  if(index  >=  lower)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  >=  lower)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index!=        upper)        {        }    else    if(index    >=    lower)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	54	1	add
107	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  >=  lower)  {  }  else  if(index  >=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index!=        upper)        {        }    else    if(index    >=    lower)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	54	1	add
108	[BUG]  [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  >=  lower)  {  }  else  if(index  >=  upper)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  >=  lower)  {  }  else  if(index  >=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index!=        upper)        {        }    else    if(index    >=    lower)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	54	1	add
109	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  >=  lower)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index!=        upper)        {        }    else    if(index    >=    lower)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	54	1	add
110	[BUG]  [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  >=  lower)  {  }  else  if(index  ==  lower)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  >=  lower)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index!=        upper)        {        }    else    if(index    >=    lower)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	54	1	add
111	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  >=  lower)  {  }  else  if(index!=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index!=        upper)        {        }    else    if(index    >=    lower)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	54	1	add
112	[BUG]  [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  >=  lower)  {  }  else  if(index!=  lower)  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  >=  lower)  {  }  else  if(index!=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index!=        upper)        {        }    else    if(index    >=    lower)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	54	1	add
113	[BUG]  [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  >=  lower)  {  }  else  if(index  >>  lower)  {  [CE]  incompatible  types  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  >=  lower)  {  }  else  if(index  >>  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index!=        upper)        {        }    else    if(index    >=    lower)    {    }  else  if(index  >>  lower)  {	  	non-compiled	[CE]  incompatible  types	54	None	add
114	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  <  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        <        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index  <  upper)  {	  	compilable	  [FE]  ComparisonFailure  	100	1	add
115	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  <  upper)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  <  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index  <  upper)  {	  	compilable	  [FE]  ComparisonFailure  	100	1	add
116	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        <        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	100	1	add
117	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >=  upper)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	100	1	add
118	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  <  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        <        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index  <  lower)  {	  	compilable	  [FE]  ComparisonFailure  	100	1	add
119	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  <  lower)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  <  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index  <  lower)  {	  	compilable	  [FE]  ComparisonFailure  	100	1	add
120	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        <        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	100	1	add
121	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >=  lower)  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	100	1	add
122	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        <        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index  >  upper)  {	  	compilable	  [FE]  ComparisonFailure  	100	1	add
123	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >  upper)  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index  >  upper)  {	  	compilable	  [FE]  ComparisonFailure  	100	1	add
124	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(index,  lower));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(index,  lower));  }	          result.append(str.substring(index,    lower));    StringBuffer    result.append(str.substring(index,    lower));    	compilable	  [FE]  StringIndexOutOfBoundsException  	72	1	replace
125	[BUG]  [BUGGY]  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(index,  lower));  }  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(index,  lower));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(index,  lower));  }	          result.append(str.substring(index,    lower));    StringBuffer    result.append(str.substring(index,    lower));    	compilable	  [FE]  StringIndexOutOfBoundsException  	72	1	replace
126	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  if(index  >=  -1)  {  result.append(str.substring(0,  index));  result.append(str.substring(index,  lower));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	if(index  >=  -1)  {  result.append(str.substring(0,  index));  result.append(str.substring(index,  lower));  }	          result.append(str.substring(index,    lower));    StringBuffer    result.append(str.substring(index,    lower));    	compilable	  [FE]  StringIndexOutOfBoundsException  	72	1	replace
127	[BUG]  [BUGGY]  if(index  >=  -1)  {  result.append(str.substring(0,  index));  result.append(str.substring(index,  lower));  }  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  if(index  >=  -1)  {  result.append(str.substring(0,  index));  result.append(str.substring(index,  lower));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	if(index  >=  -1)  {  result.append(str.substring(0,  index));  result.append(str.substring(index,  lower));  }	          result.append(str.substring(index,    lower));    StringBuffer    result.append(str.substring(index,    lower));    	compilable	  [FE]  StringIndexOutOfBoundsException  	72	1	replace
128	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(index,  lower  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(index,  lower  +  1));  }	          result.append(str.substring(index,    lower));    StringBuffer    result.append(str.substring(index,    lower));    	compilable	  [FE]  StringIndexOutOfBoundsException  	72	1	replace
129	[BUG]  [BUGGY]  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(index,  lower  +  1));  }  [FE]  StringIndexOutOfBoundsException  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(index,  lower  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(index,  lower  +  1));  }	          result.append(str.substring(index,    lower));    StringBuffer    result.append(str.substring(index,    lower));    	compilable	  [FE]  StringIndexOutOfBoundsException  	72	1	replace
130	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(lower),  lower);  [CE]  no  suitable  method  found  for  defaultString(int)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(StringUtils.defaultString(lower),  lower);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(StringUtils.defaultString(lower),  lower);	  result.append(StringUtils.defaultString(upper),    lower);    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int)	189	None	replace
131	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(lower),  top);  [CE]  no  suitable  method  found  for  defaultString(int)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(StringUtils.defaultString(lower),  top);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(StringUtils.defaultString(lower),  top);	  result.append(StringUtils.defaultString(upper),    lower);    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int)	189	None	replace
132	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index!=  lower)  {  }  else  if(index!=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index!=    lower)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	129	1	add
133	[BUG]  [BUGGY]  }  else  if(index!=  lower)  {  }  else  if(index!=  lower)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index!=  lower)  {  }  else  if(index!=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index!=    lower)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	129	1	add
134	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index!=  lower)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index!=    lower)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	129	1	add
135	[BUG]  [BUGGY]  }  else  if(index!=  lower)  {  }  else  if(index  >=  lower)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index!=  lower)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index!=    lower)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	129	1	add
136	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index!=  lower)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index!=    lower)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	129	1	add
137	[BUG]  [BUGGY]  }  else  if(index!=  lower)  {  }  else  if(index  ==  lower)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index!=  lower)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index!=    lower)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	129	1	add
138	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index!=  lower)  {  }  else  if(index!=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index!=    lower)    {    }  else  if(index!=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	129	1	add
139	[BUG]  [BUGGY]  }  else  if(index!=  lower)  {  }  else  if(index!=  upper)  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index!=  lower)  {  }  else  if(index!=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index!=    lower)    {    }  else  if(index!=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	129	1	add
140	[BUG]  [BUGGY]  }  else  if(index!=  lower)  {  }  else  if(index  >>  lower)  {  [CE]  incompatible  types  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index!=  lower)  {  }  else  if(index  >>  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index!=    lower)    {    }  else  if(index  >>  lower)  {	  	non-compiled	[CE]  incompatible  types	129	None	add
141	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(str.substring(0,    index));    }    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
142	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(str.substring(0,    index));    }    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
143	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(str.substring(0,    index));    }    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	82	1	add
144	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(str.substring(0,    index));    }    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	82	1	add
145	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }  result.append(str.substring(0,  index));  if(index!=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }  result.append(str.substring(0,  index));  if(index!=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(str.substring(0,    index));    }    result.append(str.substring(0,  index));  if(index!=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
146	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(str.substring(0,    index));    }    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	82	1	add
147	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(str.substring(0,    index));    }    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	82	1	add
148	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  lower));  result.append('  ');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  lower));  result.append('  ');  }	          result.append('    ');    if(index    >=    -1)    {    result.append('    ');    }    else    {    result.append(str.substring(index,    lower));    result.append('    ');    }    	compilable	  [FE]  ComparisonFailure  	157	1	replace
149	[BUG]  [BUGGY]  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  lower));  result.append('  ');  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  lower));  result.append('  ');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  lower));  result.append('  ');  }	          result.append('    ');    if(index    >=    -1)    {    result.append('    ');    }    else    {    result.append(str.substring(index,    lower));    result.append('    ');    }    	compilable	  [FE]  ComparisonFailure  	157	1	replace
150	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(index,  lower));  result.append('  ');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(index,  lower));  result.append('  ');  }	          result.append('    ');    if(index    >=    -1)    {    result.append('    ');    }    else    {    result.append(str.substring(index,    lower));    result.append('    ');    }    	compilable	  [FE]  ComparisonFailure  	157	1	replace
151	[BUG]  [BUGGY]  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(index,  lower));  result.append('  ');  }  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(index,  lower));  result.append('  ');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(index,  lower));  result.append('  ');  }	          result.append('    ');    if(index    >=    -1)    {    result.append('    ');    }    else    {    result.append(str.substring(index,    lower));    result.append('    ');    }    	compilable	  [FE]  ComparisonFailure  	157	1	replace
152	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    lower));    result.append(str.substring(0,  index));	  	compilable	  [FE]  ComparisonFailure  	207	1	add
153	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  result.append(str.substring(0,  index));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    lower));    result.append(str.substring(0,  index));	  	compilable	  [FE]  ComparisonFailure  	207	1	add
154	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  result.append(str.substring(0,  lower));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    lower));    result.append(str.substring(0,  lower));	  	compilable	  [FE]  ComparisonFailure  	207	1	add
155	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  result.append(str.substring(0,  lower));  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  result.append(str.substring(0,  lower));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    lower));    result.append(str.substring(0,  lower));	  	compilable	  [FE]  ComparisonFailure  	207	1	add
156	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    lower));    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));	  	compilable	  [FE]  ComparisonFailure  	207	1	add
157	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    lower));    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));	  	compilable	  [FE]  ComparisonFailure  	207	1	add
158	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  }  else  if(index  <  lower)  {  result.append(str.substring(0,  lower));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    lower));    }  else  if(index  <  lower)  {  result.append(str.substring(0,  lower));	  	compilable	  [FE]  ComparisonFailure  	207	1	add
159	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  }  else  if(index  <  lower)  {  result.append(str.substring(0,  lower));  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  }  else  if(index  <  lower)  {  result.append(str.substring(0,  lower));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    lower));    }  else  if(index  <  lower)  {  result.append(str.substring(0,  lower));	  	compilable	  [FE]  ComparisonFailure  	207	1	add
160	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(upper));  [CE]  no  suitable  method  found  for  defaultString(int)  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(upper));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    lower));    result.append(StringUtils.defaultString(upper));	  	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int)	207	None	add
161	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(0,        index));        result.append(str.substring(0,    index));    result.append(str.substring(0,  index));  result.append(str.substring(0,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	80	1	add
162	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        result.append(str.substring(0,    index));    result.append(str.substring(0,  index));  result.append(str.substring(0,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	80	1	add
163	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(0,        index));        result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	80	1	add
164	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	80	1	add
165	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    result.append(str.substring(0,  index));  Result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  [CE]  cannot  find  symbol  Result  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    result.append(str.substring(0,  index));  Result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        result.append(str.substring(0,    index));    Result.append(str.substring(0,  index));  result.append(str.substring(0,  index));	  	non-compiled	[CE]  cannot  find  symbol  Result	80	None	add
166	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(0,        index));        result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	80	1	add
167	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	80	1	add
168	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(0,        index));        result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	80	1	add
169	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	80	1	add
170	[BUG]  [BUGGY]  }  else  if(index  >>  lower)  {  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >>  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  >>  lower)  {	  }    else    if(index    >=    lower)    {    }    else    if(index    >>    lower)    {    	non-compiled	[CE]  incompatible  types	38	None	replace
171	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index        +        1));        if(index    <    0)    {    result.append(str.substring(index    +    1));    }    else    {    result.append(str.substring(index    +    1));    }    result.append(str.substring(index  +  1));  if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	110	1	add
172	[BUG]  [BUGGY]          result.append(str.substring(index    +    1));    if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index        +        1));        if(index    <    0)    {    result.append(str.substring(index    +    1));    }    else    {    result.append(str.substring(index    +    1));    }    result.append(str.substring(index  +  1));  if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	110	1	add
173	[BUG]  [BUGGY]          result.append(str.substring(index    +    1));    if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index        +        1));        if(index    <    0)    {    result.append(str.substring(index    +    1));    }    else    {    result.append(str.substring(index    +    1));    }    result.append(str.substring(index  +  1));  if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(	  	non-compiled	[CE]  illegal  start  of  expression	110	None	add
174	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index        +        1));        if(index    <    0)    {    result.append(str.substring(index    +    1));    }    else    {    result.append(str.substring(index    +    1));    }    result.append(str.substring(index  +  1));  if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  ComparisonFailure  	110	1	add
175	[BUG]  [BUGGY]          result.append(str.substring(index    +    1));    if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index        +        1));        if(index    <    0)    {    result.append(str.substring(index    +    1));    }    else    {    result.append(str.substring(index    +    1));    }    result.append(str.substring(index  +  1));  if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  ComparisonFailure  	110	1	add
176	[BUG]  [BUGGY]          result.append(str.substring(index    +    1));    if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index        +        1));        if(index    <    0)    {    result.append(str.substring(index    +    1));    }    else    {    result.append(str.substring(index    +    1));    }    result.append(str.substring(index  +  1));  if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring	  	non-compiled	[CE]  ')'  expected	110	None	add
177	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(   "n   ");  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append( "n   ");  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(   "n   ");    }    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append( "n   ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	171	1	add
178	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(   "n   ");  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append( "n   ");  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(   "n   ");  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append( "n   ");  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(   "n   ");    }    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append( "n   ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	171	1	add
179	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(   "n   ");  }  result.append(str.substring(0,  index));  if(index!=  -1)  {  result.append( "n   ");  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(   "n   ");    }    result.append(str.substring(0,  index));  if(index!=  -1)  {  result.append( "n   ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	171	1	add
180	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(   "n   ");  }  result.append(str.substring(0,  index));  if(index!=  -1)  {  result.append( "n   ");  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(   "n   ");  }  result.append(str.substring(0,  index));  if(index!=  -1)  {  result.append( "n   ");  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(   "n   ");    }    result.append(str.substring(0,  index));  if(index!=  -1)  {  result.append( "n   ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	171	1	add
181	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(   "n   ");  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append( "n   ");  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(   "n   ");    }    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append( "n   ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	171	1	add
182	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(   "n   ");  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append( "n   ");  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(   "n   ");  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append( "n   ");  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(   "n   ");    }    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append( "n   ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	171	1	add
183	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(   "n   ");  }  result.append( "n   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(   "n   ");    }    result.append( "n   ");	  	compilable	  [FE]  StringIndexOutOfBoundsException  	171	1	add
184	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(   "n   ");  }  result.append( "n   ");  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(   "n   ");  }  result.append( "n   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(   "n   ");    }    result.append( "n   ");	  	compilable	  [FE]  StringIndexOutOfBoundsException  	171	1	add
185	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        upper)        {        }    else    if(index    ==    upper)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	125	1	add
186	[BUG]  [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  ==  lower)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        upper)        {        }    else    if(index    ==    upper)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	125	1	add
187	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        upper)        {        }    else    if(index    ==    upper)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	125	1	add
188	[BUG]  [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  >=  lower)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        upper)        {        }    else    if(index    ==    upper)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	125	1	add
189	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index!=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        upper)        {        }    else    if(index    ==    upper)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	125	1	add
190	[BUG]  [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index!=  lower)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index!=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        upper)        {        }    else    if(index    ==    upper)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	125	1	add
191	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  ==  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        upper)        {        }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {	  	compilable	  [FE]  ComparisonFailure  	125	1	add
192	[BUG]  [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  ==  upper)  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  ==  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        upper)        {        }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {	  	compilable	  [FE]  ComparisonFailure  	125	1	add
193	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  <  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        upper)        {        }    else    if(index    ==    upper)    {    }  else  if(index  <  lower)  {	  	compilable	  [FE]  ComparisonFailure  	125	1	add
194	[BUG]  [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  <  lower)  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  <  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        upper)        {        }    else    if(index    ==    upper)    {    }  else  if(index  <  lower)  {	  	compilable	  [FE]  ComparisonFailure  	125	1	add
195	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index!=  -1)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}  else  if(index!=  -1)  {	  }    else    if(index    >=    -1)    {    	compilable	  [FE]  ComparisonFailure  	214	1	replace
196	[BUG]  [BUGGY]  }  else  if(index!=  -1)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index!=  -1)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index!=  -1)  {	  }    else    if(index    >=    -1)    {    	compilable	  [FE]  ComparisonFailure  	214	1	replace
197	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(index  +  1));  result.append('  ');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(index  +  1));  result.append('  ');  }	          result.append('    ');    if(index    >=    -1)    {    result.append('    ');    }    else    {    result.append(str.substring(index    +    1));    result.append('    ');    }    	compilable	  [FE]  ComparisonFailure  	158	1	replace
198	[BUG]  [BUGGY]  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(index  +  1));  result.append('  ');  }  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(index  +  1));  result.append('  ');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(index  +  1));  result.append('  ');  }	          result.append('    ');    if(index    >=    -1)    {    result.append('    ');    }    else    {    result.append(str.substring(index    +    1));    result.append('    ');    }    	compilable	  [FE]  ComparisonFailure  	158	1	replace
199	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(index  +  1,  lower));  result.append('  ');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(index  +  1,  lower));  result.append('  ');  }	          result.append('    ');    if(index    >=    -1)    {    result.append('    ');    }    else    {    result.append(str.substring(index    +    1));    result.append('    ');    }    	compilable	  [FE]  ComparisonFailure  	158	1	replace
200	[BUG]  [BUGGY]  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(index  +  1,  lower));  result.append('  ');  }  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(index  +  1,  lower));  result.append('  ');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(index  +  1,  lower));  result.append('  ');  }	          result.append('    ');    if(index    >=    -1)    {    result.append('    ');    }    else    {    result.append(str.substring(index    +    1));    result.append('    ');    }    	compilable	  [FE]  ComparisonFailure  	158	1	replace
201	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        ==        upper)        {        }    else    if(index!=    upper)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	12	1	add
202	[BUG]  [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index  ==  lower)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        ==        upper)        {        }    else    if(index!=    upper)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	12	1	add
203	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        ==        upper)        {        }    else    if(index!=    upper)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	12	1	add
204	[BUG]  [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index  >=  lower)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        ==        upper)        {        }    else    if(index!=    upper)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	12	1	add
205	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index  ==  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        ==        upper)        {        }    else    if(index!=    upper)    {    }  else  if(index  ==  upper)  {	  	compilable	  [FE]  ComparisonFailure  	12	1	add
206	[BUG]  [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index  ==  upper)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index  ==  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        ==        upper)        {        }    else    if(index!=    upper)    {    }  else  if(index  ==  upper)  {	  	compilable	  [FE]  ComparisonFailure  	12	1	add
207	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index  >=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        ==        upper)        {        }    else    if(index!=    upper)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	12	1	add
208	[BUG]  [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index  >=  upper)  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index  >=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        ==        upper)        {        }    else    if(index!=    upper)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	12	1	add
209	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index!=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        ==        upper)        {        }    else    if(index!=    upper)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	12	1	add
210	[BUG]  [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index!=  lower)  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index!=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        ==        upper)        {        }    else    if(index!=    upper)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	12	1	add
211	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index,  lower));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index,  lower));  result.append('n');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(index,    lower));    result.append('n');    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index,  lower));  result.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	238	1	add
212	[BUG]  [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index,  lower));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index,  lower));  result.append('n');  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index,  lower));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index,  lower));  result.append('n');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(index,    lower));    result.append('n');    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index,  lower));  result.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	238	1	add
213	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index,  lower));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('n');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(index,    lower));    result.append('n');    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	238	1	add
214	[BUG]  [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index,  lower));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('n');  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index,  lower));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('n');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(index,    lower));    result.append('n');    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	238	1	add
215	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index,  lower));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(index,    lower));    result.append('n');    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  ComparisonFailure  	238	1	add
216	[BUG]  [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index,  lower));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index,  lower));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(index,    lower));    result.append('n');    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  ComparisonFailure  	238	1	add
217	[BUG]  [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index,  lower));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('  [CE]  illegal  line  end  in  character  literal  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index,  lower));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(index,    lower));    result.append('n');    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('	  	non-compiled	[CE]  illegal  line  end  in  character  literal	238	None	add
218	[BUG]  [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index,  lower));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index,  lower));  result.append('  [CE]  illegal  line  end  in  character  literal  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index,  lower));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index,  lower));  result.append('  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(index,    lower));    result.append('n');    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index,  lower));  result.append('	  	non-compiled	[CE]  illegal  line  end  in  character  literal	238	None	add
219	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  lower  &&  index  <  str.length())  {  }  else  if(index  >=  lower  &&  index  <  str.length())  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    >=    lower    &&    index    <    str.length())    {    }  else  if(index  >=  lower  &&  index  <  str.length())  {	  	compilable	  [FE]  ComparisonFailure  	144	1	add
220	[BUG]  [BUGGY]  }  else  if(index  >=  lower  &&  index  <  str.length())  {  }  else  if(index  >=  lower  &&  index  <  str.length())  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  lower  &&  index  <  str.length())  {  }  else  if(index  >=  lower  &&  index  <  str.length())  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    >=    lower    &&    index    <    str.length())    {    }  else  if(index  >=  lower  &&  index  <  str.length())  {	  	compilable	  [FE]  ComparisonFailure  	144	1	add
221	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  lower  &&  index  <  str.length())  {  }  else  if(index!=  lower  &&  index  <  str.length())  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    >=    lower    &&    index    <    str.length())    {    }  else  if(index!=  lower  &&  index  <  str.length())  {	  	compilable	  [FE]  ComparisonFailure  	144	1	add
222	[BUG]  [BUGGY]  }  else  if(index  >=  lower  &&  index  <  str.length())  {  }  else  if(index!=  lower  &&  index  <  str.length())  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  lower  &&  index  <  str.length())  {  }  else  if(index!=  lower  &&  index  <  str.length())  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    >=    lower    &&    index    <    str.length())    {    }  else  if(index!=  lower  &&  index  <  str.length())  {	  	compilable	  [FE]  ComparisonFailure  	144	1	add
223	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  lower  &&  index  <  str.length())  {  }  else  if(index  ==  lower  &&  index  <  str.length())  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    >=    lower    &&    index    <    str.length())    {    }  else  if(index  ==  lower  &&  index  <  str.length())  {	  	compilable	  [FE]  ComparisonFailure  	144	1	add
224	[BUG]  [BUGGY]  }  else  if(index  >=  lower  &&  index  <  str.length())  {  }  else  if(index  ==  lower  &&  index  <  str.length())  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  lower  &&  index  <  str.length())  {  }  else  if(index  ==  lower  &&  index  <  str.length())  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    >=    lower    &&    index    <    str.length())    {    }  else  if(index  ==  lower  &&  index  <  str.length())  {	  	compilable	  [FE]  ComparisonFailure  	144	1	add
225	[BUG]  [BUGGY]  }  else  if(index  >=  lower  &&  index  <  str.length())  {  }  else  if(index  >>  lower  &&  index  <  str.length())  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  lower  &&  index  <  str.length())  {  }  else  if(index  >>  lower  &&  index  <  str.length())  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    >=    lower    &&    index    <    str.length())    {    }  else  if(index  >>  lower  &&  index  <  str.length())  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	144	None	add
226	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  lower  &&  index  <  str.length())  {  }  else  if(index  >=  upper  &&  index  <  str.length())  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    >=    lower    &&    index    <    str.length())    {    }  else  if(index  >=  upper  &&  index  <  str.length())  {	  	compilable	  [FE]  ComparisonFailure  	144	1	add
227	[BUG]  [BUGGY]  }  else  if(index  >=  lower  &&  index  <  str.length())  {  }  else  if(index  >=  upper  &&  index  <  str.length())  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  lower  &&  index  <  str.length())  {  }  else  if(index  >=  upper  &&  index  <  str.length())  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    >=    lower    &&    index    <    str.length())    {    }  else  if(index  >=  upper  &&  index  <  str.length())  {	  	compilable	  [FE]  ComparisonFailure  	144	1	add
228	[BUG]  [BUGGY]  }  else  if(index  ==  lower)  {  result.append(str.substring(0,  index),  lower);  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  lower)  {  result.append(str.substring(0,  index),  lower);  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  ==  lower)  {  result.append(str.substring(0,  index),  lower);  }	  }    else    if(index    ==    upper)    {    result.append(str.substring(0,    index),    lower);    	non-compiled	[CE]  illegal  start  of  type	161	None	replace
229	[BUG]  [BUGGY]  }  else  if(index  ==  lower)  {  result.append(str.substring(0,  index),  upper);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  lower)  {  result.append(str.substring(0,  index),  upper);  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  ==  lower)  {  result.append(str.substring(0,  index),  upper);  }	  }    else    if(index    ==    upper)    {    result.append(str.substring(0,    index),    lower);    	non-compiled	[CE]  illegal  start  of  type	161	None	replace
230	[BUG]  [BUGGY]  }  else  if(index  >=  lower)  {  result.append(str.substring(0,  index),  lower);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  lower)  {  result.append(str.substring(0,  index),  lower);  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  >=  lower)  {  result.append(str.substring(0,  index),  lower);  }	  }    else    if(index    ==    upper)    {    result.append(str.substring(0,    index),    lower);    	non-compiled	[CE]  illegal  start  of  type	161	None	replace
231	[BUG]  [BUGGY]  }  else  if(index  >=  lower)  {  result.append(str.substring(0,  index),  upper);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  lower)  {  result.append(str.substring(0,  index),  upper);  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  >=  lower)  {  result.append(str.substring(0,  index),  upper);  }	  }    else    if(index    ==    upper)    {    result.append(str.substring(0,    index),    lower);    	non-compiled	[CE]  illegal  start  of  type	161	None	replace
232	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  lower)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    ==    lower)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	16	1	add
233	[BUG]  [BUGGY]  }  else  if(index  ==  lower)  {  }  else  if(index  ==  lower)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  lower)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    ==    lower)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	16	1	add
234	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  lower)  {  }  else  if(index  ==  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    ==    lower)    {    }  else  if(index  ==  upper)  {	  	compilable	  [FE]  ComparisonFailure  	16	1	add
235	[BUG]  [BUGGY]  }  else  if(index  ==  lower)  {  }  else  if(index  ==  upper)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  lower)  {  }  else  if(index  ==  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    ==    lower)    {    }  else  if(index  ==  upper)  {	  	compilable	  [FE]  ComparisonFailure  	16	1	add
236	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  lower)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    ==    lower)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	16	1	add
237	[BUG]  [BUGGY]  }  else  if(index  ==  lower)  {  }  else  if(index  >=  lower)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  lower)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    ==    lower)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	16	1	add
238	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  lower)  {  }  else  if(index!=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    ==    lower)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	16	1	add
239	[BUG]  [BUGGY]  }  else  if(index  ==  lower)  {  }  else  if(index!=  lower)  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  lower)  {  }  else  if(index!=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    ==    lower)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	16	1	add
240	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  ==  lower)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        lower)        {        }    else    if(index    ==    lower)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	36	1	add
241	[BUG]  [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  ==  lower)  {  }  else  if(index  ==  lower)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  ==  lower)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        lower)        {        }    else    if(index    ==    lower)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	36	1	add
242	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  ==  lower)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        lower)        {        }    else    if(index    ==    lower)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	36	1	add
243	[BUG]  [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  ==  lower)  {  }  else  if(index  >=  lower)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  ==  lower)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        lower)        {        }    else    if(index    ==    lower)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	36	1	add
244	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  ==  lower)  {  }  else  if(index  >=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        lower)        {        }    else    if(index    ==    lower)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	36	1	add
245	[BUG]  [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  ==  lower)  {  }  else  if(index  >=  upper)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  ==  lower)  {  }  else  if(index  >=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        lower)        {        }    else    if(index    ==    lower)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	36	1	add
246	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  ==  lower)  {  }  else  if(index  ==  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        lower)        {        }    else    if(index    ==    lower)    {    }  else  if(index  ==  upper)  {	  	compilable	  [FE]  ComparisonFailure  	36	1	add
247	[BUG]  [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  ==  lower)  {  }  else  if(index  ==  upper)  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  ==  lower)  {  }  else  if(index  ==  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        lower)        {        }    else    if(index    ==    lower)    {    }  else  if(index  ==  upper)  {	  	compilable	  [FE]  ComparisonFailure  	36	1	add
248	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  ==  lower)  {  }  else  if(index!=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        lower)        {        }    else    if(index    ==    lower)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	36	1	add
249	[BUG]  [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  ==  lower)  {  }  else  if(index!=  lower)  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  ==  lower)  {  }  else  if(index!=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        lower)        {        }    else    if(index    ==    lower)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	36	1	add
250	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('N');  result.append('N');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('N');    result.append('N');	  	compilable	  [FE]  ComparisonFailure  	106	1	add
251	[BUG]  [BUGGY]  result.append('N');  result.append('N');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('N');  result.append('N');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('N');    result.append('N');	  	compilable	  [FE]  ComparisonFailure  	106	1	add
252	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('N');  if(index  ==  -1)  {  result.append('N');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('N');    if(index  ==  -1)  {  result.append('N');  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  ComparisonFailure  	106	1	add
253	[BUG]  [BUGGY]  result.append('N');  if(index  ==  -1)  {  result.append('N');  }  else  {  result.append(str.substring(0,  index));  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('N');  if(index  ==  -1)  {  result.append('N');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('N');    if(index  ==  -1)  {  result.append('N');  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  ComparisonFailure  	106	1	add
254	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('N');  if(index  >=  -1)  {  result.append('N');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('N');    if(index  >=  -1)  {  result.append('N');  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  ComparisonFailure  	106	1	add
255	[BUG]  [BUGGY]  result.append('N');  if(index  >=  -1)  {  result.append('N');  }  else  {  result.append(str.substring(0,  index));  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('N');  if(index  >=  -1)  {  result.append('N');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('N');    if(index  >=  -1)  {  result.append('N');  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  ComparisonFailure  	106	1	add
256	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('N');  if(index  >=  -1)  {  result.append('N');  }  else  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('N');    if(index  >=  -1)  {  result.append('N');  }  else  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	106	1	add
257	[BUG]  [BUGGY]  result.append('N');  if(index  >=  -1)  {  result.append('N');  }  else  {  result.append(str.substring(index  +  1));  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('N');  if(index  >=  -1)  {  result.append('N');  }  else  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('N');    if(index  >=  -1)  {  result.append('N');  }  else  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	106	1	add
258	[BUG]  [BUGGY]  result.append('N');  if(index  >=  -1)  {  result.append('N');  }  else  {  result.append(str.substring(0,  index),  lower);  }  [CE]  no  suitable  method  found  for  append(String,int)  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('N');  if(index  >=  -1)  {  result.append('N');  }  else  {  result.append(str.substring(0,  index),  lower);  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('N');    if(index  >=  -1)  {  result.append('N');  }  else  {  result.append(str.substring(0,  index),  lower);  }	  	non-compiled	[CE]  no  suitable  method  found  for  append(String,int)	106	None	add
259	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index!=        upper)        {        }    else    if(index!=    upper)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	46	1	add
260	[BUG]  [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index  >=  lower)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index!=        upper)        {        }    else    if(index!=    upper)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	46	1	add
261	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index!=        upper)        {        }    else    if(index!=    upper)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	46	1	add
262	[BUG]  [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index  ==  lower)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index!=        upper)        {        }    else    if(index!=    upper)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	46	1	add
263	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index  >=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index!=        upper)        {        }    else    if(index!=    upper)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	46	1	add
264	[BUG]  [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index  >=  upper)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index  >=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index!=        upper)        {        }    else    if(index!=    upper)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	46	1	add
265	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index!=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index!=        upper)        {        }    else    if(index!=    upper)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	46	1	add
266	[BUG]  [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index!=  lower)  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index!=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index!=        upper)        {        }    else    if(index!=    upper)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	46	1	add
267	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index  ==  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index!=        upper)        {        }    else    if(index!=    upper)    {    }  else  if(index  ==  upper)  {	  	compilable	  [FE]  ComparisonFailure  	46	1	add
268	[BUG]  [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index  ==  upper)  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index  ==  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index!=        upper)        {        }    else    if(index!=    upper)    {    }  else  if(index  ==  upper)  {	  	compilable	  [FE]  ComparisonFailure  	46	1	add
269	[BUG]  [BUGGY]  }  else  if(index  >=  0)  {  result.append(str.substring(0,  index));  }  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  0)  {  result.append(str.substring(0,  index));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  >=  0)  {  result.append(str.substring(0,  index));  }	  }    else    if(index    >    0)    {    result.append(str.substring(0,    index));    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
270	[BUG]  [BUGGY]  }  else  if(index  <  0)  {  result.append(str.substring(0,  index));  }  [CE]  illegal  start  of  type  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  <  0)  {  result.append(str.substring(0,  index));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  <  0)  {  result.append(str.substring(0,  index));  }	  }    else    if(index    >    0)    {    result.append(str.substring(0,    index));    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
271	[BUG]  [BUGGY]  }  else  if(index  ==  0)  {  result.append(str.substring(0,  index));  }  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  0)  {  result.append(str.substring(0,  index));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  ==  0)  {  result.append(str.substring(0,  index));  }	  }    else    if(index    >    0)    {    result.append(str.substring(0,    index));    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
272	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index!=  0)  {  }  else  if(index!=  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index!=    0)    {    }  else  if(index!=  0)  {	  	compilable	  [FE]  ComparisonFailure  	58	1	add
273	[BUG]  [BUGGY]  }  else  if(index!=  0)  {  }  else  if(index!=  0)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index!=  0)  {  }  else  if(index!=  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index!=    0)    {    }  else  if(index!=  0)  {	  	compilable	  [FE]  ComparisonFailure  	58	1	add
274	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index!=  0)  {  }  else  if(index  >=  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index!=    0)    {    }  else  if(index  >=  0)  {	  	compilable	  [FE]  ComparisonFailure  	58	1	add
275	[BUG]  [BUGGY]  }  else  if(index!=  0)  {  }  else  if(index  >=  0)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index!=  0)  {  }  else  if(index  >=  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index!=    0)    {    }  else  if(index  >=  0)  {	  	compilable	  [FE]  ComparisonFailure  	58	1	add
276	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index!=  0)  {  }  else  if(index  ==  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index!=    0)    {    }  else  if(index  ==  0)  {	  	compilable	  [FE]  ComparisonFailure  	58	1	add
277	[BUG]  [BUGGY]  }  else  if(index!=  0)  {  }  else  if(index  ==  0)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index!=  0)  {  }  else  if(index  ==  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index!=    0)    {    }  else  if(index  ==  0)  {	  	compilable	  [FE]  ComparisonFailure  	58	1	add
278	[BUG]  [BUGGY]  }  else  if(index!=  0)  {  }  else  if(index  >>  0)  {  [CE]  incompatible  types  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index!=  0)  {  }  else  if(index  >>  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index!=    0)    {    }  else  if(index  >>  0)  {	  	non-compiled	[CE]  incompatible  types	58	None	add
279	[BUG]  [BUGGY]  }  else  if(index!=  0)  {  }  else  if(index  [BUGGY]  0)  {  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index!=  0)  {  }  else  if(index  [BUGGY]  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index!=    0)    {    }  else  if(index  [BUGGY]  0)  {	  	non-compiled	[CE]  ')'  expected	58	None	add
280	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  lower,  upper);  result.append(str.substring(0,  index),  lower,  upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,    index),    lower,    upper);    result.append(str.substring(0,  index),  lower,  upper);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	90	1	add
281	[BUG]  [BUGGY]  result.append(str.substring(0,  index),  lower,  upper);  result.append(str.substring(0,  index),  lower,  upper);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  lower,  upper);  result.append(str.substring(0,  index),  lower,  upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index),    lower,    upper);    result.append(str.substring(0,  index),  lower,  upper);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	90	1	add
282	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  lower,  upper);  if(index  >=  -1)  {  result.append(str.substring(0,  index),  lower,  upper);  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,    index),    lower,    upper);    if(index  >=  -1)  {  result.append(str.substring(0,  index),  lower,  upper);  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	90	1	add
283	[BUG]  [BUGGY]  result.append(str.substring(0,  index),  lower,  upper);  if(index  >=  -1)  {  result.append(str.substring(0,  index),  lower,  upper);  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  lower,  upper);  if(index  >=  -1)  {  result.append(str.substring(0,  index),  lower,  upper);  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index),    lower,    upper);    if(index  >=  -1)  {  result.append(str.substring(0,  index),  lower,  upper);  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	90	1	add
284	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  lower,  upper);  if(index  >=  -1)  {  result.append(str.substring(0,  index),  lower,  upper);  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,    index),    lower,    upper);    if(index  >=  -1)  {  result.append(str.substring(0,  index),  lower,  upper);  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	90	1	add
285	[BUG]  [BUGGY]  result.append(str.substring(0,  index),  lower,  upper);  if(index  >=  -1)  {  result.append(str.substring(0,  index),  lower,  upper);  }  else  {  result.append(str.substring(0,  index));  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  lower,  upper);  if(index  >=  -1)  {  result.append(str.substring(0,  index),  lower,  upper);  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index),    lower,    upper);    if(index  >=  -1)  {  result.append(str.substring(0,  index),  lower,  upper);  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	90	1	add
286	[BUG]  [BUGGY]  result.append(str.substring(0,  index),  lower,  upper);  StringBuffer  result.append(str.substring(0,  index),  lower,  upper);  [CE]  ';'  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  lower,  upper);  StringBuffer  result.append(str.substring(0,  index),  lower,  upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index),    lower,    upper);    StringBuffer  result.append(str.substring(0,  index),  lower,  upper);	  	non-compiled	[CE]  ';'  expected	90	None	add
287	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  lower,  upper);  if(index  >=  -1)  {  result.append(str.substring(0,  index),  lower,  upper);  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,    index),    lower,    upper);    if(index  >=  -1)  {  result.append(str.substring(0,  index),  lower,  upper);  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	90	1	add
288	[BUG]  [BUGGY]  result.append(str.substring(0,  index),  lower,  upper);  if(index  >=  -1)  {  result.append(str.substring(0,  index),  lower,  upper);  }  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  lower,  upper);  if(index  >=  -1)  {  result.append(str.substring(0,  index),  lower,  upper);  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index),    lower,    upper);    if(index  >=  -1)  {  result.append(str.substring(0,  index),  lower,  upper);  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	90	1	add
289	[BUG]  [BUGGY]  result.append('  ').append(index);  result.append('  ').append(index);  [CE]  unclosed  character  literal  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('  ').append(index);  result.append('  ').append(index);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('    ').append(index);    result.append('  ').append(index);	  	non-compiled	[CE]  unclosed  character  literal	135	None	add
290	[BUG]  [BUGGY]  result.append('  ').append(index);  if(index  >=  -1)  {  result.append('  ').append(index);  }  else  {  result.append(str.substring(0,  index));  }  [CE]  unclosed  character  literal  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('  ').append(index);  if(index  >=  -1)  {  result.append('  ').append(index);  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('    ').append(index);    if(index  >=  -1)  {  result.append('  ').append(index);  }  else  {  result.append(str.substring(0,  index));  }	  	non-compiled	[CE]  unclosed  character  literal	135	None	add
291	[BUG]  [BUGGY]  result.append('  ').append(index);  if(index  >=  -1)  {  result.append('  ').append(index);  }  else  {  result.append('  ').append(index);  }  [CE]  unclosed  character  literal  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('  ').append(index);  if(index  >=  -1)  {  result.append('  ').append(index);  }  else  {  result.append('  ').append(index);  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('    ').append(index);    if(index  >=  -1)  {  result.append('  ').append(index);  }  else  {  result.append('  ').append(index);  }	  	non-compiled	[CE]  unclosed  character  literal	135	None	add
292	[BUG]  [BUGGY]  result.append('  ').append(index);  if(index  >=  -1)  {  result.append('  ').append(index);  }  else  {  result.append(str.substring(0,  index  +  1));  }  [CE]  unclosed  character  literal  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('  ').append(index);  if(index  >=  -1)  {  result.append('  ').append(index);  }  else  {  result.append(str.substring(0,  index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('    ').append(index);    if(index  >=  -1)  {  result.append('  ').append(index);  }  else  {  result.append(str.substring(0,  index  +  1));  }	  	non-compiled	[CE]  unclosed  character  literal	135	None	add
293	[BUG]  [BUGGY]  result.append('  ').append(index);  if(index  >=  -1)  {  result.append('  ').append(index);  }  [CE]  unclosed  character  literal  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('  ').append(index);  if(index  >=  -1)  {  result.append('  ').append(index);  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('    ').append(index);    if(index  >=  -1)  {  result.append('  ').append(index);  }	  	non-compiled	[CE]  unclosed  character  literal	135	None	add
294	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]    junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(',');  result.append(',');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(',');    result.append(',');	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	133	1	add
295	[BUG]  [BUGGY]  result.append(',');  result.append(',');  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]    junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(',');  result.append(',');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(',');    result.append(',');	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	133	1	add
296	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]      junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(',');  result.append('[');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(',');    result.append('[');	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	133	1	add
297	[BUG]  [BUGGY]  result.append(',');  result.append('[');  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]      junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(',');  result.append('[');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(',');    result.append('[');	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	133	1	add
298	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]        junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(',');  result.append('/');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(',');    result.append('/');	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	133	1	add
299	[BUG]  [BUGGY]  result.append(',');  result.append('/');  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]        junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(',');  result.append('/');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(',');    result.append('/');	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	133	1	add
300	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]          junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(',');  result.append(':');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(',');    result.append(':');	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	133	1	add
301	[BUG]  [BUGGY]  result.append(',');  result.append(':');  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]          junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(',');  result.append(':');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(',');    result.append(':');	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	133	1	add
302	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]            junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(',');  result.append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(',');    result.append('n');	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	133	1	add
303	[BUG]  [BUGGY]  result.append(',');  result.append('n');  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]            junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(',');  result.append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(',');    result.append('n');	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	133	1	add
304	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[n      [FE]    junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[n      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(     "n     ");    result.append(   ",n     ");  result.append( "n   ");  result.append( ",n ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(       "n       ");        result.append(   ",n       ");    result.append( "n   ");  result.append( ",n ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[n        	28	1	add
305	[BUG]  [BUGGY]          result.append(     "n     ");    result.append(   ",n     ");  result.append( "n   ");  result.append( ",n ");  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[n      [FE]    junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[n      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(     "n     ");    result.append(   ",n     ");  result.append( "n   ");  result.append( ",n ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(       "n       ");        result.append(   ",n       ");    result.append( "n   ");  result.append( ",n ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[n        	28	1	add
306	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[n      [FE]      junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[n      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(     "n     ");    result.append(   ",n     ");  result.append( "n   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(       "n       ");        result.append(   ",n       ");    result.append( "n   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[n        	28	1	add
307	[BUG]  [BUGGY]          result.append(     "n     ");    result.append(   ",n     ");  result.append( "n   ");  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[n      [FE]      junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[n      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(     "n     ");    result.append(   ",n     ");  result.append( "n   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(       "n       ");        result.append(   ",n       ");    result.append( "n   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[n        	28	1	add
308	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  -1)  {  }  else  if(index  ==  -1)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    ==    -1)    {    }  else  if(index  ==  -1)  {	  	compilable	  [FE]  StringIndexOutOfBoundsException  	211	1	add
309	[BUG]  [BUGGY]  }  else  if(index  ==  -1)  {  }  else  if(index  ==  -1)  {  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  -1)  {  }  else  if(index  ==  -1)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    ==    -1)    {    }  else  if(index  ==  -1)  {	  	compilable	  [FE]  StringIndexOutOfBoundsException  	211	1	add
310	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  -1)  {  }  else  if(index!=  -1)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    ==    -1)    {    }  else  if(index!=  -1)  {	  	compilable	  [FE]  ComparisonFailure  	211	1	add
311	[BUG]  [BUGGY]  }  else  if(index  ==  -1)  {  }  else  if(index!=  -1)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  -1)  {  }  else  if(index!=  -1)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    ==    -1)    {    }  else  if(index!=  -1)  {	  	compilable	  [FE]  ComparisonFailure  	211	1	add
312	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  -1)  {  }  else  if(index  >=  -1)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    ==    -1)    {    }  else  if(index  >=  -1)  {	  	compilable	  [FE]  ComparisonFailure  	211	1	add
313	[BUG]  [BUGGY]  }  else  if(index  ==  -1)  {  }  else  if(index  >=  -1)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  -1)  {  }  else  if(index  >=  -1)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    ==    -1)    {    }  else  if(index  >=  -1)  {	  	compilable	  [FE]  ComparisonFailure  	211	1	add
314	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  -1)  {  }  else  if(index  ==  1)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    ==    -1)    {    }  else  if(index  ==  1)  {	  	compilable	  [FE]  StringIndexOutOfBoundsException  	211	1	add
315	[BUG]  [BUGGY]  }  else  if(index  ==  -1)  {  }  else  if(index  ==  1)  {  [FE]  StringIndexOutOfBoundsException  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  -1)  {  }  else  if(index  ==  1)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    ==    -1)    {    }  else  if(index  ==  1)  {	  	compilable	  [FE]  StringIndexOutOfBoundsException  	211	1	add
316	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));	  }    else    if(index    <    upper)    {    }    else    if(index    <    upper)    {    result.append(str.substring(0,    index));    result.append(StringUtils.defaultString(appendToEnd));    	compilable	  [FE]  StringIndexOutOfBoundsException  	221	1	replace
317	[BUG]  [BUGGY]  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));	  }    else    if(index    <    upper)    {    }    else    if(index    <    upper)    {    result.append(str.substring(0,    index));    result.append(StringUtils.defaultString(appendToEnd));    	compilable	  [FE]  StringIndexOutOfBoundsException  	221	1	replace
318	[BUG]  [BUGGY]  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToStart));  [CE]  cannot  find  symbol  appendToStart  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToStart));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToStart));	  }    else    if(index    <    upper)    {    }    else    if(index    <    upper)    {    result.append(str.substring(0,    index));    result.append(StringUtils.defaultString(appendToEnd));    	non-compiled	[CE]  cannot  find  symbol  appendToStart	221	None	replace
319	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   "null   ");  result.append(   "null   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(   "null   ");    result.append(   "null   ");	  	compilable	  [FE]  ComparisonFailure  	146	1	add
320	[BUG]  [BUGGY]  result.append(   "null   ");  result.append(   "null   ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   "null   ");  result.append(   "null   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(   "null   ");    result.append(   "null   ");	  	compilable	  [FE]  ComparisonFailure  	146	1	add
321	[BUG]  [BUGGY]  result.append(   "null   ");  result.append('null');  [CE]  unclosed  character  literal  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   "null   ");  result.append('null');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(   "null   ");    result.append('null');	  	non-compiled	[CE]  unclosed  character  literal	146	None	add
322	[BUG]  [BUGGY]  }  else  if(index  <  0)  {  result.append(str.substring(0,  index),  lower);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  <  0)  {  result.append(str.substring(0,  index),  lower);  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  <  0)  {  result.append(str.substring(0,  index),  lower);  }	  }    else    if(index    >    0)    {    result.append(str.substring(0,    index),    lower);    	non-compiled	[CE]  illegal  start  of  type	170	None	replace
323	[BUG]  [BUGGY]  }  else  if(index  >  0)  {  result.append(str.substring(0,  index),  lower,  upper);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >  0)  {  result.append(str.substring(0,  index),  lower,  upper);  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  >  0)  {  result.append(str.substring(0,  index),  lower,  upper);  }	  }    else    if(index    >    0)    {    result.append(str.substring(0,    index),    lower);    	non-compiled	[CE]  illegal  start  of  type	170	None	replace
324	[BUG]  [BUGGY]  }  else  if(index  >=  0)  {  result.append(str.substring(0,  index),  lower);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  0)  {  result.append(str.substring(0,  index),  lower);  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  >=  0)  {  result.append(str.substring(0,  index),  lower);  }	  }    else    if(index    >    0)    {    result.append(str.substring(0,    index),    lower);    	non-compiled	[CE]  illegal  start  of  type	170	None	replace
325	[BUG]  [BUGGY]  }  else  if(index  <  0)  {  result.append(str.substring(0,  index),  lower);  [CE]  no  suitable  method  found  for  append(String,int)  [FE]                  ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  <  0)  {  result.append(str.substring(0,  index),  lower);  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  <  0)  {  result.append(str.substring(0,  index),  lower);	  }    else    if(index    >    0)    {    result.append(str.substring(0,    index),    lower);    	non-compiled	[CE]  no  suitable  method  found  for  append(String,int)	170	None	replace
326	[BUG]  [BUGGY]  result.append(lower.substring(index,  index));  [CE]  int  cannot  be  dereferenced  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(lower.substring(index,  index));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(lower.substring(index,  index));	          result.append(str.substring(index,    lower));    result.append(str.substring(index,    lower));    	non-compiled	[CE]  int  cannot  be  dereferenced	71	None	replace
327	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('  ').append(upper  +  1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('  ').append(upper  +  1);	  result.append('    ').append(index    +    1);    	compilable	  [FE]  ComparisonFailure  	138	1	replace
328	[BUG]  [BUGGY]  result.append('  ').append(upper  +  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('  ').append(upper  +  1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('  ').append(upper  +  1);	  result.append('    ').append(index    +    1);    	compilable	  [FE]  ComparisonFailure  	138	1	replace
329	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('  ').append(index  +  2);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('  ').append(index  +  2);	  result.append('    ').append(index    +    1);    	compilable	  [FE]  ComparisonFailure  	138	1	replace
330	[BUG]  [BUGGY]  result.append('  ').append(index  +  2);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('  ').append(index  +  2);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('  ').append(index  +  2);	  result.append('    ').append(index    +    1);    	compilable	  [FE]  ComparisonFailure  	138	1	replace
331	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('  ').append(lower  +  1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('  ').append(lower  +  1);	  result.append('    ').append(index    +    1);    	compilable	  [FE]  ComparisonFailure  	138	1	replace
332	[BUG]  [BUGGY]  result.append('  ').append(lower  +  1);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('  ').append(lower  +  1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('  ').append(lower  +  1);	  result.append('    ').append(index    +    1);    	compilable	  [FE]  ComparisonFailure  	138	1	replace
333	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  upper,  -1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,  index),  upper,  -1);	  result.append(str.substring(0,    index),    lower,    -1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	95	1	replace
334	[BUG]  [BUGGY]  result.append(str.substring(0,  index),  upper,  -1);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  upper,  -1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index),  upper,  -1);	  result.append(str.substring(0,    index),    lower,    -1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	95	1	replace
335	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  lower,  1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,  index),  lower,  1);	  result.append(str.substring(0,    index),    lower,    -1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	95	1	replace
336	[BUG]  [BUGGY]  result.append(str.substring(0,  index),  lower,  1);  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  lower,  1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index),  lower,  1);	  result.append(str.substring(0,    index),    lower,    -1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	95	1	replace
337	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  start  0  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  +  1),  lower,  -1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,  index  +  1),  lower,  -1);	  result.append(str.substring(0,    index),    lower,    -1);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  start  0  	95	1	replace
338	[BUG]  [BUGGY]  result.append(str.substring(0,  index  +  1),  lower,  -1);  [FE]  java.lang.IndexOutOfBoundsException:  start  0  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  +  1),  lower,  -1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index  +  1),  lower,  -1);	  result.append(str.substring(0,    index),    lower,    -1);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  start  0  	95	1	replace
339	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(str,  lower,  upper));  [CE]  no  suitable  method  found  for  defaultString(String,int,int)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(StringUtils.defaultString(str,  lower,  upper));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(StringUtils.defaultString(str,  lower,  upper));	  result.append(StringUtils.defaultString(upper,    lower));    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(String,int,int)	188	None	replace
340	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(index,  lower));  [CE]  no  suitable  method  found  for  defaultString(int,int)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(StringUtils.defaultString(index,  lower));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(StringUtils.defaultString(index,  lower));	  result.append(StringUtils.defaultString(upper,    lower));    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int,int)	188	None	replace
341	[BUG]  [BUGGY]  result.append('  ').append(upper);  result.append('  ').append(upper);  [CE]  unclosed  character  literal  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('  ').append(upper);  result.append('  ').append(upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('    ').append(upper);    result.append('  ').append(upper);	  	non-compiled	[CE]  unclosed  character  literal	184	None	add
342	[BUG]  [BUGGY]  result.append('  ').append(upper);  result.append('  ').append(lower);  [CE]  unclosed  character  literal  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('  ').append(upper);  result.append('  ').append(lower);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('    ').append(upper);    result.append('  ').append(lower);	  	non-compiled	[CE]  unclosed  character  literal	184	None	add
343	[BUG]  [BUGGY]  result.append('  ').append(upper);  Result.append('  ').append(upper);  [CE]  unclosed  character  literal  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('  ').append(upper);  Result.append('  ').append(upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('    ').append(upper);    Result.append('  ').append(upper);	  	non-compiled	[CE]  unclosed  character  literal	184	None	add
344	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index!=        upper)        {        }    else    if(index    ==    upper)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	52	1	add
345	[BUG]  [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  ==  lower)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index!=        upper)        {        }    else    if(index    ==    upper)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	52	1	add
346	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  ==  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index!=        upper)        {        }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {	  	compilable	  [FE]  ComparisonFailure  	52	1	add
347	[BUG]  [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  ==  upper)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  ==  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index!=        upper)        {        }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {	  	compilable	  [FE]  ComparisonFailure  	52	1	add
348	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index!=        upper)        {        }    else    if(index    ==    upper)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	52	1	add
349	[BUG]  [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  >=  lower)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index!=        upper)        {        }    else    if(index    ==    upper)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	52	1	add
350	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  >=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index!=        upper)        {        }    else    if(index    ==    upper)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	52	1	add
351	[BUG]  [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  >=  upper)  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  >=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index!=        upper)        {        }    else    if(index    ==    upper)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	52	1	add
352	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index!=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index!=        upper)        {        }    else    if(index    ==    upper)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	52	1	add
353	[BUG]  [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index!=  lower)  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index!=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index!=        upper)        {        }    else    if(index    ==    upper)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	52	1	add
354	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index)+  1).append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,  index)+  1).append('n');	  result.append(str.substring(0,    index)+    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	227	1	replace
355	[BUG]  [BUGGY]  result.append(str.substring(0,  index)+  1).append('n');  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index)+  1).append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index)+  1).append('n');	  result.append(str.substring(0,    index)+    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	227	1	replace
356	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index)+  1).append( ", ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,  index)+  1).append( ", ");	  result.append(str.substring(0,    index)+    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	227	1	replace
357	[BUG]  [BUGGY]  result.append(str.substring(0,  index)+  1).append( ", ");  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index)+  1).append( ", ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index)+  1).append( ", ");	  result.append(str.substring(0,    index)+    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	227	1	replace
358	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]    junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   ",n   ");  result.append( ",n   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(   ",n   ");    result.append( ",n   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	131	1	add
359	[BUG]  [BUGGY]  result.append(   ",n   ");  result.append( ",n   ");  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]    junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   ",n   ");  result.append( ",n   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(   ",n   ");    result.append( ",n   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	131	1	add
360	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  0)  {  }  else  if(index  >=  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    >=    0)    {    }  else  if(index  >=  0)  {	  	compilable	  [FE]  ComparisonFailure  	14	1	add
361	[BUG]  [BUGGY]  }  else  if(index  >=  0)  {  }  else  if(index  >=  0)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  0)  {  }  else  if(index  >=  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    >=    0)    {    }  else  if(index  >=  0)  {	  	compilable	  [FE]  ComparisonFailure  	14	1	add
362	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  0)  {  }  else  if(index!=  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    >=    0)    {    }  else  if(index!=  0)  {	  	compilable	  [FE]  ComparisonFailure  	14	1	add
363	[BUG]  [BUGGY]  }  else  if(index  >=  0)  {  }  else  if(index!=  0)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  0)  {  }  else  if(index!=  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    >=    0)    {    }  else  if(index!=  0)  {	  	compilable	  [FE]  ComparisonFailure  	14	1	add
364	[BUG]  [BUGGY]  }  else  if(index  >=  0)  {  }  else  if(index  >>  0)  {  [CE]  incompatible  types  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  0)  {  }  else  if(index  >>  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    >=    0)    {    }  else  if(index  >>  0)  {	  	non-compiled	[CE]  incompatible  types	14	None	add
365	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  0)  {  }  else  if(index  ==  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    >=    0)    {    }  else  if(index  ==  0)  {	  	compilable	  [FE]  ComparisonFailure  	14	1	add
366	[BUG]  [BUGGY]  }  else  if(index  >=  0)  {  }  else  if(index  ==  0)  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  0)  {  }  else  if(index  ==  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    >=    0)    {    }  else  if(index  ==  0)  {	  	compilable	  [FE]  ComparisonFailure  	14	1	add
367	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  if(index  >=  -1)  {  result.append('n');  result.append('N');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	if(index  >=  -1)  {  result.append('n');  result.append('N');  }	          result.append('n');    result.append('N');    	compilable	  [FE]  ComparisonFailure  	199	1	replace
368	[BUG]  [BUGGY]  if(index  >=  -1)  {  result.append('n');  result.append('N');  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  if(index  >=  -1)  {  result.append('n');  result.append('N');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	if(index  >=  -1)  {  result.append('n');  result.append('N');  }	          result.append('n');    result.append('N');    	compilable	  [FE]  ComparisonFailure  	199	1	replace
369	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  if(index  >=  -1)  {  result.append('n');  result.append('N');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	if(index  >=  -1)  {  result.append('n');  result.append('N');  }  else  {  result.append(str.substring(0,  index));  }	          result.append('n');    result.append('N');    	compilable	  [FE]  ComparisonFailure  	199	1	replace
370	[BUG]  [BUGGY]  if(index  >=  -1)  {  result.append('n');  result.append('N');  }  else  {  result.append(str.substring(0,  index));  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  if(index  >=  -1)  {  result.append('n');  result.append('N');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	if(index  >=  -1)  {  result.append('n');  result.append('N');  }  else  {  result.append(str.substring(0,  index));  }	          result.append('n');    result.append('N');    	compilable	  [FE]  ComparisonFailure  	199	1	replace
371	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  if(index  >=  -1)  {  result.append('n');  result.append('N');  }  else  {  result.append( ", ");  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	if(index  >=  -1)  {  result.append('n');  result.append('N');  }  else  {  result.append( ", ");  }	          result.append('n');    result.append('N');    	compilable	  [FE]  ComparisonFailure  	199	1	replace
372	[BUG]  [BUGGY]  if(index  >=  -1)  {  result.append('n');  result.append('N');  }  else  {  result.append( ", ");  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  if(index  >=  -1)  {  result.append('n');  result.append('N');  }  else  {  result.append( ", ");  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	if(index  >=  -1)  {  result.append('n');  result.append('N');  }  else  {  result.append( ", ");  }	          result.append('n');    result.append('N');    	compilable	  [FE]  ComparisonFailure  	199	1	replace
373	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  -  1));  result.append(str.substring(0,  index  -  1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,    index    -    1));    result.append(str.substring(0,  index  -  1));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	74	1	add
374	[BUG]  [BUGGY]  result.append(str.substring(0,  index  -  1));  result.append(str.substring(0,  index  -  1));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  -  1));  result.append(str.substring(0,  index  -  1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index    -    1));    result.append(str.substring(0,  index  -  1));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	74	1	add
375	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  -  1));  if(index  >  0)  {  result.append(str.substring(0,  index  -  1));  }  else  {  result.append(str.substring(0,  index  -  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,    index    -    1));    if(index  >  0)  {  result.append(str.substring(0,  index  -  1));  }  else  {  result.append(str.substring(0,  index  -  1));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	74	1	add
376	[BUG]  [BUGGY]  result.append(str.substring(0,  index  -  1));  if(index  >  0)  {  result.append(str.substring(0,  index  -  1));  }  else  {  result.append(str.substring(0,  index  -  1));  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  -  1));  if(index  >  0)  {  result.append(str.substring(0,  index  -  1));  }  else  {  result.append(str.substring(0,  index  -  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index    -    1));    if(index  >  0)  {  result.append(str.substring(0,  index  -  1));  }  else  {  result.append(str.substring(0,  index  -  1));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	74	1	add
377	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  -  1));  if(index  >  0)  {  result.append(str.substring(0,  index  -  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,    index    -    1));    if(index  >  0)  {  result.append(str.substring(0,  index  -  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	74	1	add
378	[BUG]  [BUGGY]  result.append(str.substring(0,  index  -  1));  if(index  >  0)  {  result.append(str.substring(0,  index  -  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  -  1));  if(index  >  0)  {  result.append(str.substring(0,  index  -  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index    -    1));    if(index  >  0)  {  result.append(str.substring(0,  index  -  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	74	1	add
379	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  -  1));  if(index  >  0)  {  result.append(str.substring(0,  index  -  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,    index    -    1));    if(index  >  0)  {  result.append(str.substring(0,  index  -  1));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	74	1	add
380	[BUG]  [BUGGY]  result.append(str.substring(0,  index  -  1));  if(index  >  0)  {  result.append(str.substring(0,  index  -  1));  }  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  -  1));  if(index  >  0)  {  result.append(str.substring(0,  index  -  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index    -    1));    if(index  >  0)  {  result.append(str.substring(0,  index  -  1));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	74	1	add
381	[BUG]  [BUGGY]  result.append(str.substring(0,  index  -  1));  if(index  >  0)  {  result.append(str.substring(0,  index  -  1));  }  else  {  result.append(str.substring(0,  index  -  1);  }  [CE]  ')'  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  -  1));  if(index  >  0)  {  result.append(str.substring(0,  index  -  1));  }  else  {  result.append(str.substring(0,  index  -  1);  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index    -    1));    if(index  >  0)  {  result.append(str.substring(0,  index  -  1));  }  else  {  result.append(str.substring(0,  index  -  1);  }	  	non-compiled	[CE]  ')'  expected	74	None	add
382	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  +  1));  result.append(str.substring(0,  index  +  1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,    index    +    1));    result.append(str.substring(0,  index  +  1));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	41	1	add
383	[BUG]  [BUGGY]  result.append(str.substring(0,  index  +  1));  result.append(str.substring(0,  index  +  1));  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  +  1));  result.append(str.substring(0,  index  +  1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index    +    1));    result.append(str.substring(0,  index  +  1));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	41	1	add
384	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  +  1));  if(index  >=  -1)  {  result.append(str.substring(0,  index  +  1));  }  else  {  result.append(str.substring(0,  index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,    index    +    1));    if(index  >=  -1)  {  result.append(str.substring(0,  index  +  1));  }  else  {  result.append(str.substring(0,  index  +  1));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	41	1	add
385	[BUG]  [BUGGY]  result.append(str.substring(0,  index  +  1));  if(index  >=  -1)  {  result.append(str.substring(0,  index  +  1));  }  else  {  result.append(str.substring(0,  index  +  1));  }  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  +  1));  if(index  >=  -1)  {  result.append(str.substring(0,  index  +  1));  }  else  {  result.append(str.substring(0,  index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index    +    1));    if(index  >=  -1)  {  result.append(str.substring(0,  index  +  1));  }  else  {  result.append(str.substring(0,  index  +  1));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	41	1	add
386	[BUG]  [BUGGY]  result.append(str.substring(0,  index  +  1));  if(index  +  1)  {  result.append(str.substring(0,  index  +  1));  }  else  {  result.append(str.substring(0,  index  +  1));  }  [CE]  incompatible  types  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  +  1));  if(index  +  1)  {  result.append(str.substring(0,  index  +  1));  }  else  {  result.append(str.substring(0,  index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index    +    1));    if(index  +  1)  {  result.append(str.substring(0,  index  +  1));  }  else  {  result.append(str.substring(0,  index  +  1));  }	  	non-compiled	[CE]  incompatible  types	41	None	add
387	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  +  1));  if(index  >=  -1)  {  result.append(str.substring(0,  index  +  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,    index    +    1));    if(index  >=  -1)  {  result.append(str.substring(0,  index  +  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	41	1	add
388	[BUG]  [BUGGY]  result.append(str.substring(0,  index  +  1));  if(index  >=  -1)  {  result.append(str.substring(0,  index  +  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [FE]  StringIndexOutOfBoundsException  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  +  1));  if(index  >=  -1)  {  result.append(str.substring(0,  index  +  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index    +    1));    if(index  >=  -1)  {  result.append(str.substring(0,  index  +  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	41	1	add
389	[BUG]  [BUGGY]  result.append(str.substring(0,  index  +  1));  if(index  >=  -1)  {  result.append(str.substring(0,  index  +  1));  }  else  {  result.append(str.substring(0,  index  +  1);  }  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  +  1));  if(index  >=  -1)  {  result.append(str.substring(0,  index  +  1));  }  else  {  result.append(str.substring(0,  index  +  1);  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index    +    1));    if(index  >=  -1)  {  result.append(str.substring(0,  index  +  1));  }  else  {  result.append(str.substring(0,  index  +  1);  }	  	non-compiled	[CE]  ')'  expected	41	None	add
390	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  index));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(index,  index));	          result.append(str.substring(index,    lower));    result.append(str.substring(index,    low));    	compilable	  [FE]  StringIndexOutOfBoundsException  	73	1	replace
391	[BUG]  [BUGGY]  result.append(str.substring(index,  index));  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  index));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index,  index));	          result.append(str.substring(index,    lower));    result.append(str.substring(index,    low));    	compilable	  [FE]  StringIndexOutOfBoundsException  	73	1	replace
392	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  >=  lower)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        upper)        {        }    else    if(index    >=    lower)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	127	1	add
393	[BUG]  [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  >=  lower)  {  }  else  if(index  >=  lower)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  >=  lower)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        upper)        {        }    else    if(index    >=    lower)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	127	1	add
394	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  >=  lower)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        upper)        {        }    else    if(index    >=    lower)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	127	1	add
395	[BUG]  [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  >=  lower)  {  }  else  if(index  ==  lower)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  >=  lower)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        upper)        {        }    else    if(index    >=    lower)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	127	1	add
396	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  >=  lower)  {  }  else  if(index  >=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        upper)        {        }    else    if(index    >=    lower)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	127	1	add
397	[BUG]  [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  >=  lower)  {  }  else  if(index  >=  upper)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  >=  lower)  {  }  else  if(index  >=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        upper)        {        }    else    if(index    >=    lower)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	127	1	add
398	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  >=  lower)  {  }  else  if(index!=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        upper)        {        }    else    if(index    >=    lower)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	127	1	add
399	[BUG]  [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  >=  lower)  {  }  else  if(index!=  lower)  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  >=  lower)  {  }  else  if(index!=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        upper)        {        }    else    if(index    >=    lower)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	127	1	add
400	[BUG]  [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  >=  lower)  {  }  else  if(index  >>  lower)  {  [CE]  incompatible  types  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  >=  lower)  {  }  else  if(index  >>  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        upper)        {        }    else    if(index    >=    lower)    {    }  else  if(index  >>  lower)  {	  	non-compiled	[CE]  incompatible  types	127	None	add
401	[BUG]  [BUGGY]  result.append( "null ",  str.substring(index  +  1));  [CE]  no  suitable  method  found  for  append(String,String)  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( "null ",  str.substring(index  +  1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append( "null ",  str.substring(index  +  1));	  result.append(   "null   ");    	non-compiled	[CE]  no  suitable  method  found  for  append(String,String)	147	None	replace
402	[BUG]  [BUGGY]  result.append( "null ",  str.substring(0,  index));  [CE]  no  suitable  method  found  for  append(String,String)  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( "null ",  str.substring(0,  index));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append( "null ",  str.substring(0,  index));	  result.append(   "null   ");    	non-compiled	[CE]  no  suitable  method  found  for  append(String,String)	147	None	replace
403	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    >=    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    result.append(str.substring(index    +    1));    }    result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	66	1	add
404	[BUG]  [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index  +  1));  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    >=    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    result.append(str.substring(index    +    1));    }    result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	66	1	add
405	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  if(index!=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    >=    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    result.append(str.substring(index    +    1));    }    result.append('n');  if(index!=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	66	1	add
406	[BUG]  [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  if(index!=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index  +  1));  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  if(index!=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    >=    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    result.append(str.substring(index    +    1));    }    result.append('n');  if(index!=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	66	1	add
407	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    >=    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    result.append(str.substring(index    +    1));    }    result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	66	1	add
408	[BUG]  [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd  +  1));  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    >=    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    result.append(str.substring(index    +    1));    }    result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	66	1	add
409	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    >=    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    result.append(str.substring(index    +    1));    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	66	1	add
410	[BUG]  [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index  +  1));  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    >=    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    result.append(str.substring(index    +    1));    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	66	1	add
411	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  -1)  {  }  else  if(index  >=  -1)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    >=    -1)    {    }  else  if(index  >=  -1)  {	  	compilable	  [FE]  ComparisonFailure  	213	1	add
412	[BUG]  [BUGGY]  }  else  if(index  >=  -1)  {  }  else  if(index  >=  -1)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  -1)  {  }  else  if(index  >=  -1)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    >=    -1)    {    }  else  if(index  >=  -1)  {	  	compilable	  [FE]  ComparisonFailure  	213	1	add
413	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  -1)  {  }  else  if(index!=  -1)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    >=    -1)    {    }  else  if(index!=  -1)  {	  	compilable	  [FE]  ComparisonFailure  	213	1	add
414	[BUG]  [BUGGY]  }  else  if(index  >=  -1)  {  }  else  if(index!=  -1)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  -1)  {  }  else  if(index!=  -1)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    >=    -1)    {    }  else  if(index!=  -1)  {	  	compilable	  [FE]  ComparisonFailure  	213	1	add
415	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  -1)  {  }  else  if(index  ==  -1)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    >=    -1)    {    }  else  if(index  ==  -1)  {	  	compilable	  [FE]  ComparisonFailure  	213	1	add
416	[BUG]  [BUGGY]  }  else  if(index  >=  -1)  {  }  else  if(index  ==  -1)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  -1)  {  }  else  if(index  ==  -1)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    >=    -1)    {    }  else  if(index  ==  -1)  {	  	compilable	  [FE]  ComparisonFailure  	213	1	add
417	[BUG]  [BUGGY]  }  else  if(index  >=  -1)  {  }  else  if(index  >>  -1)  {  [CE]  incompatible  types  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  -1)  {  }  else  if(index  >>  -1)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    >=    -1)    {    }  else  if(index  >>  -1)  {	  	non-compiled	[CE]  incompatible  types	213	None	add
418	[BUG]  [BUGGY]  }  else  if(index  >=  -1)  {  }  else  if(index  [Delete]  -1)  {  [CE]  cannot  find  symbol  Delete  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  -1)  {  }  else  if(index  [Delete]  -1)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    >=    -1)    {    }  else  if(index  [Delete]  -1)  {	  	non-compiled	[CE]  cannot  find  symbol  Delete	213	None	add
419	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( "  - ").append(index);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append( "  - ").append(index);	  result.append(   "    -   ");    	compilable	  [FE]  ComparisonFailure  	193	1	replace
420	[BUG]  [BUGGY]  result.append( "  - ").append(index);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( "  - ").append(index);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append( "  - ").append(index);	  result.append(   "    -   ");    	compilable	  [FE]  ComparisonFailure  	193	1	replace
421	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( "  - ").append(lower);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append( "  - ").append(lower);	  result.append(   "    -   ");    	compilable	  [FE]  ComparisonFailure  	193	1	replace
422	[BUG]  [BUGGY]  result.append( "  - ").append(lower);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( "  - ").append(lower);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append( "  - ").append(lower);	  result.append(   "    -   ");    	compilable	  [FE]  ComparisonFailure  	193	1	replace
423	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   "  }     ");  result.append( "  }   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(   "    }       ");    result.append( "  }   ");	  	compilable	  [FE]  ComparisonFailure  	186	1	add
424	[BUG]  [BUGGY]  result.append(   "  }     ");  result.append( "  }   ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   "  }     ");  result.append( "  }   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(   "    }       ");    result.append( "  }   ");	  	compilable	  [FE]  ComparisonFailure  	186	1	add
425	[BUG]  [BUGGY]  result.append(   "  }     ");  result.append('  }   ");  [CE]  unclosed  character  literal  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   "  }     ");  result.append('  }   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(   "    }       ");    result.append('  }   ");	  	non-compiled	[CE]  unclosed  character  literal	186	None	add
426	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  }      [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   "  }     ");  result.append( ",  }   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(   "    }       ");    result.append( ",  }   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    }        	186	1	add
427	[BUG]  [BUGGY]  result.append(   "  }     ");  result.append( ",  }   ");  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  }      [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   "  }     ");  result.append( ",  }   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(   "    }       ");    result.append( ",  }   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    }        	186	1	add
428	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   "  }     ");  result.append( ".  }   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(   "    }       ");    result.append( ".  }   ");	  	compilable	  [FE]  ComparisonFailure  	186	1	add
429	[BUG]  [BUGGY]  result.append(   "  }     ");  result.append( ".  }   ");  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   "  }     ");  result.append( ".  }   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(   "    }       ");    result.append( ".  }   ");	  	compilable	  [FE]  ComparisonFailure  	186	1	add
430	[BUG]  [BUGGY]  }  else  if(index  <  =  1)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  <  =  1)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  <  =  1)  {	  }    else    if(index    <    upper)    {    }    else    if(index    <    >)    {    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
431	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  <  lower)  {  }  else  if(index  <  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    <    lower)    {    }  else  if(index  <  lower)  {	  	compilable	  [FE]  StringIndexOutOfBoundsException  	78	1	add
432	[BUG]  [BUGGY]  }  else  if(index  <  lower)  {  }  else  if(index  <  lower)  {  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  <  lower)  {  }  else  if(index  <  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    <    lower)    {    }  else  if(index  <  lower)  {	  	compilable	  [FE]  StringIndexOutOfBoundsException  	78	1	add
433	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  <  lower)  {  }  else  if(index  <  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    <    lower)    {    }  else  if(index  <  upper)  {	  	compilable	  [FE]  ComparisonFailure  	78	1	add
434	[BUG]  [BUGGY]  }  else  if(index  <  lower)  {  }  else  if(index  <  upper)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  <  lower)  {  }  else  if(index  <  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    <    lower)    {    }  else  if(index  <  upper)  {	  	compilable	  [FE]  ComparisonFailure  	78	1	add
435	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  <  lower)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    <    lower)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	78	1	add
436	[BUG]  [BUGGY]  }  else  if(index  <  lower)  {  }  else  if(index  >=  lower)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  <  lower)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    <    lower)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	78	1	add
437	[BUG]  [BUGGY]  }  else  if(index  <  lower)  {  }  else  if(index  <  low)  {  [CE]  cannot  find  symbol  low  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  <  lower)  {  }  else  if(index  <  low)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    <    lower)    {    }  else  if(index  <  low)  {	  	non-compiled	[CE]  cannot  find  symbol  low	78	None	add
438	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]    junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(',').append(index);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(',').append(index);	  result.append(',');    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	134	1	replace
439	[BUG]  [BUGGY]  result.append(',').append(index);  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]    junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(',').append(index);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(',').append(index);	  result.append(',');    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	134	1	replace
440	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]      junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(',').append(index  +  1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(',').append(index  +  1);	  result.append(',');    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	134	1	replace
441	[BUG]  [BUGGY]  result.append(',').append(index  +  1);  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]      junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(',').append(index  +  1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(',').append(index  +  1);	  result.append(',');    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	134	1	replace
442	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]        junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(',').append(upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(',').append(upper);	  result.append(',');    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	134	1	replace
443	[BUG]  [BUGGY]  result.append(',').append(upper);  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]        junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(',').append(upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(',').append(upper);	  result.append(',');    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	134	1	replace
444	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  0)  {  }  else  if(index  ==  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    ==    0)    {    }  else  if(index  ==  0)  {	  	compilable	  [FE]  StringIndexOutOfBoundsException  	39	1	add
445	[BUG]  [BUGGY]  }  else  if(index  ==  0)  {  }  else  if(index  ==  0)  {  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  0)  {  }  else  if(index  ==  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    ==    0)    {    }  else  if(index  ==  0)  {	  	compilable	  [FE]  StringIndexOutOfBoundsException  	39	1	add
446	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  0)  {  }  else  if(index  >=  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    ==    0)    {    }  else  if(index  >=  0)  {	  	compilable	  [FE]  ComparisonFailure  	39	1	add
447	[BUG]  [BUGGY]  }  else  if(index  ==  0)  {  }  else  if(index  >=  0)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  0)  {  }  else  if(index  >=  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    ==    0)    {    }  else  if(index  >=  0)  {	  	compilable	  [FE]  ComparisonFailure  	39	1	add
448	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  0)  {  }  else  if(index!=  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    ==    0)    {    }  else  if(index!=  0)  {	  	compilable	  [FE]  ComparisonFailure  	39	1	add
449	[BUG]  [BUGGY]  }  else  if(index  ==  0)  {  }  else  if(index!=  0)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  0)  {  }  else  if(index!=  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    ==    0)    {    }  else  if(index!=  0)  {	  	compilable	  [FE]  ComparisonFailure  	39	1	add
450	[BUG]  [BUGGY]  }  else  if(index  ==  0)  {  }  else  if(index  >>  0)  {  [CE]  incompatible  types  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  0)  {  }  else  if(index  >>  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    ==    0)    {    }  else  if(index  >>  0)  {	  	non-compiled	[CE]  incompatible  types	39	None	add
451	[BUG]  [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  upper));  }  else  if(index  >  0)  {  result.append(str.substring(0,  upper));  }  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  upper));  }  else  if(index  >  0)  {  result.append(str.substring(0,  upper));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >        0)        {        result.append(str.substring(0,    upper));    }  else  if(index  >  0)  {  result.append(str.substring(0,  upper));  }	  	non-compiled	[CE]  illegal  start  of  type	168	None	add
452	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  upper));  }  else  if(index  >  0)  {  result.append(str.substring(0,  upper));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >        0)        {        result.append(str.substring(0,    upper));    }  else  if(index  >  0)  {  result.append(str.substring(0,  upper));	  	compilable	  [FE]  ComparisonFailure  	168	1	add
453	[BUG]  [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  upper));  }  else  if(index  >  0)  {  result.append(str.substring(0,  upper));  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  upper));  }  else  if(index  >  0)  {  result.append(str.substring(0,  upper));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >        0)        {        result.append(str.substring(0,    upper));    }  else  if(index  >  0)  {  result.append(str.substring(0,  upper));	  	compilable	  [FE]  ComparisonFailure  	168	1	add
454	[BUG]  [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  upper));  }  else  if(index  >  0)  {  result.append(StringUtils.defaultString(appendToEnd));  }  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  upper));  }  else  if(index  >  0)  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >        0)        {        result.append(str.substring(0,    upper));    }  else  if(index  >  0)  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	non-compiled	[CE]  illegal  start  of  type	168	None	add
455	[BUG]  [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  upper));  }  else  if(index  >  0)  {  result.append(StringUtils.defaultString(appendToEnd));  }  else  if(index  >  0)  {  result.append(str.substring(0,  upper));  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  upper));  }  else  if(index  >  0)  {  result.append(StringUtils.defaultString(appendToEnd));  }  else  if(index  >  0)  {  result.append(str.substring(0,  upper));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >        0)        {        result.append(str.substring(0,    upper));    }  else  if(index  >  0)  {  result.append(StringUtils.defaultString(appendToEnd));  }  else  if(index  >  0)  {  result.append(str.substring(0,  upper));  }	  	non-compiled	[CE]  illegal  start  of  type	168	None	add
456	[BUG]  [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  upper));  }  else  if(index  >  0)  {  result.append(str.substring(0,  upper));  }  else  if(index  >  0)  {  result.append(StringUtils.defaultString(appendToEnd));  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  upper));  }  else  if(index  >  0)  {  result.append(str.substring(0,  upper));  }  else  if(index  >  0)  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >        0)        {        result.append(str.substring(0,    upper));    }  else  if(index  >  0)  {  result.append(str.substring(0,  upper));  }  else  if(index  >  0)  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	non-compiled	[CE]  illegal  start  of  type	168	None	add
457	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('/').append(index);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('/').append(index);	  result.append('/');    	compilable	  [FE]  ComparisonFailure  	154	1	replace
458	[BUG]  [BUGGY]  result.append('/').append(index);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('/').append(index);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('/').append(index);	  result.append('/');    	compilable	  [FE]  ComparisonFailure  	154	1	replace
459	[BUG]  [BUGGY]  result.append('/',  lower);  [CE]  no  suitable  method  found  for  append(char,int)  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('/',  lower);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('/',  lower);	  result.append('/');    	non-compiled	[CE]  no  suitable  method  found  for  append(char,int)	154	None	replace
460	[BUG]  [BUGGY]  result.append('/',  index);  [CE]  no  suitable  method  found  for  append(char,int)  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('/',  index);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('/',  index);	  result.append('/');    	non-compiled	[CE]  no  suitable  method  found  for  append(char,int)	154	None	replace
461	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  index  +  1));  result.append(str.substring(index,  index  +  1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(index,    index    +    1));    result.append(str.substring(index,  index  +  1));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	116	1	add
462	[BUG]  [BUGGY]  result.append(str.substring(index,  index  +  1));  result.append(str.substring(index,  index  +  1));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  index  +  1));  result.append(str.substring(index,  index  +  1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index,    index    +    1));    result.append(str.substring(index,  index  +  1));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	116	1	add
463	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index,  index  +  1));  }  else  {  result.append(str.substring(index,  index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(index,    index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index,  index  +  1));  }  else  {  result.append(str.substring(index,  index  +  1));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	116	1	add
464	[BUG]  [BUGGY]  result.append(str.substring(index,  index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index,  index  +  1));  }  else  {  result.append(str.substring(index,  index  +  1));  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index,  index  +  1));  }  else  {  result.append(str.substring(index,  index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index,    index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index,  index  +  1));  }  else  {  result.append(str.substring(index,  index  +  1));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	116	1	add
465	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index,  index  +  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(index,    index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index,  index  +  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	116	1	add
466	[BUG]  [BUGGY]  result.append(str.substring(index,  index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index,  index  +  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index,  index  +  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index,    index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index,  index  +  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	116	1	add
467	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index,  index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(index,    index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index,  index  +  1));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	116	1	add
468	[BUG]  [BUGGY]  result.append(str.substring(index,  index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index,  index  +  1));  }  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index,  index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index,    index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index,  index  +  1));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	116	1	add
469	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index,  index  +  1));  }  else  {  result.append(str.substring(0,  index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(index,    index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index,  index  +  1));  }  else  {  result.append(str.substring(0,  index  +  1));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	116	1	add
470	[BUG]  [BUGGY]  result.append(str.substring(index,  index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index,  index  +  1));  }  else  {  result.append(str.substring(0,  index  +  1));  }  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index,  index  +  1));  }  else  {  result.append(str.substring(0,  index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index,    index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index,  index  +  1));  }  else  {  result.append(str.substring(0,  index  +  1));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	116	1	add
471	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('N');  result.append('n');  result.append('N');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        result.append('N');    result.append('n');  result.append('N');	  	compilable	  [FE]  ComparisonFailure  	198	1	add
472	[BUG]  [BUGGY]          result.append('n');    result.append('N');  result.append('n');  result.append('N');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('N');  result.append('n');  result.append('N');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        result.append('N');    result.append('n');  result.append('N');	  	compilable	  [FE]  ComparisonFailure  	198	1	add
473	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('N');  if(index  >=  -1)  {  result.append('n');  result.append('N');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        result.append('N');    if(index  >=  -1)  {  result.append('n');  result.append('N');  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  ComparisonFailure  	198	1	add
474	[BUG]  [BUGGY]          result.append('n');    result.append('N');  if(index  >=  -1)  {  result.append('n');  result.append('N');  }  else  {  result.append(str.substring(0,  index));  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('N');  if(index  >=  -1)  {  result.append('n');  result.append('N');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        result.append('N');    if(index  >=  -1)  {  result.append('n');  result.append('N');  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  ComparisonFailure  	198	1	add
475	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('N');  if(index  >=  -1)  {  result.append('n');  result.append('N');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        result.append('N');    if(index  >=  -1)  {  result.append('n');  result.append('N');  }	  	compilable	  [FE]  ComparisonFailure  	198	1	add
476	[BUG]  [BUGGY]          result.append('n');    result.append('N');  if(index  >=  -1)  {  result.append('n');  result.append('N');  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('N');  if(index  >=  -1)  {  result.append('n');  result.append('N');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        result.append('N');    if(index  >=  -1)  {  result.append('n');  result.append('N');  }	  	compilable	  [FE]  ComparisonFailure  	198	1	add
477	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('N');  if(index  ==  -1)  {  result.append('n');  result.append('N');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        result.append('N');    if(index  ==  -1)  {  result.append('n');  result.append('N');  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  ComparisonFailure  	198	1	add
478	[BUG]  [BUGGY]          result.append('n');    result.append('N');  if(index  ==  -1)  {  result.append('n');  result.append('N');  }  else  {  result.append(str.substring(0,  index));  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('N');  if(index  ==  -1)  {  result.append('n');  result.append('N');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        result.append('N');    if(index  ==  -1)  {  result.append('n');  result.append('N');  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  ComparisonFailure  	198	1	add
479	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('N');  if(index  ==  -1)  {  result.append('n');  result.append('N');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        result.append('N');    if(index  ==  -1)  {  result.append('n');  result.append('N');  }	  	compilable	  [FE]  ComparisonFailure  	198	1	add
480	[BUG]  [BUGGY]          result.append('n');    result.append('N');  if(index  ==  -1)  {  result.append('n');  result.append('N');  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('N');  if(index  ==  -1)  {  result.append('n');  result.append('N');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        result.append('N');    if(index  ==  -1)  {  result.append('n');  result.append('N');  }	  	compilable	  [FE]  ComparisonFailure  	198	1	add
481	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  -  2));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,  index  -  2));	  result.append(str.substring(0,    index    +    2));    	compilable	  [FE]  StringIndexOutOfBoundsException  	77	1	replace
482	[BUG]  [BUGGY]  result.append(str.substring(0,  index  -  2));  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  -  2));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index  -  2));	  result.append(str.substring(0,    index    +    2));    	compilable	  [FE]  StringIndexOutOfBoundsException  	77	1	replace
483	[BUG]  [BUGGY]  if(index  >=  -1)  {  result.append(str.substring(index  +  1);  }  else  {  result.append(str.substring(index  +  1));  }  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  if(index  >=  -1)  {  result.append(str.substring(index  +  1);  }  else  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	if(index  >=  -1)  {  result.append(str.substring(index  +  1);  }  else  {  result.append(str.substring(index  +  1));  }	          result.append(str.substring(index    +    1));    result.append(str.substring(index    +    1));    	non-compiled	[CE]  ')'  expected	109	None	replace
484	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }	          result.append(str.substring(index    +    1));    result.append(str.substring(index    +    1));    	compilable	  [FE]  ComparisonFailure  	109	1	replace
485	[BUG]  [BUGGY]  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }	          result.append(str.substring(index    +    1));    result.append(str.substring(index    +    1));    	compilable	  [FE]  ComparisonFailure  	109	1	replace
486	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  <  0  ||  index  >  str.length())  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}  else  if(index  <  0  ||  index  >  str.length())  {	  }    else    if(index    <    0)    {    	compilable	  [FE]  ComparisonFailure  	57	1	replace
487	[BUG]  [BUGGY]  }  else  if(index  <  0  ||  index  >  str.length())  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  <  0  ||  index  >  str.length())  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  <  0  ||  index  >  str.length())  {	  }    else    if(index    <    0)    {    	compilable	  [FE]  ComparisonFailure  	57	1	replace
488	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  <  0  ||  index  >=  str.length())  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}  else  if(index  <  0  ||  index  >=  str.length())  {	  }    else    if(index    <    0)    {    	compilable	  [FE]  ComparisonFailure  	57	1	replace
489	[BUG]  [BUGGY]  }  else  if(index  <  0  ||  index  >=  str.length())  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  <  0  ||  index  >=  str.length())  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  <  0  ||  index  >=  str.length())  {	  }    else    if(index    <    0)    {    	compilable	  [FE]  ComparisonFailure  	57	1	replace
490	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('n');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    result.append('n');    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	236	1	add
491	[BUG]  [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('n');  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('n');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    result.append('n');    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	236	1	add
492	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    result.append('n');    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  ComparisonFailure  	236	1	add
493	[BUG]  [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    result.append('n');    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  ComparisonFailure  	236	1	add
494	[BUG]  [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    result.append('n');    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));	  	non-compiled	[CE]  'else'  without  'if'	236	None	add
495	[BUG]  [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('  [CE]  illegal  line  end  in  character  literal  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    result.append('n');    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('	  	non-compiled	[CE]  illegal  line  end  in  character  literal	236	None	add
496	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('n');  }  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('n');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    result.append('n');    }    result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	236	1	add
497	[BUG]  [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('n');  }  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('n');  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('n');  }  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('n');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    result.append('n');    }    result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	236	1	add
498	[BUG]  [BUGGY]  result.append('  ').append(index  +  1);  result.append('  ').append(index  +  1);  [CE]  unclosed  character  literal  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('  ').append(index  +  1);  result.append('  ').append(index  +  1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('    ').append(index    +    1);    result.append('  ').append(index  +  1);	  	non-compiled	[CE]  unclosed  character  literal	137	None	add
499	[BUG]  [BUGGY]  result.append('  ').append(index  +  1);  if(index  >=  -1)  {  result.append('  ').append(index  +  1);  }  else  {  result.append(str.substring(0,  index));  }  [CE]  unclosed  character  literal  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('  ').append(index  +  1);  if(index  >=  -1)  {  result.append('  ').append(index  +  1);  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('    ').append(index    +    1);    if(index  >=  -1)  {  result.append('  ').append(index  +  1);  }  else  {  result.append(str.substring(0,  index));  }	  	non-compiled	[CE]  unclosed  character  literal	137	None	add
500	[BUG]  [BUGGY]  result.append('  ').append(index  +  1);  if(index  ==  -1)  {  result.append('  ').append(index  +  1);  }  else  {  result.append(str.substring(0,  index));  }  [CE]  unclosed  character  literal  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('  ').append(index  +  1);  if(index  ==  -1)  {  result.append('  ').append(index  +  1);  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('    ').append(index    +    1);    if(index  ==  -1)  {  result.append('  ').append(index  +  1);  }  else  {  result.append(str.substring(0,  index));  }	  	non-compiled	[CE]  unclosed  character  literal	137	None	add
501	[BUG]  [BUGGY]  result.append('  ').append(index  +  1);  if(index  >=  -1)  {  result.append('  ').append(index  +  1);  }  [CE]  unclosed  character  literal  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('  ').append(index  +  1);  if(index  >=  -1)  {  result.append('  ').append(index  +  1);  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('    ').append(index    +    1);    if(index  >=  -1)  {  result.append('  ').append(index  +  1);  }	  	non-compiled	[CE]  unclosed  character  literal	137	None	add
502	[BUG]  [BUGGY]  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(upper));  [CE]  no  suitable  method  found  for  defaultString(int)  [FE]        ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(upper));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(upper));	  }    else    if(index    <    upper)    {    }    else    if(index    <    upper)    {    result.append(str.substring(0,    index));    result.append(StringUtils.defaultString(appendToEnd));    }    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int)	218	None	replace
503	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  result.append(str.substring(0,  lower));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    lower));    result.append(StringUtils.defaultString(appendToEnd));    result.append(str.substring(0,  lower));	  	compilable	  [FE]  ComparisonFailure  	222	1	add
504	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  result.append(str.substring(0,  lower));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  result.append(str.substring(0,  lower));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    lower));    result.append(StringUtils.defaultString(appendToEnd));    result.append(str.substring(0,  lower));	  	compilable	  [FE]  ComparisonFailure  	222	1	add
505	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    lower));    result.append(StringUtils.defaultString(appendToEnd));    result.append(str.substring(0,  index));	  	compilable	  [FE]  ComparisonFailure  	222	1	add
506	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  result.append(str.substring(0,  index));  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    lower));    result.append(StringUtils.defaultString(appendToEnd));    result.append(str.substring(0,  index));	  	compilable	  [FE]  ComparisonFailure  	222	1	add
507	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  result.append(StringUtils.defaultString(upper));  [CE]  no  suitable  method  found  for  defaultString(int)  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  result.append(StringUtils.defaultString(upper));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    lower));    result.append(StringUtils.defaultString(appendToEnd));    result.append(StringUtils.defaultString(upper));	  	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int)	222	None	add
508	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  result.append(str.substring(0,  upper));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    lower));    result.append(StringUtils.defaultString(appendToEnd));    result.append(str.substring(0,  upper));	  	compilable	  [FE]  ComparisonFailure  	222	1	add
509	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  result.append(str.substring(0,  upper));  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  result.append(str.substring(0,  upper));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    lower));    result.append(StringUtils.defaultString(appendToEnd));    result.append(str.substring(0,  upper));	  	compilable	  [FE]  ComparisonFailure  	222	1	add
510	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  result.append(StringUtils.defaultString(lower));  [CE]  no  suitable  method  found  for  defaultString(int)  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  result.append(StringUtils.defaultString(lower));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    lower));    result.append(StringUtils.defaultString(appendToEnd));    result.append(StringUtils.defaultString(lower));	  	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int)	222	None	add
511	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   "     ");  result.append( "   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(   "       ");    result.append( "   ");	  	compilable	  [FE]  ComparisonFailure  	148	1	add
512	[BUG]  [BUGGY]  result.append(   "     ");  result.append( "   ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   "     ");  result.append( "   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(   "       ");    result.append( "   ");	  	compilable	  [FE]  ComparisonFailure  	148	1	add
513	[BUG]  [BUGGY]  result.append(   "     ");  result.append('   "');  [CE]  unclosed  character  literal  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   "     ");  result.append('   "');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(   "       ");    result.append('   "');	  	non-compiled	[CE]  unclosed  character  literal	148	None	add
514	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   "     ");  result.append('  ');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(   "       ");    result.append('  ');	  	compilable	  [FE]  ComparisonFailure  	148	1	add
515	[BUG]  [BUGGY]  result.append(   "     ");  result.append('  ');  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   "     ");  result.append('  ');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(   "       ");    result.append('  ');	  	compilable	  [FE]  ComparisonFailure  	148	1	add
516	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   "     ");  result.append( ".   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(   "       ");    result.append( ".   ");	  	compilable	  [FE]  ComparisonFailure  	148	1	add
517	[BUG]  [BUGGY]  result.append(   "     ");  result.append( ".   ");  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   "     ");  result.append( ".   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(   "       ");    result.append( ".   ");	  	compilable	  [FE]  ComparisonFailure  	148	1	add
518	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]    junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(     ",     ");    result.append(',');  result.append( ",   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(       ",       ");        result.append(',');    result.append( ",   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	142	1	add
519	[BUG]  [BUGGY]          result.append(     ",     ");    result.append(',');  result.append( ",   ");  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]    junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(     ",     ");    result.append(',');  result.append( ",   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(       ",       ");        result.append(',');    result.append( ",   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	142	1	add
520	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]      junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(     ",     ");    result.append(',');  result.append(',');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(       ",       ");        result.append(',');    result.append(',');	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	142	1	add
521	[BUG]  [BUGGY]          result.append(     ",     ");    result.append(',');  result.append(',');  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]      junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(     ",     ");    result.append(',');  result.append(',');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(       ",       ");        result.append(',');    result.append(',');	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	142	1	add
522	[BUG]  [BUGGY]          result.append(     ",     ");    result.append(',');  result.append( ",');  [CE]  unclosed  string  literal  [FE]        junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(     ",     ");    result.append(',');  result.append( ",');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(       ",       ");        result.append(',');    result.append( ",');	  	non-compiled	[CE]  unclosed  string  literal	142	None	add
523	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        upper)        {        }    else    if(index!=    upper)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	122	1	add
524	[BUG]  [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index  >=  lower)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        upper)        {        }    else    if(index!=    upper)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	122	1	add
525	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        upper)        {        }    else    if(index!=    upper)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	122	1	add
526	[BUG]  [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index  ==  lower)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        upper)        {        }    else    if(index!=    upper)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	122	1	add
527	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index!=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        upper)        {        }    else    if(index!=    upper)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	122	1	add
528	[BUG]  [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index!=  lower)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index!=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        upper)        {        }    else    if(index!=    upper)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	122	1	add
529	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index  >=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        upper)        {        }    else    if(index!=    upper)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	122	1	add
530	[BUG]  [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index  >=  upper)  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index  >=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        upper)        {        }    else    if(index!=    upper)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	122	1	add
531	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index  ==  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        upper)        {        }    else    if(index!=    upper)    {    }  else  if(index  ==  upper)  {	  	compilable	  [FE]  ComparisonFailure  	122	1	add
532	[BUG]  [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index  ==  upper)  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index  ==  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        upper)        {        }    else    if(index!=    upper)    {    }  else  if(index  ==  upper)  {	  	compilable	  [FE]  ComparisonFailure  	122	1	add
533	[BUG]  [BUGGY]  }  else  if(index  >=  lower  &&  index  <  =  str.length())  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  lower  &&  index  <  =  str.length())  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  >=  lower  &&  index  <  =  str.length())  {	  }    else    if(index    >=    lower    &&    index    <    str.length())    {    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
534	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  lower  &&  index  <  str.length()  -  1)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}  else  if(index  >=  lower  &&  index  <  str.length()  -  1)  {	  }    else    if(index    >=    lower    &&    index    <    str.length())    {    	compilable	  [FE]  ComparisonFailure  	145	1	replace
535	[BUG]  [BUGGY]  }  else  if(index  >=  lower  &&  index  <  str.length()  -  1)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  lower  &&  index  <  str.length()  -  1)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  >=  lower  &&  index  <  str.length()  -  1)  {	  }    else    if(index    >=    lower    &&    index    <    str.length())    {    	compilable	  [FE]  ComparisonFailure  	145	1	replace
536	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  lower  &&  index  <  str.length())  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}  else  if(index  ==  lower  &&  index  <  str.length())  {	  }    else    if(index    >=    lower    &&    index    <    str.length())    {    	compilable	  [FE]  ComparisonFailure  	145	1	replace
537	[BUG]  [BUGGY]  }  else  if(index  ==  lower  &&  index  <  str.length())  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  lower  &&  index  <  str.length())  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  ==  lower  &&  index  <  str.length())  {	  }    else    if(index    >=    lower    &&    index    <    str.length())    {    	compilable	  [FE]  ComparisonFailure  	145	1	replace
538	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('  ').append(lower);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('  ').append(lower);	  result.append('    ').append(upper);    	compilable	  [FE]  ComparisonFailure  	185	1	replace
539	[BUG]  [BUGGY]  result.append('  ').append(lower);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('  ').append(lower);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('  ').append(lower);	  result.append('    ').append(upper);    	compilable	  [FE]  ComparisonFailure  	185	1	replace
540	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('  ').append(str.substring(0,  index));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('  ').append(str.substring(0,  index));	  result.append('    ').append(upper);    	compilable	  [FE]  StringIndexOutOfBoundsException  	185	1	replace
541	[BUG]  [BUGGY]  result.append('  ').append(str.substring(0,  index));  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('  ').append(str.substring(0,  index));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('  ').append(str.substring(0,  index));	  result.append('    ').append(upper);    	compilable	  [FE]  StringIndexOutOfBoundsException  	185	1	replace
542	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index  +  1)+  1);  result.append(str.substring(index  +  1)+  1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(index    +    1)+    1);    result.append(str.substring(index  +  1)+  1);	  	compilable	  [FE]  ComparisonFailure  	44	1	add
543	[BUG]  [BUGGY]  result.append(str.substring(index  +  1)+  1);  result.append(str.substring(index  +  1)+  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index  +  1)+  1);  result.append(str.substring(index  +  1)+  1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index    +    1)+    1);    result.append(str.substring(index  +  1)+  1);	  	compilable	  [FE]  ComparisonFailure  	44	1	add
544	[BUG]  [BUGGY]  result.append(str.substring(index  +  1)+  1);  if(index  +  1)+  1!=  0)  {  result.append(str.substring(index  +  1)+  1);  }  else  {  result.append(str.substring(index  +  1)+  1);  }  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index  +  1)+  1);  if(index  +  1)+  1!=  0)  {  result.append(str.substring(index  +  1)+  1);  }  else  {  result.append(str.substring(index  +  1)+  1);  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index    +    1)+    1);    if(index  +  1)+  1!=  0)  {  result.append(str.substring(index  +  1)+  1);  }  else  {  result.append(str.substring(index  +  1)+  1);  }	  	non-compiled	[CE]  not  a  statement	44	None	add
545	[BUG]  [BUGGY]  result.append(str.substring(index  +  1)+  1);  if(index  +  1)+  1!=  0)  {  result.append(str.substring(index  +  1)+  1);  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [CE]  not  a  statement  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index  +  1)+  1);  if(index  +  1)+  1!=  0)  {  result.append(str.substring(index  +  1)+  1);  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index    +    1)+    1);    if(index  +  1)+  1!=  0)  {  result.append(str.substring(index  +  1)+  1);  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	non-compiled	[CE]  not  a  statement	44	None	add
546	[BUG]  [BUGGY]  result.append(str.substring(index  +  1)+  1);  if(index  +  1)+  1!=  0)  {  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(index  +  1)+  1);  }  [CE]  not  a  statement  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index  +  1)+  1);  if(index  +  1)+  1!=  0)  {  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(index  +  1)+  1);  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index    +    1)+    1);    if(index  +  1)+  1!=  0)  {  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(index  +  1)+  1);  }	  	non-compiled	[CE]  not  a  statement	44	None	add
547	[BUG]  [BUGGY]  result.append(str.substring(index  +  1)+  1);  result.append(str.substring(index  +  1)+  1);  }  else  if(index  >  lower)  {  result.append(StringUtils.defaultString(appendToEnd));  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index  +  1)+  1);  result.append(str.substring(index  +  1)+  1);  }  else  if(index  >  lower)  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index    +    1)+    1);    result.append(str.substring(index  +  1)+  1);  }  else  if(index  >  lower)  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	non-compiled	[CE]  illegal  start  of  type	44	None	add
548	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  lower,  index);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,  index),  lower,  index);	  result.append(str.substring(0,    index)+    1,    lower);    	compilable	  [FE]  StringIndexOutOfBoundsException  	203	1	replace
549	[BUG]  [BUGGY]  result.append(str.substring(0,  index),  lower,  index);  [FE]  StringIndexOutOfBoundsException  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  lower,  index);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index),  lower,  index);	  result.append(str.substring(0,    index)+    1,    lower);    	compilable	  [FE]  StringIndexOutOfBoundsException  	203	1	replace
550	[BUG]  [BUGGY]  result.append(str.substring(0,  index)+  1,  upper);  [CE]  no  suitable  method  found  for  append(String,int)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index)+  1,  upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index)+  1,  upper);	  result.append(str.substring(0,    index)+    1,    lower);    	non-compiled	[CE]  no  suitable  method  found  for  append(String,int)	203	None	replace
551	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index)+  1,  lower,  upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,  index)+  1,  lower,  upper);	  result.append(str.substring(0,    index)+    1,    lower);    	compilable	  [FE]  StringIndexOutOfBoundsException  	203	1	replace
552	[BUG]  [BUGGY]  result.append(str.substring(0,  index)+  1,  lower,  upper);  [FE]  StringIndexOutOfBoundsException  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index)+  1,  lower,  upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index)+  1,  lower,  upper);	  result.append(str.substring(0,    index)+    1,    lower);    	compilable	  [FE]  StringIndexOutOfBoundsException  	203	1	replace
553	[BUG]  [BUGGY]  result.append( ".append(upper).append('  ').append(index  +  2).append('  ');  [CE]  unclosed  string  literal  [FE]          ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( ".append(upper).append('  ').append(index  +  2).append('  ');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append( ".append(upper).append('  ').append(index  +  2).append('  ');	  result.append(   ".append(upper).append('    ').append(index    +    1).append('    ');    	non-compiled	[CE]  unclosed  string  literal	216	None	replace
554	[BUG]  [BUGGY]  result.append( ".append(lower).append('  ').append(index  +  1).append('  ');  [CE]  unclosed  string  literal  [FE]            ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( ".append(lower).append('  ').append(index  +  1).append('  ');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append( ".append(lower).append('  ').append(index  +  1).append('  ');	  result.append(   ".append(upper).append('    ').append(index    +    1).append('    ');    	non-compiled	[CE]  unclosed  string  literal	216	None	replace
555	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]    junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(     ",     ");    result.append(   ",     ");  result.append( ",   ");  result.append( ",   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(       ",       ");        result.append(   ",       ");    result.append( ",   ");  result.append( ",   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	140	1	add
556	[BUG]  [BUGGY]          result.append(     ",     ");    result.append(   ",     ");  result.append( ",   ");  result.append( ",   ");  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]    junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(     ",     ");    result.append(   ",     ");  result.append( ",   ");  result.append( ",   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(       ",       ");        result.append(   ",       ");    result.append( ",   ");  result.append( ",   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	140	1	add
557	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]      junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(     ",     ");    result.append(   ",     ");  result.append( ",   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(       ",       ");        result.append(   ",       ");    result.append( ",   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	140	1	add
558	[BUG]  [BUGGY]          result.append(     ",     ");    result.append(   ",     ");  result.append( ",   ");  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]      junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(     ",     ");    result.append(   ",     ");  result.append( ",   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(       ",       ");        result.append(   ",       ");    result.append( ",   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	140	1	add
559	[BUG]  [BUGGY]  }  else  if(index  >=  0)  {  result.append(str.substring(0,  lower));  }  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  0)  {  result.append(str.substring(0,  lower));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  >=  0)  {  result.append(str.substring(0,  lower));  }	  }    else    if(index    >    0)    {    result.append(str.substring(0,    lower));    	non-compiled	[CE]  illegal  start  of  type	167	None	replace
560	[BUG]  [BUGGY]  }  else  if(index  ==  0)  {  result.append(str.substring(0,  lower));  }  [CE]  illegal  start  of  type  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  0)  {  result.append(str.substring(0,  lower));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  ==  0)  {  result.append(str.substring(0,  lower));  }	  }    else    if(index    >    0)    {    result.append(str.substring(0,    lower));    	non-compiled	[CE]  illegal  start  of  type	167	None	replace
561	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));	  }    else    if(index    <    upper)    {    }    else    if(index    <    upper)    {    result.append(str.substring(0,    lower));    result.append(StringUtils.defaultString(appendToEnd));    	compilable	  [FE]  ComparisonFailure  	223	1	replace
562	[BUG]  [BUGGY]  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));	  }    else    if(index    <    upper)    {    }    else    if(index    <    upper)    {    result.append(str.substring(0,    lower));    result.append(StringUtils.defaultString(appendToEnd));    	compilable	  [FE]  ComparisonFailure  	223	1	replace
563	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]    junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( ",null ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append( ",null ");	  result.append(   ",n   ");    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	132	1	replace
564	[BUG]  [BUGGY]  result.append( ",null ");  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]    junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( ",null ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append( ",null ");	  result.append(   ",n   ");    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	132	1	replace
565	[BUG]  [BUGGY]  result.append('n',  index,  upper);  [CE]  no  suitable  method  found  for  append(char,int,int)  [FE]        ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('n',  index,  upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('n',  index,  upper);	  result.append('n',    upper);    	non-compiled	[CE]  no  suitable  method  found  for  append(char,int,int)	152	None	replace
566	[BUG]  [BUGGY]  result.append('n',  lower,  upper);  [CE]  no  suitable  method  found  for  append(char,int,int)  [FE]          ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('n',  lower,  upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('n',  lower,  upper);	  result.append('n',    upper);    	non-compiled	[CE]  no  suitable  method  found  for  append(char,int,int)	152	None	replace
567	[BUG]  [BUGGY]  result.append('n',  lower);  [CE]  no  suitable  method  found  for  append(char,int)  [FE]            ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('n',  lower);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('n',  lower);	  result.append('n',    upper);    	non-compiled	[CE]  no  suitable  method  found  for  append(char,int)	152	None	replace
568	[BUG]  [BUGGY]  result.append('n',  upper  +  1);  [CE]  no  suitable  method  found  for  append(char,int)  [FE]              ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('n',  upper  +  1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('n',  upper  +  1);	  result.append('n',    upper);    	non-compiled	[CE]  no  suitable  method  found  for  append(char,int)	152	None	replace
569	[BUG]  [BUGGY]  result.append( ",  lower= " ");  [CE]  unclosed  string  literal  [FE]    junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( ",  lower= " ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append( ",  lower= " ");	  result.append(   ",    lower=   ");    	non-compiled	[CE]  unclosed  string  literal	229	None	replace
570	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]      junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( ",  upper= ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append( ",  upper= ");	  result.append(   ",    lower=   ");    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	229	1	replace
571	[BUG]  [BUGGY]  result.append( ",  upper= ");  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]      junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( ",  upper= ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append( ",  upper= ");	  result.append(   ",    lower=   ");    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	229	1	replace
572	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        lower)        {        }    else    if(index    >=    upper)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	32	1	add
573	[BUG]  [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >=  lower)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        lower)        {        }    else    if(index    >=    upper)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	32	1	add
574	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        lower)        {        }    else    if(index    >=    upper)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	32	1	add
575	[BUG]  [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >=  upper)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        lower)        {        }    else    if(index    >=    upper)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	32	1	add
576	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  >=  upper)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        lower)        {        }    else    if(index    >=    upper)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	32	1	add
577	[BUG]  [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  >=  upper)  {  }  else  if(index  ==  lower)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  >=  upper)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        lower)        {        }    else    if(index    >=    upper)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	32	1	add
578	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  >=  upper)  {  }  else  if(index!=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        lower)        {        }    else    if(index    >=    upper)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	32	1	add
579	[BUG]  [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  >=  upper)  {  }  else  if(index!=  lower)  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  >=  upper)  {  }  else  if(index!=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        lower)        {        }    else    if(index    >=    upper)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	32	1	add
580	[BUG]  [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >>  lower)  {  [CE]  incompatible  types  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >>  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        lower)        {        }    else    if(index    >=    upper)    {    }  else  if(index  >>  lower)  {	  	non-compiled	[CE]  incompatible  types	32	None	add
581	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   "  lower=   ");  result.append(   "  lower=   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(   "    lower=   ");    result.append(   "  lower=   ");	  	compilable	  [FE]  ComparisonFailure  	190	1	add
582	[BUG]  [BUGGY]  result.append(   "  lower=   ");  result.append(   "  lower=   ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   "  lower=   ");  result.append(   "  lower=   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(   "    lower=   ");    result.append(   "  lower=   ");	  	compilable	  [FE]  ComparisonFailure  	190	1	add
583	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  lower=    [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   "  lower=   ");  result.append( ",  lower=   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(   "    lower=   ");    result.append( ",  lower=   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    lower=    	190	1	add
584	[BUG]  [BUGGY]  result.append(   "  lower=   ");  result.append( ",  lower=   ");  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  lower=    [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   "  lower=   ");  result.append( ",  lower=   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(   "    lower=   ");    result.append( ",  lower=   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    lower=    	190	1	add
585	[BUG]  [BUGGY]  result.append(   "  lower=   ");  result.append('  lower=');  [CE]  unclosed  character  literal  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   "  lower=   ");  result.append('  lower=');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(   "    lower=   ");    result.append('  lower=');	  	non-compiled	[CE]  unclosed  character  literal	190	None	add
586	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]    junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   ",  lower=   ");  result.append( ",  lower=   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(   ",    lower=   ");    result.append( ",  lower=   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	228	1	add
587	[BUG]  [BUGGY]  result.append(   ",  lower=   ");  result.append( ",  lower=   ");  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]    junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   ",  lower=   ");  result.append( ",  lower=   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(   ",    lower=   ");    result.append( ",  lower=   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	228	1	add
588	[BUG]  [BUGGY]  result.append(   ",  lower=   ");  result.append(',  lower=   ");  [CE]  unclosed  character  literal  [FE]      junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   ",  lower=   ");  result.append(',  lower=   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(   ",    lower=   ");    result.append(',  lower=   ");	  	non-compiled	[CE]  unclosed  character  literal	228	None	add
589	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]        junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   ",  lower=   ");  result.append( ".,  lower=   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(   ",    lower=   ");    result.append( ".,  lower=   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	228	1	add
590	[BUG]  [BUGGY]  result.append(   ",  lower=   ");  result.append( ".,  lower=   ");  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]        junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   ",  lower=   ");  result.append( ".,  lower=   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(   ",    lower=   ");    result.append( ".,  lower=   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	228	1	add
591	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    else    {    result.append(str.substring(index,    lower));    }    result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(	  	non-compiled	[CE]  illegal  start  of  expression	173	None	add
592	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    else    {    result.append(str.substring(index,    lower));    }    result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(	  	non-compiled	[CE]  illegal  start  of  expression	173	None	add
593	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring  [CE]  ')'  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    else    {    result.append(str.substring(index,    lower));    }    result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring	  	non-compiled	[CE]  ')'  expected	173	None	add
594	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(index,  lower));  if(index!=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(index,  lower));  if(index!=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    else    {    result.append(str.substring(index,    lower));    }    result.append(str.substring(index,  lower));  if(index!=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(	  	non-compiled	[CE]  illegal  start  of  expression	173	None	add
595	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(index  [CE]  ')'  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(index  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    else    {    result.append(str.substring(index,    lower));    }    result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(index	  	non-compiled	[CE]  ')'  expected	173	None	add
596	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  lower  +  1));  result.append(str.substring(index,  lower  +  1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(index,    lower    +    1));    result.append(str.substring(index,  lower  +  1));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	114	1	add
597	[BUG]  [BUGGY]  result.append(str.substring(index,  lower  +  1));  result.append(str.substring(index,  lower  +  1));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  lower  +  1));  result.append(str.substring(index,  lower  +  1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index,    lower    +    1));    result.append(str.substring(index,  lower  +  1));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	114	1	add
598	[BUG]  [BUGGY]  result.append(str.substring(index,  lower  +  1));  if(str.substring(index,  lower  +  1))  {  result.append(str.substring(index,  lower  +  1));  }  else  {  result.append(str.substring(index,  lower  +  1));  }  [CE]  incompatible  types  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  lower  +  1));  if(str.substring(index,  lower  +  1))  {  result.append(str.substring(index,  lower  +  1));  }  else  {  result.append(str.substring(index,  lower  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index,    lower    +    1));    if(str.substring(index,  lower  +  1))  {  result.append(str.substring(index,  lower  +  1));  }  else  {  result.append(str.substring(index,  lower  +  1));  }	  	non-compiled	[CE]  incompatible  types	114	None	add
599	[BUG]  [BUGGY]  result.append(str.substring(index,  lower  +  1));  if(str.substring(index,  lower  +  1))  {  result.append(str.substring(index,  lower  +  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [CE]  incompatible  types  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  lower  +  1));  if(str.substring(index,  lower  +  1))  {  result.append(str.substring(index,  lower  +  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index,    lower    +    1));    if(str.substring(index,  lower  +  1))  {  result.append(str.substring(index,  lower  +  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	non-compiled	[CE]  incompatible  types	114	None	add
600	[BUG]  [BUGGY]  result.append(str.substring(index,  lower  +  1));  if(str.substring(index,  lower  +  1))  {  result.append(str.substring(index,  lower  +  1));  }  [CE]  incompatible  types  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  lower  +  1));  if(str.substring(index,  lower  +  1))  {  result.append(str.substring(index,  lower  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index,    lower    +    1));    if(str.substring(index,  lower  +  1))  {  result.append(str.substring(index,  lower  +  1));  }	  	non-compiled	[CE]  incompatible  types	114	None	add
601	[BUG]  [BUGGY]  result.append(str.substring(index,  lower  +  1));  if(str.substring(index,  lower  +  1))  {  result.append(str.substring(index,  lower  +  1);  }  else  {  result.append(str.substring(index,  lower  +  1));  }  [CE]  ')'  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  lower  +  1));  if(str.substring(index,  lower  +  1))  {  result.append(str.substring(index,  lower  +  1);  }  else  {  result.append(str.substring(index,  lower  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index,    lower    +    1));    if(str.substring(index,  lower  +  1))  {  result.append(str.substring(index,  lower  +  1);  }  else  {  result.append(str.substring(index,  lower  +  1));  }	  	non-compiled	[CE]  ')'  expected	114	None	add
602	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  start  0  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  +  1),  lower,  upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,  index  +  1),  lower,  upper);	  result.append(str.substring(0,    index    +    1),    lower);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  start  0  	242	1	replace
603	[BUG]  [BUGGY]  result.append(str.substring(0,  index  +  1),  lower,  upper);  [FE]  java.lang.IndexOutOfBoundsException:  start  0  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  +  1),  lower,  upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index  +  1),  lower,  upper);	  result.append(str.substring(0,    index    +    1),    lower);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  start  0  	242	1	replace
604	[BUG]  [BUGGY]  result.append(str.substring(0,  index  +  1),  upper);  [CE]  no  suitable  method  found  for  append(String,int)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  +  1),  upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index  +  1),  upper);	  result.append(str.substring(0,    index    +    1),    lower);    	non-compiled	[CE]  no  suitable  method  found  for  append(String,int)	242	None	replace
605	[BUG]  [BUGGY]  result.append(str.substring(0,  index  +  1),  lower,  appendToEnd);  [CE]  no  suitable  method  found  for  append(String,int,String)  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  +  1),  lower,  appendToEnd);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index  +  1),  lower,  appendToEnd);	  result.append(str.substring(0,    index    +    1),    lower);    	non-compiled	[CE]  no  suitable  method  found  for  append(String,int,String)	242	None	replace
606	[BUG]  [BUGGY]  result.append(str.substring(0,  index  +  1),  lower,  top);  [CE]  cannot  find  symbol  top  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  +  1),  lower,  top);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index  +  1),  lower,  top);	  result.append(str.substring(0,    index    +    1),    lower);    	non-compiled	[CE]  cannot  find  symbol  top	242	None	replace
607	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  }	          result.append('    ');    if(index    >=    -1)    {    result.append('    ');    }    else    {    result.append(str.substring(0,    index));    }    	compilable	  [FE]  ComparisonFailure  	2	1	replace
608	[BUG]  [BUGGY]  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index));  }	          result.append('    ');    if(index    >=    -1)    {    result.append('    ');    }    else    {    result.append(str.substring(0,    index));    }    	compilable	  [FE]  ComparisonFailure  	2	1	replace
609	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index  +  1));  }	          result.append('    ');    if(index    >=    -1)    {    result.append('    ');    }    else    {    result.append(str.substring(0,    index));    }    	compilable	  [FE]  ComparisonFailure  	2	1	replace
610	[BUG]  [BUGGY]  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index  +  1));  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index  +  1));  }	          result.append('    ');    if(index    >=    -1)    {    result.append('    ');    }    else    {    result.append(str.substring(0,    index));    }    	compilable	  [FE]  ComparisonFailure  	2	1	replace
611	[BUG]  [BUGGY]  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index),  lower);  }  [CE]  no  suitable  method  found  for  append(String,int)  [FE]              ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index),  lower);  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append(str.substring(0,  index),  lower);  }	          result.append('    ');    if(index    >=    -1)    {    result.append('    ');    }    else    {    result.append(str.substring(0,    index));    }    	non-compiled	[CE]  no  suitable  method  found  for  append(String,int)	2	None	replace
612	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(1,  index));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(1,  index));	  result.append(str.substring(1,    lower));    	compilable	  [FE]  StringIndexOutOfBoundsException  	235	1	replace
613	[BUG]  [BUGGY]  result.append(str.substring(1,  index));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(1,  index));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(1,  index));	  result.append(str.substring(1,    lower));    	compilable	  [FE]  StringIndexOutOfBoundsException  	235	1	replace
614	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	179	1	add
615	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	179	1	add
616	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(index,  lower));  if(index!=  -1)  {  result.append(str.substring(index,  lower));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    result.append(str.substring(index,  lower));  if(index!=  -1)  {  result.append(str.substring(index,  lower));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	179	1	add
617	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(index,  lower));  if(index!=  -1)  {  result.append(str.substring(index,  lower));  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(index,  lower));  if(index!=  -1)  {  result.append(str.substring(index,  lower));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    result.append(str.substring(index,  lower));  if(index!=  -1)  {  result.append(str.substring(index,  lower));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	179	1	add
618	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(0,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    result.append(str.substring(0,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	179	1	add
619	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(0,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(0,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    result.append(str.substring(0,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	179	1	add
620	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(index,  lower));  if(index  >>  -1)  {  result.append(str.substring(index,  lower));  }  [CE]  incompatible  types  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(index,  lower));  if(index  >>  -1)  {  result.append(str.substring(index,  lower));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    result.append(str.substring(index,  lower));  if(index  >>  -1)  {  result.append(str.substring(index,  lower));  }	  	non-compiled	[CE]  incompatible  types	179	None	add
621	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  [CE]  reached  end  of  file  while  parsing  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	179	None	add
622	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('m');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('m');	          result.append('n');    result.append('m');    	compilable	  [FE]  ComparisonFailure  	195	1	replace
623	[BUG]  [BUGGY]  result.append('m');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('m');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('m');	          result.append('n');    result.append('m');    	compilable	  [FE]  ComparisonFailure  	195	1	replace
624	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  lower)  {  }  else  if(index  <  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        <        upper)        {        }    else    if(index    <    lower)    {    }  else  if(index  <  lower)  {	  	compilable	  [FE]  ComparisonFailure  	98	1	add
625	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  lower)  {  }  else  if(index  <  lower)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  lower)  {  }  else  if(index  <  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    lower)    {    }  else  if(index  <  lower)  {	  	compilable	  [FE]  ComparisonFailure  	98	1	add
626	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  lower)  {  }  else  if(index  <  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        <        upper)        {        }    else    if(index    <    lower)    {    }  else  if(index  <  upper)  {	  	compilable	  [FE]  ComparisonFailure  	98	1	add
627	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  lower)  {  }  else  if(index  <  upper)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  lower)  {  }  else  if(index  <  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    lower)    {    }  else  if(index  <  upper)  {	  	compilable	  [FE]  ComparisonFailure  	98	1	add
628	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  lower)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        <        upper)        {        }    else    if(index    <    lower)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	98	1	add
629	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  lower)  {  }  else  if(index  >=  lower)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  lower)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    lower)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	98	1	add
630	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  lower)  {  }  else  if(index  >  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        <        upper)        {        }    else    if(index    <    lower)    {    }  else  if(index  >  lower)  {	  	compilable	  [FE]  ComparisonFailure  	98	1	add
631	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  lower)  {  }  else  if(index  >  lower)  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  lower)  {  }  else  if(index  >  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    lower)    {    }  else  if(index  >  lower)  {	  	compilable	  [FE]  ComparisonFailure  	98	1	add
632	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  lower)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        <        upper)        {        }    else    if(index    <    lower)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	98	1	add
633	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  lower)  {  }  else  if(index  ==  lower)  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  lower)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    lower)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	98	1	add
634	[BUG]  [BUGGY]  }  else  if(index  <  0)  {  result.append(StringUtils.defaultString(upper));  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  <  0)  {  result.append(StringUtils.defaultString(upper));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  <  0)  {  result.append(StringUtils.defaultString(upper));  }	  }    else    if(index    >    0)    {    result.append(StringUtils.defaultString(upper));    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
635	[BUG]  [BUGGY]  }  else  if(index  >=  0)  {  result.append(StringUtils.defaultString(upper));  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  0)  {  result.append(StringUtils.defaultString(upper));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  >=  0)  {  result.append(StringUtils.defaultString(upper));  }	  }    else    if(index    >    0)    {    result.append(StringUtils.defaultString(upper));    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
636	[BUG]  [BUGGY]  }  else  if(index  ==  0)  {  result.append(StringUtils.defaultString(upper));  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  0)  {  result.append(StringUtils.defaultString(upper));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  ==  0)  {  result.append(StringUtils.defaultString(upper));  }	  }    else    if(index    >    0)    {    result.append(StringUtils.defaultString(upper));    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
637	[BUG]  [BUGGY]  }  else  if(index  >  0)  {  result.append(StringUtils.defaultString(lower,  upper));  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >  0)  {  result.append(StringUtils.defaultString(lower,  upper));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  >  0)  {  result.append(StringUtils.defaultString(lower,  upper));  }	  }    else    if(index    >    0)    {    result.append(StringUtils.defaultString(upper));    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
638	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  lower,  upper  +  1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,  index),  lower,  upper  +  1);	  result.append(str.substring(0,    index),    lower    +    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	204	1	replace
639	[BUG]  [BUGGY]  result.append(str.substring(0,  index),  lower,  upper  +  1);  [FE]  StringIndexOutOfBoundsException  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  lower,  upper  +  1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index),  lower,  upper  +  1);	  result.append(str.substring(0,    index),    lower    +    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	204	1	replace
640	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  lower  +  1,  str.length());  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,  index),  lower  +  1,  str.length());	  result.append(str.substring(0,    index),    lower    +    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	204	1	replace
641	[BUG]  [BUGGY]  result.append(str.substring(0,  index),  lower  +  1,  str.length());  [FE]  StringIndexOutOfBoundsException  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  lower  +  1,  str.length());  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index),  lower  +  1,  str.length());	  result.append(str.substring(0,    index),    lower    +    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	204	1	replace
642	[BUG]  [BUGGY]  result.append(str.substring(0,  index),  upper  +  1);  [CE]  no  suitable  method  found  for  append(String,int)  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  upper  +  1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index),  upper  +  1);	  result.append(str.substring(0,    index),    lower    +    1);    	non-compiled	[CE]  no  suitable  method  found  for  append(String,int)	204	None	replace
643	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  lower,  index  +  1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,  index),  lower,  index  +  1);	  result.append(str.substring(0,    index),    lower    +    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	204	1	replace
644	[BUG]  [BUGGY]  result.append(str.substring(0,  index),  lower,  index  +  1);  [FE]  StringIndexOutOfBoundsException  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  lower,  index  +  1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index),  lower,  index  +  1);	  result.append(str.substring(0,    index),    lower    +    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	204	1	replace
645	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  -  1),  lower,  upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,  index  -  1),  lower,  upper);	  result.append(str.substring(0,    index),    lower,    upper);    	compilable	  [FE]  StringIndexOutOfBoundsException  	91	1	replace
646	[BUG]  [BUGGY]  result.append(str.substring(0,  index  -  1),  lower,  upper);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  -  1),  lower,  upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index  -  1),  lower,  upper);	  result.append(str.substring(0,    index),    lower,    upper);    	compilable	  [FE]  StringIndexOutOfBoundsException  	91	1	replace
647	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index!=  lower)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index!=        upper)        {        }    else    if(index!=    lower)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	50	1	add
648	[BUG]  [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index!=  lower)  {  }  else  if(index  >=  lower)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index!=  lower)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index!=        upper)        {        }    else    if(index!=    lower)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	50	1	add
649	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index!=  lower)  {  }  else  if(index!=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index!=        upper)        {        }    else    if(index!=    lower)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	50	1	add
650	[BUG]  [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index!=  lower)  {  }  else  if(index!=  lower)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index!=  lower)  {  }  else  if(index!=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index!=        upper)        {        }    else    if(index!=    lower)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	50	1	add
651	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index!=  lower)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index!=        upper)        {        }    else    if(index!=    lower)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	50	1	add
652	[BUG]  [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index!=  lower)  {  }  else  if(index  ==  lower)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index!=  lower)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index!=        upper)        {        }    else    if(index!=    lower)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	50	1	add
653	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index!=  lower)  {  }  else  if(index  >=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index!=        upper)        {        }    else    if(index!=    lower)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	50	1	add
654	[BUG]  [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index!=  lower)  {  }  else  if(index  >=  upper)  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index!=  lower)  {  }  else  if(index  >=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index!=        upper)        {        }    else    if(index!=    lower)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	50	1	add
655	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index!=  lower)  {  }  else  if(index!=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index!=        upper)        {        }    else    if(index!=    lower)    {    }  else  if(index!=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	50	1	add
656	[BUG]  [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index!=  lower)  {  }  else  if(index!=  upper)  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index!=  lower)  {  }  else  if(index!=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index!=        upper)        {        }    else    if(index!=    lower)    {    }  else  if(index!=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	50	1	add
657	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    result.append(str.substring(index,  upper));  result.append(str.substring(index,  lower));  result.append(str.substring(index,  upper));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index,        lower));        result.append(str.substring(index,    upper));    result.append(str.substring(index,  lower));  result.append(str.substring(index,  upper));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	224	1	add
658	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    result.append(str.substring(index,  upper));  result.append(str.substring(index,  lower));  result.append(str.substring(index,  upper));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    result.append(str.substring(index,  upper));  result.append(str.substring(index,  lower));  result.append(str.substring(index,  upper));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        result.append(str.substring(index,    upper));    result.append(str.substring(index,  lower));  result.append(str.substring(index,  upper));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	224	1	add
659	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    result.append(str.substring(index,  upper));  result.append(str.substring(0,  lower));  result.append(str.substring(index,  upper));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index,        lower));        result.append(str.substring(index,    upper));    result.append(str.substring(0,  lower));  result.append(str.substring(index,  upper));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	224	1	add
660	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    result.append(str.substring(index,  upper));  result.append(str.substring(0,  lower));  result.append(str.substring(index,  upper));  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    result.append(str.substring(index,  upper));  result.append(str.substring(0,  lower));  result.append(str.substring(index,  upper));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        result.append(str.substring(index,    upper));    result.append(str.substring(0,  lower));  result.append(str.substring(index,  upper));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	224	1	add
661	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    result.append(str.substring(index,  upper));  Result.append(str.substring(index,  lower));  result.append(str.substring(index,  upper));  [CE]  cannot  find  symbol  Result  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    result.append(str.substring(index,  upper));  Result.append(str.substring(index,  lower));  result.append(str.substring(index,  upper));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        result.append(str.substring(index,    upper));    Result.append(str.substring(index,  lower));  result.append(str.substring(index,  upper));	  	non-compiled	[CE]  cannot  find  symbol  Result	224	None	add
662	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    index));    result.append(StringUtils.defaultString(appendToEnd));    result.append(str.substring(0,  index));	  	compilable	  [FE]  ComparisonFailure  	220	1	add
663	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  result.append(str.substring(0,  index));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    index));    result.append(StringUtils.defaultString(appendToEnd));    result.append(str.substring(0,  index));	  	compilable	  [FE]  ComparisonFailure  	220	1	add
664	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  result.append(StringUtils.defaultString(upper));  [CE]  no  suitable  method  found  for  defaultString(int)  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  result.append(StringUtils.defaultString(upper));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    index));    result.append(StringUtils.defaultString(appendToEnd));    result.append(StringUtils.defaultString(upper));	  	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int)	220	None	add
665	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  result.append(StringUtils.defaultString(lower));  [CE]  no  suitable  method  found  for  defaultString(int)  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  result.append(StringUtils.defaultString(lower));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    index));    result.append(StringUtils.defaultString(appendToEnd));    result.append(StringUtils.defaultString(lower));	  	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int)	220	None	add
666	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  result.append(str.substring(0,  lower));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    index));    result.append(StringUtils.defaultString(appendToEnd));    result.append(str.substring(0,  lower));	  	compilable	  [FE]  ComparisonFailure  	220	1	add
667	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  result.append(str.substring(0,  lower));  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  result.append(str.substring(0,  lower));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    index));    result.append(StringUtils.defaultString(appendToEnd));    result.append(str.substring(0,  lower));	  	compilable	  [FE]  ComparisonFailure  	220	1	add
668	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  result.append(StrUtils.defaultString(upper));  [CE]  cannot  find  symbol  StrUtils  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  result.append(StrUtils.defaultString(upper));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    index));    result.append(StringUtils.defaultString(appendToEnd));    result.append(StrUtils.defaultString(upper));	  	non-compiled	[CE]  cannot  find  symbol  StrUtils	220	None	add
669	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(lower,  index),  upper);  [CE]  no  suitable  method  found  for  defaultString(int,int)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(StringUtils.defaultString(lower,  index),  upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(StringUtils.defaultString(lower,  index),  upper);	  result.append(StringUtils.defaultString(lower,    index));    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int,int)	150	None	replace
670	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(lower,  index),  lower);  [CE]  no  suitable  method  found  for  defaultString(int,int)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(StringUtils.defaultString(lower,  index),  lower);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(StringUtils.defaultString(lower,  index),  lower);	  result.append(StringUtils.defaultString(lower,    index));    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int,int)	150	None	replace
671	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(upper,  index));  [CE]  no  suitable  method  found  for  defaultString(int,int)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(StringUtils.defaultString(upper,  index));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(StringUtils.defaultString(upper,  index));	  result.append(StringUtils.defaultString(lower,    index));    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int,int)	150	None	replace
672	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(lower,  index  +  1));  [CE]  no  suitable  method  found  for  defaultString(int,int)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(StringUtils.defaultString(lower,  index  +  1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(StringUtils.defaultString(lower,  index  +  1));	  result.append(StringUtils.defaultString(lower,    index));    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int,int)	150	None	replace
673	[BUG]  [BUGGY]  result.append(''+str.substring(0,  index  +  1));  [CE]  empty  character  literal  [FE]            ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(''+str.substring(0,  index  +  1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(''+str.substring(0,  index  +  1));	  result.append(''+    str.substring(0,    index));    	non-compiled	[CE]  empty  character  literal	139	None	replace
674	[BUG]  [BUGGY]  result.append(''+str.substring(0,  index),  lower);  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(''+str.substring(0,  index),  lower);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(''+str.substring(0,  index),  lower);	  result.append(''+    str.substring(0,    index));    	non-compiled	[CE]  empty  character  literal	139	None	replace
675	[BUG]  [BUGGY]  result.append(''+str.substring(0,  index  -  1));  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(''+str.substring(0,  index  -  1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(''+str.substring(0,  index  -  1));	  result.append(''+    str.substring(0,    index));    	non-compiled	[CE]  empty  character  literal	139	None	replace
676	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append( ",   ");  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    else    {    result.append(   ",   ");    }    result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append( ",   ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	175	1	add
677	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append( ",   ");  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append( ",   ");  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    else    {    result.append(   ",   ");    }    result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append( ",   ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	175	1	add
678	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    else    {    result.append(   ",   ");    }    result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(	  	non-compiled	[CE]  illegal  start  of  expression	175	None	add
679	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(index,  lower));  if(index!=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append( ",   ");  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    else    {    result.append(   ",   ");    }    result.append(str.substring(index,  lower));  if(index!=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append( ",   ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	175	1	add
680	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(index,  lower));  if(index!=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append( ",   ");  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(index,  lower));  if(index!=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append( ",   ");  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    else    {    result.append(   ",   ");    }    result.append(str.substring(index,  lower));  if(index!=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append( ",   ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	175	1	add
681	[BUG]  [BUGGY]  result.append(lower.substring(index,  upper));  [CE]  int  cannot  be  dereferenced  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(lower.substring(index,  upper));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(lower.substring(index,  upper));	          result.append(str.substring(index,    lower));    result.append(str.substring(index,    upper));    	non-compiled	[CE]  int  cannot  be  dereferenced	225	None	replace
682	[BUG]  [BUGGY]  result.append( ".append(upper).append( ", ".append(index  +  1).append('  ');  [CE]  unclosed  string  literal  [FE]            ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( ".append(upper).append( ", ".append(index  +  1).append('  ');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append( ".append(upper).append( ", ".append(index  +  1).append('  ');	  result.append(   ".append(upper).append(   ",   ").append(index    +    1).append('    ');    	non-compiled	[CE]  unclosed  string  literal	217	None	replace
683	[BUG]  [BUGGY]  result.append( ".append(upper).append( ",   ").append(index  +  2).append('  ');  [CE]  unclosed  string  literal  [FE]              ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( ".append(upper).append( ",   ").append(index  +  2).append('  ');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append( ".append(upper).append( ",   ").append(index  +  2).append('  ');	  result.append(   ".append(upper).append(   ",   ").append(index    +    1).append('    ');    	non-compiled	[CE]  unclosed  string  literal	217	None	replace
684	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        ==        upper)        {        }    else    if(index    ==    upper)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	6	1	add
685	[BUG]  [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  ==  lower)  {  [FE]  ComparisonFailure  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        ==        upper)        {        }    else    if(index    ==    upper)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	6	1	add
686	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        ==        upper)        {        }    else    if(index    ==    upper)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	6	1	add
687	[BUG]  [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  >=  lower)  {  [FE]  ComparisonFailure  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        ==        upper)        {        }    else    if(index    ==    upper)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	6	1	add
688	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  ==  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        ==        upper)        {        }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {	  	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	add
689	[BUG]  [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  ==  upper)  {  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  ==  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        ==        upper)        {        }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {	  	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	add
690	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  ==  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        ==        upper)        {        }    else    if(index    ==    upper)    {    }  else  if(index  ==  0)  {	  	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	add
691	[BUG]  [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  ==  0)  {  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  ==  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        ==        upper)        {        }    else    if(index    ==    upper)    {    }  else  if(index  ==  0)  {	  	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	add
692	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  <  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        ==        upper)        {        }    else    if(index    ==    upper)    {    }  else  if(index  <  lower)  {	  	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	add
693	[BUG]  [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  <  lower)  {  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  <  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        ==        upper)        {        }    else    if(index    ==    upper)    {    }  else  if(index  <  lower)  {	  	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	add
694	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	120	1	add
695	[BUG]  [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >=  lower)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	120	1	add
696	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	120	1	add
697	[BUG]  [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  ==  lower)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	120	1	add
698	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	120	1	add
699	[BUG]  [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >=  upper)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	120	1	add
700	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index!=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	120	1	add
701	[BUG]  [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index!=  lower)  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index!=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	120	1	add
702	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index  >  upper)  {	  	compilable	  [FE]  ComparisonFailure  	120	1	add
703	[BUG]  [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >  upper)  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index  >  upper)  {	  	compilable	  [FE]  ComparisonFailure  	120	1	add
704	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(lower),  index,  upper);  [CE]  no  suitable  method  found  for  defaultString(int)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(StringUtils.defaultString(lower),  index,  upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(StringUtils.defaultString(lower),  index,  upper);	  result.append(StringUtils.defaultString(lower),    upper);    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int)	104	None	replace
705	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    }  else  if(index  >  0)  {  }  else  if(index  >  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >        0)        {        }    else    if(index    >    0)    {    }  else  if(index  >  0)  {	  	compilable	  [FE]  ComparisonFailure  	18	1	add
706	[BUG]  [BUGGY]  }    else    if(index    >    0)    {    }  else  if(index  >  0)  {  }  else  if(index  >  0)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    }  else  if(index  >  0)  {  }  else  if(index  >  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >        0)        {        }    else    if(index    >    0)    {    }  else  if(index  >  0)  {	  	compilable	  [FE]  ComparisonFailure  	18	1	add
707	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    }  else  if(index  >  0)  {  }  else  if(index  <  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >        0)        {        }    else    if(index    >    0)    {    }  else  if(index  <  0)  {	  	compilable	  [FE]  ComparisonFailure  	18	1	add
708	[BUG]  [BUGGY]  }    else    if(index    >    0)    {    }  else  if(index  >  0)  {  }  else  if(index  <  0)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    }  else  if(index  >  0)  {  }  else  if(index  <  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >        0)        {        }    else    if(index    >    0)    {    }  else  if(index  <  0)  {	  	compilable	  [FE]  ComparisonFailure  	18	1	add
709	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    }  else  if(index  >  0)  {  }  else  if(index  >  1)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >        0)        {        }    else    if(index    >    0)    {    }  else  if(index  >  1)  {	  	compilable	  [FE]  ComparisonFailure  	18	1	add
710	[BUG]  [BUGGY]  }    else    if(index    >    0)    {    }  else  if(index  >  0)  {  }  else  if(index  >  1)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    }  else  if(index  >  0)  {  }  else  if(index  >  1)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >        0)        {        }    else    if(index    >    0)    {    }  else  if(index  >  1)  {	  	compilable	  [FE]  ComparisonFailure  	18	1	add
711	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    }  else  if(index  >  0)  {  }  else  if(index  >=  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >        0)        {        }    else    if(index    >    0)    {    }  else  if(index  >=  0)  {	  	compilable	  [FE]  ComparisonFailure  	18	1	add
712	[BUG]  [BUGGY]  }    else    if(index    >    0)    {    }  else  if(index  >  0)  {  }  else  if(index  >=  0)  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    }  else  if(index  >  0)  {  }  else  if(index  >=  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >        0)        {        }    else    if(index    >    0)    {    }  else  if(index  >=  0)  {	  	compilable	  [FE]  ComparisonFailure  	18	1	add
713	[BUG]  [BUGGY]  result.append(str.substring(0,  index),  lower,  upper,  appendToEnd);  [CE]  no  suitable  method  found  for  append(String,int,int,String)  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  lower,  upper,  appendToEnd);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index),  lower,  upper,  appendToEnd);	  result.append(str.substring(0,    index),    lower,    appendToEnd);    	non-compiled	[CE]  no  suitable  method  found  for  append(String,int,int,String)	93	None	replace
714	[BUG]  [BUGGY]  result.append(str.substring(0,  index),  lower,  appendToEnd,  upper);  [CE]  no  suitable  method  found  for  append(String,int,String,int)  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  lower,  appendToEnd,  upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index),  lower,  appendToEnd,  upper);	  result.append(str.substring(0,    index),    lower,    appendToEnd);    	non-compiled	[CE]  no  suitable  method  found  for  append(String,int,String,int)	93	None	replace
715	[BUG]  [BUGGY]  result.append(str.substring(0,  index),  upper,  appendToEnd);  [CE]  no  suitable  method  found  for  append(String,int,String)  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  upper,  appendToEnd);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index),  upper,  appendToEnd);	  result.append(str.substring(0,    index),    lower,    appendToEnd);    	non-compiled	[CE]  no  suitable  method  found  for  append(String,int,String)	93	None	replace
716	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(0,  index));  }  result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(0,  index));  }  result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    else    {    result.append(str.substring(0,    index));    }    result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(	  	non-compiled	[CE]  illegal  start  of  expression	177	None	add
717	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(0,  index));  }  result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(0,  index));  }  result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    else    {    result.append(str.substring(0,    index));    }    result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(	  	non-compiled	[CE]  illegal  start  of  expression	177	None	add
718	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(0,  index));  }  result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(0,  index));  }  result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    else    {    result.append(str.substring(0,    index));    }    result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(	  	non-compiled	[CE]  illegal  start  of  expression	177	None	add
719	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(0,  index));  }  result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(0,  index));  }  result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    else    {    result.append(str.substring(0,    index));    }    result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(	  	non-compiled	[CE]  illegal  start  of  expression	177	None	add
720	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(0,  index));  }  result.append(str.substring(index,  lower));  if(index!=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(0,  index));  }  result.append(str.substring(index,  lower));  if(index!=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    else    {    result.append(str.substring(0,    index));    }    result.append(str.substring(index,  lower));  if(index!=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(	  	non-compiled	[CE]  illegal  start  of  expression	177	None	add
721	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        ==        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	10	1	add
722	[BUG]  [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >=  lower)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        ==        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	10	1	add
723	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        ==        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	10	1	add
724	[BUG]  [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >=  upper)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        ==        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	10	1	add
725	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        ==        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	10	1	add
726	[BUG]  [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  ==  lower)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        ==        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	10	1	add
727	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  ==  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        ==        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index  ==  upper)  {	  	compilable	  [FE]  ComparisonFailure  	10	1	add
728	[BUG]  [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  ==  upper)  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  ==  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        ==        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index  ==  upper)  {	  	compilable	  [FE]  ComparisonFailure  	10	1	add
729	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index!=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        ==        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	10	1	add
730	[BUG]  [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index!=  lower)  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index!=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        ==        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	10	1	add
731	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        ==        upper)        {        }    else    if(index    ==    upper)    {    result.append(str.substring(0,    lower));    result.append(StringUtils.defaultString(appendToEnd));    result.append(str.substring(0,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	232	1	add
732	[BUG]  [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  result.append(str.substring(0,  index));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        ==        upper)        {        }    else    if(index    ==    upper)    {    result.append(str.substring(0,    lower));    result.append(StringUtils.defaultString(appendToEnd));    result.append(str.substring(0,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	232	1	add
733	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  result.append(str.substring(0,  lower));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        ==        upper)        {        }    else    if(index    ==    upper)    {    result.append(str.substring(0,    lower));    result.append(StringUtils.defaultString(appendToEnd));    result.append(str.substring(0,  lower));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	232	1	add
734	[BUG]  [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  result.append(str.substring(0,  lower));  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  result.append(str.substring(0,  lower));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        ==        upper)        {        }    else    if(index    ==    upper)    {    result.append(str.substring(0,    lower));    result.append(StringUtils.defaultString(appendToEnd));    result.append(str.substring(0,  lower));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	232	1	add
735	[BUG]  [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  result.append(StringUtils.defaultString(lower));  [CE]  no  suitable  method  found  for  defaultString(int)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  result.append(StringUtils.defaultString(lower));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        ==        upper)        {        }    else    if(index    ==    upper)    {    result.append(str.substring(0,    lower));    result.append(StringUtils.defaultString(appendToEnd));    result.append(StringUtils.defaultString(lower));	  	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int)	232	None	add
736	[BUG]  [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  result.append(StringUtils.defaultString(upper));  [CE]  no  suitable  method  found  for  defaultString(int)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  result.append(StringUtils.defaultString(upper));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        ==        upper)        {        }    else    if(index    ==    upper)    {    result.append(str.substring(0,    lower));    result.append(StringUtils.defaultString(appendToEnd));    result.append(StringUtils.defaultString(upper));	  	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int)	232	None	add
737	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  result.append(str.substring(0,  upper));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        ==        upper)        {        }    else    if(index    ==    upper)    {    result.append(str.substring(0,    lower));    result.append(StringUtils.defaultString(appendToEnd));    result.append(str.substring(0,  upper));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	232	1	add
738	[BUG]  [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  result.append(str.substring(0,  upper));  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  result.append(str.substring(0,  upper));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        ==        upper)        {        }    else    if(index    ==    upper)    {    result.append(str.substring(0,    lower));    result.append(StringUtils.defaultString(appendToEnd));    result.append(str.substring(0,  upper));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	232	1	add
739	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	86	1	add
740	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	86	1	add
741	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  result.append(str.substring(0,  index));  if(index!=  -1)  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    result.append(str.substring(0,  index));  if(index!=  -1)  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	86	1	add
742	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  result.append(str.substring(0,  index));  if(index!=  -1)  {  result.append(str.substring(0,  index));  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  result.append(str.substring(0,  index));  if(index!=  -1)  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    result.append(str.substring(0,  index));  if(index!=  -1)  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	86	1	add
743	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  if(index  >=  -1)  {  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  [CE]  reached  end  of  file  while  parsing  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  if(index  >=  -1)  {  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    if(index  >=  -1)  {  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	86	None	add
744	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  result.append(str.substring(0,  index));  if(index  >>  -1)  {  result.append(str.substring(0,  index));  }  [CE]  incompatible  types  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  result.append(str.substring(0,  index));  if(index  >>  -1)  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    result.append(str.substring(0,  index));  if(index  >>  -1)  {  result.append(str.substring(0,  index));  }	  	non-compiled	[CE]  incompatible  types	86	None	add
745	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  result.append(str.substring(0,  index));  if(index  ==  -1)  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    result.append(str.substring(0,  index));  if(index  ==  -1)  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	86	1	add
746	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  result.append(str.substring(0,  index));  if(index  ==  -1)  {  result.append(str.substring(0,  index));  }  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  result.append(str.substring(0,  index));  if(index  ==  -1)  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    result.append(str.substring(0,  index));  if(index  ==  -1)  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	86	1	add
747	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    index));    result.append(str.substring(0,  index));	  	compilable	  [FE]  ComparisonFailure  	209	1	add
748	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    index));    result.append(str.substring(0,  index));	  	compilable	  [FE]  ComparisonFailure  	209	1	add
749	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    index));    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));	  	compilable	  [FE]  ComparisonFailure  	209	1	add
750	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    index));    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));	  	compilable	  [FE]  ComparisonFailure  	209	1	add
751	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  }  else  if(index  <  lower)  {  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    index));    }  else  if(index  <  lower)  {  result.append(str.substring(0,  index));	  	compilable	  [FE]  ComparisonFailure  	209	1	add
752	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  }  else  if(index  <  lower)  {  result.append(str.substring(0,  index));  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  }  else  if(index  <  lower)  {  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    index));    }  else  if(index  <  lower)  {  result.append(str.substring(0,  index));	  	compilable	  [FE]  ComparisonFailure  	209	1	add
753	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    index));    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  }	  	non-compiled	[CE]  illegal  start  of  type	209	None	add
754	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  }  else  if(index  <  lower)  {  result.append(str.substring(0,  index));  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  }  else  if(index  <  lower)  {  result.append(str.substring(0,  index));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    index));    }  else  if(index  <  lower)  {  result.append(str.substring(0,  index));  }	  	non-compiled	[CE]  illegal  start  of  type	209	None	add
755	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(     "n     ");    result.append(     "n     ");  result.append( "n   ");  result.append( "n   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(       "n       ");        result.append(       "n       ");    result.append( "n   ");  result.append( "n   ");	  	compilable	  [FE]  ComparisonFailure  	24	1	add
756	[BUG]  [BUGGY]          result.append(     "n     ");    result.append(     "n     ");  result.append( "n   ");  result.append( "n   ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(     "n     ");    result.append(     "n     ");  result.append( "n   ");  result.append( "n   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(       "n       ");        result.append(       "n       ");    result.append( "n   ");  result.append( "n   ");	  	compilable	  [FE]  ComparisonFailure  	24	1	add
757	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[n    n      [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(     "n     ");    result.append(     "n     ");  result.append( ",n   ");  result.append( "n   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(       "n       ");        result.append(       "n       ");    result.append( ",n   ");  result.append( "n   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[n      n        	24	1	add
758	[BUG]  [BUGGY]          result.append(     "n     ");    result.append(     "n     ");  result.append( ",n   ");  result.append( "n   ");  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[n    n      [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(     "n     ");    result.append(     "n     ");  result.append( ",n   ");  result.append( "n   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(       "n       ");        result.append(       "n       ");    result.append( ",n   ");  result.append( "n   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[n      n        	24	1	add
759	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(     "n     ");    result.append(     "n     ");  result.append('n');  result.append( "n   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(       "n       ");        result.append(       "n       ");    result.append('n');  result.append( "n   ");	  	compilable	  [FE]  ComparisonFailure  	24	1	add
760	[BUG]  [BUGGY]          result.append(     "n     ");    result.append(     "n     ");  result.append('n');  result.append( "n   ");  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(     "n     ");    result.append(     "n     ");  result.append('n');  result.append( "n   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(       "n       ");        result.append(       "n       ");    result.append('n');  result.append( "n   ");	  	compilable	  [FE]  ComparisonFailure  	24	1	add
761	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(     "n     ");    result.append(     "n     ");  result.append( "n   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(       "n       ");        result.append(       "n       ");    result.append( "n   ");	  	compilable	  [FE]  ComparisonFailure  	24	1	add
762	[BUG]  [BUGGY]          result.append(     "n     ");    result.append(     "n     ");  result.append( "n   ");  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(     "n     ");    result.append(     "n     ");  result.append( "n   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(       "n       ");        result.append(       "n       ");    result.append( "n   ");	  	compilable	  [FE]  ComparisonFailure  	24	1	add
763	[BUG]  [BUGGY]  Result.append('n');  [CE]  cannot  find  symbol  Result  [FE]              ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  Result.append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	Result.append('n');	          result.append('n');    Result.append('n');    	non-compiled	[CE]  cannot  find  symbol  Result	200	None	replace
764	[BUG]  [BUGGY]  }  else  if(index  >=  0)  {  result.append(str.substring(0,  upper));  }  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  0)  {  result.append(str.substring(0,  upper));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  >=  0)  {  result.append(str.substring(0,  upper));  }	  }    else    if(index    >    0)    {    result.append(str.substring(0,    upper));    	non-compiled	[CE]  illegal  start  of  type	169	None	replace
765	[BUG]  [BUGGY]  }  else  if(index  <  0)  {  result.append(StringUtils.defaultString(lower));  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  <  0)  {  result.append(StringUtils.defaultString(lower));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  <  0)  {  result.append(StringUtils.defaultString(lower));  }	  }    else    if(index    >    0)    {    result.append(StringUtils.defaultString(lower));    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
766	[BUG]  [BUGGY]  }  else  if(index  >=  0)  {  result.append(StringUtils.defaultString(lower));  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  0)  {  result.append(StringUtils.defaultString(lower));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  >=  0)  {  result.append(StringUtils.defaultString(lower));  }	  }    else    if(index    >    0)    {    result.append(StringUtils.defaultString(lower));    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
767	[BUG]  [BUGGY]  }  else  if(index  ==  0)  {  result.append(StringUtils.defaultString(lower));  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  0)  {  result.append(StringUtils.defaultString(lower));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  ==  0)  {  result.append(StringUtils.defaultString(lower));  }	  }    else    if(index    >    0)    {    result.append(StringUtils.defaultString(lower));    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
768	[BUG]  [BUGGY]  }  else  if(index  <  0)  {  result.append(StringUtils.defaultString(lower));  }  else  {  result.append(str.substring(0,  index));  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  <  0)  {  result.append(StringUtils.defaultString(lower));  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  <  0)  {  result.append(StringUtils.defaultString(lower));  }  else  {  result.append(str.substring(0,  index));  }	  }    else    if(index    >    0)    {    result.append(StringUtils.defaultString(lower));    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
769	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  +  2));  result.append(str.substring(0,  index  +  2));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,    index    +    2));    result.append(str.substring(0,  index  +  2));	  	compilable	  [FE]  ComparisonFailure  	76	1	add
770	[BUG]  [BUGGY]  result.append(str.substring(0,  index  +  2));  result.append(str.substring(0,  index  +  2));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  +  2));  result.append(str.substring(0,  index  +  2));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index    +    2));    result.append(str.substring(0,  index  +  2));	  	compilable	  [FE]  ComparisonFailure  	76	1	add
771	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  +  2));  if(index  <  0)  {  result.append(str.substring(0,  index  +  2));  }  else  {  result.append(str.substring(0,  index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,    index    +    2));    if(index  <  0)  {  result.append(str.substring(0,  index  +  2));  }  else  {  result.append(str.substring(0,  index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	76	1	add
772	[BUG]  [BUGGY]  result.append(str.substring(0,  index  +  2));  if(index  <  0)  {  result.append(str.substring(0,  index  +  2));  }  else  {  result.append(str.substring(0,  index  +  1));  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  +  2));  if(index  <  0)  {  result.append(str.substring(0,  index  +  2));  }  else  {  result.append(str.substring(0,  index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index    +    2));    if(index  <  0)  {  result.append(str.substring(0,  index  +  2));  }  else  {  result.append(str.substring(0,  index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	76	1	add
773	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  +  2));  if(index  >=  -1)  {  result.append(str.substring(0,  index  +  2));  }  else  {  result.append(str.substring(0,  index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,    index    +    2));    if(index  >=  -1)  {  result.append(str.substring(0,  index  +  2));  }  else  {  result.append(str.substring(0,  index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	76	1	add
774	[BUG]  [BUGGY]  result.append(str.substring(0,  index  +  2));  if(index  >=  -1)  {  result.append(str.substring(0,  index  +  2));  }  else  {  result.append(str.substring(0,  index  +  1));  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  +  2));  if(index  >=  -1)  {  result.append(str.substring(0,  index  +  2));  }  else  {  result.append(str.substring(0,  index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index    +    2));    if(index  >=  -1)  {  result.append(str.substring(0,  index  +  2));  }  else  {  result.append(str.substring(0,  index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	76	1	add
775	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  +  2));  if(index  >=  -1)  {  result.append(str.substring(0,  index  +  2));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,    index    +    2));    if(index  >=  -1)  {  result.append(str.substring(0,  index  +  2));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  ComparisonFailure  	76	1	add
776	[BUG]  [BUGGY]  result.append(str.substring(0,  index  +  2));  if(index  >=  -1)  {  result.append(str.substring(0,  index  +  2));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  +  2));  if(index  >=  -1)  {  result.append(str.substring(0,  index  +  2));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index    +    2));    if(index  >=  -1)  {  result.append(str.substring(0,  index  +  2));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  ComparisonFailure  	76	1	add
777	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  +  2));  if(index  <  0)  {  result.append(str.substring(0,  index  +  2));  }  else  {  result.append(str.substring(0,  index  +  2));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,    index    +    2));    if(index  <  0)  {  result.append(str.substring(0,  index  +  2));  }  else  {  result.append(str.substring(0,  index  +  2));  }	  	compilable	  [FE]  ComparisonFailure  	76	1	add
778	[BUG]  [BUGGY]  result.append(str.substring(0,  index  +  2));  if(index  <  0)  {  result.append(str.substring(0,  index  +  2));  }  else  {  result.append(str.substring(0,  index  +  2));  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  +  2));  if(index  <  0)  {  result.append(str.substring(0,  index  +  2));  }  else  {  result.append(str.substring(0,  index  +  2));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index    +    2));    if(index  <  0)  {  result.append(str.substring(0,  index  +  2));  }  else  {  result.append(str.substring(0,  index  +  2));  }	  	compilable	  [FE]  ComparisonFailure  	76	1	add
779	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  lower)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        ==        upper)        {        }    else    if(index    ==    lower)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	8	1	add
780	[BUG]  [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  lower)  {  }  else  if(index  ==  lower)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  lower)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        ==        upper)        {        }    else    if(index    ==    lower)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	8	1	add
781	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  lower)  {  }  else  if(index  ==  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        ==        upper)        {        }    else    if(index    ==    lower)    {    }  else  if(index  ==  upper)  {	  	compilable	  [FE]  ComparisonFailure  	8	1	add
782	[BUG]  [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  lower)  {  }  else  if(index  ==  upper)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  lower)  {  }  else  if(index  ==  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        ==        upper)        {        }    else    if(index    ==    lower)    {    }  else  if(index  ==  upper)  {	  	compilable	  [FE]  ComparisonFailure  	8	1	add
783	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  lower)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        ==        upper)        {        }    else    if(index    ==    lower)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	8	1	add
784	[BUG]  [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  lower)  {  }  else  if(index  >=  lower)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  lower)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        ==        upper)        {        }    else    if(index    ==    lower)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	8	1	add
785	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  lower)  {  }  else  if(index!=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        ==        upper)        {        }    else    if(index    ==    lower)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	8	1	add
786	[BUG]  [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  lower)  {  }  else  if(index!=  lower)  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  lower)  {  }  else  if(index!=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        ==        upper)        {        }    else    if(index    ==    lower)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	8	1	add
787	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  lower)  {  }  else  if(index  <  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        ==        upper)        {        }    else    if(index    ==    lower)    {    }  else  if(index  <  lower)  {	  	compilable	  [FE]  ComparisonFailure  	8	1	add
788	[BUG]  [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  lower)  {  }  else  if(index  <  lower)  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  lower)  {  }  else  if(index  <  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        ==        upper)        {        }    else    if(index    ==    lower)    {    }  else  if(index  <  lower)  {	  	compilable	  [FE]  ComparisonFailure  	8	1	add
789	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(lower,  index,  upper));  [CE]  no  suitable  method  found  for  defaultString(int,int,int)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(StringUtils.defaultString(lower,  index,  upper));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(StringUtils.defaultString(lower,  index,  upper));	  result.append(StringUtils.defaultString(index,    upper));    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int,int,int)	105	None	replace
790	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    >=    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    }    result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  ComparisonFailure  	62	1	add
791	[BUG]  [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    >=    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    }    result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  ComparisonFailure  	62	1	add
792	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  if(index!=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    >=    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    }    result.append('n');  if(index!=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	62	1	add
793	[BUG]  [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  if(index!=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  if(index!=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    >=    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    }    result.append('n');  if(index!=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	62	1	add
794	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    >=    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    }    result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  ComparisonFailure  	62	1	add
795	[BUG]  [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    >=    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    }    result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  ComparisonFailure  	62	1	add
796	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  if(index!=  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    >=    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    }    result.append('n');  if(index!=  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  ComparisonFailure  	62	1	add
797	[BUG]  [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  if(index!=  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  if(index!=  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    >=    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    }    result.append('n');  if(index!=  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  ComparisonFailure  	62	1	add
798	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    >=    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  ComparisonFailure  	62	1	add
799	[BUG]  [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    >=    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  ComparisonFailure  	62	1	add
800	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('r');  result.append('n');  result.append('r');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        result.append('r');    result.append('n');  result.append('r');	  	compilable	  [FE]  ComparisonFailure  	196	1	add
801	[BUG]  [BUGGY]          result.append('n');    result.append('r');  result.append('n');  result.append('r');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('r');  result.append('n');  result.append('r');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        result.append('r');    result.append('n');  result.append('r');	  	compilable	  [FE]  ComparisonFailure  	196	1	add
802	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('r');  result.append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        result.append('r');    result.append('n');	  	compilable	  [FE]  ComparisonFailure  	196	1	add
803	[BUG]  [BUGGY]          result.append('n');    result.append('r');  result.append('n');  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('r');  result.append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        result.append('r');    result.append('n');	  	compilable	  [FE]  ComparisonFailure  	196	1	add
804	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('r');  result.append('m');  result.append('r');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        result.append('r');    result.append('m');  result.append('r');	  	compilable	  [FE]  ComparisonFailure  	196	1	add
805	[BUG]  [BUGGY]          result.append('n');    result.append('r');  result.append('m');  result.append('r');  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('r');  result.append('m');  result.append('r');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        result.append('r');    result.append('m');  result.append('r');	  	compilable	  [FE]  ComparisonFailure  	196	1	add
806	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('r');  result.append('N');  result.append('r');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        result.append('r');    result.append('N');  result.append('r');	  	compilable	  [FE]  ComparisonFailure  	196	1	add
807	[BUG]  [BUGGY]          result.append('n');    result.append('r');  result.append('N');  result.append('r');  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('r');  result.append('N');  result.append('r');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        result.append('r');    result.append('N');  result.append('r');	  	compilable	  [FE]  ComparisonFailure  	196	1	add
808	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('r');  result.append('f');  result.append('r');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        result.append('r');    result.append('f');  result.append('r');	  	compilable	  [FE]  ComparisonFailure  	196	1	add
809	[BUG]  [BUGGY]          result.append('n');    result.append('r');  result.append('f');  result.append('r');  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('r');  result.append('f');  result.append('r');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        result.append('r');    result.append('f');  result.append('r');	  	compilable	  [FE]  ComparisonFailure  	196	1	add
810	[BUG]  [BUGGY]  result.append( "  lower= " ");  [CE]  unclosed  string  literal  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( "  lower= " ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append( "  lower= " ");	  result.append(   "    lower=   ");    	non-compiled	[CE]  unclosed  string  literal	191	None	replace
811	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( "  lower=0 ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append( "  lower=0 ");	  result.append(   "    lower=   ");    	compilable	  [FE]  ComparisonFailure  	191	1	replace
812	[BUG]  [BUGGY]  result.append( "  lower=0 ");  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( "  lower=0 ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append( "  lower=0 ");	  result.append(   "    lower=   ");    	compilable	  [FE]  ComparisonFailure  	191	1	replace
813	[BUG]  [BUGGY]  }  else  if(index  <  lower)  {  result.append(str.substring(0,  index));  }  [CE]  illegal  start  of  type  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  <  lower)  {  result.append(str.substring(0,  index));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  <  lower)  {  result.append(str.substring(0,  index));  }	  }    else    if(index    <    upper)    {    result.append(str.substring(0,    index));    	non-compiled	[CE]  illegal  start  of  type	206	None	replace
814	[BUG]  [BUGGY]  }  else  if(index  >=  lower)  {  result.append(str.substring(0,  index));  }  [CE]  illegal  start  of  type  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  lower)  {  result.append(str.substring(0,  index));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  >=  lower)  {  result.append(str.substring(0,  index));  }	  }    else    if(index    <    upper)    {    result.append(str.substring(0,    index));    	non-compiled	[CE]  illegal  start  of  type	206	None	replace
815	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index!=        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	48	1	add
816	[BUG]  [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >=  lower)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index!=        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	48	1	add
817	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index!=        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	48	1	add
818	[BUG]  [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >=  upper)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index!=        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	48	1	add
819	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index!=        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	48	1	add
820	[BUG]  [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  ==  lower)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index!=        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	48	1	add
821	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  ==  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index!=        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index  ==  upper)  {	  	compilable	  [FE]  ComparisonFailure  	48	1	add
822	[BUG]  [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  ==  upper)  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  ==  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index!=        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index  ==  upper)  {	  	compilable	  [FE]  ComparisonFailure  	48	1	add
823	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index!=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index!=        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	48	1	add
824	[BUG]  [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index!=  lower)  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index!=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index!=        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	48	1	add
825	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  lower));  result.append(str.substring(0,  lower));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,    lower));    result.append(str.substring(0,  lower));	  	compilable	  [FE]  ComparisonFailure  	201	1	add
826	[BUG]  [BUGGY]  result.append(str.substring(0,  lower));  result.append(str.substring(0,  lower));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  lower));  result.append(str.substring(0,  lower));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    lower));    result.append(str.substring(0,  lower));	  	compilable	  [FE]  ComparisonFailure  	201	1	add
827	[BUG]  [BUGGY]  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(lower));  [CE]  no  suitable  method  found  for  defaultString(int)  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(lower));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    lower));    result.append(StringUtils.defaultString(lower));	  	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int)	201	None	add
828	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  lower));  result.append(str.substring(0,  upper));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,    lower));    result.append(str.substring(0,  upper));	  	compilable	  [FE]  ComparisonFailure  	201	1	add
829	[BUG]  [BUGGY]  result.append(str.substring(0,  lower));  result.append(str.substring(0,  upper));  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  lower));  result.append(str.substring(0,  upper));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    lower));    result.append(str.substring(0,  upper));	  	compilable	  [FE]  ComparisonFailure  	201	1	add
830	[BUG]  [BUGGY]  result.append(str.substring(0,  lower));  result.append(str.substring(0,  low));  [CE]  cannot  find  symbol  low  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  lower));  result.append(str.substring(0,  low));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    lower));    result.append(str.substring(0,  low));	  	non-compiled	[CE]  cannot  find  symbol  low	201	None	add
831	[BUG]  [BUGGY]  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(upper));  [CE]  no  suitable  method  found  for  defaultString(int)  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(upper));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    lower));    result.append(StringUtils.defaultString(upper));	  	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int)	201	None	add
832	[BUG]  [BUGGY]  result.append('-',  index);  [CE]  no  suitable  method  found  for  append(char,int)  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('-',  index);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('-',  index);	  result.append('-');    	non-compiled	[CE]  no  suitable  method  found  for  append(char,int)	244	None	replace
833	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('-').append(index);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('-').append(index);	  result.append('-');    	compilable	  [FE]  ComparisonFailure  	244	1	replace
834	[BUG]  [BUGGY]  result.append('-').append(index);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('-').append(index);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('-').append(index);	  result.append('-');    	compilable	  [FE]  ComparisonFailure  	244	1	replace
835	[BUG]  [BUGGY]  result.append('-',  lower);  [CE]  no  suitable  method  found  for  append(char,int)  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('-',  lower);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('-',  lower);	  result.append('-');    	non-compiled	[CE]  no  suitable  method  found  for  append(char,int)	244	None	replace
836	[BUG]  [BUGGY]  }    else    if(index    ==    upper)    {    result.append(str.substring(0,  index));  }  else  if(index  ==  lower)  {  result.append(str.substring(0,  index));  }  [CE]  illegal  start  of  type  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    result.append(str.substring(0,  index));  }  else  if(index  ==  lower)  {  result.append(str.substring(0,  index));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        ==        upper)        {        result.append(str.substring(0,    index));    }  else  if(index  ==  lower)  {  result.append(str.substring(0,  index));  }	  	non-compiled	[CE]  illegal  start  of  type	159	None	add
837	[BUG]  [BUGGY]  }    else    if(index    ==    upper)    {    result.append(str.substring(0,  index));  }  else  if(index  ==  upper)  {  result.append(str.substring(0,  index));  }  [CE]  illegal  start  of  type  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    result.append(str.substring(0,  index));  }  else  if(index  ==  upper)  {  result.append(str.substring(0,  index));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        ==        upper)        {        result.append(str.substring(0,    index));    }  else  if(index  ==  upper)  {  result.append(str.substring(0,  index));  }	  	non-compiled	[CE]  illegal  start  of  type	159	None	add
838	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    result.append(str.substring(0,  index));  }  else  if(index  ==  lower)  {  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        ==        upper)        {        result.append(str.substring(0,    index));    }  else  if(index  ==  lower)  {  result.append(str.substring(0,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	159	1	add
839	[BUG]  [BUGGY]  }    else    if(index    ==    upper)    {    result.append(str.substring(0,  index));  }  else  if(index  ==  lower)  {  result.append(str.substring(0,  index));  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    result.append(str.substring(0,  index));  }  else  if(index  ==  lower)  {  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        ==        upper)        {        result.append(str.substring(0,    index));    }  else  if(index  ==  lower)  {  result.append(str.substring(0,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	159	1	add
840	[BUG]  [BUGGY]  }    else    if(index    ==    upper)    {    result.append(str.substring(0,  index));  }  else  if(index  ==  upper)  {  result.append(StringUtils.defaultString(appendToEnd));  }  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    result.append(str.substring(0,  index));  }  else  if(index  ==  upper)  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        ==        upper)        {        result.append(str.substring(0,    index));    }  else  if(index  ==  upper)  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	non-compiled	[CE]  illegal  start  of  type	159	None	add
841	[BUG]  [BUGGY]  }    else    if(index    ==    upper)    {    result.append(str.substring(0,  index));  }  else  if(index  ==  lower)  {  result.append(StringUtils.defaultString(appendToEnd));  }  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    result.append(str.substring(0,  index));  }  else  if(index  ==  lower)  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        ==        upper)        {        result.append(str.substring(0,    index));    }  else  if(index  ==  lower)  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	non-compiled	[CE]  illegal  start  of  type	159	None	add
842	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('N').append(index);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('N').append(index);	  result.append('N');    	compilable	  [FE]  ComparisonFailure  	107	1	replace
843	[BUG]  [BUGGY]  result.append('N').append(index);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('N').append(index);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('N').append(index);	  result.append('N');    	compilable	  [FE]  ComparisonFailure  	107	1	replace
844	[BUG]  [BUGGY]  result.append('N',  '-');  [CE]  no  suitable  method  found  for  append(char,char)  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('N',  '-');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('N',  '-');	  result.append('N');    	non-compiled	[CE]  no  suitable  method  found  for  append(char,char)	107	None	replace
845	[BUG]  [BUGGY]  result.append('N',  lower);  [CE]  no  suitable  method  found  for  append(char,int)  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('N',  lower);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('N',  lower);	  result.append('N');    	non-compiled	[CE]  no  suitable  method  found  for  append(char,int)	107	None	replace
846	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  lower  -1)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}  else  if(index  ==  lower  -1)  {	  }    else    if(index    ==    lower)    {    	compilable	  [FE]  ComparisonFailure  	17	1	replace
847	[BUG]  [BUGGY]  }  else  if(index  ==  lower  -1)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  lower  -1)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  ==  lower  -1)  {	  }    else    if(index    ==    lower)    {    	compilable	  [FE]  ComparisonFailure  	17	1	replace
848	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  <  0)  {  }  else  if(index  <  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    <    0)    {    }  else  if(index  <  0)  {	  	compilable	  [FE]  StringIndexOutOfBoundsException  	56	1	add
849	[BUG]  [BUGGY]  }  else  if(index  <  0)  {  }  else  if(index  <  0)  {  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  <  0)  {  }  else  if(index  <  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    <    0)    {    }  else  if(index  <  0)  {	  	compilable	  [FE]  StringIndexOutOfBoundsException  	56	1	add
850	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  <  0)  {  }  else  if(index  >=  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    <    0)    {    }  else  if(index  >=  0)  {	  	compilable	  [FE]  ComparisonFailure  	56	1	add
851	[BUG]  [BUGGY]  }  else  if(index  <  0)  {  }  else  if(index  >=  0)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  <  0)  {  }  else  if(index  >=  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    <    0)    {    }  else  if(index  >=  0)  {	  	compilable	  [FE]  ComparisonFailure  	56	1	add
852	[BUG]  [BUGGY]  }  else  if(index  <  0)  {  }  else  if(index  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  <  0)  {  }  else  if(index  <  =  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    <    0)    {    }  else  if(index  <  =  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
853	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  <  0)  {  }  else  if(index  >  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    <    0)    {    }  else  if(index  >  0)  {	  	compilable	  [FE]  ComparisonFailure  	56	1	add
854	[BUG]  [BUGGY]  }  else  if(index  <  0)  {  }  else  if(index  >  0)  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  <  0)  {  }  else  if(index  >  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    <    0)    {    }  else  if(index  >  0)  {	  	compilable	  [FE]  ComparisonFailure  	56	1	add
855	[BUG]  [BUGGY]  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToStart));  [CE]  cannot  find  symbol  appendToStart  [FE]          ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToStart));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToStart));	  }    else    if(index    <    upper)    {    }    else    if(index    <    upper)    {    result.append(str.substring(0,    lower));    result.append(StringUtils.defaultString(appendToEnd));    }    	non-compiled	[CE]  cannot  find  symbol  appendToStart	219	None	replace
856	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  lower  +  1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,  lower  +  1));	  result.append(str.substring(index,    lower    +    1));    	compilable	  [FE]  ComparisonFailure  	115	1	replace
857	[BUG]  [BUGGY]  result.append(str.substring(0,  lower  +  1));  [FE]  ComparisonFailure  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  lower  +  1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  lower  +  1));	  result.append(str.substring(index,    lower    +    1));    	compilable	  [FE]  ComparisonFailure  	115	1	replace
858	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(StringUtils.defaultString(appendToEnd));    }    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
859	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(StringUtils.defaultString(appendToEnd));    }    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	84	1	add
860	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(StringUtils.defaultString(appendToEnd));  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(StringUtils.defaultString(appendToEnd));    }    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	84	1	add
861	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(StringUtils.defaultString(appendToEnd));    }    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	84	1	add
862	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(StringUtils.defaultString(appendToEnd));    }    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	84	1	add
863	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  result.append(str.substring(0,  index));  if(index!=  -1)  {  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  result.append(str.substring(0,  index));  if(index!=  -1)  {  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(StringUtils.defaultString(appendToEnd));    }    result.append(str.substring(0,  index));  if(index!=  -1)  {  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
864	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  result.append(str.substring(0,  index));  if(index!=  -1)  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(StringUtils.defaultString(appendToEnd));    }    result.append(str.substring(0,  index));  if(index!=  -1)  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	84	1	add
865	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  result.append(str.substring(0,  index));  if(index!=  -1)  {  result.append(StringUtils.defaultString(appendToEnd));  }  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  result.append(str.substring(0,  index));  if(index!=  -1)  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(StringUtils.defaultString(appendToEnd));    }    result.append(str.substring(0,  index));  if(index!=  -1)  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	84	1	add
866	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(lower,  lower),  str);  [CE]  no  suitable  method  found  for  defaultString(int,int)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(StringUtils.defaultString(lower,  lower),  str);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(StringUtils.defaultString(lower,  lower),  str);	  result.append(StringUtils.defaultString(lower,    lower));    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int,int)	151	None	replace
867	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  index  +  2));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(index,  index  +  2));	  result.append(str.substring(index,    index    +    1));    	compilable	  [FE]  StringIndexOutOfBoundsException  	117	1	replace
868	[BUG]  [BUGGY]  result.append(str.substring(index,  index  +  2));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  index  +  2));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index,  index  +  2));	  result.append(str.substring(index,    index    +    1));    	compilable	  [FE]  StringIndexOutOfBoundsException  	117	1	replace
869	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  lower,  -1);  result.append(str.substring(0,  index),  lower,  -1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,    index),    lower,    -1);    result.append(str.substring(0,  index),  lower,  -1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	94	1	add
870	[BUG]  [BUGGY]  result.append(str.substring(0,  index),  lower,  -1);  result.append(str.substring(0,  index),  lower,  -1);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  lower,  -1);  result.append(str.substring(0,  index),  lower,  -1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index),    lower,    -1);    result.append(str.substring(0,  index),  lower,  -1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	94	1	add
871	[BUG]  [BUGGY]  result.append(str.substring(0,  index),  lower,  -1);  StringBuffer  result.append(str.substring(0,  index),  lower,  -1);  [CE]  ';'  expected  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  lower,  -1);  StringBuffer  result.append(str.substring(0,  index),  lower,  -1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index),    lower,    -1);    StringBuffer  result.append(str.substring(0,  index),  lower,  -1);	  	non-compiled	[CE]  ';'  expected	94	None	add
872	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  lower,  -1);  result.append(str.substring(0,  index),  upper,  -1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,    index),    lower,    -1);    result.append(str.substring(0,  index),  upper,  -1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	94	1	add
873	[BUG]  [BUGGY]  result.append(str.substring(0,  index),  lower,  -1);  result.append(str.substring(0,  index),  upper,  -1);  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  lower,  -1);  result.append(str.substring(0,  index),  upper,  -1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index),    lower,    -1);    result.append(str.substring(0,  index),  upper,  -1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	94	1	add
874	[BUG]  [BUGGY]  result.append(str.substring(0,  index),  lower,  -1);  Result.append(str.substring(0,  index),  lower,  -1);  [CE]  cannot  find  symbol  Result  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  lower,  -1);  Result.append(str.substring(0,  index),  lower,  -1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index),    lower,    -1);    Result.append(str.substring(0,  index),  lower,  -1);	  	non-compiled	[CE]  cannot  find  symbol  Result	94	None	add
875	[BUG]  [BUGGY]  }  else  if(index  ==  lower)  {  result.append(str.substring(0,  index));  }  [CE]  illegal  start  of  type  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  lower)  {  result.append(str.substring(0,  index));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  ==  lower)  {  result.append(str.substring(0,  index));  }	  }    else    if(index    ==    upper)    {    result.append(str.substring(0,    index));    	non-compiled	[CE]  illegal  start  of  type	160	None	replace
876	[BUG]  [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  lower));  }  else  if(index  >  0)  {  result.append(str.substring(0,  lower));  }  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  lower));  }  else  if(index  >  0)  {  result.append(str.substring(0,  lower));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >        0)        {        result.append(str.substring(0,    lower));    }  else  if(index  >  0)  {  result.append(str.substring(0,  lower));  }	  	non-compiled	[CE]  illegal  start  of  type	166	None	add
877	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  lower));  }  else  if(index  >  0)  {  result.append(str.substring(0,  lower));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >        0)        {        result.append(str.substring(0,    lower));    }  else  if(index  >  0)  {  result.append(str.substring(0,  lower));	  	compilable	  [FE]  ComparisonFailure  	166	1	add
878	[BUG]  [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  lower));  }  else  if(index  >  0)  {  result.append(str.substring(0,  lower));  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  lower));  }  else  if(index  >  0)  {  result.append(str.substring(0,  lower));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >        0)        {        result.append(str.substring(0,    lower));    }  else  if(index  >  0)  {  result.append(str.substring(0,  lower));	  	compilable	  [FE]  ComparisonFailure  	166	1	add
879	[BUG]  [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  lower));  }  else  if(index  >  0)  {  result.append(StringUtils.defaultString(appendToEnd));  }  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  lower));  }  else  if(index  >  0)  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >        0)        {        result.append(str.substring(0,    lower));    }  else  if(index  >  0)  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	non-compiled	[CE]  illegal  start  of  type	166	None	add
880	[BUG]  [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  lower));  }  else  if(index  >  0)  {  result.append(str.substring(0,  upper));  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  lower));  }  else  if(index  >  0)  {  result.append(str.substring(0,  upper));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >        0)        {        result.append(str.substring(0,    lower));    }  else  if(index  >  0)  {  result.append(str.substring(0,  upper));  }	  	non-compiled	[CE]  illegal  start  of  type	166	None	add
881	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  lower));  }  else  if(index  >  0)  {  result.append(str.substring(0,  upper));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >        0)        {        result.append(str.substring(0,    lower));    }  else  if(index  >  0)  {  result.append(str.substring(0,  upper));	  	compilable	  [FE]  ComparisonFailure  	166	1	add
882	[BUG]  [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  lower));  }  else  if(index  >  0)  {  result.append(str.substring(0,  upper));  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  lower));  }  else  if(index  >  0)  {  result.append(str.substring(0,  upper));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >        0)        {        result.append(str.substring(0,    lower));    }  else  if(index  >  0)  {  result.append(str.substring(0,  upper));	  	compilable	  [FE]  ComparisonFailure  	166	1	add
883	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  ComparisonFailure  	64	1	add
884	[BUG]  [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  ComparisonFailure  	64	1	add
885	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  ComparisonFailure  	64	1	add
886	[BUG]  [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  ComparisonFailure  	64	1	add
887	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    }    result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  ComparisonFailure  	64	1	add
888	[BUG]  [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    }    result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  ComparisonFailure  	64	1	add
889	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  if(index!=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    }    result.append('n');  if(index!=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	64	1	add
890	[BUG]  [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  if(index!=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  [FE]  StringIndexOutOfBoundsException  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  if(index!=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    }    result.append('n');  if(index!=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	64	1	add
891	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('N');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    }    result.append('N');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  ComparisonFailure  	64	1	add
892	[BUG]  [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('N');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('N');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    }    result.append('N');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  ComparisonFailure  	64	1	add
893	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index!=  lower)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        lower)        {        }    else    if(index!=    lower)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	34	1	add
894	[BUG]  [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index!=  lower)  {  }  else  if(index  >=  lower)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index!=  lower)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        lower)        {        }    else    if(index!=    lower)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	34	1	add
895	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index!=  lower)  {  }  else  if(index  >=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        lower)        {        }    else    if(index!=    lower)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	34	1	add
896	[BUG]  [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index!=  lower)  {  }  else  if(index  >=  upper)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index!=  lower)  {  }  else  if(index  >=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        lower)        {        }    else    if(index!=    lower)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	34	1	add
897	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index!=  lower)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        lower)        {        }    else    if(index!=    lower)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	34	1	add
898	[BUG]  [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index!=  lower)  {  }  else  if(index  ==  lower)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index!=  lower)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        lower)        {        }    else    if(index!=    lower)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	34	1	add
899	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index!=  lower)  {  }  else  if(index  ==  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        lower)        {        }    else    if(index!=    lower)    {    }  else  if(index  ==  upper)  {	  	compilable	  [FE]  ComparisonFailure  	34	1	add
900	[BUG]  [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index!=  lower)  {  }  else  if(index  ==  upper)  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index!=  lower)  {  }  else  if(index  ==  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        lower)        {        }    else    if(index!=    lower)    {    }  else  if(index  ==  upper)  {	  	compilable	  [FE]  ComparisonFailure  	34	1	add
901	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index!=  lower)  {  }  else  if(index!=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        lower)        {        }    else    if(index!=    lower)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	34	1	add
902	[BUG]  [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index!=  lower)  {  }  else  if(index!=  lower)  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index!=  lower)  {  }  else  if(index!=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        lower)        {        }    else    if(index!=    lower)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	34	1	add
903	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('/');  result.append('/');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('/');    result.append('/');	  	compilable	  [FE]  ComparisonFailure  	153	1	add
904	[BUG]  [BUGGY]  result.append('/');  result.append('/');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('/');  result.append('/');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('/');    result.append('/');	  	compilable	  [FE]  ComparisonFailure  	153	1	add
905	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('/');  if(index  >=  -1)  {  result.append('/');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('/');    if(index  >=  -1)  {  result.append('/');  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  ComparisonFailure  	153	1	add
906	[BUG]  [BUGGY]  result.append('/');  if(index  >=  -1)  {  result.append('/');  }  else  {  result.append(str.substring(0,  index));  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('/');  if(index  >=  -1)  {  result.append('/');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('/');    if(index  >=  -1)  {  result.append('/');  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  ComparisonFailure  	153	1	add
907	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('/');  if(index  ==  -1)  {  result.append('/');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('/');    if(index  ==  -1)  {  result.append('/');  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  ComparisonFailure  	153	1	add
908	[BUG]  [BUGGY]  result.append('/');  if(index  ==  -1)  {  result.append('/');  }  else  {  result.append(str.substring(0,  index));  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('/');  if(index  ==  -1)  {  result.append('/');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('/');    if(index  ==  -1)  {  result.append('/');  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  ComparisonFailure  	153	1	add
909	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('/');  if(index  >=  -1)  {  result.append('/');  }  else  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('/');    if(index  >=  -1)  {  result.append('/');  }  else  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	153	1	add
910	[BUG]  [BUGGY]  result.append('/');  if(index  >=  -1)  {  result.append('/');  }  else  {  result.append(str.substring(index  +  1));  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('/');  if(index  >=  -1)  {  result.append('/');  }  else  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('/');    if(index  >=  -1)  {  result.append('/');  }  else  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	153	1	add
911	[BUG]  [BUGGY]  result.append('/');  if(index  >=  -1)  {  result.append('/');  }  else  {  result.append(str.substring(0,  index),  lower);  }  [CE]  no  suitable  method  found  for  append(String,int)  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('/');  if(index  >=  -1)  {  result.append('/');  }  else  {  result.append(str.substring(0,  index),  lower);  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('/');    if(index  >=  -1)  {  result.append('/');  }  else  {  result.append(str.substring(0,  index),  lower);  }	  	non-compiled	[CE]  no  suitable  method  found  for  append(String,int)	153	None	add
912	[BUG]  [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  index));  }  else  if(index  >  0)  {  result.append(str.substring(0,  index));  }  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  index));  }  else  if(index  >  0)  {  result.append(str.substring(0,  index));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >        0)        {        result.append(str.substring(0,    index));    }  else  if(index  >  0)  {  result.append(str.substring(0,  index));  }	  	non-compiled	[CE]  illegal  start  of  type	20	None	add
913	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  index));  }  else  if(index  >  0)  {  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >        0)        {        result.append(str.substring(0,    index));    }  else  if(index  >  0)  {  result.append(str.substring(0,  index));	  	compilable	  [FE]  ComparisonFailure  	20	1	add
914	[BUG]  [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  index));  }  else  if(index  >  0)  {  result.append(str.substring(0,  index));  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  index));  }  else  if(index  >  0)  {  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >        0)        {        result.append(str.substring(0,    index));    }  else  if(index  >  0)  {  result.append(str.substring(0,  index));	  	compilable	  [FE]  ComparisonFailure  	20	1	add
915	[BUG]  [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  index));  }  else  if(index  >  0)  {  result.append(StringUtils.defaultString(appendToEnd));  }  else  if(index  >  0)  {  result.append(str.substring(0,  index));  }  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  index));  }  else  if(index  >  0)  {  result.append(StringUtils.defaultString(appendToEnd));  }  else  if(index  >  0)  {  result.append(str.substring(0,  index));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >        0)        {        result.append(str.substring(0,    index));    }  else  if(index  >  0)  {  result.append(StringUtils.defaultString(appendToEnd));  }  else  if(index  >  0)  {  result.append(str.substring(0,  index));  }	  	non-compiled	[CE]  illegal  start  of  type	20	None	add
916	[BUG]  [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  index));  }  else  if(index  >  0)  {  result.append(StringUtils.defaultString(appendToEnd));  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  index));  }  else  if(index  >  0)  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >        0)        {        result.append(str.substring(0,    index));    }  else  if(index  >  0)  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	non-compiled	[CE]  illegal  start  of  type	20	None	add
917	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  index));  }  else  if(index  >  0)  {  result.append(StringUtils.defaultString(appendToEnd));  }  else  if(index  >  0)  {  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >        0)        {        result.append(str.substring(0,    index));    }  else  if(index  >  0)  {  result.append(StringUtils.defaultString(appendToEnd));  }  else  if(index  >  0)  {  result.append(str.substring(0,  index));	  	compilable	  [FE]  ComparisonFailure  	20	1	add
918	[BUG]  [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  index));  }  else  if(index  >  0)  {  result.append(StringUtils.defaultString(appendToEnd));  }  else  if(index  >  0)  {  result.append(str.substring(0,  index));  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  index));  }  else  if(index  >  0)  {  result.append(StringUtils.defaultString(appendToEnd));  }  else  if(index  >  0)  {  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >        0)        {        result.append(str.substring(0,    index));    }  else  if(index  >  0)  {  result.append(StringUtils.defaultString(appendToEnd));  }  else  if(index  >  0)  {  result.append(str.substring(0,  index));	  	compilable	  [FE]  ComparisonFailure  	20	1	add
919	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append( ",   ");  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(   ",   ");    }    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append( ",   ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	88	1	add
920	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append( ",   ");  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append( ",   ");  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(   ",   ");    }    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append( ",   ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	88	1	add
921	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append( ", ");  }  else  {  result.append( ", ");  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(   ",   ");    }    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append( ", ");  }  else  {  result.append( ", ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	88	1	add
922	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append( ", ");  }  else  {  result.append( ", ");  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append( ", ");  }  else  {  result.append( ", ");  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(   ",   ");    }    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append( ", ");  }  else  {  result.append( ", ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	88	1	add
923	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(0,  index));  if(index!=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append( ",   ");  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(   ",   ");    }    result.append(str.substring(0,  index));  if(index!=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append( ",   ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	88	1	add
924	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(0,  index));  if(index!=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append( ",   ");  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(0,  index));  if(index!=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append( ",   ");  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(   ",   ");    }    result.append(str.substring(0,  index));  if(index!=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append( ",   ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	88	1	add
925	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append('  ');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append('  ');  }	          result.append('    ');    result.append('    ');    	compilable	  [FE]  ComparisonFailure  	1	1	replace
926	[BUG]  [BUGGY]  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append('  ');  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append('  ');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	if(index  >=  -1)  {  result.append('  ');  }  else  {  result.append('  ');  }	          result.append('    ');    result.append('    ');    	compilable	  [FE]  ComparisonFailure  	1	1	replace
927	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  if(index  ==  -1)  {  result.append('  ');  }  else  {  result.append('  ');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	if(index  ==  -1)  {  result.append('  ');  }  else  {  result.append('  ');  }	          result.append('    ');    result.append('    ');    	compilable	  [FE]  ComparisonFailure  	1	1	replace
928	[BUG]  [BUGGY]  if(index  ==  -1)  {  result.append('  ');  }  else  {  result.append('  ');  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  if(index  ==  -1)  {  result.append('  ');  }  else  {  result.append('  ');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	if(index  ==  -1)  {  result.append('  ');  }  else  {  result.append('  ');  }	          result.append('    ');    result.append('    ');    	compilable	  [FE]  ComparisonFailure  	1	1	replace
929	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('-');  result.append('-');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('-');    result.append('-');	  	compilable	  [FE]  ComparisonFailure  	243	1	add
930	[BUG]  [BUGGY]  result.append('-');  result.append('-');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('-');  result.append('-');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('-');    result.append('-');	  	compilable	  [FE]  ComparisonFailure  	243	1	add
931	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('-');  if(index  >=  -1)  {  result.append('-');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('-');    if(index  >=  -1)  {  result.append('-');  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  ComparisonFailure  	243	1	add
932	[BUG]  [BUGGY]  result.append('-');  if(index  >=  -1)  {  result.append('-');  }  else  {  result.append(str.substring(0,  index));  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('-');  if(index  >=  -1)  {  result.append('-');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('-');    if(index  >=  -1)  {  result.append('-');  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  ComparisonFailure  	243	1	add
933	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('-');  if(index  ==  -1)  {  result.append('-');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('-');    if(index  ==  -1)  {  result.append('-');  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  ComparisonFailure  	243	1	add
934	[BUG]  [BUGGY]  result.append('-');  if(index  ==  -1)  {  result.append('-');  }  else  {  result.append(str.substring(0,  index));  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('-');  if(index  ==  -1)  {  result.append('-');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('-');    if(index  ==  -1)  {  result.append('-');  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  ComparisonFailure  	243	1	add
935	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('-');  if(index  >=  -1)  {  result.append('-');  }  else  {  result.append(str.substring(0,  index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('-');    if(index  >=  -1)  {  result.append('-');  }  else  {  result.append(str.substring(0,  index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	243	1	add
936	[BUG]  [BUGGY]  result.append('-');  if(index  >=  -1)  {  result.append('-');  }  else  {  result.append(str.substring(0,  index  +  1));  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('-');  if(index  >=  -1)  {  result.append('-');  }  else  {  result.append(str.substring(0,  index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('-');    if(index  >=  -1)  {  result.append('-');  }  else  {  result.append(str.substring(0,  index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	243	1	add
937	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('-');  if(index  >=  -1)  {  result.append('-');  }  else  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('-');    if(index  >=  -1)  {  result.append('-');  }  else  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	243	1	add
938	[BUG]  [BUGGY]  result.append('-');  if(index  >=  -1)  {  result.append('-');  }  else  {  result.append(str.substring(index  +  1));  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('-');  if(index  >=  -1)  {  result.append('-');  }  else  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('-');    if(index  >=  -1)  {  result.append('-');  }  else  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	243	1	add
939	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  >=  lower)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        lower)        {        }    else    if(index    >=    lower)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	30	1	add
940	[BUG]  [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  >=  lower)  {  }  else  if(index  >=  lower)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  >=  lower)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        lower)        {        }    else    if(index    >=    lower)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	30	1	add
941	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  >=  lower)  {  }  else  if(index  >=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        lower)        {        }    else    if(index    >=    lower)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	30	1	add
942	[BUG]  [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  >=  lower)  {  }  else  if(index  >=  upper)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  >=  lower)  {  }  else  if(index  >=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        lower)        {        }    else    if(index    >=    lower)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	30	1	add
943	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  >=  lower)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        lower)        {        }    else    if(index    >=    lower)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	30	1	add
944	[BUG]  [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  >=  lower)  {  }  else  if(index  ==  lower)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  >=  lower)  {  }  else  if(index  ==  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        lower)        {        }    else    if(index    >=    lower)    {    }  else  if(index  ==  lower)  {	  	compilable	  [FE]  ComparisonFailure  	30	1	add
945	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  >=  lower)  {  }  else  if(index  ==  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        lower)        {        }    else    if(index    >=    lower)    {    }  else  if(index  ==  upper)  {	  	compilable	  [FE]  ComparisonFailure  	30	1	add
946	[BUG]  [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  >=  lower)  {  }  else  if(index  ==  upper)  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  >=  lower)  {  }  else  if(index  ==  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        lower)        {        }    else    if(index    >=    lower)    {    }  else  if(index  ==  upper)  {	  	compilable	  [FE]  ComparisonFailure  	30	1	add
947	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  >=  lower)  {  }  else  if(index!=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        lower)        {        }    else    if(index    >=    lower)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	30	1	add
948	[BUG]  [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  >=  lower)  {  }  else  if(index!=  lower)  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  >=  lower)  {  }  else  if(index!=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        lower)        {        }    else    if(index    >=    lower)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	30	1	add
949	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  }  else  if(index  <  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {	  	compilable	  [FE]  ComparisonFailure  	96	1	add
950	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  }  else  if(index  <  upper)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  }  else  if(index  <  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {	  	compilable	  [FE]  ComparisonFailure  	96	1	add
951	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  }  else  if(index  <  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    }  else  if(index  <  lower)  {	  	compilable	  [FE]  ComparisonFailure  	96	1	add
952	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  }  else  if(index  <  lower)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  }  else  if(index  <  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    }  else  if(index  <  lower)  {	  	compilable	  [FE]  ComparisonFailure  	96	1	add
953	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  }  else  if(index  >=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	96	1	add
954	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  }  else  if(index  >=  upper)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  }  else  if(index  >=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	96	1	add
955	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	96	1	add
956	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  }  else  if(index  >=  lower)  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  }  else  if(index  >=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    }  else  if(index  >=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	96	1	add
957	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  }  else  if(index  >  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    }  else  if(index  >  upper)  {	  	compilable	  [FE]  ComparisonFailure  	96	1	add
958	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  }  else  if(index  >  upper)  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  }  else  if(index  >  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    }  else  if(index  >  upper)  {	  	compilable	  [FE]  ComparisonFailure  	96	1	add
959	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('m');  result.append('n');  result.append('m');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        result.append('m');    result.append('n');  result.append('m');	  	compilable	  [FE]  ComparisonFailure  	194	1	add
960	[BUG]  [BUGGY]          result.append('n');    result.append('m');  result.append('n');  result.append('m');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('m');  result.append('n');  result.append('m');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        result.append('m');    result.append('n');  result.append('m');	  	compilable	  [FE]  ComparisonFailure  	194	1	add
961	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('m');  result.append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        result.append('m');    result.append('n');	  	compilable	  [FE]  ComparisonFailure  	194	1	add
962	[BUG]  [BUGGY]          result.append('n');    result.append('m');  result.append('n');  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('m');  result.append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        result.append('m');    result.append('n');	  	compilable	  [FE]  ComparisonFailure  	194	1	add
963	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('m');  result.append('N');  result.append('m');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        result.append('m');    result.append('N');  result.append('m');	  	compilable	  [FE]  ComparisonFailure  	194	1	add
964	[BUG]  [BUGGY]          result.append('n');    result.append('m');  result.append('N');  result.append('m');  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('m');  result.append('N');  result.append('m');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        result.append('m');    result.append('N');  result.append('m');	  	compilable	  [FE]  ComparisonFailure  	194	1	add
965	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('m');  result.append('m');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        result.append('m');    result.append('m');	  	compilable	  [FE]  ComparisonFailure  	194	1	add
966	[BUG]  [BUGGY]          result.append('n');    result.append('m');  result.append('m');  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('m');  result.append('m');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        result.append('m');    result.append('m');	  	compilable	  [FE]  ComparisonFailure  	194	1	add
967	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('m');  result.append('f');  result.append('m');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        result.append('m');    result.append('f');  result.append('m');	  	compilable	  [FE]  ComparisonFailure  	194	1	add
968	[BUG]  [BUGGY]          result.append('n');    result.append('m');  result.append('f');  result.append('m');  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('m');  result.append('f');  result.append('m');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        result.append('m');    result.append('f');  result.append('m');	  	compilable	  [FE]  ComparisonFailure  	194	1	add
969	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append( ",   ");  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index        +        1));        if(index    >=    -1)    {    result.append(str.substring(index    +    1));    }    else    {    result.append(   ",   ");    }    result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append( ",   ");  }	  	compilable	  [FE]  ComparisonFailure  	164	1	add
970	[BUG]  [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append( ",   ");  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append( ",   ");  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index        +        1));        if(index    >=    -1)    {    result.append(str.substring(index    +    1));    }    else    {    result.append(   ",   ");    }    result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append( ",   ");  }	  	compilable	  [FE]  ComparisonFailure  	164	1	add
971	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[012345678901234567890123456789  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(index  +  1));  if(index!=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append( ",   ");  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index        +        1));        if(index    >=    -1)    {    result.append(str.substring(index    +    1));    }    else    {    result.append(   ",   ");    }    result.append(str.substring(index  +  1));  if(index!=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append( ",   ");  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[012345678901234567890123456789  	164	1	add
972	[BUG]  [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(index  +  1));  if(index!=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append( ",   ");  }  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[012345678901234567890123456789  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(index  +  1));  if(index!=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append( ",   ");  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index        +        1));        if(index    >=    -1)    {    result.append(str.substring(index    +    1));    }    else    {    result.append(   ",   ");    }    result.append(str.substring(index  +  1));  if(index!=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append( ",   ");  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[012345678901234567890123456789  	164	1	add
973	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(lower,  upper),  str);  [CE]  no  suitable  method  found  for  defaultString(int,int)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(StringUtils.defaultString(lower,  upper),  str);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(StringUtils.defaultString(lower,  upper),  str);	  result.append(StringUtils.defaultString(lower,    upper));    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int,int)	103	None	replace
974	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(lower,  upper),  index);  [CE]  no  suitable  method  found  for  defaultString(int,int)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(StringUtils.defaultString(lower,  upper),  index);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(StringUtils.defaultString(lower,  upper),  index);	  result.append(StringUtils.defaultString(lower,    upper));    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int,int)	103	None	replace
975	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  upper,  lower);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,  index),  upper,  lower);	  result.append(str.substring(0,    index),    upper);    	compilable	  [FE]  StringIndexOutOfBoundsException  	92	1	replace
976	[BUG]  [BUGGY]  result.append(str.substring(0,  index),  upper,  lower);  [FE]  StringIndexOutOfBoundsException  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  upper,  lower);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index),  upper,  lower);	  result.append(str.substring(0,    index),    upper);    	compilable	  [FE]  StringIndexOutOfBoundsException  	92	1	replace
977	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index        +        1));        if(index    >=    -1)    {    result.append(str.substring(index    +    1));    }    else    {    result.append(str.substring(index    +    1));    }    result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	112	1	add
978	[BUG]  [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index        +        1));        if(index    >=    -1)    {    result.append(str.substring(index    +    1));    }    else    {    result.append(str.substring(index    +    1));    }    result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	112	1	add
979	[BUG]  [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index        +        1));        if(index    >=    -1)    {    result.append(str.substring(index    +    1));    }    else    {    result.append(str.substring(index    +    1));    }    result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(	  	non-compiled	[CE]  illegal  start  of  expression	112	None	add
980	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index        +        1));        if(index    >=    -1)    {    result.append(str.substring(index    +    1));    }    else    {    result.append(str.substring(index    +    1));    }    result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  ComparisonFailure  	112	1	add
981	[BUG]  [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index        +        1));        if(index    >=    -1)    {    result.append(str.substring(index    +    1));    }    else    {    result.append(str.substring(index    +    1));    }    result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  ComparisonFailure  	112	1	add
982	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index!=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index        +        1));        if(index    >=    -1)    {    result.append(str.substring(index    +    1));    }    else    {    result.append(str.substring(index    +    1));    }    result.append(str.substring(index  +  1));  if(index!=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	112	1	add
983	[BUG]  [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index!=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index!=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index        +        1));        if(index    >=    -1)    {    result.append(str.substring(index    +    1));    }    else    {    result.append(str.substring(index    +    1));    }    result.append(str.substring(index  +  1));  if(index!=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	112	1	add
984	[BUG]  [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index        +        1));        if(index    >=    -1)    {    result.append(str.substring(index    +    1));    }    else    {    result.append(str.substring(index    +    1));    }    result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(	  	non-compiled	[CE]  illegal  start  of  expression	112	None	add
985	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index)+  1);  result.append(str.substring(0,  index)+  1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,    index)+    1);    result.append(str.substring(0,  index)+  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	226	1	add
986	[BUG]  [BUGGY]  result.append(str.substring(0,  index)+  1);  result.append(str.substring(0,  index)+  1);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index)+  1);  result.append(str.substring(0,  index)+  1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index)+    1);    result.append(str.substring(0,  index)+  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	226	1	add
987	[BUG]  [BUGGY]  result.append(str.substring(0,  index)+  1);  StringBuffer  result.append(str.substring(0,  index)+  1);  [CE]  ';'  expected  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index)+  1);  StringBuffer  result.append(str.substring(0,  index)+  1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index)+    1);    StringBuffer  result.append(str.substring(0,  index)+  1);	  	non-compiled	[CE]  ';'  expected	226	None	add
988	[BUG]  [BUGGY]  result.append(str.substring(0,  index)+  1);  Result.append(str.substring(0,  index)+  1);  [CE]  cannot  find  symbol  Result  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index)+  1);  Result.append(str.substring(0,  index)+  1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index)+    1);    Result.append(str.substring(0,  index)+  1);	  	non-compiled	[CE]  cannot  find  symbol  Result	226	None	add
989	[BUG]  [BUGGY]  result.append(str.substring(0,  index)+  1);  result.append(str.substring(0,  index)+  1));  [CE]  ';'  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index)+  1);  result.append(str.substring(0,  index)+  1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index)+    1);    result.append(str.substring(0,  index)+  1));	  	non-compiled	[CE]  ';'  expected	226	None	add
990	[BUG]  [BUGGY]  result.append( ".append(upper).append( ", ".append(index  +  1).append('  '));  [CE]  unclosed  string  literal  [FE]        ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( ".append(upper).append( ", ".append(index  +  1).append('  '));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append( ".append(upper).append( ", ".append(index  +  1).append('  '));	  result.append(   ".append(upper).append(   ",   ").append(index    +    1).append('    '));    	non-compiled	[CE]  unclosed  string  literal	215	None	replace
991	[BUG]  [BUGGY]  result.append( ".append(upper).append( ",   ").append(index  +  2).append('  '));  [CE]  unclosed  string  literal  [FE]          ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( ".append(upper).append( ",   ").append(index  +  2).append('  '));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append( ".append(upper).append( ",   ").append(index  +  2).append('  '));	  result.append(   ".append(upper).append(   ",   ").append(index    +    1).append('    '));    	non-compiled	[CE]  unclosed  string  literal	215	None	replace
992	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(upper  >  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}  else  if(upper  >  lower)  {	  }    else    if(index    >=    lower)    {    }    else    if(index    >=    lower)    {    	compilable	  [FE]  ComparisonFailure  	31	1	replace
993	[BUG]  [BUGGY]  }  else  if(upper  >  lower)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(upper  >  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(upper  >  lower)  {	  }    else    if(index    >=    lower)    {    }    else    if(index    >=    lower)    {    	compilable	  [FE]  ComparisonFailure  	31	1	replace
994	[BUG]  [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  >=  lower)  {  }  else  if(index  >>  lower)  {  [CE]  incompatible  types  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  >=  lower)  {  }  else  if(index  >>  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        lower)        {        }    else    if(index    >=    lower)    {    }  else  if(index  >>  lower)  {	  	non-compiled	[CE]  incompatible  types	30	None	add
995	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index!=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index!=        upper)        {        }    else    if(index    ==    upper)    {    }  else  if(index!=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	52	1	add
996	[BUG]  [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index!=  upper)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index!=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index!=        upper)        {        }    else    if(index    ==    upper)    {    }  else  if(index!=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	52	1	add
997	[BUG]  [BUGGY]  result.append('  ').append(index);  if(index  >=  -1)  {  result.append('  ').append(index);  }  else  {  result.append(str.substring(0,  index));  result.append('  ').append(index);  }  [CE]  unclosed  character  literal  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('  ').append(index);  if(index  >=  -1)  {  result.append('  ').append(index);  }  else  {  result.append(str.substring(0,  index));  result.append('  ').append(index);  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('    ').append(index);    if(index  >=  -1)  {  result.append('  ').append(index);  }  else  {  result.append(str.substring(0,  index));  result.append('  ').append(index);  }	  	non-compiled	[CE]  unclosed  character  literal	135	None	add
998	[BUG]  [BUGGY]  result.append('  ').append(index);  if(index  >=  -1)  {  result.append('  ').append(index);  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('  ').append(index);  }  [CE]  unclosed  character  literal  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('  ').append(index);  if(index  >=  -1)  {  result.append('  ').append(index);  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('  ').append(index);  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('    ').append(index);    if(index  >=  -1)  {  result.append('  ').append(index);  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('  ').append(index);  }	  	non-compiled	[CE]  unclosed  character  literal	135	None	add
999	[BUG]  [BUGGY]  result.append('  ').append(index);  if(index  >=  -1)  {  result.append('  ').append(index);  }  else  {  result.append(str.substring(0,  index),  lower);  result.append('  ').append(index);  }  [CE]  unclosed  character  literal  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('  ').append(index);  if(index  >=  -1)  {  result.append('  ').append(index);  }  else  {  result.append(str.substring(0,  index),  lower);  result.append('  ').append(index);  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('    ').append(index);    if(index  >=  -1)  {  result.append('  ').append(index);  }  else  {  result.append(str.substring(0,  index),  lower);  result.append('  ').append(index);  }	  	non-compiled	[CE]  unclosed  character  literal	135	None	add
1000	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  >=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        upper)        {        }    else    if(index    ==    upper)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	125	1	add
1001	[BUG]  [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  >=  upper)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  >=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        upper)        {        }    else    if(index    ==    upper)    {    }  else  if(index  >=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	125	1	add
1002	[BUG]  [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  >>  upper)  {  [CE]  incompatible  types  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index  >>  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        upper)        {        }    else    if(index    ==    upper)    {    }  else  if(index  >>  upper)  {	  	non-compiled	[CE]  incompatible  types	125	None	add
1003	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(index,  lower));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    else    {    result.append(   ",   ");    }    result.append(str.substring(index,  lower));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	175	1	add
1004	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(index,  lower));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(index,  lower));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    else    {    result.append(   ",   ");    }    result.append(str.substring(index,  lower));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	175	1	add
1005	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(0,  lower));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    else    {    result.append(   ",   ");    }    result.append(str.substring(0,  lower));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	175	1	add
1006	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(0,  lower));  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(0,  lower));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    else    {    result.append(   ",   ");    }    result.append(str.substring(0,  lower));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	175	1	add
1007	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  }  else  if(index  >=  lower)  {  result.append(str.substring(0,  lower));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    lower));    }  else  if(index  >=  lower)  {  result.append(str.substring(0,  lower));	  	compilable	  [FE]  ComparisonFailure  	207	1	add
1008	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  }  else  if(index  >=  lower)  {  result.append(str.substring(0,  lower));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  }  else  if(index  >=  lower)  {  result.append(str.substring(0,  lower));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    lower));    }  else  if(index  >=  lower)  {  result.append(str.substring(0,  lower));	  	compilable	  [FE]  ComparisonFailure  	207	1	add
1009	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }  result.append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index    +    1));    result.append('n');    }    result.append('n');	  	compilable	  [FE]  ComparisonFailure  	240	1	add
1010	[BUG]  [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }  result.append('n');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }  result.append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index    +    1));    result.append('n');    }    result.append('n');	  	compilable	  [FE]  ComparisonFailure  	240	1	add
1011	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }  result.append('n');  if(index!=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index    +    1));    result.append('n');    }    result.append('n');  if(index!=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	240	1	add
1012	[BUG]  [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }  result.append('n');  if(index!=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }  result.append('n');  if(index!=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index    +    1));    result.append('n');    }    result.append('n');  if(index!=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index  +  1));  result.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	240	1	add
1013	[BUG]  [BUGGY]  result.append('N',  upper);  [CE]  no  suitable  method  found  for  append(char,int)  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('N',  upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('N',  upper);	  result.append('N');    	non-compiled	[CE]  no  suitable  method  found  for  append(char,int)	107	None	replace
1014	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('N').append(upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('N').append(upper);	  result.append('N');    	compilable	  [FE]  ComparisonFailure  	107	1	replace
1015	[BUG]  [BUGGY]  result.append('N').append(upper);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('N').append(upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('N').append(upper);	  result.append('N');    	compilable	  [FE]  ComparisonFailure  	107	1	replace
1016	[BUG]  [BUGGY]  result.append(str.substring(index  +  1)+  1);  Result.append(str.substring(index  +  1)+  1);  [CE]  cannot  find  symbol  Result  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index  +  1)+  1);  Result.append(str.substring(index  +  1)+  1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index    +    1)+    1);    Result.append(str.substring(index  +  1)+  1);	  	non-compiled	[CE]  cannot  find  symbol  Result	44	None	add
1017	[BUG]  [BUGGY]  result.append(str.substring(index  +  1)+  1);  results.append(str.substring(index  +  1)+  1);  [CE]  cannot  find  symbol  results  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index  +  1)+  1);  results.append(str.substring(index  +  1)+  1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index    +    1)+    1);    results.append(str.substring(index  +  1)+  1);	  	non-compiled	[CE]  cannot  find  symbol  results	44	None	add
1018	[BUG]  [BUGGY]  result.append(str.substring(0,  index)+  1,  lower  +  1);  [CE]  no  suitable  method  found  for  append(String,int)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index)+  1,  lower  +  1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index)+  1,  lower  +  1);	  result.append(str.substring(0,    index)+    1,    lower);    	non-compiled	[CE]  no  suitable  method  found  for  append(String,int)	203	None	replace
1019	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(0,  index));  }  result.append(str.substring(index,  lower));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    else    {    result.append(str.substring(0,    index));    }    result.append(str.substring(index,  lower));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	177	1	add
1020	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(0,  index));  }  result.append(str.substring(index,  lower));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(0,  index));  }  result.append(str.substring(index,  lower));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    else    {    result.append(str.substring(0,    index));    }    result.append(str.substring(index,  lower));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	177	1	add
1021	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(0,  index));  }  result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    else    {    result.append(str.substring(0,    index));    }    result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	177	1	add
1022	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(0,  index));  }  result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(0,  index));  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(0,  index));  }  result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    else    {    result.append(str.substring(0,    index));    }    result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	177	1	add
1023	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( "  upper= ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append( "  upper= ");	  result.append(   "    lower=   ");    	compilable	  [FE]  ComparisonFailure  	191	1	replace
1024	[BUG]  [BUGGY]  result.append( "  upper= ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( "  upper= ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append( "  upper= ");	  result.append(   "    lower=   ");    	compilable	  [FE]  ComparisonFailure  	191	1	replace
1025	[BUG]  [BUGGY]  }  else  if(index!=  lower)  {  result.append(str.substring(0,  index),  upper);  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index!=  lower)  {  result.append(str.substring(0,  index),  upper);  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index!=  lower)  {  result.append(str.substring(0,  index),  upper);  }	  }    else    if(index    ==    upper)    {    result.append(str.substring(0,    index),    lower);    	non-compiled	[CE]  illegal  start  of  type	161	None	replace
1026	[BUG]  [BUGGY]  }  else  if(index  <  lower)  {  result.append(str.substring(0,  index),  upper);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  <  lower)  {  result.append(str.substring(0,  index),  upper);  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  <  lower)  {  result.append(str.substring(0,  index),  upper);  }	  }    else    if(index    ==    upper)    {    result.append(str.substring(0,    index),    lower);    	non-compiled	[CE]  illegal  start  of  type	161	None	replace
1027	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(upper,  index),  lower);  [CE]  no  suitable  method  found  for  defaultString(int,int)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(StringUtils.defaultString(upper,  index),  lower);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(StringUtils.defaultString(upper,  index),  lower);	  result.append(StringUtils.defaultString(upper),    lower);    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int,int)	189	None	replace
1028	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  start  5  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  +  1),  upper,  lower);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,  index  +  1),  upper,  lower);	  result.append(str.substring(0,    index    +    1),    lower);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  start  5  	242	1	replace
1029	[BUG]  [BUGGY]  result.append(str.substring(0,  index  +  1),  upper,  lower);  [FE]  java.lang.IndexOutOfBoundsException:  start  5  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  +  1),  upper,  lower);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index  +  1),  upper,  lower);	  result.append(str.substring(0,    index    +    1),    lower);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  start  5  	242	1	replace
1030	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(0,        index));        result.append(str.substring(0,    index));    result.append(str.substring(0,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	80	1	add
1031	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        result.append(str.substring(0,    index));    result.append(str.substring(0,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	80	1	add
1032	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    result.append(str.substring(0,  index));  if(index  <  lower)  {  result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(0,        index));        result.append(str.substring(0,    index));    if(index  <  lower)  {  result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	80	1	add
1033	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    result.append(str.substring(0,  index));  if(index  <  lower)  {  result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    result.append(str.substring(0,  index));  if(index  <  lower)  {  result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        result.append(str.substring(0,    index));    if(index  <  lower)  {  result.append(str.substring(0,  index));  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	80	1	add
1034	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(   "n   ");  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append( "n   ");  }  [CE]  reached  end  of  file  while  parsing  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(   "n   ");  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append( "n   ");  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(   "n   ");    }    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append( "n   ");  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	171	None	add
1035	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(   "n   ");  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  [CE]  reached  end  of  file  while  parsing  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(   "n   ");  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(   "n   ");    }    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));	  	non-compiled	[CE]  reached  end  of  file  while  parsing	171	None	add
1036	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(0,  lower));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    else    {    result.append(str.substring(index,    lower));    }    result.append(str.substring(0,  lower));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	173	1	add
1037	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(0,  lower));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(0,  lower));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    else    {    result.append(str.substring(index,    lower));    }    result.append(str.substring(0,  lower));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	173	1	add
1038	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(index,  lower));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    else    {    result.append(str.substring(index,    lower));    }    result.append(str.substring(index,  lower));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	173	1	add
1039	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(index,  lower));  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(index,  lower));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    else    {    result.append(str.substring(index,    lower));    }    result.append(str.substring(index,  lower));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	173	1	add
1040	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(0,  lower));  if(index  >=  -1)  {  result.append(str.substring(0,  upper));  }  else  {  result.append(str.substring(  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  else  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(0,  lower));  if(index  >=  -1)  {  result.append(str.substring(0,  upper));  }  else  {  result.append(str.substring(  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    else    {    result.append(str.substring(index,    lower));    }    result.append(str.substring(0,  lower));  if(index  >=  -1)  {  result.append(str.substring(0,  upper));  }  else  {  result.append(str.substring(	  	non-compiled	[CE]  illegal  start  of  expression	173	None	add
1041	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(lower),  upper,  index);  [CE]  no  suitable  method  found  for  defaultString(int)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(StringUtils.defaultString(lower),  upper,  index);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(StringUtils.defaultString(lower),  upper,  index);	  result.append(StringUtils.defaultString(lower),    upper);    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int)	104	None	replace
1042	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(lower),  lower,  upper);  [CE]  no  suitable  method  found  for  defaultString(int)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(StringUtils.defaultString(lower),  lower,  upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(StringUtils.defaultString(lower),  lower,  upper);	  result.append(StringUtils.defaultString(lower),    upper);    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int)	104	None	replace
1043	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  <  lower)  {  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}  else  if(index  <  lower)  {  result.append(str.substring(0,  index));	  }    else    if(index    >    0)    {    result.append(str.substring(0,    index));    	compilable	  [FE]  ComparisonFailure  	21	1	replace
1044	[BUG]  [BUGGY]  }  else  if(index  <  lower)  {  result.append(str.substring(0,  index));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  <  lower)  {  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  <  lower)  {  result.append(str.substring(0,  index));	  }    else    if(index    >    0)    {    result.append(str.substring(0,    index));    	compilable	  [FE]  ComparisonFailure  	21	1	replace
1045	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  upper));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,  upper));	  }    else    if(index    ==    upper)    {    }    else    if(index    ==    upper)    {    result.append(str.substring(0,    lower));    result.append(StringUtils.defaultString(appendToEnd));    }    	compilable	  [FE]  ComparisonFailure  	230	1	replace
1046	[BUG]  [BUGGY]  result.append(str.substring(0,  upper));  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  upper));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  upper));	  }    else    if(index    ==    upper)    {    }    else    if(index    ==    upper)    {    result.append(str.substring(0,    lower));    result.append(StringUtils.defaultString(appendToEnd));    }    	compilable	  [FE]  ComparisonFailure  	230	1	replace
1047	[BUG]  [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  lower));  }  else  if(index  >  0)  {  result.append(StringUtils.defaultString(upper));  }  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  lower));  }  else  if(index  >  0)  {  result.append(StringUtils.defaultString(upper));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >        0)        {        result.append(str.substring(0,    lower));    }  else  if(index  >  0)  {  result.append(StringUtils.defaultString(upper));  }	  	non-compiled	[CE]  illegal  start  of  type	166	None	add
1048	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    result.append(str.substring(0,  index));  }  else  if(index  ==  upper)  {  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        ==        upper)        {        result.append(str.substring(0,    index));    }  else  if(index  ==  upper)  {  result.append(str.substring(0,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	159	1	add
1049	[BUG]  [BUGGY]  }    else    if(index    ==    upper)    {    result.append(str.substring(0,  index));  }  else  if(index  ==  upper)  {  result.append(str.substring(0,  index));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    result.append(str.substring(0,  index));  }  else  if(index  ==  upper)  {  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        ==        upper)        {        result.append(str.substring(0,    index));    }  else  if(index  ==  upper)  {  result.append(str.substring(0,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	159	1	add
1050	[BUG]  [BUGGY]  }    else    if(index    ==    upper)    {    result.append(str.substring(0,  index));  }  else  if(index  ==  lower)  {  result.append(StringUtils.defaultString(upper));  }  [CE]  illegal  start  of  type  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    result.append(str.substring(0,  index));  }  else  if(index  ==  lower)  {  result.append(StringUtils.defaultString(upper));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        ==        upper)        {        result.append(str.substring(0,    index));    }  else  if(index  ==  lower)  {  result.append(StringUtils.defaultString(upper));  }	  	non-compiled	[CE]  illegal  start  of  type	159	None	add
1051	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  -1)  {  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    ==    -1)    {    result.append(str.substring(0,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	211	1	add
1052	[BUG]  [BUGGY]  }  else  if(index  ==  -1)  {  result.append(str.substring(0,  index));  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  -1)  {  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    ==    -1)    {    result.append(str.substring(0,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	211	1	add
1053	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  -1)  {  result.append(str.substring(0,  upper));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    ==    -1)    {    result.append(str.substring(0,  upper));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	211	1	add
1054	[BUG]  [BUGGY]  }  else  if(index  ==  -1)  {  result.append(str.substring(0,  upper));  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  -1)  {  result.append(str.substring(0,  upper));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    ==    -1)    {    result.append(str.substring(0,  upper));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	211	1	add
1055	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  lower  +  1,  upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,  index),  lower  +  1,  upper);	  result.append(str.substring(0,    index),    lower    +    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	204	1	replace
1056	[BUG]  [BUGGY]  result.append(str.substring(0,  index),  lower  +  1,  upper);  [FE]  StringIndexOutOfBoundsException  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  lower  +  1,  upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index),  lower  +  1,  upper);	  result.append(str.substring(0,    index),    lower    +    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	204	1	replace
1057	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('N');  result.append('K');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('N');    result.append('K');	  	compilable	  [FE]  ComparisonFailure  	106	1	add
1058	[BUG]  [BUGGY]  result.append('N');  result.append('K');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('N');  result.append('K');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('N');    result.append('K');	  	compilable	  [FE]  ComparisonFailure  	106	1	add
1059	[BUG]  [BUGGY]  result.append('N');  Result.append('N');  [CE]  cannot  find  symbol  Result  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('N');  Result.append('N');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('N');    Result.append('N');	  	non-compiled	[CE]  cannot  find  symbol  Result	106	None	add
1060	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('N');  result.append('M');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('N');    result.append('M');	  	compilable	  [FE]  ComparisonFailure  	106	1	add
1061	[BUG]  [BUGGY]  result.append('N');  result.append('M');  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('N');  result.append('M');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('N');    result.append('M');	  	compilable	  [FE]  ComparisonFailure  	106	1	add
1062	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('N');  result.append('Y');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('N');    result.append('Y');	  	compilable	  [FE]  ComparisonFailure  	106	1	add
1063	[BUG]  [BUGGY]  result.append('N');  result.append('Y');  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('N');  result.append('Y');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('N');    result.append('Y');	  	compilable	  [FE]  ComparisonFailure  	106	1	add
1064	[BUG]  [BUGGY]  result.append(str.substring(0,  index)+  1,  lower,  appendToEnd);  [CE]  no  suitable  method  found  for  append(String,int,String)  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index)+  1,  lower,  appendToEnd);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index)+  1,  lower,  appendToEnd);	  result.append(str.substring(0,    index),    lower,    appendToEnd);    	non-compiled	[CE]  no  suitable  method  found  for  append(String,int,String)	93	None	replace
1065	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  result.append( ", ");  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        ==        upper)        {        }    else    if(index    ==    upper)    {    result.append(str.substring(0,    lower));    result.append(StringUtils.defaultString(appendToEnd));    result.append( ", ");	  	compilable	  [FE]  StringIndexOutOfBoundsException  	232	1	add
1066	[BUG]  [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  result.append( ", ");  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  result.append( ", ");  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        ==        upper)        {        }    else    if(index    ==    upper)    {    result.append(str.substring(0,    lower));    result.append(StringUtils.defaultString(appendToEnd));    result.append( ", ");	  	compilable	  [FE]  StringIndexOutOfBoundsException  	232	1	add
1067	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  result.append('n');  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        ==        upper)        {        }    else    if(index    ==    upper)    {    result.append(str.substring(0,    lower));    result.append(StringUtils.defaultString(appendToEnd));    result.append('n');	  	compilable	  [FE]  StringIndexOutOfBoundsException  	232	1	add
1068	[BUG]  [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  result.append('n');  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  result.append('n');  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        ==        upper)        {        }    else    if(index    ==    upper)    {    result.append(str.substring(0,    lower));    result.append(StringUtils.defaultString(appendToEnd));    result.append('n');	  	compilable	  [FE]  StringIndexOutOfBoundsException  	232	1	add
1069	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]    junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( ",upper: ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append( ",upper: ");	  result.append(   ",n   ");    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	132	1	replace
1070	[BUG]  [BUGGY]  result.append( ",upper: ");  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]    junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( ",upper: ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append( ",upper: ");	  result.append(   ",n   ");    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	132	1	replace
1071	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  0)  {  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    >=    0)    {    result.append(str.substring(0,  index));	  	compilable	  [FE]  ComparisonFailure  	14	1	add
1072	[BUG]  [BUGGY]  }  else  if(index  >=  0)  {  result.append(str.substring(0,  index));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  0)  {  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    >=    0)    {    result.append(str.substring(0,  index));	  	compilable	  [FE]  ComparisonFailure  	14	1	add
1073	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  0)  {  result.append(str.substring(0,  upper));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    >=    0)    {    result.append(str.substring(0,  upper));	  	compilable	  [FE]  ComparisonFailure  	14	1	add
1074	[BUG]  [BUGGY]  }  else  if(index  >=  0)  {  result.append(str.substring(0,  upper));  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  0)  {  result.append(str.substring(0,  upper));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    >=    0)    {    result.append(str.substring(0,  upper));	  	compilable	  [FE]  ComparisonFailure  	14	1	add
1075	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  <  0)  {  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    <    0)    {    result.append(str.substring(0,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	56	1	add
1076	[BUG]  [BUGGY]  }  else  if(index  <  0)  {  result.append(str.substring(0,  index));  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  <  0)  {  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    <    0)    {    result.append(str.substring(0,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	56	1	add
1077	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  <  0)  {  result.append(str.substring(0,  upper));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    <    0)    {    result.append(str.substring(0,  upper));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	56	1	add
1078	[BUG]  [BUGGY]  }  else  if(index  <  0)  {  result.append(str.substring(0,  upper));  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  <  0)  {  result.append(str.substring(0,  upper));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    <    0)    {    result.append(str.substring(0,  upper));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	56	1	add
1079	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    result.append(str.substring(index,  upper));  result.append(str.substring(index,  lower));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index,        lower));        result.append(str.substring(index,    upper));    result.append(str.substring(index,  lower));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	224	1	add
1080	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    result.append(str.substring(index,  upper));  result.append(str.substring(index,  lower));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    result.append(str.substring(index,  upper));  result.append(str.substring(index,  lower));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        result.append(str.substring(index,    upper));    result.append(str.substring(index,  lower));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	224	1	add
1081	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    result.append(str.substring(index,  upper));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  result.append(str.substring(index,  upper));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index,        lower));        result.append(str.substring(index,    upper));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  result.append(str.substring(index,  upper));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	224	1	add
1082	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    result.append(str.substring(index,  upper));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  result.append(str.substring(index,  upper));  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    result.append(str.substring(index,  upper));  if(index  >=  -1)  {  result.append(str.substring(index,  lower));  result.append(str.substring(index,  upper));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        result.append(str.substring(index,    upper));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  result.append(str.substring(index,  upper));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	224	1	add
1083	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index)+  1,  lower,  -1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,  index)+  1,  lower,  -1);	  result.append(str.substring(0,    index),    lower,    -1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	95	1	replace
1084	[BUG]  [BUGGY]  result.append(str.substring(0,  index)+  1,  lower,  -1);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index)+  1,  lower,  -1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index)+  1,  lower,  -1);	  result.append(str.substring(0,    index),    lower,    -1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	95	1	replace
1085	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  lower)  {  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    ==    lower)    {    result.append(str.substring(0,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	16	1	add
1086	[BUG]  [BUGGY]  }  else  if(index  ==  lower)  {  result.append(str.substring(0,  index));  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  lower)  {  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    ==    lower)    {    result.append(str.substring(0,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	16	1	add
1087	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  lower)  {  result.append(str.substring(0,  lower));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    ==    lower)    {    result.append(str.substring(0,  lower));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	16	1	add
1088	[BUG]  [BUGGY]  }  else  if(index  ==  lower)  {  result.append(str.substring(0,  lower));  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  lower)  {  result.append(str.substring(0,  lower));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    ==    lower)    {    result.append(str.substring(0,  lower));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	16	1	add
1089	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  lower)  {  result.append(str.substring(0,  upper));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    ==    lower)    {    result.append(str.substring(0,  upper));	  	compilable	  [FE]  ComparisonFailure  	16	1	add
1090	[BUG]  [BUGGY]  }  else  if(index  ==  lower)  {  result.append(str.substring(0,  upper));  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  lower)  {  result.append(str.substring(0,  upper));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    ==    lower)    {    result.append(str.substring(0,  upper));	  	compilable	  [FE]  ComparisonFailure  	16	1	add
1091	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index,  lower));  result.append('n');  }  result.append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(index,    lower));    result.append('n');    }    result.append('n');	  	compilable	  [FE]  ComparisonFailure  	238	1	add
1092	[BUG]  [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index,  lower));  result.append('n');  }  result.append('n');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index,  lower));  result.append('n');  }  result.append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(index,    lower));    result.append('n');    }    result.append('n');	  	compilable	  [FE]  ComparisonFailure  	238	1	add
1093	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index,  lower));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  lower));  result.append('n');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(index,    lower));    result.append('n');    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  lower));  result.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	238	1	add
1094	[BUG]  [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index,  lower));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  lower));  result.append('n');  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index,  lower));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  lower));  result.append('n');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(index,    lower));    result.append('n');    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  lower));  result.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	238	1	add
1095	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index,  lower));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  upper));  result.append('n');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(index,    lower));    result.append('n');    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  upper));  result.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	238	1	add
1096	[BUG]  [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index,  lower));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  upper));  result.append('n');  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index,  lower));  result.append('n');  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  upper));  result.append('n');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(index,    lower));    result.append('n');    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  upper));  result.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	238	1	add
1097	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   "  -   ");  result.append( ".  -   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(   "    -   ");    result.append( ".  -   ");	  	compilable	  [FE]  ComparisonFailure  	192	1	add
1098	[BUG]  [BUGGY]  result.append(   "  -   ");  result.append( ".  -   ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   "  -   ");  result.append( ".  -   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(   "    -   ");    result.append( ".  -   ");	  	compilable	  [FE]  ComparisonFailure  	192	1	add
1099	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    result.append(str.substring(0,  index));  }  else  if(index  <  lower)  {  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        <        upper)        {        result.append(str.substring(0,    index));    }  else  if(index  <  lower)  {  result.append(str.substring(0,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	205	1	add
1100	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    result.append(str.substring(0,  index));  }  else  if(index  <  lower)  {  result.append(str.substring(0,  index));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    result.append(str.substring(0,  index));  }  else  if(index  <  lower)  {  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        result.append(str.substring(0,    index));    }  else  if(index  <  lower)  {  result.append(str.substring(0,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	205	1	add
1101	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index!=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        ==        upper)        {        }    else    if(index!=    upper)    {    }  else  if(index!=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	12	1	add
1102	[BUG]  [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index!=  upper)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index!=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        ==        upper)        {        }    else    if(index!=    upper)    {    }  else  if(index!=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	12	1	add
1103	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  0)  {  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    ==    0)    {    result.append(str.substring(0,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	39	1	add
1104	[BUG]  [BUGGY]  }  else  if(index  ==  0)  {  result.append(str.substring(0,  index));  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  0)  {  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    ==    0)    {    result.append(str.substring(0,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	39	1	add
1105	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  0)  {  result.append(str.substring(0,  upper));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    ==    0)    {    result.append(str.substring(0,  upper));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	39	1	add
1106	[BUG]  [BUGGY]  }  else  if(index  ==  0)  {  result.append(str.substring(0,  upper));  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  0)  {  result.append(str.substring(0,  upper));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    ==    0)    {    result.append(str.substring(0,  upper));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	39	1	add
1107	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  0)  {  result.append(str.substring(0,  lower));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}    else    if(index    ==    0)    {    result.append(str.substring(0,  lower));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	39	1	add
1108	[BUG]  [BUGGY]  }  else  if(index  ==  0)  {  result.append(str.substring(0,  lower));  [FE]  StringIndexOutOfBoundsException  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  ==  0)  {  result.append(str.substring(0,  lower));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    ==    0)    {    result.append(str.substring(0,  lower));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	39	1	add
1109	[BUG]  [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index        +        1));        if(index    >=    -1)    {    result.append(str.substring(index    +    1));    }    result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));	  	non-compiled	[CE]  reached  end  of  file  while  parsing	162	None	add
1110	[BUG]  [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  Result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  [CE]  cannot  find  symbol  Result  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  Result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index        +        1));        if(index    >=    -1)    {    result.append(str.substring(index    +    1));    }    Result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }	  	non-compiled	[CE]  cannot  find  symbol  Result	162	None	add
1111	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(lower,  lower),  upper);  [CE]  no  suitable  method  found  for  defaultString(int,int)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(StringUtils.defaultString(lower,  lower),  upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(StringUtils.defaultString(lower,  lower),  upper);	  result.append(StringUtils.defaultString(lower,    lower));    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int,int)	151	None	replace
1112	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(0,  lower));  if(index  >=  -1)  {  result.append(str.substring(0,  lower));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    result.append(str.substring(0,  lower));  if(index  >=  -1)  {  result.append(str.substring(0,  lower));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	179	1	add
1113	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(0,  lower));  if(index  >=  -1)  {  result.append(str.substring(0,  lower));  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(0,  lower));  if(index  >=  -1)  {  result.append(str.substring(0,  lower));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    result.append(str.substring(0,  lower));  if(index  >=  -1)  {  result.append(str.substring(0,  lower));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	179	1	add
1114	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(0,  lower));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(0,  lower));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	179	1	add
1115	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(0,  lower));  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(0,  lower));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(0,  lower));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	179	1	add
1116	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(0,  upper));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(0,  upper));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	179	1	add
1117	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(0,  upper));  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(0,  upper));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    result.append(str.substring(index,  lower));  if(index  >=  -1)  {  result.append(str.substring(0,  upper));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	179	1	add
1118	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(0,  lower));  if(index  >=  -1)  {  result.append(str.substring(0,  upper));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    result.append(str.substring(0,  lower));  if(index  >=  -1)  {  result.append(str.substring(0,  upper));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	179	1	add
1119	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(0,  lower));  if(index  >=  -1)  {  result.append(str.substring(0,  upper));  }  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    if(index  >=  -1)  {  result.append(str.substring(index,  lower));  }  result.append(str.substring(0,  lower));  if(index  >=  -1)  {  result.append(str.substring(0,  upper));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        if(index    >=    -1)    {    result.append(str.substring(index,    lower));    }    result.append(str.substring(0,  lower));  if(index  >=  -1)  {  result.append(str.substring(0,  upper));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	179	1	add
1120	[BUG]  [BUGGY]  result.append(str.substring(index  +  1),  upper);  [CE]  no  suitable  method  found  for  append(String,int)  [FE]          ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index  +  1),  upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index  +  1),  upper);	  result.append(str.substring(index    +    1),    lower);    	non-compiled	[CE]  no  suitable  method  found  for  append(String,int)	43	None	replace
1121	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index  +  1,  lower));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(index  +  1,  lower));	  result.append(str.substring(index    +    1),    lower);    	compilable	  [FE]  ComparisonFailure  	43	1	replace
1122	[BUG]  [BUGGY]  result.append(str.substring(index  +  1,  lower));  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index  +  1,  lower));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index  +  1,  lower));	  result.append(str.substring(index    +    1),    lower);    	compilable	  [FE]  ComparisonFailure  	43	1	replace
1123	[BUG]  [BUGGY]  result.append(StringUtils.defaultString(lower,  upper,  index));  [CE]  no  suitable  method  found  for  defaultString(int,int,int)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(StringUtils.defaultString(lower,  upper,  index));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(StringUtils.defaultString(lower,  upper,  index));	  result.append(StringUtils.defaultString(lower,    index));    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int,int,int)	150	None	replace
1124	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  upper  +  1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(index,  upper  +  1));	  result.append(str.substring(index,    index    +    1));    	compilable	  [FE]  StringIndexOutOfBoundsException  	117	1	replace
1125	[BUG]  [BUGGY]  result.append(str.substring(index,  upper  +  1));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  upper  +  1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index,  upper  +  1));	  result.append(str.substring(index,    index    +    1));    	compilable	  [FE]  StringIndexOutOfBoundsException  	117	1	replace
1126	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]    junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(',');  result.append(lower);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(',');    result.append(lower);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	133	1	add
1127	[BUG]  [BUGGY]  result.append(',');  result.append(lower);  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]    junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(',');  result.append(lower);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(',');    result.append(lower);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	133	1	add
1128	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]      junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(',');  result.append(upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(',');    result.append(upper);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	133	1	add
1129	[BUG]  [BUGGY]  result.append(',');  result.append(upper);  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]      junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(',');  result.append(upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(',');    result.append(upper);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	133	1	add
1130	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   "  lower=   ");  result.append(   "  low=   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(   "    lower=   ");    result.append(   "  low=   ");	  	compilable	  [FE]  ComparisonFailure  	190	1	add
1131	[BUG]  [BUGGY]  result.append(   "  lower=   ");  result.append(   "  low=   ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   "  lower=   ");  result.append(   "  low=   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(   "    lower=   ");    result.append(   "  low=   ");	  	compilable	  [FE]  ComparisonFailure  	190	1	add
1132	[BUG]  [BUGGY]  result.append(   "  lower=   ");  result.append('  lower=   ");  [CE]  unclosed  character  literal  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   "  lower=   ");  result.append('  lower=   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(   "    lower=   ");    result.append('  lower=   ");	  	non-compiled	[CE]  unclosed  character  literal	190	None	add
1133	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  }  else  if(index  >=  lower)  {  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    index));    }  else  if(index  >=  lower)  {  result.append(str.substring(0,  index));	  	compilable	  [FE]  ComparisonFailure  	209	1	add
1134	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  }  else  if(index  >=  lower)  {  result.append(str.substring(0,  index));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  }  else  if(index  >=  lower)  {  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    index));    }  else  if(index  >=  lower)  {  result.append(str.substring(0,  index));	  	compilable	  [FE]  ComparisonFailure  	209	1	add
1135	[BUG]  [BUGGY]  result.append(   "     ");  result.append('   ");  [CE]  unclosed  character  literal  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(   "     ");  result.append('   ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(   "       ");    result.append('   ");	  	non-compiled	[CE]  unclosed  character  literal	148	None	add
1136	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    result.append(str.substring(index  +  1));  result.append(str.substring(index  +  1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index        +        1));        result.append(str.substring(index    +    1));    result.append(str.substring(index  +  1));	  	compilable	  [FE]  ComparisonFailure  	108	1	add
1137	[BUG]  [BUGGY]          result.append(str.substring(index    +    1));    result.append(str.substring(index  +  1));  result.append(str.substring(index  +  1));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    result.append(str.substring(index  +  1));  result.append(str.substring(index  +  1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index        +        1));        result.append(str.substring(index    +    1));    result.append(str.substring(index  +  1));	  	compilable	  [FE]  ComparisonFailure  	108	1	add
1138	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(1,  lower));  result.append(str.substring(1,  upper));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(1,    lower));    result.append(str.substring(1,  upper));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	234	1	add
1139	[BUG]  [BUGGY]  result.append(str.substring(1,  lower));  result.append(str.substring(1,  upper));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(1,  lower));  result.append(str.substring(1,  upper));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(1,    lower));    result.append(str.substring(1,  upper));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	234	1	add
1140	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  result.append(str.substring(0,  index));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(StringUtils.defaultString(appendToEnd));    }    result.append(str.substring(0,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	84	1	add
1141	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  result.append(str.substring(0,  index));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  result.append(str.substring(0,  index));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(StringUtils.defaultString(appendToEnd));    }    result.append(str.substring(0,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	84	1	add
1142	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  [CE]  reached  end  of  file  while  parsing  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(StringUtils.defaultString(appendToEnd));    }    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));	  	non-compiled	[CE]  reached  end  of  file  while  parsing	84	None	add
1143	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(StringUtils.defaultString(appendToEnd));    }    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
1144	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString  [CE]  ')'  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(StringUtils.defaultString(appendToEnd));    }    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(StringUtils.defaultString	  	non-compiled	[CE]  ')'  expected	84	None	add
1145	[BUG]  [BUGGY]  }  else  if(index  >=  0)  {  result.append(str.substring(0,  index),  lower);  [CE]  no  suitable  method  found  for  append(String,int)  [FE]            ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  0)  {  result.append(str.substring(0,  index),  lower);  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  >=  0)  {  result.append(str.substring(0,  index),  lower);	  }    else    if(index    >    0)    {    result.append(str.substring(0,    index),    lower);    	non-compiled	[CE]  no  suitable  method  found  for  append(String,int)	170	None	replace
1146	[BUG]  [BUGGY]  }  else  if(index  >  0)  {  result.append(str.substring(0,  index),  upper);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >  0)  {  result.append(str.substring(0,  index),  upper);  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  >  0)  {  result.append(str.substring(0,  index),  upper);  }	  }    else    if(index    >    0)    {    result.append(str.substring(0,    index),    lower);    	non-compiled	[CE]  illegal  start  of  type	170	None	replace
1147	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  result.append(upper);  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    lower));    result.append(StringUtils.defaultString(appendToEnd));    result.append(upper);	  	compilable	  [FE]  ComparisonFailure  	222	1	add
1148	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  result.append(upper);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  result.append(upper);  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    lower));    result.append(StringUtils.defaultString(appendToEnd));    result.append(upper);	  	compilable	  [FE]  ComparisonFailure  	222	1	add
1149	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  result.append(lower);  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    lower));    result.append(StringUtils.defaultString(appendToEnd));    result.append(lower);	  	compilable	  [FE]  ComparisonFailure  	222	1	add
1150	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  result.append(lower);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  lower));  result.append(StringUtils.defaultString(appendToEnd));  result.append(lower);  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    lower));    result.append(StringUtils.defaultString(appendToEnd));    result.append(lower);	  	compilable	  [FE]  ComparisonFailure  	222	1	add
1151	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  [CE]  reached  end  of  file  while  parsing  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(str.substring(0,    index));    }    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));	  	non-compiled	[CE]  reached  end  of  file  while  parsing	82	None	add
1152	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  [CE]  'else'  without  'if'  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(str.substring(0,    index));    }    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));	  	non-compiled	[CE]  'else'  without  'if'	82	None	add
1153	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }  result.append(str.substring(0,  index));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(str.substring(0,    index));    }    result.append(str.substring(0,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	82	1	add
1154	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }  result.append(str.substring(0,  index));  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(str.substring(0,  index));  }  result.append(str.substring(0,  index));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(str.substring(0,    index));    }    result.append(str.substring(0,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	82	1	add
1155	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index!=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        ==        upper)        {        }    else    if(index    ==    upper)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	6	1	add
1156	[BUG]  [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index!=  lower)  {  [FE]  ComparisonFailure  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  ==  upper)  {  }  else  if(index!=  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        ==        upper)        {        }    else    if(index    ==    upper)    {    }  else  if(index!=  lower)  {	  	compilable	  [FE]  ComparisonFailure  	6	1	add
1157	[BUG]  [BUGGY]  result.append( "null ",  lower);  [CE]  no  suitable  method  found  for  append(String,int)  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( "null ",  lower);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append( "null ",  lower);	  result.append(   "null   ");    	non-compiled	[CE]  no  suitable  method  found  for  append(String,int)	147	None	replace
1158	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  +  1));  if(index  <  lower)  {  result.append(str.substring(0,  index  +  1));  }  else  {  result.append(str.substring(0,  index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,    index    +    1));    if(index  <  lower)  {  result.append(str.substring(0,  index  +  1));  }  else  {  result.append(str.substring(0,  index  +  1));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	41	1	add
1159	[BUG]  [BUGGY]  result.append(str.substring(0,  index  +  1));  if(index  <  lower)  {  result.append(str.substring(0,  index  +  1));  }  else  {  result.append(str.substring(0,  index  +  1));  }  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  +  1));  if(index  <  lower)  {  result.append(str.substring(0,  index  +  1));  }  else  {  result.append(str.substring(0,  index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index    +    1));    if(index  <  lower)  {  result.append(str.substring(0,  index  +  1));  }  else  {  result.append(str.substring(0,  index  +  1));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	41	1	add
1160	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  +  1));  if(index  >=  -1)  {  result.append(str.substring(0,  index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,    index    +    1));    if(index  >=  -1)  {  result.append(str.substring(0,  index  +  1));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	41	1	add
1161	[BUG]  [BUGGY]  result.append(str.substring(0,  index  +  1));  if(index  >=  -1)  {  result.append(str.substring(0,  index  +  1));  }  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  +  1));  if(index  >=  -1)  {  result.append(str.substring(0,  index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index    +    1));    if(index  >=  -1)  {  result.append(str.substring(0,  index  +  1));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	41	1	add
1162	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    result.append(str.substring(index,  lower));  result.append(str.substring(index,  lower));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index,        lower));        result.append(str.substring(index,    lower));    result.append(str.substring(index,  lower));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	70	1	add
1163	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    result.append(str.substring(index,  lower));  result.append(str.substring(index,  lower));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    result.append(str.substring(index,  lower));  result.append(str.substring(index,  lower));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        result.append(str.substring(index,    lower));    result.append(str.substring(index,  lower));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	70	1	add
1164	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    result.append(str.substring(index,  lower));  result.append(str.substring(index,  lower));  result.append(str.substring(index,  upper));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index,        lower));        result.append(str.substring(index,    lower));    result.append(str.substring(index,  lower));  result.append(str.substring(index,  upper));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	70	1	add
1165	[BUG]  [BUGGY]          result.append(str.substring(index,    lower));    result.append(str.substring(index,  lower));  result.append(str.substring(index,  lower));  result.append(str.substring(index,  upper));  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index,    lower));    result.append(str.substring(index,  lower));  result.append(str.substring(index,  lower));  result.append(str.substring(index,  upper));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index,        lower));        result.append(str.substring(index,    lower));    result.append(str.substring(index,  lower));  result.append(str.substring(index,  upper));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	70	1	add
1166	[BUG]  [BUGGY]  result.append(str.substring(index,  lower  +  1));  StringBuffer  result.append(str.substring(index,  lower  +  1));  [CE]  ';'  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  lower  +  1));  StringBuffer  result.append(str.substring(index,  lower  +  1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index,    lower    +    1));    StringBuffer  result.append(str.substring(index,  lower  +  1));	  	non-compiled	[CE]  ';'  expected	114	None	add
1167	[BUG]  [BUGGY]  result.append(str.substring(index,  lower  +  1));  Result.append(str.substring(index,  lower  +  1));  [CE]  cannot  find  symbol  Result  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  lower  +  1));  Result.append(str.substring(index,  lower  +  1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index,    lower    +    1));    Result.append(str.substring(index,  lower  +  1));	  	non-compiled	[CE]  cannot  find  symbol  Result	114	None	add
1168	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  lower  +  1));  result.append(str.substring(index,  upper  +  1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(index,    lower    +    1));    result.append(str.substring(index,  upper  +  1));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	114	1	add
1169	[BUG]  [BUGGY]  result.append(str.substring(index,  lower  +  1));  result.append(str.substring(index,  upper  +  1));  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  lower  +  1));  result.append(str.substring(index,  upper  +  1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index,    lower    +    1));    result.append(str.substring(index,  upper  +  1));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	114	1	add
1170	[BUG]  [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  [CE]  'else'  without  'if'  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index        +        1));        if(index    >=    -1)    {    result.append(str.substring(index    +    1));    }    else    {    result.append(str.substring(index    +    1));    }    result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));	  	non-compiled	[CE]  'else'  without  'if'	112	None	add
1171	[BUG]  [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  [CE]  reached  end  of  file  while  parsing  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index        +        1));        if(index    >=    -1)    {    result.append(str.substring(index    +    1));    }    else    {    result.append(str.substring(index    +    1));    }    result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));	  	non-compiled	[CE]  reached  end  of  file  while  parsing	112	None	add
1172	[BUG]  [BUGGY]  result.append(''+str.substring(0,  index),  upper);  [CE]  empty  character  literal  [FE]            ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(''+str.substring(0,  index),  upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(''+str.substring(0,  index),  upper);	  result.append(''+    str.substring(0,    index));    	non-compiled	[CE]  empty  character  literal	139	None	replace
1173	[BUG]  [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  if(index  >=  -1)  {  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  if(index  >=  -1)  {  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    >=    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    }    result.append('n');  if(index  >=  -1)  {  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	62	None	add
1174	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    >=    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    }    result.append('n');	  	compilable	  [FE]  ComparisonFailure  	62	1	add
1175	[BUG]  [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    >=    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    }    result.append('n');	  	compilable	  [FE]  ComparisonFailure  	62	1	add
1176	[BUG]  [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  if(index  >=  -1)  {  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  if(index  >=  -1)  {  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    >=    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    }    result.append('n');  if(index  >=  -1)  {  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
1177	[BUG]  [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    >=    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    }    result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));	  	non-compiled	[CE]  'else'  without  'if'	62	None	add
1178	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(upper  >  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}  else  if(upper  >  0)  {	  }    else    if(index    >    0)    {    }    else    if(index    >    0)    {    	compilable	  [FE]  ComparisonFailure  	19	1	replace
1179	[BUG]  [BUGGY]  }  else  if(upper  >  0)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(upper  >  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(upper  >  0)  {	  }    else    if(index    >    0)    {    }    else    if(index    >    0)    {    	compilable	  [FE]  ComparisonFailure  	19	1	replace
1180	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('m');  result.append('r');  result.append('m');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        result.append('m');    result.append('r');  result.append('m');	  	compilable	  [FE]  ComparisonFailure  	194	1	add
1181	[BUG]  [BUGGY]          result.append('n');    result.append('m');  result.append('r');  result.append('m');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('m');  result.append('r');  result.append('m');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        result.append('m');    result.append('r');  result.append('m');	  	compilable	  [FE]  ComparisonFailure  	194	1	add
1182	[BUG]  [BUGGY]          result.append(str.substring(index    +    1));    if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  [CE]  'else'  without  'if'  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index        +        1));        if(index    <    0)    {    result.append(str.substring(index    +    1));    }    else    {    result.append(str.substring(index    +    1));    }    result.append(str.substring(index  +  1));  if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));	  	non-compiled	[CE]  'else'  without  'if'	110	None	add
1183	[BUG]  [BUGGY]          result.append(str.substring(index    +    1));    if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  <  0)  {  result.append(str.substring(index  +  1));  [CE]  reached  end  of  file  while  parsing  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  <  0)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(index  +  1));  if(index  <  0)  {  result.append(str.substring(index  +  1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index        +        1));        if(index    <    0)    {    result.append(str.substring(index    +    1));    }    else    {    result.append(str.substring(index    +    1));    }    result.append(str.substring(index  +  1));  if(index  <  0)  {  result.append(str.substring(index  +  1));	  	non-compiled	[CE]  reached  end  of  file  while  parsing	110	None	add
1184	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(   ",   ");  }  result.append( ", ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(   ",   ");    }    result.append( ", ");	  	compilable	  [FE]  StringIndexOutOfBoundsException  	88	1	add
1185	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(   ",   ");  }  result.append( ", ");  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(   ",   ");  }  result.append( ", ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(   ",   ");    }    result.append( ", ");	  	compilable	  [FE]  StringIndexOutOfBoundsException  	88	1	add
1186	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(0,  index));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(   ",   ");    }    result.append(str.substring(0,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	88	1	add
1187	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(0,  index));  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(0,  index));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(   ",   ");    }    result.append(str.substring(0,  index));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	88	1	add
1188	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  [CE]  reached  end  of  file  while  parsing  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    else    {    result.append(   ",   ");    }    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));	  	non-compiled	[CE]  reached  end  of  file  while  parsing	88	None	add
1189	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  lower)  {  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}  else  if(index  >=  lower)  {  result.append(str.substring(0,  index));	  }    else    if(index    ==    upper)    {    result.append(str.substring(0,    index));    	compilable	  [FE]  ComparisonFailure  	160	1	replace
1190	[BUG]  [BUGGY]  }  else  if(index  >=  lower)  {  result.append(str.substring(0,  index));  [FE]  ComparisonFailure  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  lower)  {  result.append(str.substring(0,  index));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  >=  lower)  {  result.append(str.substring(0,  index));	  }    else    if(index    ==    upper)    {    result.append(str.substring(0,    index));    	compilable	  [FE]  ComparisonFailure  	160	1	replace
1191	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('n');  result.append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        result.append('n');    result.append('n');	  	compilable	  [FE]  ComparisonFailure  	60	1	add
1192	[BUG]  [BUGGY]          result.append('n');    result.append('n');  result.append('n');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('n');  result.append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        result.append('n');    result.append('n');	  	compilable	  [FE]  ComparisonFailure  	60	1	add
1193	[BUG]  [BUGGY]          result.append('n');    result.append('n');  Result.append('n');  result.append('n');  [CE]  cannot  find  symbol  Result  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('n');  Result.append('n');  result.append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        result.append('n');    Result.append('n');  result.append('n');	  	non-compiled	[CE]  cannot  find  symbol  Result	60	None	add
1194	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('n');  result.append('N');  result.append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        result.append('n');    result.append('N');  result.append('n');	  	compilable	  [FE]  ComparisonFailure  	60	1	add
1195	[BUG]  [BUGGY]          result.append('n');    result.append('n');  result.append('N');  result.append('n');  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('n');  result.append('N');  result.append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        result.append('n');    result.append('N');  result.append('n');	  	compilable	  [FE]  ComparisonFailure  	60	1	add
1196	[BUG]  [BUGGY]  }  else  if(index!=  0)  {  result.append(StringUtils.defaultString(upper));  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index!=  0)  {  result.append(StringUtils.defaultString(upper));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index!=  0)  {  result.append(StringUtils.defaultString(upper));  }	  }    else    if(index    >    0)    {    result.append(StringUtils.defaultString(upper));    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
1197	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('-');  if(index  >=  -1)  {  result.append('-');  }  else  {  result.append(str.substring(0,  index));  result.append('-');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('-');    if(index  >=  -1)  {  result.append('-');  }  else  {  result.append(str.substring(0,  index));  result.append('-');  }	  	compilable	  [FE]  ComparisonFailure  	243	1	add
1198	[BUG]  [BUGGY]  result.append('-');  if(index  >=  -1)  {  result.append('-');  }  else  {  result.append(str.substring(0,  index));  result.append('-');  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('-');  if(index  >=  -1)  {  result.append('-');  }  else  {  result.append(str.substring(0,  index));  result.append('-');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('-');    if(index  >=  -1)  {  result.append('-');  }  else  {  result.append(str.substring(0,  index));  result.append('-');  }	  	compilable	  [FE]  ComparisonFailure  	243	1	add
1199	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('-');  if(index  >=  -1)  {  result.append('-');  }  else  {  result.append(str.substring(index,  lower));  result.append('-');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('-');    if(index  >=  -1)  {  result.append('-');  }  else  {  result.append(str.substring(index,  lower));  result.append('-');  }	  	compilable	  [FE]  ComparisonFailure  	243	1	add
1200	[BUG]  [BUGGY]  result.append('-');  if(index  >=  -1)  {  result.append('-');  }  else  {  result.append(str.substring(index,  lower));  result.append('-');  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('-');  if(index  >=  -1)  {  result.append('-');  }  else  {  result.append(str.substring(index,  lower));  result.append('-');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('-');    if(index  >=  -1)  {  result.append('-');  }  else  {  result.append(str.substring(index,  lower));  result.append('-');  }	  	compilable	  [FE]  ComparisonFailure  	243	1	add
1201	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('-');  if(index  >=  -1)  {  result.append('-');  }  else  {  result.append(str.substring(index  +  1));  result.append('-');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('-');    if(index  >=  -1)  {  result.append('-');  }  else  {  result.append(str.substring(index  +  1));  result.append('-');  }	  	compilable	  [FE]  ComparisonFailure  	243	1	add
1202	[BUG]  [BUGGY]  result.append('-');  if(index  >=  -1)  {  result.append('-');  }  else  {  result.append(str.substring(index  +  1));  result.append('-');  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('-');  if(index  >=  -1)  {  result.append('-');  }  else  {  result.append(str.substring(index  +  1));  result.append('-');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('-');    if(index  >=  -1)  {  result.append('-');  }  else  {  result.append(str.substring(index  +  1));  result.append('-');  }	  	compilable	  [FE]  ComparisonFailure  	243	1	add
1203	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('-');  if(index  >=  -1)  {  result.append('-');  }  else  {  result.append(str.substring(index,  lower  +  1));  result.append('-');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('-');    if(index  >=  -1)  {  result.append('-');  }  else  {  result.append(str.substring(index,  lower  +  1));  result.append('-');  }	  	compilable	  [FE]  ComparisonFailure  	243	1	add
1204	[BUG]  [BUGGY]  result.append('-');  if(index  >=  -1)  {  result.append('-');  }  else  {  result.append(str.substring(index,  lower  +  1));  result.append('-');  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('-');  if(index  >=  -1)  {  result.append('-');  }  else  {  result.append(str.substring(index,  lower  +  1));  result.append('-');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('-');    if(index  >=  -1)  {  result.append('-');  }  else  {  result.append(str.substring(index,  lower  +  1));  result.append('-');  }	  	compilable	  [FE]  ComparisonFailure  	243	1	add
1205	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  -  1));  if(index  >  lower)  {  result.append(str.substring(0,  index  -  1));  }  else  {  result.append(str.substring(0,  index  -  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,    index    -    1));    if(index  >  lower)  {  result.append(str.substring(0,  index  -  1));  }  else  {  result.append(str.substring(0,  index  -  1));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	74	1	add
1206	[BUG]  [BUGGY]  result.append(str.substring(0,  index  -  1));  if(index  >  lower)  {  result.append(str.substring(0,  index  -  1));  }  else  {  result.append(str.substring(0,  index  -  1));  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  -  1));  if(index  >  lower)  {  result.append(str.substring(0,  index  -  1));  }  else  {  result.append(str.substring(0,  index  -  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index    -    1));    if(index  >  lower)  {  result.append(str.substring(0,  index  -  1));  }  else  {  result.append(str.substring(0,  index  -  1));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	74	1	add
1207	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  -  1));  if(index  >  lower)  {  result.append(str.substring(0,  index  -  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,    index    -    1));    if(index  >  lower)  {  result.append(str.substring(0,  index  -  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	74	1	add
1208	[BUG]  [BUGGY]  result.append(str.substring(0,  index  -  1));  if(index  >  lower)  {  result.append(str.substring(0,  index  -  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  -  1));  if(index  >  lower)  {  result.append(str.substring(0,  index  -  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index    -    1));    if(index  >  lower)  {  result.append(str.substring(0,  index  -  1));  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	74	1	add
1209	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  -  1));  if(index  >  lower)  {  result.append(str.substring(0,  index  -  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,    index    -    1));    if(index  >  lower)  {  result.append(str.substring(0,  index  -  1));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	74	1	add
1210	[BUG]  [BUGGY]  result.append(str.substring(0,  index  -  1));  if(index  >  lower)  {  result.append(str.substring(0,  index  -  1));  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  -  1));  if(index  >  lower)  {  result.append(str.substring(0,  index  -  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index    -    1));    if(index  >  lower)  {  result.append(str.substring(0,  index  -  1));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	74	1	add
1211	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  -  1));  if(index  >  lower)  {  result.append(str.substring(0,  index  -  1));  }  else  {  result.append( ", ");  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,    index    -    1));    if(index  >  lower)  {  result.append(str.substring(0,  index  -  1));  }  else  {  result.append( ", ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	74	1	add
1212	[BUG]  [BUGGY]  result.append(str.substring(0,  index  -  1));  if(index  >  lower)  {  result.append(str.substring(0,  index  -  1));  }  else  {  result.append( ", ");  }  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index  -  1));  if(index  >  lower)  {  result.append(str.substring(0,  index  -  1));  }  else  {  result.append( ", ");  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index    -    1));    if(index  >  lower)  {  result.append(str.substring(0,  index  -  1));  }  else  {  result.append( ", ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	74	1	add
1213	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('n');  }  result.append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    result.append('n');    }    result.append('n');	  	compilable	  [FE]  ComparisonFailure  	236	1	add
1214	[BUG]  [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('n');  }  result.append('n');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append('n');  }  result.append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    result.append('n');    }    result.append('n');	  	compilable	  [FE]  ComparisonFailure  	236	1	add
1215	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( "  }   ").append(index  +  1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append( "  }   ").append(index  +  1);	  result.append(   "    }       ");    	compilable	  [FE]  ComparisonFailure  	187	1	replace
1216	[BUG]  [BUGGY]  result.append( "  }   ").append(index  +  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( "  }   ").append(index  +  1);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append( "  }   ").append(index  +  1);	  result.append(   "    }       ");    	compilable	  [FE]  ComparisonFailure  	187	1	replace
1217	[BUG]  [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  [CE]  reached  end  of  file  while  parsing  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(0,    index));    if(index  >=  -1)  {  result.append(str.substring(0,  index));  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(0,        index));        if(index    >=    -1)    {    result.append(str.substring(0,    index));    }    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(0,  index));	  	non-compiled	[CE]  reached  end  of  file  while  parsing	86	None	add
1218	[BUG]  [BUGGY]  }  else  if(index  >=  lower  &&  index  <  str.length())  {  }  else  if(index  >=  low  &&  index  <  str.length())  {  [CE]  cannot  find  symbol  low  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  lower  &&  index  <  str.length())  {  }  else  if(index  >=  low  &&  index  <  str.length())  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}    else    if(index    >=    lower    &&    index    <    str.length())    {    }  else  if(index  >=  low  &&  index  <  str.length())  {	  	non-compiled	[CE]  cannot  find  symbol  low	144	None	add
1219	[BUG]  [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index!=  lower)  {  }  else  if(index  >>  lower)  {  [CE]  incompatible  types  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index!=  lower)  {  }  else  if(index  >>  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index!=        upper)        {        }    else    if(index!=    lower)    {    }  else  if(index  >>  lower)  {	  	non-compiled	[CE]  incompatible  types	50	None	add
1220	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    result.append(str.substring(index    +    1));    }    result.append('n');	  	compilable	  [FE]  ComparisonFailure  	68	1	add
1221	[BUG]  [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    result.append(str.substring(index    +    1));    }    result.append('n');	  	compilable	  [FE]  ComparisonFailure  	68	1	add
1222	[BUG]  [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index  +  1));  }  [CE]  reached  end  of  file  while  parsing  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    result.append(str.substring(index    +    1));    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index  +  1));  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	68	None	add
1223	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    result.append(str.substring(index    +    1));    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	68	1	add
1224	[BUG]  [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    result.append(str.substring(index    +    1));    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	68	1	add
1225	[BUG]  [BUGGY]  result.append( ".append(upper).append( ",. ").append(index  +  1).append('  ');  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( ".append(upper).append( ",. ").append(index  +  1).append('  ');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append( ".append(upper).append( ",. ").append(index  +  1).append('  ');	  result.append(   ".append(upper).append(   ",   ").append(index    +    1).append('    ');    	non-compiled	[CE]  illegal  start  of  expression	217	None	replace
1226	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.charAt(index  +  1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.charAt(index  +  1));	  result.append(str.substring(0,    lower));    	compilable	  [FE]  ComparisonFailure  	202	1	replace
1227	[BUG]  [BUGGY]  result.append(str.charAt(index  +  1));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.charAt(index  +  1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.charAt(index  +  1));	  result.append(str.substring(0,    lower));    	compilable	  [FE]  ComparisonFailure  	202	1	replace
1228	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(1));	  result.append(str.substring(0,    lower));    	compilable	  [FE]  ComparisonFailure  	202	1	replace
1229	[BUG]  [BUGGY]  result.append(str.substring(1));  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(1));	  result.append(str.substring(0,    lower));    	compilable	  [FE]  ComparisonFailure  	202	1	replace
1230	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    }    result.append('n');	  	compilable	  [FE]  ComparisonFailure  	64	1	add
1231	[BUG]  [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    }    result.append('n');	  	compilable	  [FE]  ComparisonFailure  	64	1	add
1232	[BUG]  [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  if(index  >  upper)  {  result.append(str.substring(0,  index));  }  else  {  result.append(  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  if(index  >  upper)  {  result.append(str.substring(0,  index));  }  else  {  result.append(  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  if(index  >  upper)  {  result.append(str.substring(0,  index));  }  else  {  result.append(	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
1233	[BUG]  [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  if(index  >  upper)  {  result.append(str.substring(0,  index));  }  [CE]  reached  end  of  file  while  parsing  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  ==  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  }  result.append('n');  if(index  ==  -1)  {  result.append('n');  if(index  >  upper)  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    ==    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    }    result.append('n');  if(index  ==  -1)  {  result.append('n');  if(index  >  upper)  {  result.append(str.substring(0,  index));  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	64	None	add
1234	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  result.append(upper);  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    index));    result.append(StringUtils.defaultString(appendToEnd));    result.append(upper);	  	compilable	  [FE]  ComparisonFailure  	220	1	add
1235	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  result.append(upper);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  result.append(upper);  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    index));    result.append(StringUtils.defaultString(appendToEnd));    result.append(upper);	  	compilable	  [FE]  ComparisonFailure  	220	1	add
1236	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  result.append(lower);  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    index));    result.append(StringUtils.defaultString(appendToEnd));    result.append(lower);	  	compilable	  [FE]  ComparisonFailure  	220	1	add
1237	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  result.append(lower);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  result.append(lower);  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    index));    result.append(StringUtils.defaultString(appendToEnd));    result.append(lower);	  	compilable	  [FE]  ComparisonFailure  	220	1	add
1238	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  result.append(str.charAt(index  +  1));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    index));    result.append(StringUtils.defaultString(appendToEnd));    result.append(str.charAt(index  +  1));	  	compilable	  [FE]  ComparisonFailure  	220	1	add
1239	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  result.append(str.charAt(index  +  1));  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  result.append(str.charAt(index  +  1));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    index));    result.append(StringUtils.defaultString(appendToEnd));    result.append(str.charAt(index  +  1));	  	compilable	  [FE]  ComparisonFailure  	220	1	add
1240	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  result.append('n');  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    index));    result.append(StringUtils.defaultString(appendToEnd));    result.append('n');	  	compilable	  [FE]  ComparisonFailure  	220	1	add
1241	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  result.append('n');  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  result.append('n');  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    index));    result.append(StringUtils.defaultString(appendToEnd));    result.append('n');	  	compilable	  [FE]  ComparisonFailure  	220	1	add
1242	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  ==  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index  ==  upper)  {	  	compilable	  [FE]  ComparisonFailure  	120	1	add
1243	[BUG]  [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  ==  upper)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  ==  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index  ==  upper)  {	  	compilable	  [FE]  ComparisonFailure  	120	1	add
1244	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('N');  result.append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        result.append('N');    result.append('n');	  	compilable	  [FE]  ComparisonFailure  	198	1	add
1245	[BUG]  [BUGGY]          result.append('n');    result.append('N');  result.append('n');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('N');  result.append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        result.append('N');    result.append('n');	  	compilable	  [FE]  ComparisonFailure  	198	1	add
1246	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('N');  result.append('N');  result.append('N');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        result.append('N');    result.append('N');  result.append('N');	  	compilable	  [FE]  ComparisonFailure  	198	1	add
1247	[BUG]  [BUGGY]          result.append('n');    result.append('N');  result.append('N');  result.append('N');  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('N');  result.append('N');  result.append('N');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        result.append('N');    result.append('N');  result.append('N');	  	compilable	  [FE]  ComparisonFailure  	198	1	add
1248	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('N');  result.append('m');  result.append('N');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        result.append('N');    result.append('m');  result.append('N');	  	compilable	  [FE]  ComparisonFailure  	198	1	add
1249	[BUG]  [BUGGY]          result.append('n');    result.append('N');  result.append('m');  result.append('N');  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('N');  result.append('m');  result.append('N');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        result.append('N');    result.append('m');  result.append('N');	  	compilable	  [FE]  ComparisonFailure  	198	1	add
1250	[BUG]  [BUGGY]          result.append('n');    result.append('N');  Result.append('n');  result.append('N');  [CE]  cannot  find  symbol  Result  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    result.append('N');  Result.append('n');  result.append('N');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        result.append('N');    Result.append('n');  result.append('N');	  	non-compiled	[CE]  cannot  find  symbol  Result	198	None	add
1251	[BUG]  [BUGGY]  result.append('-',  upper);  [CE]  no  suitable  method  found  for  append(char,int)  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('-',  upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('-',  upper);	  result.append('-');    	non-compiled	[CE]  no  suitable  method  found  for  append(char,int)	244	None	replace
1252	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('-').append(upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('-').append(upper);	  result.append('-');    	compilable	  [FE]  ComparisonFailure  	244	1	replace
1253	[BUG]  [BUGGY]  result.append('-').append(upper);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('-').append(upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('-').append(upper);	  result.append('-');    	compilable	  [FE]  ComparisonFailure  	244	1	replace
1254	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('-'  +  lower);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('-'  +  lower);	  result.append('-');    	compilable	  [FE]  ComparisonFailure  	244	1	replace
1255	[BUG]  [BUGGY]  result.append('-'  +  lower);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('-'  +  lower);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('-'  +  lower);	  result.append('-');    	compilable	  [FE]  ComparisonFailure  	244	1	replace
1256	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  upper));  }  else  if(index  >  0)  {  result.append(str.substring(0,  lower));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >        0)        {        result.append(str.substring(0,    upper));    }  else  if(index  >  0)  {  result.append(str.substring(0,  lower));	  	compilable	  [FE]  ComparisonFailure  	168	1	add
1257	[BUG]  [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  upper));  }  else  if(index  >  0)  {  result.append(str.substring(0,  lower));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  upper));  }  else  if(index  >  0)  {  result.append(str.substring(0,  lower));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >        0)        {        result.append(str.substring(0,    upper));    }  else  if(index  >  0)  {  result.append(str.substring(0,  lower));	  	compilable	  [FE]  ComparisonFailure  	168	1	add
1258	[BUG]  [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  upper));  }  else  if(index  >  0)  {  result.append(str.substring(0,  upper));  index  =  StringUtils.indexOf(lower,  lower);  if(index  >  0)  {  result.append(str.substring(0,  upper));  }  [CE]  no  suitable  method  found  for  indexOf(int,int)  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  upper));  }  else  if(index  >  0)  {  result.append(str.substring(0,  upper));  index  =  StringUtils.indexOf(lower,  lower);  if(index  >  0)  {  result.append(str.substring(0,  upper));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >        0)        {        result.append(str.substring(0,    upper));    }  else  if(index  >  0)  {  result.append(str.substring(0,  upper));  index  =  StringUtils.indexOf(lower,  lower);  if(index  >  0)  {  result.append(str.substring(0,  upper));  }	  	non-compiled	[CE]  no  suitable  method  found  for  indexOf(int,int)	168	None	add
1259	[BUG]  [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  upper));  }  else  if(index  >  0)  {  result.append(str.substring(0,  upper));  System.arraycopy(upper,  0,  result.toString(),  index  +  1,  str.length());  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  upper));  }  else  if(index  >  0)  {  result.append(str.substring(0,  upper));  System.arraycopy(upper,  0,  result.toString(),  index  +  1,  str.length());  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >        0)        {        result.append(str.substring(0,    upper));    }  else  if(index  >  0)  {  result.append(str.substring(0,  upper));  System.arraycopy(upper,  0,  result.toString(),  index  +  1,  str.length());	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	168	None	add
1260	[BUG]  [BUGGY]  result.append( ".append('  ').append(index  +  1).append('  ');  [CE]  unclosed  string  literal  [FE]          ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( ".append('  ').append(index  +  1).append('  ');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append( ".append('  ').append(index  +  1).append('  ');	  result.append(   ".append(upper).append('    ').append(index    +    1).append('    ');    	non-compiled	[CE]  unclosed  string  literal	216	None	replace
1261	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index,  index  +  1));  }  else  {  result.append( ", ");  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(index,    index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index,  index  +  1));  }  else  {  result.append( ", ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	116	1	add
1262	[BUG]  [BUGGY]  result.append(str.substring(index,  index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index,  index  +  1));  }  else  {  result.append( ", ");  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index,  index  +  1));  }  else  {  result.append( ", ");  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index,    index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index,  index  +  1));  }  else  {  result.append( ", ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	116	1	add
1263	[BUG]  [BUGGY]  }  else  if(index  >=  upper)  {  result.append(str.substring(0,  index));  }  [CE]  illegal  start  of  type  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  upper)  {  result.append(str.substring(0,  index));  }  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  >=  upper)  {  result.append(str.substring(0,  index));  }	  }    else    if(index    <    upper)    {    result.append(str.substring(0,    index));    	non-compiled	[CE]  illegal  start  of  type	206	None	replace
1264	[BUG]  [BUGGY]  result.append('  ').append(index  +  1);  if(index  >=  -1)  {  result.append('  ').append(index  +  1);  }  else  {  result.append(str.substring(0,  index));  result.append('  ').append(index  +  1);  }  [CE]  unclosed  character  literal  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('  ').append(index  +  1);  if(index  >=  -1)  {  result.append('  ').append(index  +  1);  }  else  {  result.append(str.substring(0,  index));  result.append('  ').append(index  +  1);  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('    ').append(index    +    1);    if(index  >=  -1)  {  result.append('  ').append(index  +  1);  }  else  {  result.append(str.substring(0,  index));  result.append('  ').append(index  +  1);  }	  	non-compiled	[CE]  unclosed  character  literal	137	None	add
1265	[BUG]  [BUGGY]  result.append('  ').append(index  +  1);  if(index  >=  -1)  {  result.append('  ').append(index  +  1);  }  else  {  result.append('  ').append(index  +  1);  }  [CE]  unclosed  character  literal  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('  ').append(index  +  1);  if(index  >=  -1)  {  result.append('  ').append(index  +  1);  }  else  {  result.append('  ').append(index  +  1);  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('    ').append(index    +    1);    if(index  >=  -1)  {  result.append('  ').append(index  +  1);  }  else  {  result.append('  ').append(index  +  1);  }	  	non-compiled	[CE]  unclosed  character  literal	137	None	add
1266	[BUG]  [BUGGY]  result.append('  ').append(index  +  1);  if(index  >=  -1)  {  result.append('  ').append(index  +  1);  }  else  {  result.append(str.substring(0,  index));  result.append( ", ");  }  [CE]  unclosed  character  literal  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('  ').append(index  +  1);  if(index  >=  -1)  {  result.append('  ').append(index  +  1);  }  else  {  result.append(str.substring(0,  index));  result.append( ", ");  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('    ').append(index    +    1);    if(index  >=  -1)  {  result.append('  ').append(index  +  1);  }  else  {  result.append(str.substring(0,  index));  result.append( ", ");  }	  	non-compiled	[CE]  unclosed  character  literal	137	None	add
1267	[BUG]  [BUGGY]  result.append('  ').append(index  +  1);  if(index  >=  -1)  {  result.append('  ').append(index  +  1);  }  else  {  result.append(str.substring(0,  index));  result.append( "n ");  }  [CE]  unclosed  character  literal  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('  ').append(index  +  1);  if(index  >=  -1)  {  result.append('  ').append(index  +  1);  }  else  {  result.append(str.substring(0,  index));  result.append( "n ");  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('    ').append(index    +    1);    if(index  >=  -1)  {  result.append('  ').append(index  +  1);  }  else  {  result.append(str.substring(0,  index));  result.append( "n ");  }	  	non-compiled	[CE]  unclosed  character  literal	137	None	add
1268	[BUG]  [BUGGY]  result.append( ".append(upper).append( ",. ").append(index  +  1).append('  '));  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( ".append(upper).append( ",. ").append(index  +  1).append('  '));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append( ".append(upper).append( ",. ").append(index  +  1).append('  '));	  result.append(   ".append(upper).append(   ",   ").append(index    +    1).append('    '));    	non-compiled	[CE]  illegal  start  of  expression	215	None	replace
1269	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]    junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[n      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( ",upper ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append( ",upper ");	          result.append(       "n       ");    result.append(   ",n       ");    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	29	1	replace
1270	[BUG]  [BUGGY]  result.append( ",upper ");  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  [FE]    junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[n      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( ",upper ");  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append( ",upper ");	          result.append(       "n       ");    result.append(   ",n       ");    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[  	29	1	replace
1271	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(lower).append(index);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(lower).append(index);	  result.append('    ').append(index);    	compilable	  [FE]  ComparisonFailure  	136	1	replace
1272	[BUG]  [BUGGY]  result.append(lower).append(index);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(lower).append(index);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(lower).append(index);	  result.append('    ').append(index);    	compilable	  [FE]  ComparisonFailure  	136	1	replace
1273	[BUG]  [BUGGY]  result.append(',')  [CE]  ';'  expected  [FE]    junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(',')  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(',')	  result.append(',');    	non-compiled	[CE]  ';'  expected	134	None	replace
1274	[BUG]  [BUGGY]  }  else  if(index  >=  0)  {  result.append(StringUtils.defaultString(lower));  [CE]  no  suitable  method  found  for  defaultString(int)  [FE]            ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  0)  {  result.append(StringUtils.defaultString(lower));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  >=  0)  {  result.append(StringUtils.defaultString(lower));	  }    else    if(index    >    0)    {    result.append(StringUtils.defaultString(lower));    	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int)	22	None	replace
1275	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(     "n     ");    result.append('n');  result.append( ".n ");  result.append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(       "n       ");        result.append('n');    result.append( ".n ");  result.append('n');	  	compilable	  [FE]  ComparisonFailure  	26	1	add
1276	[BUG]  [BUGGY]          result.append(     "n     ");    result.append('n');  result.append( ".n ");  result.append('n');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(     "n     ");    result.append('n');  result.append( ".n ");  result.append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(       "n       ");        result.append('n');    result.append( ".n ");  result.append('n');	  	compilable	  [FE]  ComparisonFailure  	26	1	add
1277	[BUG]  [BUGGY]  }  else  if(index  >=  lower  &&  index  <  upper.length())  {  [CE]  int  cannot  be  dereferenced  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  lower  &&  index  <  upper.length())  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  >=  lower  &&  index  <  upper.length())  {	  }    else    if(index    >=    lower    &&    index    <    str.length())    {    	non-compiled	[CE]  int  cannot  be  dereferenced	145	None	replace
1278	[BUG]  [BUGGY]  }  else  if(index  >=  lower  &&  index  >=  upper.length())  {  [CE]  int  cannot  be  dereferenced  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >=  lower  &&  index  >=  upper.length())  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  >=  lower  &&  index  >=  upper.length())  {	  }    else    if(index    >=    lower    &&    index    <    str.length())    {    	non-compiled	[CE]  int  cannot  be  dereferenced	145	None	replace
1279	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  upper));  if(index  >=  -1)  {  result.append(str.substring(index,  upper));  }  else  {  result.append( ", ");  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(index,    upper));    if(index  >=  -1)  {  result.append(str.substring(index,  upper));  }  else  {  result.append( ", ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	118	1	add
1280	[BUG]  [BUGGY]  result.append(str.substring(index,  upper));  if(index  >=  -1)  {  result.append(str.substring(index,  upper));  }  else  {  result.append( ", ");  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  upper));  if(index  >=  -1)  {  result.append(str.substring(index,  upper));  }  else  {  result.append( ", ");  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index,    upper));    if(index  >=  -1)  {  result.append(str.substring(index,  upper));  }  else  {  result.append( ", ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	118	1	add
1281	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  upper));  if(index  >=  -1)  {  result.append(str.substring(index,  upper));  }  else  {  result.append(str.substring(index,  upper));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(index,    upper));    if(index  >=  -1)  {  result.append(str.substring(index,  upper));  }  else  {  result.append(str.substring(index,  upper));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	118	1	add
1282	[BUG]  [BUGGY]  result.append(str.substring(index,  upper));  if(index  >=  -1)  {  result.append(str.substring(index,  upper));  }  else  {  result.append(str.substring(index,  upper));  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  upper));  if(index  >=  -1)  {  result.append(str.substring(index,  upper));  }  else  {  result.append(str.substring(index,  upper));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index,    upper));    if(index  >=  -1)  {  result.append(str.substring(index,  upper));  }  else  {  result.append(str.substring(index,  upper));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	118	1	add
1283	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  upper));  if(index  >=  -1)  {  result.append(str.substring(index,  upper));  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(index,    upper));    if(index  >=  -1)  {  result.append(str.substring(index,  upper));  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	118	1	add
1284	[BUG]  [BUGGY]  result.append(str.substring(index,  upper));  if(index  >=  -1)  {  result.append(str.substring(index,  upper));  }  else  {  result.append(str.substring(0,  index));  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  upper));  if(index  >=  -1)  {  result.append(str.substring(index,  upper));  }  else  {  result.append(str.substring(0,  index));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index,    upper));    if(index  >=  -1)  {  result.append(str.substring(index,  upper));  }  else  {  result.append(str.substring(0,  index));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	118	1	add
1285	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  upper));  if(index  >=  -1)  {  result.append(str.substring(index,  upper));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(index,    upper));    if(index  >=  -1)  {  result.append(str.substring(index,  upper));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	118	1	add
1286	[BUG]  [BUGGY]  result.append(str.substring(index,  upper));  if(index  >=  -1)  {  result.append(str.substring(index,  upper));  }  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  upper));  if(index  >=  -1)  {  result.append(str.substring(index,  upper));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index,    upper));    if(index  >=  -1)  {  result.append(str.substring(index,  upper));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	118	1	add
1287	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('/');  if(index  >=  -1)  {  result.append('/');  }  else  {  result.append(str.substring(0,  index));  result.append('/');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('/');    if(index  >=  -1)  {  result.append('/');  }  else  {  result.append(str.substring(0,  index));  result.append('/');  }	  	compilable	  [FE]  ComparisonFailure  	153	1	add
1288	[BUG]  [BUGGY]  result.append('/');  if(index  >=  -1)  {  result.append('/');  }  else  {  result.append(str.substring(0,  index));  result.append('/');  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('/');  if(index  >=  -1)  {  result.append('/');  }  else  {  result.append(str.substring(0,  index));  result.append('/');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('/');    if(index  >=  -1)  {  result.append('/');  }  else  {  result.append(str.substring(0,  index));  result.append('/');  }	  	compilable	  [FE]  ComparisonFailure  	153	1	add
1289	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('/');  if(index  >=  -1)  {  result.append('/');  }  else  {  result.append(str.substring(index,  lower));  result.append('/');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('/');    if(index  >=  -1)  {  result.append('/');  }  else  {  result.append(str.substring(index,  lower));  result.append('/');  }	  	compilable	  [FE]  ComparisonFailure  	153	1	add
1290	[BUG]  [BUGGY]  result.append('/');  if(index  >=  -1)  {  result.append('/');  }  else  {  result.append(str.substring(index,  lower));  result.append('/');  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('/');  if(index  >=  -1)  {  result.append('/');  }  else  {  result.append(str.substring(index,  lower));  result.append('/');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('/');    if(index  >=  -1)  {  result.append('/');  }  else  {  result.append(str.substring(index,  lower));  result.append('/');  }	  	compilable	  [FE]  ComparisonFailure  	153	1	add
1291	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('/');  if(index  >=  -1)  {  result.append('/');  }  else  {  result.append(str.substring(index  +  1));  result.append('/');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('/');    if(index  >=  -1)  {  result.append('/');  }  else  {  result.append(str.substring(index  +  1));  result.append('/');  }	  	compilable	  [FE]  ComparisonFailure  	153	1	add
1292	[BUG]  [BUGGY]  result.append('/');  if(index  >=  -1)  {  result.append('/');  }  else  {  result.append(str.substring(index  +  1));  result.append('/');  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('/');  if(index  >=  -1)  {  result.append('/');  }  else  {  result.append(str.substring(index  +  1));  result.append('/');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('/');    if(index  >=  -1)  {  result.append('/');  }  else  {  result.append(str.substring(index  +  1));  result.append('/');  }	  	compilable	  [FE]  ComparisonFailure  	153	1	add
1293	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('/');  if(index  >=  -1)  {  result.append('/');  }  else  {  result.append(str.substring(index,  lower  +  1));  result.append('/');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('/');    if(index  >=  -1)  {  result.append('/');  }  else  {  result.append(str.substring(index,  lower  +  1));  result.append('/');  }	  	compilable	  [FE]  ComparisonFailure  	153	1	add
1294	[BUG]  [BUGGY]  result.append('/');  if(index  >=  -1)  {  result.append('/');  }  else  {  result.append(str.substring(index,  lower  +  1));  result.append('/');  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('/');  if(index  >=  -1)  {  result.append('/');  }  else  {  result.append(str.substring(index,  lower  +  1));  result.append('/');  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('/');    if(index  >=  -1)  {  result.append('/');  }  else  {  result.append(str.substring(index,  lower  +  1));  result.append('/');  }	  	compilable	  [FE]  ComparisonFailure  	153	1	add
1295	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index)+  1).append(upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,  index)+  1).append(upper);	  result.append(str.substring(0,    index)+    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	227	1	replace
1296	[BUG]  [BUGGY]  result.append(str.substring(0,  index)+  1).append(upper);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index)+  1).append(upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,  index)+  1).append(upper);	  result.append(str.substring(0,    index)+    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	227	1	replace
1297	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[012345678901234567890123456789  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append( ", ");  }  else  {  result.append( ", ");  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index        +        1));        if(index    >=    -1)    {    result.append(str.substring(index    +    1));    }    else    {    result.append(   ",   ");    }    result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append( ", ");  }  else  {  result.append( ", ");  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[012345678901234567890123456789  	164	1	add
1298	[BUG]  [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append( ", ");  }  else  {  result.append( ", ");  }  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[012345678901234567890123456789  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append( ", ");  }  else  {  result.append( ", ");  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index        +        1));        if(index    >=    -1)    {    result.append(str.substring(index    +    1));    }    else    {    result.append(   ",   ");    }    result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append( ", ");  }  else  {  result.append( ", ");  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<01234[]>  but  was:<01234[012345678901234567890123456789  	164	1	add
1299	[BUG]  [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append( ", ");  }  [CE]  reached  end  of  file  while  parsing  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  else  {  result.append(   ",   ");  }  result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append( ", ");  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index        +        1));        if(index    >=    -1)    {    result.append(str.substring(index    +    1));    }    else    {    result.append(   ",   ");    }    result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append( ", ");  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	164	None	add
1300	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  lower,  upper);  if(index  >=  -1)  {  result.append(str.substring(0,  index),  lower,  upper);  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,    index),    lower,    upper);    if(index  >=  -1)  {  result.append(str.substring(0,  index),  lower,  upper);  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	90	1	add
1301	[BUG]  [BUGGY]  result.append(str.substring(0,  index),  lower,  upper);  if(index  >=  -1)  {  result.append(str.substring(0,  index),  lower,  upper);  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  lower,  upper);  if(index  >=  -1)  {  result.append(str.substring(0,  index),  lower,  upper);  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index),    lower,    upper);    if(index  >=  -1)  {  result.append(str.substring(0,  index),  lower,  upper);  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	90	1	add
1302	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  lower,  upper);  if(index  >=  -1)  {  result.append(str.substring(0,  index),  lower,  upper);  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(0,  index),  lower,  upper);  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,    index),    lower,    upper);    if(index  >=  -1)  {  result.append(str.substring(0,  index),  lower,  upper);  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(0,  index),  lower,  upper);  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	90	1	add
1303	[BUG]  [BUGGY]  result.append(str.substring(0,  index),  lower,  upper);  if(index  >=  -1)  {  result.append(str.substring(0,  index),  lower,  upper);  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(0,  index),  lower,  upper);  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index),  lower,  upper);  if(index  >=  -1)  {  result.append(str.substring(0,  index),  lower,  upper);  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(0,  index),  lower,  upper);  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index),    lower,    upper);    if(index  >=  -1)  {  result.append(str.substring(0,  index),  lower,  upper);  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(0,  index),  lower,  upper);  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	90	1	add
1304	[BUG]  [BUGGY]  result.append('n',  upper  +  1,  str.length());  [CE]  no  suitable  method  found  for  append(char,int,int)  [FE]        ComparisonFailure      [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('n',  upper  +  1,  str.length());  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('n',  upper  +  1,  str.length());	  result.append('n',    upper);    	non-compiled	[CE]  no  suitable  method  found  for  append(char,int,int)	152	None	replace
1305	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index!=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index!=        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index!=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	48	1	add
1306	[BUG]  [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index!=  upper)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index!=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index!=        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index!=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	48	1	add
1307	[BUG]  [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >>  upper)  {  [CE]  incompatible  types  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >>  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index!=        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index  >>  upper)  {	  	non-compiled	[CE]  incompatible  types	48	None	add
1308	[BUG]  [BUGGY]  }  else  if(index  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  <  =  0)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  <  =  0)  {	  }    else    if(index    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
1309	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index!=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index!=        upper)        {        }    else    if(index!=    upper)    {    }  else  if(index!=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	46	1	add
1310	[BUG]  [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index!=  upper)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index!=    upper)    {    }  else  if(index!=  upper)  {  }  else  if(index!=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index!=        upper)        {        }    else    if(index!=    upper)    {    }  else  if(index!=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	46	1	add
1311	[BUG]  [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  index));  }  else  if(index  >  0)  {  result.append(str.substring(0,  index));  System.arraycopy(str.substring(0,  index,  upper));  [CE]  no  suitable  method  found  for  substring(int,int,int)  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  index));  }  else  if(index  >  0)  {  result.append(str.substring(0,  index));  System.arraycopy(str.substring(0,  index,  upper));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >        0)        {        result.append(str.substring(0,    index));    }  else  if(index  >  0)  {  result.append(str.substring(0,  index));  System.arraycopy(str.substring(0,  index,  upper));	  	non-compiled	[CE]  no  suitable  method  found  for  substring(int,int,int)	20	None	add
1312	[BUG]  [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  index));  }  else  if(index  >  0)  {  result.append(str.substring(0,  index));  System.arraycopy(str.substring(0,  index),  0,  result.length());  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  index));  }  else  if(index  >  0)  {  result.append(str.substring(0,  index));  System.arraycopy(str.substring(0,  index),  0,  result.length());  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >        0)        {        result.append(str.substring(0,    index));    }  else  if(index  >  0)  {  result.append(str.substring(0,  index));  System.arraycopy(str.substring(0,  index),  0,  result.length());	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	20	None	add
1313	[BUG]  [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  index));  }  else  if(index  >  0)  {  result.append(str.substring(0,  index));  System.arraycopy(str.substring(0,  index,  lower,  upper));  [CE]  no  suitable  method  found  for  substring(int,int,int,int)  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    result.append(str.substring(0,  index));  }  else  if(index  >  0)  {  result.append(str.substring(0,  index));  System.arraycopy(str.substring(0,  index,  lower,  upper));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >        0)        {        result.append(str.substring(0,    index));    }  else  if(index  >  0)  {  result.append(str.substring(0,  index));  System.arraycopy(str.substring(0,  index,  lower,  upper));	  	non-compiled	[CE]  no  suitable  method  found  for  substring(int,int,int,int)	20	None	add
1314	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( ".s.IFJDCS ".charAt(index));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append( ".s.IFJDCS ".charAt(index));	  result.append(   "    -   ");    	compilable	  [FE]  StringIndexOutOfBoundsException  	193	1	replace
1315	[BUG]  [BUGGY]  result.append( ".s.IFJDCS ".charAt(index));  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( ".s.IFJDCS ".charAt(index));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append( ".s.IFJDCS ".charAt(index));	  result.append(   "    -   ");    	compilable	  [FE]  StringIndexOutOfBoundsException  	193	1	replace
1316	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( ".s.IFJDCS ".charAt(index  +  1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append( ".s.IFJDCS ".charAt(index  +  1));	  result.append(   "    -   ");    	compilable	  [FE]  ComparisonFailure  	193	1	replace
1317	[BUG]  [BUGGY]  result.append( ".s.IFJDCS ".charAt(index  +  1));  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( ".s.IFJDCS ".charAt(index  +  1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append( ".s.IFJDCS ".charAt(index  +  1));	  result.append(   "    -   ");    	compilable	  [FE]  ComparisonFailure  	193	1	replace
1318	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( "  - ").append(upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append( "  - ").append(upper);	  result.append(   "    -   ");    	compilable	  [FE]  ComparisonFailure  	193	1	replace
1319	[BUG]  [BUGGY]  result.append( "  - ").append(upper);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append( "  - ").append(upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append( "  - ").append(upper);	  result.append(   "    -   ");    	compilable	  [FE]  ComparisonFailure  	193	1	replace
1320	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(lower  ==  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}  else  if(lower  ==  upper)  {	  }    else    if(index    ==    upper)    {    }    else    if(index    ==    upper)    {    	compilable	  [FE]  ComparisonFailure  	7	1	replace
1321	[BUG]  [BUGGY]  }  else  if(lower  ==  upper)  {  [FE]  ComparisonFailure  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(lower  ==  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(lower  ==  upper)  {	  }    else    if(index    ==    upper)    {    }    else    if(index    ==    upper)    {    	compilable	  [FE]  ComparisonFailure  	7	1	replace
1322	[BUG]  [BUGGY]  result.append('/',  upper);  [CE]  no  suitable  method  found  for  append(char,int)  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('/',  upper);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('/',  upper);	  result.append('/');    	non-compiled	[CE]  no  suitable  method  found  for  append(char,int)	154	None	replace
1323	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('/'  +  lower);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append('/'  +  lower);	  result.append('/');    	compilable	  [FE]  ComparisonFailure  	154	1	replace
1324	[BUG]  [BUGGY]  result.append('/'  +  lower);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('/'  +  lower);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('/'  +  lower);	  result.append('/');    	compilable	  [FE]  ComparisonFailure  	154	1	replace
1325	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    }  else  if(index  >  0)  {  }  else  if(index  >  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >        0)        {        }    else    if(index    >    0)    {    }  else  if(index  >  upper)  {	  	compilable	  [FE]  ComparisonFailure  	18	1	add
1326	[BUG]  [BUGGY]  }    else    if(index    >    0)    {    }  else  if(index  >  0)  {  }  else  if(index  >  upper)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    }  else  if(index  >  0)  {  }  else  if(index  >  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >        0)        {        }    else    if(index    >    0)    {    }  else  if(index  >  upper)  {	  	compilable	  [FE]  ComparisonFailure  	18	1	add
1327	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    }  else  if(index  >  0)  {  }  else  if(index  >  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >        0)        {        }    else    if(index    >    0)    {    }  else  if(index  >  lower)  {	  	compilable	  [FE]  ComparisonFailure  	18	1	add
1328	[BUG]  [BUGGY]  }    else    if(index    >    0)    {    }  else  if(index  >  0)  {  }  else  if(index  >  lower)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >    0)    {    }  else  if(index  >  0)  {  }  else  if(index  >  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >        0)        {        }    else    if(index    >    0)    {    }  else  if(index  >  lower)  {	  	compilable	  [FE]  ComparisonFailure  	18	1	add
1329	[BUG]  [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  ==  lower)  {  }  else  if(index  >>  lower)  {  [CE]  incompatible  types  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  ==  lower)  {  }  else  if(index  >>  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        lower)        {        }    else    if(index    ==    lower)    {    }  else  if(index  >>  lower)  {	  	non-compiled	[CE]  incompatible  types	36	None	add
1330	[BUG]  [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >>  upper)  {  [CE]  incompatible  types  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >>  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        ==        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index  >>  upper)  {	  	non-compiled	[CE]  incompatible  types	10	None	add
1331	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index!=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        ==        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index!=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	10	1	add
1332	[BUG]  [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index!=  upper)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    ==    upper)    {    }  else  if(index  >=  upper)  {  }  else  if(index!=  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        ==        upper)        {        }    else    if(index    >=    upper)    {    }  else  if(index!=  upper)  {	  	compilable	  [FE]  ComparisonFailure  	10	1	add
1333	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    >=    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    result.append(str.substring(index    +    1));    }    result.append('n');	  	compilable	  [FE]  ComparisonFailure  	66	1	add
1334	[BUG]  [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    >=    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    result.append(str.substring(index    +    1));    }    result.append('n');	  	compilable	  [FE]  ComparisonFailure  	66	1	add
1335	[BUG]  [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  if(index  >=  -1)  {  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index  +  1));  }  [CE]  reached  end  of  file  while  parsing  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  if(index  >=  -1)  {  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    >=    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    result.append(str.substring(index    +    1));    }    result.append('n');  if(index  >=  -1)  {  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(index  +  1));  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	66	None	add
1336	[BUG]  [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  if(index  >=  -1)  {  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  if(index  >=  -1)  {  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    >=    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    result.append(str.substring(index    +    1));    }    result.append('n');  if(index  >=  -1)  {  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
1337	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append('n');        if(index    >=    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    result.append(str.substring(index    +    1));    }    result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	66	1	add
1338	[BUG]  [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append('n');    if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append('n');        if(index    >=    -1)    {    result.append('n');    }    else    {    result.append(str.substring(0,    index));    result.append(str.substring(index    +    1));    }    result.append('n');  if(index  >=  -1)  {  result.append('n');  }  else  {  result.append(str.substring(0,  index));  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  ComparisonFailure  	66	1	add
1339	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index)+  1);  if(index  >=  -1)  {  result.append(str.substring(0,  index)+  1);  }  else  {  result.append(str.substring(0,  index)+  1);  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,    index)+    1);    if(index  >=  -1)  {  result.append(str.substring(0,  index)+  1);  }  else  {  result.append(str.substring(0,  index)+  1);  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	226	1	add
1340	[BUG]  [BUGGY]  result.append(str.substring(0,  index)+  1);  if(index  >=  -1)  {  result.append(str.substring(0,  index)+  1);  }  else  {  result.append(str.substring(0,  index)+  1);  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index)+  1);  if(index  >=  -1)  {  result.append(str.substring(0,  index)+  1);  }  else  {  result.append(str.substring(0,  index)+  1);  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index)+    1);    if(index  >=  -1)  {  result.append(str.substring(0,  index)+  1);  }  else  {  result.append(str.substring(0,  index)+  1);  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	226	1	add
1341	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index)+  1);  if(index  >=  -1)  {  result.append(str.substring(0,  index)+  1);  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,    index)+    1);    if(index  >=  -1)  {  result.append(str.substring(0,  index)+  1);  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	226	1	add
1342	[BUG]  [BUGGY]  result.append(str.substring(0,  index)+  1);  if(index  >=  -1)  {  result.append(str.substring(0,  index)+  1);  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index)+  1);  if(index  >=  -1)  {  result.append(str.substring(0,  index)+  1);  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index)+    1);    if(index  >=  -1)  {  result.append(str.substring(0,  index)+  1);  }  else  {  result.append(StringUtils.defaultString(appendToEnd));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	226	1	add
1343	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index)+  1);  if(index  >=  -1)  {  result.append(str.substring(0,  index)+  1);  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(0,    index)+    1);    if(index  >=  -1)  {  result.append(str.substring(0,  index)+  1);  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	226	1	add
1344	[BUG]  [BUGGY]  result.append(str.substring(0,  index)+  1);  if(index  >=  -1)  {  result.append(str.substring(0,  index)+  1);  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(0,  index)+  1);  if(index  >=  -1)  {  result.append(str.substring(0,  index)+  1);  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(0,    index)+    1);    if(index  >=  -1)  {  result.append(str.substring(0,  index)+  1);  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	226	1	add
1345	[BUG]  [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  [CE]  reached  end  of  file  while  parsing  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index        +        1));        if(index    >=    -1)    {    result.append(str.substring(index    +    1));    }    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	162	None	add
1346	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	                result.append(str.substring(index        +        1));        if(index    >=    -1)    {    result.append(str.substring(index    +    1));    }    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	162	1	add
1347	[BUG]  [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]          result.append(str.substring(index    +    1));    if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	                result.append(str.substring(index        +        1));        if(index    >=    -1)    {    result.append(str.substring(index    +    1));    }    result.append(str.substring(0,  index));  if(index  >=  -1)  {  result.append(str.substring(index  +  1));  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	162	1	add
1348	[BUG]  [BUGGY]  result.append('  ').append(upper);  result.append('  ').append(  top);  [CE]  unclosed  character  literal  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append('  ').append(upper);  result.append('  ').append(  top);  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append('    ').append(upper);    result.append('  ').append(  top);	  	non-compiled	[CE]  unclosed  character  literal	184	None	add
1349	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  upper));  result.append(str.substring(index,  lower));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	result.append(str.substring(index,    upper));    result.append(str.substring(index,  lower));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	118	1	add
1350	[BUG]  [BUGGY]  result.append(str.substring(index,  upper));  result.append(str.substring(index,  lower));  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(str.substring(index,  upper));  result.append(str.substring(index,  lower));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(str.substring(index,    upper));    result.append(str.substring(index,  lower));	  	compilable	  [FE]  StringIndexOutOfBoundsException  	118	1	add
1351	[BUG]  [BUGGY]  result.append(upper,  str.substring(index  +  1));  [CE]  no  suitable  method  found  for  append(int,String)  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  result.append(upper,  str.substring(index  +  1));  [BUGGY]      }  else  if  (index  >  upper)  {  result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	result.append(upper,  str.substring(index  +  1));	          result.append(str.substring(index    +    1));    result.append(str.substring(index    +    1));    	non-compiled	[CE]  no  suitable  method  found  for  append(int,String)	109	None	replace
1352	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        lower)        {        }    else    if(index    >=    upper)    {    }  else  if(index  >  upper)  {	  	compilable	  [FE]  ComparisonFailure  	32	1	add
1353	[BUG]  [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >  upper)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  >=  upper)  {  }  else  if(index  >  upper)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        lower)        {        }    else    if(index    >=    upper)    {    }  else  if(index  >  upper)  {	  	compilable	  [FE]  ComparisonFailure  	32	1	add
1354	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  >=  upper)  {  }  else  if(index  <  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}        else        if(index        >=        lower)        {        }    else    if(index    >=    upper)    {    }  else  if(index  <  lower)  {	  	compilable	  [FE]  ComparisonFailure  	32	1	add
1355	[BUG]  [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  >=  upper)  {  }  else  if(index  <  lower)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    >=    lower)    {    }  else  if(index  >=  upper)  {  }  else  if(index  <  lower)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        >=        lower)        {        }    else    if(index    >=    upper)    {    }  else  if(index  <  lower)  {	  	compilable	  [FE]  ComparisonFailure  	32	1	add
1356	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >  -1)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	add	}  else  if(index  >  -1)  {	  }    else    if(index    >=    -1)    {    	compilable	  [FE]  ComparisonFailure  	214	1	replace
1357	[BUG]  [BUGGY]  }  else  if(index  >  -1)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }  else  if(index  >  -1)  {  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}  else  if(index  >  -1)  {	  }    else    if(index    >=    -1)    {    	compilable	  [FE]  ComparisonFailure  	214	1	replace
1358	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(upper));  [CE]  no  suitable  method  found  for  defaultString(int)  [FE]    ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(upper));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    index));    result.append(StringUtils.defaultString(upper));	  	non-compiled	[CE]  no  suitable  method  found  for  defaultString(int)	209	None	add
1359	[BUG]  [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.indexOf(upper,  lower));  [timeout]  [FE]      ComparisonFailure    [CONTEXT]      }  StringBuffer  result  =  new  StringBuffer();  int  index  =  StringUtils.indexOf(str,       "       ",  lower);  if  (index  ==  -1)  {  result.append(str.substring(0,  upper));  if  (upper  !=  str.length())  {  result.append(StringUtils.defaultString(appendToEnd));  }      [BUGGY]  }    else    if(index    <    upper)    {    }  else  if(index  <  upper)  {  result.append(str.substring(0,  index));  result.append(StringUtils.indexOf(upper,  lower));  [BUGGY]      result.append(str.substring(0,  upper));  result.append(StringUtils.defaultString(appendToEnd));  }  else  {  result.append(str.substring(0,  index));  result.append(StringUtils.defaultString(appendToEnd));  }  return  result.toString();  }  [CLASS]  WordUtils  [METHOD]  abbreviate  [RETURN_TYPE]  String  String  str  int  lower  int  upper  String  appendToEnd  [VARIABLES]  StringBuffer  result  boolean  String  appendToEnd  str  int  index  lower  upper  	projects/Lang45/src/java/org/apache/commons/lang/WordUtils.java	1.0	634	634	1	replace	}        else        if(index        <        upper)        {        }    else    if(index    <    upper)    {    result.append(str.substring(0,    index));    result.append(StringUtils.indexOf(upper,  lower));	  	non-compiled	[timeout]	209	None	add
