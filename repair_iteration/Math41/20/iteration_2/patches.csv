bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  -=  dev;  accum2  -=  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum2    -=    dev;    accum2  -=  dev;	  	compilable	  [FE]  AssertionError  	5	3	add
2	[BUG]  [BUGGY]  accum2  -=  dev;  accum2  -=  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  -=  dev;  accum2  -=  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    -=    dev;    accum2  -=  dev;	  	compilable	  [FE]  AssertionError  	5	3	add
3	[BUG]  [BUGGY]  accum2  -=  dev;  int  accum2  -=  dev;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  -=  dev;  int  accum2  -=  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    -=    dev;    int  accum2  -=  dev;	  	non-compiled	[CE]  ';'  expected	5	None	add
4	[BUG]  [BUGGY]  accum2  -=  dev;  Accum2  -=  dev;  [CE]  cannot  find  symbol  Accum2  [FE]        AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  -=  dev;  Accum2  -=  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    -=    dev;    Accum2  -=  dev;	  	non-compiled	[CE]  cannot  find  symbol  Accum2	5	None	add
5	[BUG]  [BUGGY]  accum2  -=  dev;  accum2  -=  DEV;  [CE]  cannot  find  symbol  DEV  [FE]          AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  -=  dev;  accum2  -=  DEV;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    -=    dev;    accum2  -=  DEV;	  	non-compiled	[CE]  cannot  find  symbol  DEV	5	None	add
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  /  weights[i]  *  mean;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum  +=  dev  /  weights[i]  *  mean;	  accum    +=    dev    /    weights[i];    	compilable	  [FE]  AssertionError  	105	3	replace
7	[BUG]  [BUGGY]  accum  +=  dev  /  weights[i]  *  mean;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  /  weights[i]  *  mean;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev  /  weights[i]  *  mean;	  accum    +=    dev    /    weights[i];    	compilable	  [FE]  AssertionError  	105	3	replace
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  -=  dev  *  dev;  accum2  -=  dev  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum2    -=    dev    *    dev;    accum2  -=  dev  *  dev;	  	compilable	  [FE]  AssertionError  	97	3	add
9	[BUG]  [BUGGY]  accum2  -=  dev  *  dev;  accum2  -=  dev  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  -=  dev  *  dev;  accum2  -=  dev  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    -=    dev    *    dev;    accum2  -=  dev  *  dev;	  	compilable	  [FE]  AssertionError  	97	3	add
10	[BUG]  [BUGGY]  accum2  -=  dev  *  dev;  int  accum2  -=  dev  *  dev;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  -=  dev  *  dev;  int  accum2  -=  dev  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    -=    dev    *    dev;    int  accum2  -=  dev  *  dev;	  	non-compiled	[CE]  ';'  expected	97	None	add
11	[BUG]  [BUGGY]  accum2  -=  dev  *  dev;  accum2  -=  dev  *  DEv;  [CE]  cannot  find  symbol  DEv  [FE]        AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  -=  dev  *  dev;  accum2  -=  dev  *  DEv;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    -=    dev    *    dev;    accum2  -=  dev  *  DEv;	  	non-compiled	[CE]  cannot  find  symbol  DEv	97	None	add
12	[BUG]  [BUGGY]  accum2  -=  dev  *  dev;  accum2  -=  dev  *  DEV;  [CE]  cannot  find  symbol  DEV  [FE]          AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  -=  dev  *  dev;  accum2  -=  dev  *  DEV;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    -=    dev    *    dev;    accum2  -=  dev  *  DEV;	  	non-compiled	[CE]  cannot  find  symbol  DEV	97	None	add
13	[BUG]  [BUGGY]  accum2  -=  dev  *  dev;  accum2  -=  dev  *  desv;  [CE]  cannot  find  symbol  desv  [FE]            AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  -=  dev  *  dev;  accum2  -=  dev  *  desv;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    -=    dev    *    dev;    accum2  -=  dev  *  desv;	  	non-compiled	[CE]  cannot  find  symbol  desv	97	None	add
14	[BUG]  [BUGGY]  double  accum2  +=  weights[i]  *  dev;  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  accum2  +=  weights[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  accum2  +=  weights[i]  *  dev;	  accum    +=    weights[i]    *    dev;    double    accum    +=    weights[i]    *    dev;    	non-compiled	[CE]  ';'  expected	90	None	replace
15	[BUG]  [BUGGY]  double  accum  +=  weights[i]  *  dev;  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  accum  +=  weights[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  accum  +=  weights[i]  *  dev;	  accum    +=    weights[i]    *    dev;    double    accum    +=    weights[i]    *    dev;    	non-compiled	[CE]  ';'  expected	90	None	replace
16	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum2    +=    weights[i]    *    dev;    accum2  +=  weights[i]  *  dev;	  	compilable	  [FE]  AssertionError  	65	1	add
17	[BUG]  [BUGGY]  accum2  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    +=    weights[i]    *    dev;    accum2  +=  weights[i]  *  dev;	  	compilable	  [FE]  AssertionError  	65	1	add
18	[BUG]  [BUGGY]  accum2  +=  weights[i]  *  dev;  int  accum2  +=  weights[i]  *  dev;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  weights[i]  *  dev;  int  accum2  +=  weights[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    +=    weights[i]    *    dev;    int  accum2  +=  weights[i]  *  dev;	  	non-compiled	[CE]  ';'  expected	65	None	add
19	[BUG]  [BUGGY]  accum2  +=  weights[i]  *  dev;  Accum2  +=  weights[i]  *  dev;  [CE]  cannot  find  symbol  Accum2  [FE]        AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  weights[i]  *  dev;  Accum2  +=  weights[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    +=    weights[i]    *    dev;    Accum2  +=  weights[i]  *  dev;	  	non-compiled	[CE]  cannot  find  symbol  Accum2	65	None	add
20	[BUG]  [BUGGY]  accum2  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  DEv;  [CE]  cannot  find  symbol  DEv  [FE]          AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  DEv;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    +=    weights[i]    *    dev;    accum2  +=  weights[i]  *  DEv;	  	non-compiled	[CE]  cannot  find  symbol  DEv	65	None	add
21	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  /  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum  +=  dev  /  dev;	  accum    +=    dev    *    dev;    	compilable	  [FE]  AssertionError  	76	3	replace
22	[BUG]  [BUGGY]  accum  +=  dev  /  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  /  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev  /  dev;	  accum    +=    dev    *    dev;    	compilable	  [FE]  AssertionError  	76	3	replace
23	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  values[i]  *  (dev  *  dev);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum  +=  dev  *  values[i]  *  (dev  *  dev);	          accum    +=    values[i]    *    (dev    *    dev);    accum    +=    weights[i]    *    (dev    *    dev);    	compilable	  [FE]  AssertionError  	34	3	replace
24	[BUG]  [BUGGY]  accum  +=  dev  *  values[i]  *  (dev  *  dev);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  values[i]  *  (dev  *  dev);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev  *  values[i]  *  (dev  *  dev);	          accum    +=    values[i]    *    (dev    *    dev);    accum    +=    weights[i]    *    (dev    *    dev);    	compilable	  [FE]  AssertionError  	34	3	replace
25	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum    +=    weights[i]    *    (dev    /    dev);    accum  +=  values[i]  *  (dev  /  dev);  accum  +=  weights[i]  *  (dev  /  dev);  accum  +=  values[i]  *  (dev  /  dev);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum        +=        weights[i]        *        (dev        /        dev);        accum    +=    values[i]    *    (dev    /    dev);    accum  +=  weights[i]  *  (dev  /  dev);  accum  +=  values[i]  *  (dev  /  dev);	  	compilable	  [FE]  AssertionError  	114	3	add
26	[BUG]  [BUGGY]  accum    +=    weights[i]    *    (dev    /    dev);    accum  +=  values[i]  *  (dev  /  dev);  accum  +=  weights[i]  *  (dev  /  dev);  accum  +=  values[i]  *  (dev  /  dev);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum    +=    weights[i]    *    (dev    /    dev);    accum  +=  values[i]  *  (dev  /  dev);  accum  +=  weights[i]  *  (dev  /  dev);  accum  +=  values[i]  *  (dev  /  dev);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum        +=        weights[i]        *        (dev        /        dev);        accum    +=    values[i]    *    (dev    /    dev);    accum  +=  weights[i]  *  (dev  /  dev);  accum  +=  values[i]  *  (dev  /  dev);	  	compilable	  [FE]  AssertionError  	114	3	add
27	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum    +=    weights[i]    *    (dev    /    dev);    accum  +=  values[i]  *  (dev  /  dev);  accum  +=  values[i]  *  (dev  /  dev);  accum  +=  values[i]  *  (dev  /  dev);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum        +=        weights[i]        *        (dev        /        dev);        accum    +=    values[i]    *    (dev    /    dev);    accum  +=  values[i]  *  (dev  /  dev);  accum  +=  values[i]  *  (dev  /  dev);	  	compilable	  [FE]  AssertionError  	114	3	add
28	[BUG]  [BUGGY]  accum    +=    weights[i]    *    (dev    /    dev);    accum  +=  values[i]  *  (dev  /  dev);  accum  +=  values[i]  *  (dev  /  dev);  accum  +=  values[i]  *  (dev  /  dev);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum    +=    weights[i]    *    (dev    /    dev);    accum  +=  values[i]  *  (dev  /  dev);  accum  +=  values[i]  *  (dev  /  dev);  accum  +=  values[i]  *  (dev  /  dev);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum        +=        weights[i]        *        (dev        /        dev);        accum    +=    values[i]    *    (dev    /    dev);    accum  +=  values[i]  *  (dev  /  dev);  accum  +=  values[i]  *  (dev  /  dev);	  	compilable	  [FE]  AssertionError  	114	3	add
29	[BUG]  [BUGGY]  accum    +=    weights[i]    *    (dev    /    dev);    accum  +=  values[i]  *  (dev  /  dev);  accum  +=  weights[i]  *  (dev  /  dev);  accum  +=  values[i]  *  (dev  /  DEV);  [CE]  cannot  find  symbol  DEV  [FE]        AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum    +=    weights[i]    *    (dev    /    dev);    accum  +=  values[i]  *  (dev  /  dev);  accum  +=  weights[i]  *  (dev  /  dev);  accum  +=  values[i]  *  (dev  /  DEV);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum        +=        weights[i]        *        (dev        /        dev);        accum    +=    values[i]    *    (dev    /    dev);    accum  +=  weights[i]  *  (dev  /  dev);  accum  +=  values[i]  *  (dev  /  DEV);	  	non-compiled	[CE]  cannot  find  symbol  DEV	114	None	add
30	[BUG]  [BUGGY]  Accum  +=  weights[i]  *  (dev  /  dev);  [CE]  cannot  find  symbol  Accum  [FE]            AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  Accum  +=  weights[i]  *  (dev  /  dev);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	Accum  +=  weights[i]  *  (dev  /  dev);	  accum    +=    weights[i]    *    (dev    /    dev);    Accum    +=    weights[i]    *    (dev    /    dev);    	non-compiled	[CE]  cannot  find  symbol  Accum	72	None	replace
31	[BUG]  [BUGGY]  Accum  +=  weights[i]  *  dev;  [CE]  cannot  find  symbol  Accum  [FE]            AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  Accum  +=  weights[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	Accum  +=  weights[i]  *  dev;	  accum    +=    weights[i]    *    dev;    Accum    +=    weights[i]    *    dev;    	non-compiled	[CE]  cannot  find  symbol  Accum	12	None	replace
32	[BUG]  [BUGGY]  double  dev  =  values[i]  /  accum;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  dev  =  values[i]  /  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  dev  =  values[i]  /  accum;	  double    dev    =    values[i]    -    accum;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	101	None	replace
33	[BUG]  [BUGGY]  double  dev  =  accum2  -  values[i];  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  dev  =  accum2  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  dev  =  accum2  -  values[i];	  double    dev    =    values[i]    -    accum;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	101	None	replace
34	[BUG]  [BUGGY]  double  dev  =  weights[i]  -  mean;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  dev  =  weights[i]  -  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  dev  =  weights[i]  -  mean;	  double    dev    =    values[i]    -    accum;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	101	None	replace
35	[BUG]  [BUGGY]  accum2  +=  DEV  *  dev;  [CE]  cannot  find  symbol  DEV  [FE]              AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  DEV  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2  +=  DEV  *  dev;	          accum2    +=    dev    *    mean;    accum2    +=    DEV    *    mean;    	non-compiled	[CE]  cannot  find  symbol  DEV	54	None	replace
36	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  (dev  /  values[i]);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum  +=  dev  *  (dev  /  values[i]);	  accum    +=    values[i]    *    (dev    /    dev);    	compilable	  [FE]  AssertionError  	83	3	replace
37	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  /  values[i]);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  (dev  /  values[i]);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev  *  (dev  /  values[i]);	  accum    +=    values[i]    *    (dev    /    dev);    	compilable	  [FE]  AssertionError  	83	3	replace
38	[BUG]  [BUGGY]  Accum2  +=  dev  *  dev;  [CE]  cannot  find  symbol  Accum2  [FE]            AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  Accum2  +=  dev  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	Accum2  +=  dev  *  dev;	          accum2    +=    dev    *    mean;    Accum2    +=    dev    *    mean;    	non-compiled	[CE]  cannot  find  symbol  Accum2	53	None	replace
39	[BUG]  [BUGGY]  accum  +=  dev  /  dev2;  [CE]  cannot  find  symbol  dev2  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  /  dev2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev  /  dev2;	  accum    +=    dev    /    mean;    	non-compiled	[CE]  cannot  find  symbol  dev2	103	None	replace
40	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  dev  /  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum2  +=  dev  /  accum2;	  accum2    +=    dev    *    accum2;    	compilable	  [FE]  AssertionError  	18	2	replace
41	[BUG]  [BUGGY]  accum2  +=  dev  /  accum2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  dev  /  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2  +=  dev  /  accum2;	  accum2    +=    dev    *    accum2;    	compilable	  [FE]  AssertionError  	18	2	replace
42	[BUG]  [BUGGY]  double  dev  =  accum2  /  values[i];  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  dev  =  accum2  /  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  dev  =  accum2  /  values[i];	  double    dev    =    values[i]    /    accum2;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	95	None	replace
43	[BUG]  [BUGGY]  accum  +=  dev  *  mean;  int  dev  =  values[i]  -  dev;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  mean;  int  dev  =  values[i]  -  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev  *  mean;  int  dev  =  values[i]  -  dev;	          accum    +=    dev    *    mean;    int    dev    =    values[i]    -    mean;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	89	None	replace
44	[BUG]  [BUGGY]  int  dev  =  values[i]  /  dev;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  int  dev  =  values[i]  /  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	int  dev  =  values[i]  /  dev;	  int    dev    =    values[i]    /    mean;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	56	None	replace
45	[BUG]  [BUGGY]  int  dev  =  weights[i]  /  dev;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  int  dev  =  weights[i]  /  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	int  dev  =  weights[i]  /  dev;	  int    dev    =    values[i]    /    mean;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	56	None	replace
46	[BUG]  [BUGGY]  int  dev  =  values[i]  /  mean  +  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  int  dev  =  values[i]  /  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	int  dev  =  values[i]  /  mean  +  1;	  int    dev    =    values[i]    /    mean;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	56	None	replace
47	[BUG]  [BUGGY]  double  accum2  +=  dev  *  dev;  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  accum2  +=  dev  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  accum2  +=  dev  *  dev;	          accum2    +=    dev    *    mean;    double    accum2    +=    dev    *    mean;    	non-compiled	[CE]  ';'  expected	99	None	replace
48	[BUG]  [BUGGY]  int  accum2  +=  dev;  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  int  accum2  +=  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	int  accum2  +=  dev;	          accum2    +=    dev;    int    accum2    +=    dev;    	non-compiled	[CE]  ';'  expected	41	None	replace
49	[BUG]  [BUGGY]  double  accum2  +=  dev;  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  accum2  +=  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  accum2  +=  dev;	          accum2    +=    dev;    int    accum2    +=    dev;    	non-compiled	[CE]  ';'  expected	41	None	replace
50	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  values[i]  /  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum  +=  values[i]  /  dev;	  accum    +=    weights[i]    /    dev;    	compilable	  [FE]  AssertionError  	107	3	replace
51	[BUG]  [BUGGY]  accum  +=  values[i]  /  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  values[i]  /  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  values[i]  /  dev;	  accum    +=    weights[i]    /    dev;    	compilable	  [FE]  AssertionError  	107	3	replace
52	[BUG]  [BUGGY]  accum  +=  dev[i]  /  weights[i];  [CE]  array  required,  but  double  found  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev[i]  /  weights[i];  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev[i]  /  weights[i];	  accum    +=    weights[i]    /    dev;    	non-compiled	[CE]  array  required,  but  double  found	107	None	replace
53	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  values[i]  *  (dev  /  dev);  accum  +=  values[i]  *  (dev  /  dev);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum    +=    values[i]    *    (dev    /    dev);    accum  +=  values[i]  *  (dev  /  dev);	  	compilable	  [FE]  AssertionError  	82	3	add
54	[BUG]  [BUGGY]  accum  +=  values[i]  *  (dev  /  dev);  accum  +=  values[i]  *  (dev  /  dev);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  values[i]  *  (dev  /  dev);  accum  +=  values[i]  *  (dev  /  dev);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    values[i]    *    (dev    /    dev);    accum  +=  values[i]  *  (dev  /  dev);	  	compilable	  [FE]  AssertionError  	82	3	add
55	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  values[i]  *  (dev  /  dev);  accum  +=  weights[i]  *  (dev  /  dev);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum    +=    values[i]    *    (dev    /    dev);    accum  +=  weights[i]  *  (dev  /  dev);	  	compilable	  [FE]  AssertionError  	82	3	add
56	[BUG]  [BUGGY]  accum  +=  values[i]  *  (dev  /  dev);  accum  +=  weights[i]  *  (dev  /  dev);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  values[i]  *  (dev  /  dev);  accum  +=  weights[i]  *  (dev  /  dev);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    values[i]    *    (dev    /    dev);    accum  +=  weights[i]  *  (dev  /  dev);	  	compilable	  [FE]  AssertionError  	82	3	add
57	[BUG]  [BUGGY]  accum  +=  values[i]  *  (dev  /  dev);  Accum  +=  values[i]  *  (dev  /  dev);  [CE]  cannot  find  symbol  Accum  [FE]        AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  values[i]  *  (dev  /  dev);  Accum  +=  values[i]  *  (dev  /  dev);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    values[i]    *    (dev    /    dev);    Accum  +=  values[i]  *  (dev  /  dev);	  	non-compiled	[CE]  cannot  find  symbol  Accum	82	None	add
58	[BUG]  [BUGGY]  int  dev  =  values[i]  *  dev;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  int  dev  =  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	int  dev  =  values[i]  *  dev;	          accum    +=    values[i]    *    dev;    int    dev    =    values[i]    *    dev;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	93	None	replace
59	[BUG]  [BUGGY]  accum  +=  weights[i]  *  DEV;  [CE]  cannot  find  symbol  DEV  [FE]              AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  weights[i]  *  DEV;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  weights[i]  *  DEV;	  accum    +=    weights[i]    *    dev;    accum    +=    weights[i]    *    DEV;    	non-compiled	[CE]  cannot  find  symbol  DEV	13	None	replace
60	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum    +=    weights[i]    *    dev;    accum  +=  weights[i]  *  dev;  accum  +=  weights[i]  *  dev;  accum  +=  weights[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum        +=        weights[i]        *        dev;        accum    +=    weights[i]    *    dev;    accum  +=  weights[i]  *  dev;  accum  +=  weights[i]  *  dev;	  	compilable	  [FE]  AssertionError  	9	1	add
61	[BUG]  [BUGGY]  accum    +=    weights[i]    *    dev;    accum  +=  weights[i]  *  dev;  accum  +=  weights[i]  *  dev;  accum  +=  weights[i]  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum    +=    weights[i]    *    dev;    accum  +=  weights[i]  *  dev;  accum  +=  weights[i]  *  dev;  accum  +=  weights[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum        +=        weights[i]        *        dev;        accum    +=    weights[i]    *    dev;    accum  +=  weights[i]  *  dev;  accum  +=  weights[i]  *  dev;	  	compilable	  [FE]  AssertionError  	9	1	add
62	[BUG]  [BUGGY]  accum    +=    weights[i]    *    dev;    accum  +=  weights[i]  *  dev;  Accum  +=  weights[i]  *  dev;  accum  +=  weights[i]  *  dev;  [CE]  cannot  find  symbol  Accum  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum    +=    weights[i]    *    dev;    accum  +=  weights[i]  *  dev;  Accum  +=  weights[i]  *  dev;  accum  +=  weights[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum        +=        weights[i]        *        dev;        accum    +=    weights[i]    *    dev;    Accum  +=  weights[i]  *  dev;  accum  +=  weights[i]  *  dev;	  	non-compiled	[CE]  cannot  find  symbol  Accum	9	None	add
63	[BUG]  [BUGGY]  accum    +=    weights[i]    *    dev;    accum  +=  weights[i]  *  dev;  accum  +=  weights[i]  *  dev;  accum  +=  poids[i]  *  dev;  [CE]  cannot  find  symbol  poids  [FE]        AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum    +=    weights[i]    *    dev;    accum  +=  weights[i]  *  dev;  accum  +=  weights[i]  *  dev;  accum  +=  poids[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum        +=        weights[i]        *        dev;        accum    +=    weights[i]    *    dev;    accum  +=  weights[i]  *  dev;  accum  +=  poids[i]  *  dev;	  	non-compiled	[CE]  cannot  find  symbol  poids	9	None	add
64	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum    +=    weights[i]    *    dev;    accum  +=  weights[i]  *  dev;  accum  +=  weights[i]  *  dev;  accum  +=  values[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum        +=        weights[i]        *        dev;        accum    +=    weights[i]    *    dev;    accum  +=  weights[i]  *  dev;  accum  +=  values[i]  *  dev;	  	compilable	  [FE]  AssertionError  	9	3	add
65	[BUG]  [BUGGY]  accum    +=    weights[i]    *    dev;    accum  +=  weights[i]  *  dev;  accum  +=  weights[i]  *  dev;  accum  +=  values[i]  *  dev;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum    +=    weights[i]    *    dev;    accum  +=  weights[i]  *  dev;  accum  +=  weights[i]  *  dev;  accum  +=  values[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum        +=        weights[i]        *        dev;        accum    +=    weights[i]    *    dev;    accum  +=  weights[i]  *  dev;  accum  +=  values[i]  *  dev;	  	compilable	  [FE]  AssertionError  	9	3	add
66	[BUG]  [BUGGY]  int  accum  +=  weights[i]  *  (dev  /  dev);  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  int  accum  +=  weights[i]  *  (dev  /  dev);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	int  accum  +=  weights[i]  *  (dev  /  dev);	  accum    +=    weights[i]    *    (dev    /    dev);    int    accum    +=    weights[i]    *    (dev    /    dev);    	non-compiled	[CE]  ';'  expected	71	None	replace
67	[BUG]  [BUGGY]  int  accum2  +=  weights[i]  *  (dev  /  dev);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  int  accum2  +=  weights[i]  *  (dev  /  dev);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	int  accum2  +=  weights[i]  *  (dev  /  dev);	  accum    +=    weights[i]    *    (dev    /    dev);    int    accum    +=    weights[i]    *    (dev    /    dev);    	non-compiled	[CE]  ';'  expected	71	None	replace
68	[BUG]  [BUGGY]  accum  +=  weights[i]  *  (dev  /  dev2);  [CE]  cannot  find  symbol  dev2  [FE]              AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  weights[i]  *  (dev  /  dev2);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  weights[i]  *  (dev  /  dev2);	  accum    +=    weights[i]    *    (dev    /    dev);    int    accum    +=    weights[i]    *    (dev    /    dev);    	non-compiled	[CE]  cannot  find  symbol  dev2	71	None	replace
69	[BUG]  [BUGGY]  accum  +=  dev  *  dev;  Accum  +=  dev  *  dev;  [CE]  cannot  find  symbol  Accum  [FE]            AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  dev;  Accum  +=  dev  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev  *  dev;  Accum  +=  dev  *  dev;	          accum    +=    dev    *    mean;    Accum    +=    dev    *    mean;    	non-compiled	[CE]  cannot  find  symbol  Accum	24	None	replace
70	[BUG]  [BUGGY]  Accum  +=  dev  *  dev;  [CE]  cannot  find  symbol  Accum  [FE]              AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  Accum  +=  dev  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	Accum  +=  dev  *  dev;	          accum    +=    dev    *    mean;    Accum    +=    dev    *    mean;    	non-compiled	[CE]  cannot  find  symbol  Accum	24	None	replace
71	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  (dev  *  values[i]);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum  +=  dev  *  (dev  *  values[i]);	  accum    +=    dev    *    values[i];    	compilable	  [FE]  AssertionError  	81	3	replace
72	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  values[i]);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  (dev  *  values[i]);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev  *  (dev  *  values[i]);	  accum    +=    dev    *    values[i];    	compilable	  [FE]  AssertionError  	81	3	replace
73	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum    +=    weights[i]    *    dev;    accum  +=  values[i]  *  dev;  accum  +=  weights[i]  *  dev;  accum  +=  values[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum        +=        weights[i]        *        dev;        accum    +=    values[i]    *    dev;    accum  +=  weights[i]  *  dev;  accum  +=  values[i]  *  dev;	  	compilable	  [FE]  AssertionError  	108	3	add
74	[BUG]  [BUGGY]  accum    +=    weights[i]    *    dev;    accum  +=  values[i]  *  dev;  accum  +=  weights[i]  *  dev;  accum  +=  values[i]  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum    +=    weights[i]    *    dev;    accum  +=  values[i]  *  dev;  accum  +=  weights[i]  *  dev;  accum  +=  values[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum        +=        weights[i]        *        dev;        accum    +=    values[i]    *    dev;    accum  +=  weights[i]  *  dev;  accum  +=  values[i]  *  dev;	  	compilable	  [FE]  AssertionError  	108	3	add
75	[BUG]  [BUGGY]  accum    +=    weights[i]    *    dev;    accum  +=  values[i]  *  dev;  Accum  +=  weights[i]  *  dev;  accum  +=  values[i]  *  dev;  [CE]  cannot  find  symbol  Accum  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum    +=    weights[i]    *    dev;    accum  +=  values[i]  *  dev;  Accum  +=  weights[i]  *  dev;  accum  +=  values[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum        +=        weights[i]        *        dev;        accum    +=    values[i]    *    dev;    Accum  +=  weights[i]  *  dev;  accum  +=  values[i]  *  dev;	  	non-compiled	[CE]  cannot  find  symbol  Accum	108	None	add
76	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum    +=    weights[i]    *    dev;    accum  +=  values[i]  *  dev;  accum  +=  values[i]  *  dev;  accum  +=  values[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum        +=        weights[i]        *        dev;        accum    +=    values[i]    *    dev;    accum  +=  values[i]  *  dev;  accum  +=  values[i]  *  dev;	  	compilable	  [FE]  AssertionError  	108	3	add
77	[BUG]  [BUGGY]  accum    +=    weights[i]    *    dev;    accum  +=  values[i]  *  dev;  accum  +=  values[i]  *  dev;  accum  +=  values[i]  *  dev;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum    +=    weights[i]    *    dev;    accum  +=  values[i]  *  dev;  accum  +=  values[i]  *  dev;  accum  +=  values[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum        +=        weights[i]        *        dev;        accum    +=    values[i]    *    dev;    accum  +=  values[i]  *  dev;  accum  +=  values[i]  *  dev;	  	compilable	  [FE]  AssertionError  	108	3	add
78	[BUG]  [BUGGY]  accum    +=    weights[i]    *    dev;    accum  +=  values[i]  *  dev;  accum  +=  weights[i]  *  DEV;  accum  +=  values[i]  *  dev;  [CE]  cannot  find  symbol  DEV  [FE]          AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum    +=    weights[i]    *    dev;    accum  +=  values[i]  *  dev;  accum  +=  weights[i]  *  DEV;  accum  +=  values[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum        +=        weights[i]        *        dev;        accum    +=    values[i]    *    dev;    accum  +=  weights[i]  *  DEV;  accum  +=  values[i]  *  dev;	  	non-compiled	[CE]  cannot  find  symbol  DEV	108	None	add
79	[BUG]  [BUGGY]  double  dev  =  values[i]  /  mean  +  2;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  dev  =  values[i]  /  mean  +  2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  dev  =  values[i]  /  mean  +  2;	  double    dev    =    values[i]    /    mean    +    1;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	28	None	replace
80	[BUG]  [BUGGY]  double  dev  =  values[i]  /  dev  +  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                    AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  dev  =  values[i]  /  dev  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  dev  =  values[i]  /  dev  +  1;	  double    dev    =    values[i]    /    mean    +    1;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	28	None	replace
81	[BUG]  [BUGGY]  double  dev  =  values[i]  /  length  +  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                      AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  dev  =  values[i]  /  length  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  dev  =  values[i]  /  length  +  1;	  double    dev    =    values[i]    /    mean    +    1;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	28	None	replace
82	[BUG]  [BUGGY]  double  dev  =  values[i]  /  mean2  +  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                    AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  dev  =  values[i]  /  mean2  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  dev  =  values[i]  /  mean2  +  1;	  double    dev    =    values[i]    /    mean2;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	29	None	replace
83	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  dev;  accum  +=  dev  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum    +=    dev    *    dev;    accum  +=  dev  *  dev;	  	compilable	  [FE]  AssertionError  	75	3	add
84	[BUG]  [BUGGY]  accum  +=  dev  *  dev;  accum  +=  dev  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  dev;  accum  +=  dev  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    dev    *    dev;    accum  +=  dev  *  dev;	  	compilable	  [FE]  AssertionError  	75	3	add
85	[BUG]  [BUGGY]  accum  +=  dev  *  dev;  int  accum  +=  dev  *  dev;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  dev;  int  accum  +=  dev  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    dev    *    dev;    int  accum  +=  dev  *  dev;	  	non-compiled	[CE]  ';'  expected	75	None	add
86	[BUG]  [BUGGY]  accum  +=  dev  *  dev;  double  accum  +=  dev  *  dev;  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  dev;  double  accum  +=  dev  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    dev    *    dev;    double  accum  +=  dev  *  dev;	  	non-compiled	[CE]  ';'  expected	75	None	add
87	[BUG]  [BUGGY]  accum  +=  dev  *  dev;  accum  +=  dev  *  DEv;  [CE]  cannot  find  symbol  DEv  [FE]          AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  dev;  accum  +=  dev  *  DEv;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    dev    *    dev;    accum  +=  dev  *  DEv;	  	non-compiled	[CE]  cannot  find  symbol  DEv	75	None	add
88	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  dev  /  mean;  accum2  +=  dev  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum2    +=    dev    /    mean;    accum2  +=  dev  /  mean;	  	compilable	  [FE]  AssertionError  	19	3	add
89	[BUG]  [BUGGY]  accum2  +=  dev  /  mean;  accum2  +=  dev  /  mean;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  dev  /  mean;  accum2  +=  dev  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    +=    dev    /    mean;    accum2  +=  dev  /  mean;	  	compilable	  [FE]  AssertionError  	19	3	add
90	[BUG]  [BUGGY]  accum2  +=  dev  /  mean;  int  accum2  +=  dev  /  mean;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  dev  /  mean;  int  accum2  +=  dev  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    +=    dev    /    mean;    int  accum2  +=  dev  /  mean;	  	non-compiled	[CE]  ';'  expected	19	None	add
91	[BUG]  [BUGGY]  accum2  +=  dev  /  mean;  Accum2  +=  dev  /  mean;  [CE]  cannot  find  symbol  Accum2  [FE]        AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  dev  /  mean;  Accum2  +=  dev  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    +=    dev    /    mean;    Accum2  +=  dev  /  mean;	  	non-compiled	[CE]  cannot  find  symbol  Accum2	19	None	add
92	[BUG]  [BUGGY]  accum2  +=  dev  /  mean;  accum2  +=  DEv  /  mean;  [CE]  cannot  find  symbol  DEv  [FE]          AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  dev  /  mean;  accum2  +=  DEv  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    +=    dev    /    mean;    accum2  +=  DEv  /  mean;	  	non-compiled	[CE]  cannot  find  symbol  DEv	19	None	add
93	[BUG]  [BUGGY]  int  accum  +=  dev  *  weights[i];  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  int  accum  +=  dev  *  weights[i];  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	int  accum  +=  dev  *  weights[i];	  accum    +=    dev    *    weights[i];    int    accum    +=    dev    *    weights[i];    	non-compiled	[CE]  ';'  expected	46	None	replace
94	[BUG]  [BUGGY]  int  accum  +=  weights[i]  *  dev;  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  int  accum  +=  weights[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	int  accum  +=  weights[i]  *  dev;	  accum    +=    dev    *    weights[i];    int    accum    +=    dev    *    weights[i];    	non-compiled	[CE]  ';'  expected	46	None	replace
95	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  weights[i]  /  dev;  accum  +=  weights[i]  /  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum    +=    weights[i]    /    dev;    accum  +=  weights[i]  /  dev;	  	compilable	  [FE]  AssertionError  	106	3	add
96	[BUG]  [BUGGY]  accum  +=  weights[i]  /  dev;  accum  +=  weights[i]  /  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  weights[i]  /  dev;  accum  +=  weights[i]  /  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    weights[i]    /    dev;    accum  +=  weights[i]  /  dev;	  	compilable	  [FE]  AssertionError  	106	3	add
97	[BUG]  [BUGGY]  accum  +=  weights[i]  /  dev;  int  accum  +=  weights[i]  /  dev;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  weights[i]  /  dev;  int  accum  +=  weights[i]  /  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    weights[i]    /    dev;    int  accum  +=  weights[i]  /  dev;	  	non-compiled	[CE]  ';'  expected	106	None	add
98	[BUG]  [BUGGY]  accum  +=  weights[i]  /  dev;  Accum  +=  weights[i]  /  dev;  [CE]  cannot  find  symbol  Accum  [FE]        AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  weights[i]  /  dev;  Accum  +=  weights[i]  /  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    weights[i]    /    dev;    Accum  +=  weights[i]  /  dev;	  	non-compiled	[CE]  cannot  find  symbol  Accum	106	None	add
99	[BUG]  [BUGGY]  accum  +=  weights[i]  /  dev;  double  accum  +=  weights[i]  /  dev;  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  weights[i]  /  dev;  double  accum  +=  weights[i]  /  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    weights[i]    /    dev;    double  accum  +=  weights[i]  /  dev;	  	non-compiled	[CE]  ';'  expected	106	None	add
100	[BUG]  [BUGGY]  accum  +=  weights[i]  /  dev;  accum  +=  weights[i]  /  DEV;  [CE]  cannot  find  symbol  DEV  [FE]            AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  weights[i]  /  dev;  accum  +=  weights[i]  /  DEV;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    weights[i]    /    dev;    accum  +=  weights[i]  /  DEV;	  	non-compiled	[CE]  cannot  find  symbol  DEV	106	None	add
101	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  dev  *  weights[i];  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum2  +=  dev  *  weights[i];	  accum    +=    dev    *    weights[i];    double    accum    +=    dev    *    weights[i];    	compilable	  [FE]  AssertionError  	47	3	replace
102	[BUG]  [BUGGY]  accum2  +=  dev  *  weights[i];  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  dev  *  weights[i];  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2  +=  dev  *  weights[i];	  accum    +=    dev    *    weights[i];    double    accum    +=    dev    *    weights[i];    	compilable	  [FE]  AssertionError  	47	3	replace
103	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  weights[i]  *  mean;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum2  +=  weights[i]  *  mean;	  accum2    +=    weights[i]    *    dev;    	compilable	  [FE]  AssertionError  	66	3	replace
104	[BUG]  [BUGGY]  accum2  +=  weights[i]  *  mean;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  weights[i]  *  mean;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2  +=  weights[i]  *  mean;	  accum2    +=    weights[i]    *    dev;    	compilable	  [FE]  AssertionError  	66	3	replace
105	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  values[i];  accum  +=  dev  *  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum    +=    dev    *    values[i];    accum  +=  dev  *  values[i];	  	compilable	  [FE]  AssertionError  	80	3	add
106	[BUG]  [BUGGY]  accum  +=  dev  *  values[i];  accum  +=  dev  *  values[i];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  values[i];  accum  +=  dev  *  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    dev    *    values[i];    accum  +=  dev  *  values[i];	  	compilable	  [FE]  AssertionError  	80	3	add
107	[BUG]  [BUGGY]  accum  +=  dev  *  values[i];  int  accum  +=  dev  *  values[i];  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  values[i];  int  accum  +=  dev  *  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    dev    *    values[i];    int  accum  +=  dev  *  values[i];	  	non-compiled	[CE]  ';'  expected	80	None	add
108	[BUG]  [BUGGY]  accum  +=  dev  *  values[i];  Accum  +=  dev  *  values[i];  [CE]  cannot  find  symbol  Accum  [FE]        AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  values[i];  Accum  +=  dev  *  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    dev    *    values[i];    Accum  +=  dev  *  values[i];	  	non-compiled	[CE]  cannot  find  symbol  Accum	80	None	add
109	[BUG]  [BUGGY]  accum  +=  dev  *  values[i];  accum  +=  DEV  *  values[i];  [CE]  cannot  find  symbol  DEV  [FE]          AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  values[i];  accum  +=  DEV  *  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    dev    *    values[i];    accum  +=  DEV  *  values[i];	  	non-compiled	[CE]  cannot  find  symbol  DEV	80	None	add
110	[BUG]  [BUGGY]  int  dev  =  values[i]  /  accum2;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  int  dev  =  values[i]  /  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	int  dev  =  values[i]  /  accum2;	  int    dev    =    values[i]    -    accum2;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	57	None	replace
111	[BUG]  [BUGGY]  int  dev  =  accum2  -  values[i];  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  int  dev  =  accum2  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	int  dev  =  accum2  -  values[i];	  int    dev    =    values[i]    -    accum2;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	57	None	replace
112	[BUG]  [BUGGY]  accum2  +=  DEV;  [CE]  cannot  find  symbol  DEV  [FE]              AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  DEV;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2  +=  DEV;	          accum2    +=    dev;    accum2    +=    DEV;    	non-compiled	[CE]  cannot  find  symbol  DEV	43	None	replace
113	[BUG]  [BUGGY]  accum2  +=  dev.length;  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  dev.length;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2  +=  dev.length;	          accum2    +=    dev;    accum2    +=    DEV;    	non-compiled	[CE]  double  cannot  be  dereferenced	43	None	replace
114	[BUG]  [BUGGY]  double  dev  =  accum2  *  values[i];  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  dev  =  accum2  *  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  dev  =  accum2  *  values[i];	  double    dev    =    values[i]    *    accum2;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	38	None	replace
115	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  dev  /  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum2  +=  dev  /  dev;	  accum2    +=    dev    /    mean;    	compilable	  [FE]  AssertionError  	20	3	replace
116	[BUG]  [BUGGY]  accum2  +=  dev  /  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  dev  /  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2  +=  dev  /  dev;	  accum2    +=    dev    /    mean;    	compilable	  [FE]  AssertionError  	20	3	replace
117	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  -=  dev  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum2  -=  dev  *  mean;	  accum2    -=    dev    *    dev;    	compilable	  [FE]  AssertionError  	98	3	replace
118	[BUG]  [BUGGY]  accum2  -=  dev  *  mean;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  -=  dev  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2  -=  dev  *  mean;	  accum2    -=    dev    *    dev;    	compilable	  [FE]  AssertionError  	98	3	replace
119	[BUG]  [BUGGY]  accum2  -=  dev  *  dev.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  -=  dev  *  dev.doubleValue();  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2  -=  dev  *  dev.doubleValue();	  accum2    -=    dev    *    dev;    	non-compiled	[CE]  double  cannot  be  dereferenced	98	None	replace
120	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  values[i]  *  (dev  *  accum2);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum  +=  values[i]  *  (dev  *  accum2);	  accum    +=    values[i]    *    (dev    *    dev2);    	compilable	  [FE]  AssertionError  	91	3	replace
121	[BUG]  [BUGGY]  accum  +=  values[i]  *  (dev  *  accum2);  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  values[i]  *  (dev  *  accum2);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  values[i]  *  (dev  *  accum2);	  accum    +=    values[i]    *    (dev    *    dev2);    	compilable	  [FE]  AssertionError  	91	3	replace
122	[BUG]  [BUGGY]  int  dev  =  weights[i]  /  accum2;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  int  dev  =  weights[i]  /  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	int  dev  =  weights[i]  /  accum2;	  int    dev    =    weights[i]    -    accum2;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	84	None	replace
123	[BUG]  [BUGGY]  int  dev  =  weights[i]  -  mean;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  int  dev  =  weights[i]  -  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	int  dev  =  weights[i]  -  mean;	  int    dev    =    weights[i]    -    accum2;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	84	None	replace
124	[BUG]  [BUGGY]  int  accum2  +=  weights[i]  *  dev;  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  int  accum2  +=  weights[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	int  accum2  +=  weights[i]  *  dev;	  accum    +=    weights[i]    *    dev;    int    accum    +=    weights[i]    *    dev;    	non-compiled	[CE]  ';'  expected	11	None	replace
125	[BUG]  [BUGGY]  accum  +=  dev  *  Weights[i];  [CE]  cannot  find  symbol  Weights  [FE]              AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  Weights[i];  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev  *  Weights[i];	  accum    +=    dev    *    weights[i];    accum    +=    dev    *    Weights[i];    	non-compiled	[CE]  cannot  find  symbol  Weights	48	None	replace
126	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum2    +=    dev    *    mean;    accum2  +=  dev  *  mean;  accum2  +=  dev  *  mean;  accum2  +=  dev  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	                accum2        +=        dev        *        mean;        accum2    +=    dev    *    mean;    accum2  +=  dev  *  mean;  accum2  +=  dev  *  mean;	  	compilable	  [FE]  AssertionError  	50	3	add
127	[BUG]  [BUGGY]          accum2    +=    dev    *    mean;    accum2  +=  dev  *  mean;  accum2  +=  dev  *  mean;  accum2  +=  dev  *  mean;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum2    +=    dev    *    mean;    accum2  +=  dev  *  mean;  accum2  +=  dev  *  mean;  accum2  +=  dev  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	                accum2        +=        dev        *        mean;        accum2    +=    dev    *    mean;    accum2  +=  dev  *  mean;  accum2  +=  dev  *  mean;	  	compilable	  [FE]  AssertionError  	50	3	add
128	[BUG]  [BUGGY]          accum2    +=    dev    *    mean;    accum2  +=  dev  *  mean;  Accum2  +=  dev  *  mean;  accum2  +=  dev  *  mean;  [CE]  cannot  find  symbol  Accum2  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum2    +=    dev    *    mean;    accum2  +=  dev  *  mean;  Accum2  +=  dev  *  mean;  accum2  +=  dev  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	                accum2        +=        dev        *        mean;        accum2    +=    dev    *    mean;    Accum2  +=  dev  *  mean;  accum2  +=  dev  *  mean;	  	non-compiled	[CE]  cannot  find  symbol  Accum2	50	None	add
129	[BUG]  [BUGGY]          accum2    +=    dev    *    mean;    accum2  +=  dev  *  mean;  double  accum2  +=  dev  *  mean;  accum2  +=  dev  *  mean;  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum2    +=    dev    *    mean;    accum2  +=  dev  *  mean;  double  accum2  +=  dev  *  mean;  accum2  +=  dev  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	                accum2        +=        dev        *        mean;        accum2    +=    dev    *    mean;    double  accum2  +=  dev  *  mean;  accum2  +=  dev  *  mean;	  	non-compiled	[CE]  ';'  expected	50	None	add
130	[BUG]  [BUGGY]          accum2    +=    dev    *    mean;    accum2  +=  dev  *  mean;  accum2  +=  DEV  *  mean;  accum2  +=  dev  *  mean;  [CE]  cannot  find  symbol  DEV  [FE]          AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum2    +=    dev    *    mean;    accum2  +=  dev  *  mean;  accum2  +=  DEV  *  mean;  accum2  +=  dev  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	                accum2        +=        dev        *        mean;        accum2    +=    dev    *    mean;    accum2  +=  DEV  *  mean;  accum2  +=  dev  *  mean;	  	non-compiled	[CE]  cannot  find  symbol  DEV	50	None	add
131	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum2    +=    dev    *    mean;    accum2  +=  dev  *  mean;  accum2  +=  mean  *  mean;  accum2  +=  dev  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	                accum2        +=        dev        *        mean;        accum2    +=    dev    *    mean;    accum2  +=  mean  *  mean;  accum2  +=  dev  *  mean;	  	compilable	  [FE]  AssertionError  	50	3	add
132	[BUG]  [BUGGY]          accum2    +=    dev    *    mean;    accum2  +=  dev  *  mean;  accum2  +=  mean  *  mean;  accum2  +=  dev  *  mean;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum2    +=    dev    *    mean;    accum2  +=  dev  *  mean;  accum2  +=  mean  *  mean;  accum2  +=  dev  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	                accum2        +=        dev        *        mean;        accum2    +=    dev    *    mean;    accum2  +=  mean  *  mean;  accum2  +=  dev  *  mean;	  	compilable	  [FE]  AssertionError  	50	3	add
133	[BUG]  [BUGGY]  double  dev  =  values[i]  -  mean  +  2;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  dev  =  values[i]  -  mean  +  2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  dev  =  values[i]  -  mean  +  2;	  double    dev    =    values[i]    -    mean    +    1;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	100	None	replace
134	[BUG]  [BUGGY]  double  dev  =  values[i]  -  mean2  +  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  dev  =  values[i]  -  mean2  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  dev  =  values[i]  -  mean2  +  1;	  double    dev    =    values[i]    -    mean    +    1;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	100	None	replace
135	[BUG]  [BUGGY]  double  dev  =  values[i]  /  mean.doubleValue()  +  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                      AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  dev  =  values[i]  /  mean.doubleValue()  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  dev  =  values[i]  /  mean.doubleValue()  +  1;	  double    dev    =    values[i]    /    mean.doubleValue();    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	30	None	replace
136	[BUG]  [BUGGY]  double  dev  =  weights[i]  /  mean.doubleValue();  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                        AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  dev  =  weights[i]  /  mean.doubleValue();  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  dev  =  weights[i]  /  mean.doubleValue();	  double    dev    =    values[i]    /    mean.doubleValue();    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	30	None	replace
137	[BUG]  [BUGGY]  double  dev  =  values[i]  *  mean.doubleValue();  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                          AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  dev  =  values[i]  *  mean.doubleValue();  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  dev  =  values[i]  *  mean.doubleValue();	  double    dev    =    values[i]    /    mean.doubleValue();    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	30	None	replace
138	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  /=  dev;  accum2  /=  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum2    /=    dev;    accum2  /=  dev;	  	compilable	  [FE]  AssertionError  	3	3	add
139	[BUG]  [BUGGY]  accum2  /=  dev;  accum2  /=  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  /=  dev;  accum2  /=  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    /=    dev;    accum2  /=  dev;	  	compilable	  [FE]  AssertionError  	3	3	add
140	[BUG]  [BUGGY]  accum2  /=  dev;  int  accum2  /=  dev;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  /=  dev;  int  accum2  /=  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    /=    dev;    int  accum2  /=  dev;	  	non-compiled	[CE]  ';'  expected	3	None	add
141	[BUG]  [BUGGY]  accum2  /=  dev;  Accum2  /=  dev;  [CE]  cannot  find  symbol  Accum2  [FE]        AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  /=  dev;  Accum2  /=  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    /=    dev;    Accum2  /=  dev;	  	non-compiled	[CE]  cannot  find  symbol  Accum2	3	None	add
142	[BUG]  [BUGGY]  accum2  /=  dev;  accum2  /=  DEV;  [CE]  cannot  find  symbol  DEV  [FE]          AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  /=  dev;  accum2  /=  DEV;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    /=    dev;    accum2  /=  DEV;	  	non-compiled	[CE]  cannot  find  symbol  DEV	3	None	add
143	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum    +=    values[i]    *    dev;    accum  +=  values[i]  *  dev;  accum  +=  values[i]  *  dev;  accum  +=  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	                accum        +=        values[i]        *        dev;        accum    +=    values[i]    *    dev;    accum  +=  values[i]  *  dev;  accum  +=  values[i]  *  dev;	  	compilable	  [FE]  AssertionError  	59	3	add
144	[BUG]  [BUGGY]          accum    +=    values[i]    *    dev;    accum  +=  values[i]  *  dev;  accum  +=  values[i]  *  dev;  accum  +=  values[i]  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum    +=    values[i]    *    dev;    accum  +=  values[i]  *  dev;  accum  +=  values[i]  *  dev;  accum  +=  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	                accum        +=        values[i]        *        dev;        accum    +=    values[i]    *    dev;    accum  +=  values[i]  *  dev;  accum  +=  values[i]  *  dev;	  	compilable	  [FE]  AssertionError  	59	3	add
145	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum    +=    values[i]    *    dev;    accum  +=  values[i]  *  dev;  accum  +=  weights[i]  *  dev;  accum  +=  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	                accum        +=        values[i]        *        dev;        accum    +=    values[i]    *    dev;    accum  +=  weights[i]  *  dev;  accum  +=  values[i]  *  dev;	  	compilable	  [FE]  AssertionError  	59	3	add
146	[BUG]  [BUGGY]          accum    +=    values[i]    *    dev;    accum  +=  values[i]  *  dev;  accum  +=  weights[i]  *  dev;  accum  +=  values[i]  *  dev;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum    +=    values[i]    *    dev;    accum  +=  values[i]  *  dev;  accum  +=  weights[i]  *  dev;  accum  +=  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	                accum        +=        values[i]        *        dev;        accum    +=    values[i]    *    dev;    accum  +=  weights[i]  *  dev;  accum  +=  values[i]  *  dev;	  	compilable	  [FE]  AssertionError  	59	3	add
147	[BUG]  [BUGGY]          accum    +=    values[i]    *    dev;    accum  +=  values[i]  *  dev;  Accum  +=  values[i]  *  dev;  accum  +=  values[i]  *  dev;  [CE]  cannot  find  symbol  Accum  [FE]        AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum    +=    values[i]    *    dev;    accum  +=  values[i]  *  dev;  Accum  +=  values[i]  *  dev;  accum  +=  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	                accum        +=        values[i]        *        dev;        accum    +=    values[i]    *    dev;    Accum  +=  values[i]  *  dev;  accum  +=  values[i]  *  dev;	  	non-compiled	[CE]  cannot  find  symbol  Accum	59	None	add
148	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum    +=    values[i]    *    (dev    *    dev);    accum  +=  weights[i]  *  (dev  *  dev);  accum  +=  values[i]  *  (dev  *  dev);  accum  +=  weights[i]  *  (dev  *  dev);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	                accum        +=        values[i]        *        (dev        *        dev);        accum    +=    weights[i]    *    (dev    *    dev);    accum  +=  values[i]  *  (dev  *  dev);  accum  +=  weights[i]  *  (dev  *  dev);	  	compilable	  [FE]  AssertionError  	33	3	add
149	[BUG]  [BUGGY]          accum    +=    values[i]    *    (dev    *    dev);    accum  +=  weights[i]  *  (dev  *  dev);  accum  +=  values[i]  *  (dev  *  dev);  accum  +=  weights[i]  *  (dev  *  dev);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum    +=    values[i]    *    (dev    *    dev);    accum  +=  weights[i]  *  (dev  *  dev);  accum  +=  values[i]  *  (dev  *  dev);  accum  +=  weights[i]  *  (dev  *  dev);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	                accum        +=        values[i]        *        (dev        *        dev);        accum    +=    weights[i]    *    (dev    *    dev);    accum  +=  values[i]  *  (dev  *  dev);  accum  +=  weights[i]  *  (dev  *  dev);	  	compilable	  [FE]  AssertionError  	33	3	add
150	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum    +=    values[i]    *    (dev    *    dev);    accum  +=  weights[i]  *  (dev  *  dev);  accum  +=  weights[i]  *  (dev  *  dev);  accum  +=  weights[i]  *  (dev  *  dev);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	                accum        +=        values[i]        *        (dev        *        dev);        accum    +=    weights[i]    *    (dev    *    dev);    accum  +=  weights[i]  *  (dev  *  dev);  accum  +=  weights[i]  *  (dev  *  dev);	  	compilable	  [FE]  AssertionError  	33	3	add
151	[BUG]  [BUGGY]          accum    +=    values[i]    *    (dev    *    dev);    accum  +=  weights[i]  *  (dev  *  dev);  accum  +=  weights[i]  *  (dev  *  dev);  accum  +=  weights[i]  *  (dev  *  dev);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum    +=    values[i]    *    (dev    *    dev);    accum  +=  weights[i]  *  (dev  *  dev);  accum  +=  weights[i]  *  (dev  *  dev);  accum  +=  weights[i]  *  (dev  *  dev);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	                accum        +=        values[i]        *        (dev        *        dev);        accum    +=    weights[i]    *    (dev    *    dev);    accum  +=  weights[i]  *  (dev  *  dev);  accum  +=  weights[i]  *  (dev  *  dev);	  	compilable	  [FE]  AssertionError  	33	3	add
152	[BUG]  [BUGGY]          accum    +=    values[i]    *    (dev    *    dev);    accum  +=  weights[i]  *  (dev  *  dev);  Accum  +=  values[i]  *  (dev  *  dev);  accum  +=  weights[i]  *  (dev  *  dev);  [CE]  cannot  find  symbol  Accum  [FE]        AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum    +=    values[i]    *    (dev    *    dev);    accum  +=  weights[i]  *  (dev  *  dev);  Accum  +=  values[i]  *  (dev  *  dev);  accum  +=  weights[i]  *  (dev  *  dev);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	                accum        +=        values[i]        *        (dev        *        dev);        accum    +=    weights[i]    *    (dev    *    dev);    Accum  +=  values[i]  *  (dev  *  dev);  accum  +=  weights[i]  *  (dev  *  dev);	  	non-compiled	[CE]  cannot  find  symbol  Accum	33	None	add
153	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  /  weights[i];  accum  +=  dev  /  weights[i];  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum    +=    dev    /    weights[i];    accum  +=  dev  /  weights[i];	  	compilable	  [FE]  AssertionError  	104	3	add
154	[BUG]  [BUGGY]  accum  +=  dev  /  weights[i];  accum  +=  dev  /  weights[i];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  /  weights[i];  accum  +=  dev  /  weights[i];  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    dev    /    weights[i];    accum  +=  dev  /  weights[i];	  	compilable	  [FE]  AssertionError  	104	3	add
155	[BUG]  [BUGGY]  accum  +=  dev  /  weights[i];  int  accum  +=  dev  /  weights[i];  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  /  weights[i];  int  accum  +=  dev  /  weights[i];  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    dev    /    weights[i];    int  accum  +=  dev  /  weights[i];	  	non-compiled	[CE]  ';'  expected	104	None	add
156	[BUG]  [BUGGY]  accum  +=  dev  /  weights[i];  accum  +=  dev  /  Weights[i];  [CE]  cannot  find  symbol  Weights  [FE]        AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  /  weights[i];  accum  +=  dev  /  Weights[i];  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    dev    /    weights[i];    accum  +=  dev  /  Weights[i];	  	non-compiled	[CE]  cannot  find  symbol  Weights	104	None	add
157	[BUG]  [BUGGY]  accum  +=  dev  /  weights[i];  Accum  +=  dev  /  weights[i];  [CE]  cannot  find  symbol  Accum  [FE]          AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  /  weights[i];  Accum  +=  dev  /  weights[i];  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    dev    /    weights[i];    Accum  +=  dev  /  weights[i];	  	non-compiled	[CE]  cannot  find  symbol  Accum	104	None	add
158	[BUG]  [BUGGY]  accum  +=  dev  /  weights[i];  accum  +=  dev  /  poids[i];  [CE]  cannot  find  symbol  poids  [FE]            AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  /  weights[i];  accum  +=  dev  /  poids[i];  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    dev    /    weights[i];    accum  +=  dev  /  poids[i];	  	non-compiled	[CE]  cannot  find  symbol  poids	104	None	add
159	[BUG]  [BUGGY]  double  dev  =  weights[i]  /  accum2;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  dev  =  weights[i]  /  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  dev  =  weights[i]  /  accum2;	  double    dev    =    weights[i]    -    accum2;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	87	None	replace
160	[BUG]  [BUGGY]  double  dev  =  weights[i]  *  accum2;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  dev  =  weights[i]  *  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  dev  =  weights[i]  *  accum2;	  double    dev    =    weights[i]    -    accum2;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	87	None	replace
161	[BUG]  [BUGGY]  accum  +=  dev  *  dev;  accum  +=  DEV  *  dev;  [CE]  cannot  find  symbol  DEV  [FE]                AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  dev;  accum  +=  DEV  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev  *  dev;  accum  +=  DEV  *  dev;	          accum    +=    dev    *    mean;    accum    +=    DEV    *    mean;    	non-compiled	[CE]  cannot  find  symbol  DEV	26	None	replace
162	[BUG]  [BUGGY]  accum  +=  poids[i]  *  (dev  /  dev);  [CE]  cannot  find  symbol  poids  [FE]        AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  poids[i]  *  (dev  /  dev);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  poids[i]  *  (dev  /  dev);	  accum    +=    weights[i]    *    (dev    /    dev);    accum    +=    poids[i]    *    (dev    /    dev);    	non-compiled	[CE]  cannot  find  symbol  poids	88	None	replace
163	[BUG]  [BUGGY]  accum2  +=  dev.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  dev.doubleValue();  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2  +=  dev.doubleValue();	          accum2    +=    dev;    accum2    +=    dev;    	non-compiled	[CE]  double  cannot  be  dereferenced	40	None	replace
164	[BUG]  [BUGGY]  int  accum  +=  values[i]  *  dev;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  int  accum  +=  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	int  accum  +=  values[i]  *  dev;	          accum    +=    values[i]    *    dev;    int    accum    +=    values[i]    *    dev;    	non-compiled	[CE]  ';'  expected	64	None	replace
165	[BUG]  [BUGGY]  int  accum2  +=  values[i]  *  dev;  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  int  accum2  +=  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	int  accum2  +=  values[i]  *  dev;	          accum    +=    values[i]    *    dev;    int    accum    +=    values[i]    *    dev;    	non-compiled	[CE]  ';'  expected	64	None	replace
166	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum    +=    weights[i]    *    (dev    /    dev);    accum  +=  weights[i]  *  (dev  /  dev);  accum  +=  weights[i]  *  (dev  /  dev);  accum  +=  weights[i]  *  (dev  /  dev);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum        +=        weights[i]        *        (dev        /        dev);        accum    +=    weights[i]    *    (dev    /    dev);    accum  +=  weights[i]  *  (dev  /  dev);  accum  +=  weights[i]  *  (dev  /  dev);	  	compilable	  [FE]  AssertionError  	69	3	add
167	[BUG]  [BUGGY]  accum    +=    weights[i]    *    (dev    /    dev);    accum  +=  weights[i]  *  (dev  /  dev);  accum  +=  weights[i]  *  (dev  /  dev);  accum  +=  weights[i]  *  (dev  /  dev);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum    +=    weights[i]    *    (dev    /    dev);    accum  +=  weights[i]  *  (dev  /  dev);  accum  +=  weights[i]  *  (dev  /  dev);  accum  +=  weights[i]  *  (dev  /  dev);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum        +=        weights[i]        *        (dev        /        dev);        accum    +=    weights[i]    *    (dev    /    dev);    accum  +=  weights[i]  *  (dev  /  dev);  accum  +=  weights[i]  *  (dev  /  dev);	  	compilable	  [FE]  AssertionError  	69	3	add
168	[BUG]  [BUGGY]  accum    +=    weights[i]    *    (dev    /    dev);    accum  +=  weights[i]  *  (dev  /  dev);  accum  +=  weights[i]  *  (dev  /  dev);  accum  +=  weights[i]  *  (dev  /  DEV);  [CE]  cannot  find  symbol  DEV  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum    +=    weights[i]    *    (dev    /    dev);    accum  +=  weights[i]  *  (dev  /  dev);  accum  +=  weights[i]  *  (dev  /  dev);  accum  +=  weights[i]  *  (dev  /  DEV);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum        +=        weights[i]        *        (dev        /        dev);        accum    +=    weights[i]    *    (dev    /    dev);    accum  +=  weights[i]  *  (dev  /  dev);  accum  +=  weights[i]  *  (dev  /  DEV);	  	non-compiled	[CE]  cannot  find  symbol  DEV	69	None	add
169	[BUG]  [BUGGY]  int  accum2  +=  dev  *  dev;  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  int  accum2  +=  dev  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	int  accum2  +=  dev  *  dev;	          accum2    +=    dev    *    mean;    int    accum2    +=    dev    *    mean;    	non-compiled	[CE]  ';'  expected	52	None	replace
170	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum    +=    dev    *    mean;    accum  +=  dev  *  mean;  accum  +=  dev  *  mean;  accum  +=  dev  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	                accum        +=        dev        *        mean;        accum    +=    dev    *    mean;    accum  +=  dev  *  mean;  accum  +=  dev  *  mean;	  	compilable	  [FE]  AssertionError  	21	3	add
171	[BUG]  [BUGGY]          accum    +=    dev    *    mean;    accum  +=  dev  *  mean;  accum  +=  dev  *  mean;  accum  +=  dev  *  mean;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum    +=    dev    *    mean;    accum  +=  dev  *  mean;  accum  +=  dev  *  mean;  accum  +=  dev  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	                accum        +=        dev        *        mean;        accum    +=    dev    *    mean;    accum  +=  dev  *  mean;  accum  +=  dev  *  mean;	  	compilable	  [FE]  AssertionError  	21	3	add
172	[BUG]  [BUGGY]          accum    +=    dev    *    mean;    accum  +=  dev  *  mean;  Accum  +=  dev  *  mean;  accum  +=  dev  *  mean;  [CE]  cannot  find  symbol  Accum  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum    +=    dev    *    mean;    accum  +=  dev  *  mean;  Accum  +=  dev  *  mean;  accum  +=  dev  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	                accum        +=        dev        *        mean;        accum    +=    dev    *    mean;    Accum  +=  dev  *  mean;  accum  +=  dev  *  mean;	  	non-compiled	[CE]  cannot  find  symbol  Accum	21	None	add
173	[BUG]  [BUGGY]          accum    +=    dev    *    mean;    accum  +=  dev  *  mean;  accum  +=  DEV  *  mean;  accum  +=  dev  *  mean;  [CE]  cannot  find  symbol  DEV  [FE]        AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum    +=    dev    *    mean;    accum  +=  dev  *  mean;  accum  +=  DEV  *  mean;  accum  +=  dev  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	                accum        +=        dev        *        mean;        accum    +=    dev    *    mean;    accum  +=  DEV  *  mean;  accum  +=  dev  *  mean;	  	non-compiled	[CE]  cannot  find  symbol  DEV	21	None	add
174	[BUG]  [BUGGY]          accum    +=    dev    *    mean;    accum  +=  dev  *  mean;  accum  +=  dev  *  mean;  accum  +=  DEV  *  mean;  [CE]  cannot  find  symbol  DEV  [FE]          AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum    +=    dev    *    mean;    accum  +=  dev  *  mean;  accum  +=  dev  *  mean;  accum  +=  DEV  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	                accum        +=        dev        *        mean;        accum    +=    dev    *    mean;    accum  +=  dev  *  mean;  accum  +=  DEV  *  mean;	  	non-compiled	[CE]  cannot  find  symbol  DEV	21	None	add
175	[BUG]  [BUGGY]          accum    +=    dev    *    mean;    accum  +=  dev  *  mean;  accum  +=  dev  *  mean;  Accum  +=  dev  *  mean;  [CE]  cannot  find  symbol  Accum  [FE]            AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum    +=    dev    *    mean;    accum  +=  dev  *  mean;  accum  +=  dev  *  mean;  Accum  +=  dev  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	                accum        +=        dev        *        mean;        accum    +=    dev    *    mean;    accum  +=  dev  *  mean;  Accum  +=  dev  *  mean;	  	non-compiled	[CE]  cannot  find  symbol  Accum	21	None	add
176	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  /  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum  +=  dev  /  accum2;	  accum    +=    dev    *    accum2;    	compilable	  [FE]  AssertionError  	78	2	replace
177	[BUG]  [BUGGY]  accum  +=  dev  /  accum2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  /  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev  /  accum2;	  accum    +=    dev    *    accum2;    	compilable	  [FE]  AssertionError  	78	2	replace
178	[BUG]  [BUGGY]  double  dev  =  weights[i]  /  dev;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  dev  =  weights[i]  /  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  dev  =  weights[i]  /  dev;	  double    dev    =    weights[i]    /    mean;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	15	None	replace
179	[BUG]  [BUGGY]  double  dev  =  weights[i]  *  mean;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  dev  =  weights[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  dev  =  weights[i]  *  mean;	  double    dev    =    weights[i]    /    mean;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	15	None	replace
180	[BUG]  [BUGGY]  double  dev  =  weights[i]  /  mean  +  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  dev  =  weights[i]  /  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  dev  =  weights[i]  /  mean  +  1;	  double    dev    =    weights[i]    /    mean;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	15	None	replace
181	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  /=  dev  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum2  /=  dev  +  1;	  accum2    /=    dev;    	compilable	  [FE]  AssertionError  	4	3	replace
182	[BUG]  [BUGGY]  accum2  /=  dev  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  /=  dev  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2  /=  dev  +  1;	  accum2    /=    dev;    	compilable	  [FE]  AssertionError  	4	3	replace
183	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  /=  dev  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum2  /=  dev  *  dev;	  accum2    /=    dev;    	compilable	  [FE]  AssertionError  	4	3	replace
184	[BUG]  [BUGGY]  accum2  /=  dev  *  dev;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  /=  dev  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2  /=  dev  *  dev;	  accum2    /=    dev;    	compilable	  [FE]  AssertionError  	4	3	replace
185	[BUG]  [BUGGY]  int  accum  +=  dev  *  dev;  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  int  accum  +=  dev  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	int  accum  +=  dev  *  dev;	          accum    +=    dev    *    mean;    int    accum    +=    dev    *    mean;    	non-compiled	[CE]  ';'  expected	23	None	replace
186	[BUG]  [BUGGY]  int  accum  +=  dev  *  dev2;  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  int  accum  +=  dev  *  dev2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	int  accum  +=  dev  *  dev2;	          accum    +=    dev    *    mean;    int    accum    +=    dev    *    mean;    	non-compiled	[CE]  ';'  expected	23	None	replace
187	[BUG]  [BUGGY]  accum2  +=  DEv  *  dev;  [CE]  cannot  find  symbol  DEv  [FE]                AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  DEv  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2  +=  DEv  *  dev;	          accum2    +=    dev    *    mean;    accum2    +=    DEv    *    mean;    	non-compiled	[CE]  cannot  find  symbol  DEv	55	None	replace
188	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  weights[i]  *  (dev  /  mean);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum  +=  weights[i]  *  (dev  /  mean);	  accum    +=    weights[i]    *    (dev    /    dev);    accum    +=    weights[i]    *    (dev    /    DEV);    	compilable	  [FE]  AssertionError  	74	3	replace
189	[BUG]  [BUGGY]  accum  +=  weights[i]  *  (dev  /  mean);  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  weights[i]  *  (dev  /  mean);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  weights[i]  *  (dev  /  mean);	  accum    +=    weights[i]    *    (dev    /    dev);    accum    +=    weights[i]    *    (dev    /    DEV);    	compilable	  [FE]  AssertionError  	74	3	replace
190	[BUG]  [BUGGY]  accum  +=  weights[i]  *  (dev  /  DEV);  [CE]  cannot  find  symbol  DEV  [FE]                  AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  weights[i]  *  (dev  /  DEV);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  weights[i]  *  (dev  /  DEV);	  accum    +=    weights[i]    *    (dev    /    dev);    accum    +=    weights[i]    *    (dev    /    DEV);    	non-compiled	[CE]  cannot  find  symbol  DEV	74	None	replace
191	[BUG]  [BUGGY]  accum  +=  values[i]  *  DEV;  [CE]  cannot  find  symbol  DEV  [FE]        AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  values[i]  *  DEV;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  values[i]  *  DEV;	          accum    +=    values[i]    *    dev;    accum    +=    values[i]    *    DEV;    	non-compiled	[CE]  cannot  find  symbol  DEV	92	None	replace
192	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  weights[i]  *  mean;  accum  +=  weights[i]  *  mean;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum    +=    weights[i]    *    mean;    accum  +=  weights[i]  *  mean;	  	compilable	  [FE]  AssertionError  	67	3	add
193	[BUG]  [BUGGY]  accum  +=  weights[i]  *  mean;  accum  +=  weights[i]  *  mean;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  weights[i]  *  mean;  accum  +=  weights[i]  *  mean;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    weights[i]    *    mean;    accum  +=  weights[i]  *  mean;	  	compilable	  [FE]  AssertionError  	67	3	add
194	[BUG]  [BUGGY]  accum  +=  weights[i]  *  mean;  int  accum  +=  weights[i]  *  mean;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  weights[i]  *  mean;  int  accum  +=  weights[i]  *  mean;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    weights[i]    *    mean;    int  accum  +=  weights[i]  *  mean;	  	non-compiled	[CE]  ';'  expected	67	None	add
195	[BUG]  [BUGGY]  accum  +=  weights[i]  *  mean;  double  accum  +=  weights[i]  *  mean;  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  weights[i]  *  mean;  double  accum  +=  weights[i]  *  mean;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    weights[i]    *    mean;    double  accum  +=  weights[i]  *  mean;	  	non-compiled	[CE]  ';'  expected	67	None	add
196	[BUG]  [BUGGY]  accum  +=  weights[i]  *  mean;  Accum  +=  weights[i]  *  mean;  [CE]  cannot  find  symbol  Accum  [FE]          AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  weights[i]  *  mean;  Accum  +=  weights[i]  *  mean;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    weights[i]    *    mean;    Accum  +=  weights[i]  *  mean;	  	non-compiled	[CE]  cannot  find  symbol  Accum	67	None	add
197	[BUG]  [BUGGY]  double  dev  =  weights[i]  /  mean2;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  dev  =  weights[i]  /  mean2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  dev  =  weights[i]  /  mean2;	  double    dev    =    values[i]    -    mean2;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	16	None	replace
198	[BUG]  [BUGGY]  Accum2  +=  dev;  [CE]  cannot  find  symbol  Accum2  [FE]            AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  Accum2  +=  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	Accum2  +=  dev;	          accum2    +=    dev;    Accum2    +=    dev;    	non-compiled	[CE]  cannot  find  symbol  Accum2	42	None	replace
199	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  dev  *  accum2;  accum2  +=  dev  *  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum2    +=    dev    *    accum2;    accum2  +=  dev  *  accum2;	  	compilable	  [FE]  AssertionError  	17	3	add
200	[BUG]  [BUGGY]  accum2  +=  dev  *  accum2;  accum2  +=  dev  *  accum2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  dev  *  accum2;  accum2  +=  dev  *  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    +=    dev    *    accum2;    accum2  +=  dev  *  accum2;	  	compilable	  [FE]  AssertionError  	17	3	add
201	[BUG]  [BUGGY]  accum2  +=  dev  *  accum2;  int  accum2  +=  dev  *  accum2;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  dev  *  accum2;  int  accum2  +=  dev  *  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    +=    dev    *    accum2;    int  accum2  +=  dev  *  accum2;	  	non-compiled	[CE]  ';'  expected	17	None	add
202	[BUG]  [BUGGY]  accum2  +=  dev  *  accum2;  Accum2  +=  dev  *  accum2;  [CE]  cannot  find  symbol  Accum2  [FE]        AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  dev  *  accum2;  Accum2  +=  dev  *  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    +=    dev    *    accum2;    Accum2  +=  dev  *  accum2;	  	non-compiled	[CE]  cannot  find  symbol  Accum2	17	None	add
203	[BUG]  [BUGGY]  accum2  +=  dev  *  accum2;  accum2  +=  DEV  *  accum2;  [CE]  cannot  find  symbol  DEV  [FE]          AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  dev  *  accum2;  accum2  +=  DEV  *  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    +=    dev    *    accum2;    accum2  +=  DEV  *  accum2;	  	non-compiled	[CE]  cannot  find  symbol  DEV	17	None	add
204	[BUG]  [BUGGY]  accum  +=  dev  *  (accum2  /  weights);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]        AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  (accum2  /  weights);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev  *  (accum2  /  weights);	  accum    +=    dev    *    (dev    /    weights);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	85	None	replace
205	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  (dev  /  weights.length);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum  +=  dev  *  (dev  /  weights.length);	  accum    +=    dev    *    (dev    /    weights);    	compilable	  [FE]  AssertionError  	85	3	replace
206	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  /  weights.length);  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  (dev  /  weights.length);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev  *  (dev  /  weights.length);	  accum    +=    dev    *    (dev    /    weights);    	compilable	  [FE]  AssertionError  	85	3	replace
207	[BUG]  [BUGGY]  accum  +=  dev  *  (mean  /  weights);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]            AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  (mean  /  weights);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev  *  (mean  /  weights);	  accum    +=    dev    *    (dev    /    weights);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	85	None	replace
208	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum2    +=    dev;    accum2  +=  dev;  accum2  +=  dev;  accum2  +=  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	                accum2        +=        dev;        accum2    +=    dev;    accum2  +=  dev;  accum2  +=  dev;	  	compilable	  [FE]  AssertionError  	39	3	add
209	[BUG]  [BUGGY]          accum2    +=    dev;    accum2  +=  dev;  accum2  +=  dev;  accum2  +=  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum2    +=    dev;    accum2  +=  dev;  accum2  +=  dev;  accum2  +=  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	                accum2        +=        dev;        accum2    +=    dev;    accum2  +=  dev;  accum2  +=  dev;	  	compilable	  [FE]  AssertionError  	39	3	add
210	[BUG]  [BUGGY]          accum2    +=    dev;    accum2  +=  dev;  int  accum2  +=  dev;  accum2  +=  dev;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum2    +=    dev;    accum2  +=  dev;  int  accum2  +=  dev;  accum2  +=  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	                accum2        +=        dev;        accum2    +=    dev;    int  accum2  +=  dev;  accum2  +=  dev;	  	non-compiled	[CE]  ';'  expected	39	None	add
211	[BUG]  [BUGGY]          accum2    +=    dev;    accum2  +=  dev;  Accum2  +=  dev;  accum2  +=  dev;  [CE]  cannot  find  symbol  Accum2  [FE]        AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum2    +=    dev;    accum2  +=  dev;  Accum2  +=  dev;  accum2  +=  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	                accum2        +=        dev;        accum2    +=    dev;    Accum2  +=  dev;  accum2  +=  dev;	  	non-compiled	[CE]  cannot  find  symbol  Accum2	39	None	add
212	[BUG]  [BUGGY]          accum2    +=    dev;    accum2  +=  dev;  accum2  +=  DEV;  accum2  +=  dev;  [CE]  cannot  find  symbol  DEV  [FE]          AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum2    +=    dev;    accum2  +=  dev;  accum2  +=  DEV;  accum2  +=  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	                accum2        +=        dev;        accum2    +=    dev;    accum2  +=  DEV;  accum2  +=  dev;	  	non-compiled	[CE]  cannot  find  symbol  DEV	39	None	add
213	[BUG]  [BUGGY]  accum  +=  dev  *  values[i];  Accum  +=  dev  *  weights[i];  [CE]  cannot  find  symbol  Accum  [FE]                AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  values[i];  Accum  +=  dev  *  weights[i];  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev  *  values[i];  Accum  +=  dev  *  weights[i];	  accum    +=    dev    *    weights[i];    Accum    +=    dev    *    weights[i];    	non-compiled	[CE]  cannot  find  symbol  Accum	49	None	replace
214	[BUG]  [BUGGY]  accum  +=  values[i]  *  (dev  *  DEV);  [CE]  cannot  find  symbol  DEV  [FE]              AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  values[i]  *  (dev  *  DEV);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  values[i]  *  (dev  *  DEV);	          accum    +=    values[i]    *    (dev    *    dev);    accum    +=    values[i]    *    (dev    *    DEV);    	non-compiled	[CE]  cannot  find  symbol  DEV	36	None	replace
215	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  values[i]  *  (dev  *  mean);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum  +=  values[i]  *  (dev  *  mean);	          accum    +=    values[i]    *    (dev    *    dev);    accum    +=    values[i]    *    (dev    *    DEV);    	compilable	  [FE]  AssertionError  	36	3	replace
216	[BUG]  [BUGGY]  accum  +=  values[i]  *  (dev  *  mean);  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  values[i]  *  (dev  *  mean);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  values[i]  *  (dev  *  mean);	          accum    +=    values[i]    *    (dev    *    dev);    accum    +=    values[i]    *    (dev    *    DEV);    	compilable	  [FE]  AssertionError  	36	3	replace
217	[BUG]  [BUGGY]  Accum  +=  values[i]  *  dev;  [CE]  cannot  find  symbol  Accum  [FE]            AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  Accum  +=  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	Accum  +=  values[i]  *  dev;	          accum    +=    values[i]    *    dev;    Accum    +=    values[i]    *    dev;    	non-compiled	[CE]  cannot  find  symbol  Accum	63	None	replace
218	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  dev  *  dev;  accum2  +=  dev  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum2    +=    dev    *    dev;    accum2  +=  dev  *  dev;	  	compilable	  [FE]  AssertionError  	1	3	add
219	[BUG]  [BUGGY]  accum2  +=  dev  *  dev;  accum2  +=  dev  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  dev  *  dev;  accum2  +=  dev  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    +=    dev    *    dev;    accum2  +=  dev  *  dev;	  	compilable	  [FE]  AssertionError  	1	3	add
220	[BUG]  [BUGGY]  accum2  +=  dev  *  dev;  int  accum2  +=  dev  *  dev;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  dev  *  dev;  int  accum2  +=  dev  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    +=    dev    *    dev;    int  accum2  +=  dev  *  dev;	  	non-compiled	[CE]  ';'  expected	1	None	add
221	[BUG]  [BUGGY]  accum2  +=  dev  *  dev;  accum2  +=  dev  *  DEv;  [CE]  cannot  find  symbol  DEv  [FE]        AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  dev  *  dev;  accum2  +=  dev  *  DEv;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    +=    dev    *    dev;    accum2  +=  dev  *  DEv;	  	non-compiled	[CE]  cannot  find  symbol  DEv	1	None	add
222	[BUG]  [BUGGY]  accum2  +=  dev  *  dev;  accum2  +=  dev  *  DEV;  [CE]  cannot  find  symbol  DEV  [FE]          AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  dev  *  dev;  accum2  +=  dev  *  DEV;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    +=    dev    *    dev;    accum2  +=  dev  *  DEV;	  	non-compiled	[CE]  cannot  find  symbol  DEV	1	None	add
223	[BUG]  [BUGGY]  accum  +=  weights[i]  *  (dev  /  dev;  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  weights[i]  *  (dev  /  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  weights[i]  *  (dev  /  dev;	  accum    +=    weights[i]    *    (dev    /    dev);    accum    +=    weights[i]    *    (dev    /    dev;    	non-compiled	[CE]  ')'  expected	73	None	replace
224	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  -=  dev  +  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum2  -=  dev  +  mean;	  accum2    -=    dev;    	compilable	  [FE]  AssertionError  	6	3	replace
225	[BUG]  [BUGGY]  accum2  -=  dev  +  mean;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  -=  dev  +  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2  -=  dev  +  mean;	  accum2    -=    dev;    	compilable	  [FE]  AssertionError  	6	3	replace
226	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  -=  dev  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum2  -=  dev  +  1;	  accum2    -=    dev;    	compilable	  [FE]  AssertionError  	6	3	replace
227	[BUG]  [BUGGY]  accum2  -=  dev  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  -=  dev  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2  -=  dev  +  1;	  accum2    -=    dev;    	compilable	  [FE]  AssertionError  	6	3	replace
228	[BUG]  [BUGGY]  int  dev  =  weights[i]  *  mean;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  int  dev  =  weights[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	int  dev  =  weights[i]  *  mean;	  int    dev    =    weights[i]    /    mean;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	58	None	replace
229	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  (mean  /  weights[i]);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum  +=  dev  *  (mean  /  weights[i]);	  accum    +=    dev    *    (dev    /    weights[i]);    	compilable	  [FE]  AssertionError  	8	3	replace
230	[BUG]  [BUGGY]  accum  +=  dev  *  (mean  /  weights[i]);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  (mean  /  weights[i]);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev  *  (mean  /  weights[i]);	  accum    +=    dev    *    (dev    /    weights[i]);    	compilable	  [FE]  AssertionError  	8	3	replace
231	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  (values[i]  /  dev);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum  +=  dev  *  (values[i]  /  dev);	  accum    +=    dev    *    (dev    /    weights[i]);    	compilable	  [FE]  AssertionError  	8	3	replace
232	[BUG]  [BUGGY]  accum  +=  dev  *  (values[i]  /  dev);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  (values[i]  /  dev);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev  *  (values[i]  /  dev);	  accum    +=    dev    *    (dev    /    weights[i]);    	compilable	  [FE]  AssertionError  	8	3	replace
233	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  /  mean;  accum  +=  dev  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum    +=    dev    /    mean;    accum  +=  dev  /  mean;	  	compilable	  [FE]  AssertionError  	102	3	add
234	[BUG]  [BUGGY]  accum  +=  dev  /  mean;  accum  +=  dev  /  mean;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  /  mean;  accum  +=  dev  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    dev    /    mean;    accum  +=  dev  /  mean;	  	compilable	  [FE]  AssertionError  	102	3	add
235	[BUG]  [BUGGY]  accum  +=  dev  /  mean;  int  accum  +=  dev  /  mean;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  /  mean;  int  accum  +=  dev  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    dev    /    mean;    int  accum  +=  dev  /  mean;	  	non-compiled	[CE]  ';'  expected	102	None	add
236	[BUG]  [BUGGY]  accum  +=  dev  /  mean;  Accum  +=  dev  /  mean;  [CE]  cannot  find  symbol  Accum  [FE]        AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  /  mean;  Accum  +=  dev  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    dev    /    mean;    Accum  +=  dev  /  mean;	  	non-compiled	[CE]  cannot  find  symbol  Accum	102	None	add
237	[BUG]  [BUGGY]  accum  +=  dev  /  mean;  accum  +=  DEv  /  mean;  [CE]  cannot  find  symbol  DEv  [FE]          AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  /  mean;  accum  +=  DEv  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    dev    /    mean;    accum  +=  DEv  /  mean;	  	non-compiled	[CE]  cannot  find  symbol  DEv	102	None	add
238	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum    +=    values[i]    *    dev;    accum  +=  weights[i]  *  dev;  accum  +=  values[i]  *  dev;  accum  +=  weights[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	                accum        +=        values[i]        *        dev;        accum    +=    weights[i]    *    dev;    accum  +=  values[i]  *  dev;  accum  +=  weights[i]  *  dev;	  	compilable	  [FE]  AssertionError  	61	3	add
239	[BUG]  [BUGGY]          accum    +=    values[i]    *    dev;    accum  +=  weights[i]  *  dev;  accum  +=  values[i]  *  dev;  accum  +=  weights[i]  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum    +=    values[i]    *    dev;    accum  +=  weights[i]  *  dev;  accum  +=  values[i]  *  dev;  accum  +=  weights[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	                accum        +=        values[i]        *        dev;        accum    +=    weights[i]    *    dev;    accum  +=  values[i]  *  dev;  accum  +=  weights[i]  *  dev;	  	compilable	  [FE]  AssertionError  	61	3	add
240	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum    +=    values[i]    *    dev;    accum  +=  weights[i]  *  dev;  accum  +=  weights[i]  *  dev;  accum  +=  weights[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	                accum        +=        values[i]        *        dev;        accum    +=    weights[i]    *    dev;    accum  +=  weights[i]  *  dev;  accum  +=  weights[i]  *  dev;	  	compilable	  [FE]  AssertionError  	61	3	add
241	[BUG]  [BUGGY]          accum    +=    values[i]    *    dev;    accum  +=  weights[i]  *  dev;  accum  +=  weights[i]  *  dev;  accum  +=  weights[i]  *  dev;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum    +=    values[i]    *    dev;    accum  +=  weights[i]  *  dev;  accum  +=  weights[i]  *  dev;  accum  +=  weights[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	                accum        +=        values[i]        *        dev;        accum    +=    weights[i]    *    dev;    accum  +=  weights[i]  *  dev;  accum  +=  weights[i]  *  dev;	  	compilable	  [FE]  AssertionError  	61	3	add
242	[BUG]  [BUGGY]          accum    +=    values[i]    *    dev;    accum  +=  weights[i]  *  dev;  Accum  +=  values[i]  *  dev;  accum  +=  weights[i]  *  dev;  [CE]  cannot  find  symbol  Accum  [FE]        AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum    +=    values[i]    *    dev;    accum  +=  weights[i]  *  dev;  Accum  +=  values[i]  *  dev;  accum  +=  weights[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	                accum        +=        values[i]        *        dev;        accum    +=    weights[i]    *    dev;    Accum  +=  values[i]  *  dev;  accum  +=  weights[i]  *  dev;	  	non-compiled	[CE]  cannot  find  symbol  Accum	61	None	add
243	[BUG]  [BUGGY]          accum    +=    values[i]    *    dev;    accum  +=  weights[i]  *  dev;  accum  +=  values[i]  *  dev;  accum  +=  poids[i]  *  dev;  [CE]  cannot  find  symbol  poids  [FE]          AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum    +=    values[i]    *    dev;    accum  +=  weights[i]  *  dev;  accum  +=  values[i]  *  dev;  accum  +=  poids[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	                accum        +=        values[i]        *        dev;        accum    +=    weights[i]    *    dev;    accum  +=  values[i]  *  dev;  accum  +=  poids[i]  *  dev;	  	non-compiled	[CE]  cannot  find  symbol  poids	61	None	add
244	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  accum2;  accum  +=  dev  *  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum    +=    dev    *    accum2;    accum  +=  dev  *  accum2;	  	compilable	  [FE]  AssertionError  	77	3	add
245	[BUG]  [BUGGY]  accum  +=  dev  *  accum2;  accum  +=  dev  *  accum2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  accum2;  accum  +=  dev  *  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    dev    *    accum2;    accum  +=  dev  *  accum2;	  	compilable	  [FE]  AssertionError  	77	3	add
246	[BUG]  [BUGGY]  accum  +=  dev  *  accum2;  Accum  +=  dev  *  accum2;  [CE]  cannot  find  symbol  Accum  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  accum2;  Accum  +=  dev  *  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    dev    *    accum2;    Accum  +=  dev  *  accum2;	  	non-compiled	[CE]  cannot  find  symbol  Accum	77	None	add
247	[BUG]  [BUGGY]  accum  +=  dev  *  accum2;  int  accum  +=  dev  *  accum2;  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  accum2;  int  accum  +=  dev  *  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    dev    *    accum2;    int  accum  +=  dev  *  accum2;	  	non-compiled	[CE]  ';'  expected	77	None	add
248	[BUG]  [BUGGY]  accum  +=  dev  *  accum2;  accum  +=  DEV  *  accum2;  [CE]  cannot  find  symbol  DEV  [FE]          AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  accum2;  accum  +=  DEV  *  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    dev    *    accum2;    accum  +=  DEV  *  accum2;	  	non-compiled	[CE]  cannot  find  symbol  DEV	77	None	add
249	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  values[i]  *  mean;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum  +=  values[i]  *  mean;	  accum    +=    weights[i]    *    mean;    	compilable	  [FE]  AssertionError  	68	3	replace
250	[BUG]  [BUGGY]  accum  +=  values[i]  *  mean;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  values[i]  *  mean;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  values[i]  *  mean;	  accum    +=    weights[i]    *    mean;    	compilable	  [FE]  AssertionError  	68	3	replace
251	[BUG]  [BUGGY]  Accum  +=  values[i]  *  (dev  *  dev);  [CE]  cannot  find  symbol  Accum  [FE]            AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  Accum  +=  values[i]  *  (dev  *  dev);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	Accum  +=  values[i]  *  (dev  *  dev);	          accum    +=    values[i]    *    (dev    *    dev);    Accum    +=    values[i]    *    (dev    *    dev);    	non-compiled	[CE]  cannot  find  symbol  Accum	35	None	replace
252	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum    +=    dev    *    weights[i];    accum  +=  dev  *  weights[i];  accum  +=  dev  *  weights[i];  accum  +=  dev  *  weights[i];  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum        +=        dev        *        weights[i];        accum    +=    dev    *    weights[i];    accum  +=  dev  *  weights[i];  accum  +=  dev  *  weights[i];	  	compilable	  [FE]  AssertionError  	44	1	add
253	[BUG]  [BUGGY]  accum    +=    dev    *    weights[i];    accum  +=  dev  *  weights[i];  accum  +=  dev  *  weights[i];  accum  +=  dev  *  weights[i];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum    +=    dev    *    weights[i];    accum  +=  dev  *  weights[i];  accum  +=  dev  *  weights[i];  accum  +=  dev  *  weights[i];  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum        +=        dev        *        weights[i];        accum    +=    dev    *    weights[i];    accum  +=  dev  *  weights[i];  accum  +=  dev  *  weights[i];	  	compilable	  [FE]  AssertionError  	44	1	add
254	[BUG]  [BUGGY]  accum    +=    dev    *    weights[i];    accum  +=  dev  *  weights[i];  double  accum  +=  dev  *  weights[i];  accum  +=  dev  *  weights[i];  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum    +=    dev    *    weights[i];    accum  +=  dev  *  weights[i];  double  accum  +=  dev  *  weights[i];  accum  +=  dev  *  weights[i];  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum        +=        dev        *        weights[i];        accum    +=    dev    *    weights[i];    double  accum  +=  dev  *  weights[i];  accum  +=  dev  *  weights[i];	  	non-compiled	[CE]  ';'  expected	44	None	add
255	[BUG]  [BUGGY]  accum    +=    dev    *    weights[i];    accum  +=  dev  *  weights[i];  Accum  +=  dev  *  weights[i];  accum  +=  dev  *  weights[i];  [CE]  cannot  find  symbol  Accum  [FE]        AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum    +=    dev    *    weights[i];    accum  +=  dev  *  weights[i];  Accum  +=  dev  *  weights[i];  accum  +=  dev  *  weights[i];  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum        +=        dev        *        weights[i];        accum    +=    dev    *    weights[i];    Accum  +=  dev  *  weights[i];  accum  +=  dev  *  weights[i];	  	non-compiled	[CE]  cannot  find  symbol  Accum	44	None	add
256	[BUG]  [BUGGY]  accum    +=    dev    *    weights[i];    accum  +=  dev  *  weights[i];  accum  +=  dev  *  Weights[i];  accum  +=  dev  *  weights[i];  [CE]  cannot  find  symbol  Weights  [FE]          AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum    +=    dev    *    weights[i];    accum  +=  dev  *  weights[i];  accum  +=  dev  *  Weights[i];  accum  +=  dev  *  weights[i];  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum        +=        dev        *        weights[i];        accum    +=    dev    *    weights[i];    accum  +=  dev  *  Weights[i];  accum  +=  dev  *  weights[i];	  	non-compiled	[CE]  cannot  find  symbol  Weights	44	None	add
257	[BUG]  [BUGGY]  accum    +=    dev    *    weights[i];    accum  +=  dev  *  weights[i];  accum  +=  dev  *  weights[i];  accum  +=  dev  *  poids[i];  [CE]  cannot  find  symbol  poids  [FE]            AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum    +=    dev    *    weights[i];    accum  +=  dev  *  weights[i];  accum  +=  dev  *  weights[i];  accum  +=  dev  *  poids[i];  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum        +=        dev        *        weights[i];        accum    +=    dev    *    weights[i];    accum  +=  dev  *  weights[i];  accum  +=  dev  *  poids[i];	  	non-compiled	[CE]  cannot  find  symbol  poids	44	None	add
258	[BUG]  [BUGGY]  double  dev  =  values[i]  -  begin;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  dev  =  values[i]  -  begin;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  dev  =  values[i]  -  begin;	  int    dev    =    values[i]    -    begin;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	111	None	replace
259	[BUG]  [BUGGY]  int  dev  =  values[i]  /  begin;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  int  dev  =  values[i]  /  begin;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	int  dev  =  values[i]  /  begin;	  int    dev    =    values[i]    -    begin;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	111	None	replace
260	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum    +=    values[i]    *    (dev    *    dev);    accum  +=  values[i]  *  (dev  *  dev);  accum  +=  values[i]  *  (dev  *  dev);  accum  +=  values[i]  *  (dev  *  dev);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	                accum        +=        values[i]        *        (dev        *        dev);        accum    +=    values[i]    *    (dev    *    dev);    accum  +=  values[i]  *  (dev  *  dev);  accum  +=  values[i]  *  (dev  *  dev);	  	compilable	  [FE]  AssertionError  	31	3	add
261	[BUG]  [BUGGY]          accum    +=    values[i]    *    (dev    *    dev);    accum  +=  values[i]  *  (dev  *  dev);  accum  +=  values[i]  *  (dev  *  dev);  accum  +=  values[i]  *  (dev  *  dev);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum    +=    values[i]    *    (dev    *    dev);    accum  +=  values[i]  *  (dev  *  dev);  accum  +=  values[i]  *  (dev  *  dev);  accum  +=  values[i]  *  (dev  *  dev);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	                accum        +=        values[i]        *        (dev        *        dev);        accum    +=    values[i]    *    (dev    *    dev);    accum  +=  values[i]  *  (dev  *  dev);  accum  +=  values[i]  *  (dev  *  dev);	  	compilable	  [FE]  AssertionError  	31	3	add
262	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum    +=    values[i]    *    (dev    *    dev);    accum  +=  values[i]  *  (dev  *  dev);  accum  +=  weights[i]  *  (dev  *  dev);  accum  +=  values[i]  *  (dev  *  dev);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	                accum        +=        values[i]        *        (dev        *        dev);        accum    +=    values[i]    *    (dev    *    dev);    accum  +=  weights[i]  *  (dev  *  dev);  accum  +=  values[i]  *  (dev  *  dev);	  	compilable	  [FE]  AssertionError  	31	3	add
263	[BUG]  [BUGGY]          accum    +=    values[i]    *    (dev    *    dev);    accum  +=  values[i]  *  (dev  *  dev);  accum  +=  weights[i]  *  (dev  *  dev);  accum  +=  values[i]  *  (dev  *  dev);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum    +=    values[i]    *    (dev    *    dev);    accum  +=  values[i]  *  (dev  *  dev);  accum  +=  weights[i]  *  (dev  *  dev);  accum  +=  values[i]  *  (dev  *  dev);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	                accum        +=        values[i]        *        (dev        *        dev);        accum    +=    values[i]    *    (dev    *    dev);    accum  +=  weights[i]  *  (dev  *  dev);  accum  +=  values[i]  *  (dev  *  dev);	  	compilable	  [FE]  AssertionError  	31	3	add
264	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  (dev  /  weights[i]);  accum  +=  dev  *  (dev  /  weights[i]);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum    +=    dev    *    (dev    /    weights[i]);    accum  +=  dev  *  (dev  /  weights[i]);	  	compilable	  [FE]  AssertionError  	7	3	add
265	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  /  weights[i]);  accum  +=  dev  *  (dev  /  weights[i]);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  (dev  /  weights[i]);  accum  +=  dev  *  (dev  /  weights[i]);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    dev    *    (dev    /    weights[i]);    accum  +=  dev  *  (dev  /  weights[i]);	  	compilable	  [FE]  AssertionError  	7	3	add
266	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  /  weights[i]);  int  accum  +=  dev  *  (dev  /  weights[i]);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  (dev  /  weights[i]);  int  accum  +=  dev  *  (dev  /  weights[i]);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    dev    *    (dev    /    weights[i]);    int  accum  +=  dev  *  (dev  /  weights[i]);	  	non-compiled	[CE]  ';'  expected	7	None	add
267	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  /  weights[i]);  accum  +=  dev  *  (dev  /  Weights[i]);  [CE]  cannot  find  symbol  Weights  [FE]        AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  (dev  /  weights[i]);  accum  +=  dev  *  (dev  /  Weights[i]);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    dev    *    (dev    /    weights[i]);    accum  +=  dev  *  (dev  /  Weights[i]);	  	non-compiled	[CE]  cannot  find  symbol  Weights	7	None	add
268	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  /  weights[i]);  Accum  +=  dev  *  (dev  /  weights[i]);  [CE]  cannot  find  symbol  Accum  [FE]          AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  (dev  /  weights[i]);  Accum  +=  dev  *  (dev  /  weights[i]);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    dev    *    (dev    /    weights[i]);    Accum  +=  dev  *  (dev  /  weights[i]);	  	non-compiled	[CE]  cannot  find  symbol  Accum	7	None	add
269	[BUG]  [BUGGY]  int  dev  =  values[i]  -  begin  +  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  int  dev  =  values[i]  -  begin  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	int  dev  =  values[i]  -  begin  +  1;	  int    dev    =    values[i]    -    mean    +    1;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	110	None	replace
270	[BUG]  [BUGGY]  double  dev  =  values[i]  /  mean.length;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  dev  =  values[i]  /  mean.length;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  dev  =  values[i]  /  mean.length;	  double    dev    =    values[i]    /    length;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	96	None	replace
271	[BUG]  [BUGGY]  double  dev  =  values[i]  *  length;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                    AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  dev  =  values[i]  *  length;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  dev  =  values[i]  *  length;	  double    dev    =    values[i]    /    length;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	96	None	replace
272	[BUG]  [BUGGY]  accum  +=  dev  *  dev;  int  dev  =  values[i]  -  mean;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  dev;  int  dev  =  values[i]  -  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    dev    *    dev;    int  dev  =  values[i]  -  mean;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	75	None	add
273	[BUG]  [BUGGY]  accum  +=  dev  *  dev;  accum  +=  dev  *  DEV;  [CE]  cannot  find  symbol  DEV  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  dev;  accum  +=  dev  *  DEV;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    dev    *    dev;    accum  +=  dev  *  DEV;	  	non-compiled	[CE]  cannot  find  symbol  DEV	75	None	add
274	[BUG]  [BUGGY]  double  dev  =  values[i]  /  mean  +  1.0;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  dev  =  values[i]  /  mean  +  1.0;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  dev  =  values[i]  /  mean  +  1.0;	  double    dev    =    values[i]    /    mean    +    1;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	28	None	replace
275	[BUG]  [BUGGY]  accum    +=    dev    *    weights[i];    accum  +=  dev  *  weights[i];  int  accum  +=  dev  *  weights[i];  accum  +=  dev  *  weights[i];  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum    +=    dev    *    weights[i];    accum  +=  dev  *  weights[i];  int  accum  +=  dev  *  weights[i];  accum  +=  dev  *  weights[i];  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum        +=        dev        *        weights[i];        accum    +=    dev    *    weights[i];    int  accum  +=  dev  *  weights[i];  accum  +=  dev  *  weights[i];	  	non-compiled	[CE]  ';'  expected	44	None	add
276	[BUG]  [BUGGY]  accum  +=  weights[i]  *  mean;  accum  +=  poids[i]  *  mean;  [CE]  cannot  find  symbol  poids  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  weights[i]  *  mean;  accum  +=  poids[i]  *  mean;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    weights[i]    *    mean;    accum  +=  poids[i]  *  mean;	  	non-compiled	[CE]  cannot  find  symbol  poids	67	None	add
277	[BUG]  [BUGGY]  Accum  +=  dev  *  weights[i];  [CE]  cannot  find  symbol  Accum  [FE]                AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  Accum  +=  dev  *  weights[i];  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	Accum  +=  dev  *  weights[i];	  accum    +=    dev    *    weights[i];    Accum    +=    dev    *    weights[i];    	non-compiled	[CE]  cannot  find  symbol  Accum	49	None	replace
278	[BUG]  [BUGGY]          accum    +=    values[i]    *    (dev    *    dev);    accum  +=  weights[i]  *  (dev  *  dev);  accum  +=  values[i]  *  (dev  *  dev);  accum  +=  poids[i]  *  (dev  *  dev);  [CE]  cannot  find  symbol  poids  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum    +=    values[i]    *    (dev    *    dev);    accum  +=  weights[i]  *  (dev  *  dev);  accum  +=  values[i]  *  (dev  *  dev);  accum  +=  poids[i]  *  (dev  *  dev);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	                accum        +=        values[i]        *        (dev        *        dev);        accum    +=    weights[i]    *    (dev    *    dev);    accum  +=  values[i]  *  (dev  *  dev);  accum  +=  poids[i]  *  (dev  *  dev);	  	non-compiled	[CE]  cannot  find  symbol  poids	33	None	add
279	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  dev  *  accum2  +  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum2  +=  dev  *  accum2  +  mean;	  accum2    +=    dev    *    accum2;    	compilable	  [FE]  AssertionError  	18	3	replace
280	[BUG]  [BUGGY]  accum2  +=  dev  *  accum2  +  mean;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  dev  *  accum2  +  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2  +=  dev  *  accum2  +  mean;	  accum2    +=    dev    *    accum2;    	compilable	  [FE]  AssertionError  	18	3	replace
281	[BUG]  [BUGGY]  int  accum  +=  weights[i]  *  dev2;  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  int  accum  +=  weights[i]  *  dev2;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	int  accum  +=  weights[i]  *  dev2;	  accum    +=    weights[i]    *    dev;    int    accum    +=    weights[i]    *    dev;    	non-compiled	[CE]  ';'  expected	11	None	replace
282	[BUG]  [BUGGY]  accum  +=  dev  *  mean2;  [CE]  cannot  find  symbol  mean2  [FE]              AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  mean2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev  *  mean2;	          accum    +=    dev    *    mean;    double    accum    +=    dev    *    mean;    	non-compiled	[CE]  cannot  find  symbol  mean2	25	None	replace
283	[BUG]  [BUGGY]  accum2  +=  dev  *  dev;  accum2  +=  DEV  *  dev;  [CE]  cannot  find  symbol  DEV  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  dev  *  dev;  accum2  +=  DEV  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    +=    dev    *    dev;    accum2  +=  DEV  *  dev;	  	non-compiled	[CE]  cannot  find  symbol  DEV	1	None	add
284	[BUG]  [BUGGY]  double  dev  =  values[i]  *  accum2  +  mean;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  dev  =  values[i]  *  accum2  +  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  dev  =  values[i]  *  accum2  +  mean;	  double    dev    =    values[i]    *    accum2;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	38	None	replace
285	[BUG]  [BUGGY]  accum    +=    weights[i]    *    dev;    accum  +=  weights[i]  *  dev;  double  accum  +=  weights[i]  *  dev;  accum  +=  weights[i]  *  dev;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum    +=    weights[i]    *    dev;    accum  +=  weights[i]  *  dev;  double  accum  +=  weights[i]  *  dev;  accum  +=  weights[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum        +=        weights[i]        *        dev;        accum    +=    weights[i]    *    dev;    double  accum  +=  weights[i]  *  dev;  accum  +=  weights[i]  *  dev;	  	non-compiled	[CE]  ';'  expected	9	None	add
286	[BUG]  [BUGGY]  accum    +=    weights[i]    *    dev;    accum  +=  weights[i]  *  dev;  accum  +=  weights[i]  *  DEV;  accum  +=  weights[i]  *  dev;  [CE]  cannot  find  symbol  DEV  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum    +=    weights[i]    *    dev;    accum  +=  weights[i]  *  dev;  accum  +=  weights[i]  *  DEV;  accum  +=  weights[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum        +=        weights[i]        *        dev;        accum    +=    weights[i]    *    dev;    accum  +=  weights[i]  *  DEV;  accum  +=  weights[i]  *  dev;	  	non-compiled	[CE]  cannot  find  symbol  DEV	9	None	add
287	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  /=  dev  +  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum2  /=  dev  +  mean;	  accum2    /=    dev;    	compilable	  [FE]  AssertionError  	4	3	replace
288	[BUG]  [BUGGY]  accum2  /=  dev  +  mean;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  /=  dev  +  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2  /=  dev  +  mean;	  accum2    /=    dev;    	compilable	  [FE]  AssertionError  	4	3	replace
289	[BUG]  [BUGGY]  accum  +=  weights[i]  /  dev;  accum  +=  pounds[i]  /  dev;  [CE]  cannot  find  symbol  pounds  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  weights[i]  /  dev;  accum  +=  pounds[i]  /  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    weights[i]    /    dev;    accum  +=  pounds[i]  /  dev;	  	non-compiled	[CE]  cannot  find  symbol  pounds	106	None	add
290	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  values[i]  *  (dev  *  var);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum  +=  values[i]  *  (dev  *  var);	  accum    +=    values[i]    *    (dev    *    dev2);    	compilable	  [FE]  AssertionError  	91	2	replace
291	[BUG]  [BUGGY]  accum  +=  values[i]  *  (dev  *  var);  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  values[i]  *  (dev  *  var);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  values[i]  *  (dev  *  var);	  accum    +=    values[i]    *    (dev    *    dev2);    	compilable	  [FE]  AssertionError  	91	2	replace
292	[BUG]  [BUGGY]  accum2  -=  dev  *  dev;  double  accum2  -=  dev  *  dev;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  -=  dev  *  dev;  double  accum2  -=  dev  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    -=    dev    *    dev;    double  accum2  -=  dev  *  dev;	  	non-compiled	[CE]  ';'  expected	97	None	add
293	[BUG]  [BUGGY]  accum2  -=  dev  *  dev;  int  dev2  -=  dev  *  dev;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  -=  dev  *  dev;  int  dev2  -=  dev  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    -=    dev    *    dev;    int  dev2  -=  dev  *  dev;	  	non-compiled	[CE]  ';'  expected	97	None	add
294	[BUG]  [BUGGY]  double  dev  =  values[i]  -  accum2  +  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  dev  =  values[i]  -  accum2  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  dev  =  values[i]  -  accum2  +  1;	  double    dev    =    values[i]    -    mean    +    1;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	100	None	replace
295	[BUG]  [BUGGY]  Accum2  +=  dev  *  mean;  [CE]  cannot  find  symbol  Accum2  [FE]            AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  Accum2  +=  dev  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	Accum2  +=  dev  *  mean;	          accum2    +=    dev    *    mean;    Accum2    +=    dev    *    mean;    	non-compiled	[CE]  cannot  find  symbol  Accum2	53	None	replace
296	[BUG]  [BUGGY]          accum2    +=    dev;    accum2  +=  dev;  double  accum2  +=  dev;  accum2  +=  dev;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum2    +=    dev;    accum2  +=  dev;  double  accum2  +=  dev;  accum2  +=  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	                accum2        +=        dev;        accum2    +=    dev;    double  accum2  +=  dev;  accum2  +=  dev;	  	non-compiled	[CE]  ';'  expected	39	None	add
297	[BUG]  [BUGGY]          accum2    +=    dev;    accum2  +=  dev;  accum2  +=  dev;  accum2  +=  DEV;  [CE]  cannot  find  symbol  DEV  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum2    +=    dev;    accum2  +=  dev;  accum2  +=  dev;  accum2  +=  DEV;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	                accum2        +=        dev;        accum2    +=    dev;    accum2  +=  dev;  accum2  +=  DEV;	  	non-compiled	[CE]  cannot  find  symbol  DEV	39	None	add
298	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  values[i]  -  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum  +=  dev  *  values[i]  -  mean;	  accum    +=    dev    *    values[i];    	compilable	  [FE]  AssertionError  	81	3	replace
299	[BUG]  [BUGGY]  accum  +=  dev  *  values[i]  -  mean;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  values[i]  -  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev  *  values[i]  -  mean;	  accum    +=    dev    *    values[i];    	compilable	  [FE]  AssertionError  	81	3	replace
300	[BUG]  [BUGGY]          accum2    +=    dev    *    mean;    accum2  +=  dev  *  mean;  accum2  +=  dev  *  mean;  accum2  +=  DEV  *  mean;  [CE]  cannot  find  symbol  DEV  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum2    +=    dev    *    mean;    accum2  +=  dev  *  mean;  accum2  +=  dev  *  mean;  accum2  +=  DEV  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	                accum2        +=        dev        *        mean;        accum2    +=    dev    *    mean;    accum2  +=  dev  *  mean;  accum2  +=  DEV  *  mean;	  	non-compiled	[CE]  cannot  find  symbol  DEV	50	None	add
301	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  (values[i]  /  weights[i]);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum  +=  dev  *  (values[i]  /  weights[i]);	  accum    +=    dev    *    (dev    /    weights[i]);    	compilable	  [FE]  AssertionError  	8	3	replace
302	[BUG]  [BUGGY]  accum  +=  dev  *  (values[i]  /  weights[i]);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  (values[i]  /  weights[i]);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev  *  (values[i]  /  weights[i]);	  accum    +=    dev    *    (dev    /    weights[i]);    	compilable	  [FE]  AssertionError  	8	3	replace
303	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  (values[i]);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum  +=  dev  *  (values[i]);	  accum    +=    dev    *    (dev    /    weights[i]);    	compilable	  [FE]  AssertionError  	8	3	replace
304	[BUG]  [BUGGY]  accum  +=  dev  *  (values[i]);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  (values[i]);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev  *  (values[i]);	  accum    +=    dev    *    (dev    /    weights[i]);    	compilable	  [FE]  AssertionError  	8	3	replace
305	[BUG]  [BUGGY]  double  accum2  +=  dev  *  mean;  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  accum2  +=  dev  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  accum2  +=  dev  *  mean;	          accum2    +=    dev    *    mean;    double    accum2    +=    dev    *    mean;    	non-compiled	[CE]  ';'  expected	99	None	replace
306	[BUG]  [BUGGY]  accum2  -=  dev;  int  dev2  -=  dev;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  -=  dev;  int  dev2  -=  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    -=    dev;    int  dev2  -=  dev;	  	non-compiled	[CE]  ';'  expected	5	None	add
307	[BUG]  [BUGGY]  accum2  -=  dev;  double  accum2  -=  dev;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  -=  dev;  double  accum2  -=  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    -=    dev;    double  accum2  -=  dev;	  	non-compiled	[CE]  ';'  expected	5	None	add
308	[BUG]  [BUGGY]  accum    +=    weights[i]    *    (dev    /    dev);    accum  +=  weights[i]  *  (dev  /  dev);  accum  +=  weights[i]  *  (dev  /  dev);  accum  +=  poids[i]  *  (dev  /  dev);  [CE]  cannot  find  symbol  poids  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum    +=    weights[i]    *    (dev    /    dev);    accum  +=  weights[i]  *  (dev  /  dev);  accum  +=  weights[i]  *  (dev  /  dev);  accum  +=  poids[i]  *  (dev  /  dev);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum        +=        weights[i]        *        (dev        /        dev);        accum    +=    weights[i]    *    (dev    /    dev);    accum  +=  weights[i]  *  (dev  /  dev);  accum  +=  poids[i]  *  (dev  /  dev);	  	non-compiled	[CE]  cannot  find  symbol  poids	69	None	add
309	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  accum2  +  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum  +=  dev  *  accum2  +  mean;	  accum    +=    dev    *    accum2;    	compilable	  [FE]  AssertionError  	78	3	replace
310	[BUG]  [BUGGY]  accum  +=  dev  *  accum2  +  mean;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  accum2  +  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev  *  accum2  +  mean;	  accum    +=    dev    *    accum2;    	compilable	  [FE]  AssertionError  	78	3	replace
311	[BUG]  [BUGGY]  accum  +=  dev  /  weights[i];  accum  +=  DEV  /  weights[i];  [CE]  cannot  find  symbol  DEV  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  /  weights[i];  accum  +=  DEV  /  weights[i];  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    dev    /    weights[i];    accum  +=  DEV  /  weights[i];	  	non-compiled	[CE]  cannot  find  symbol  DEV	104	None	add
312	[BUG]  [BUGGY]  accum    +=    weights[i]    *    dev;    accum  +=  values[i]  *  dev;  double  accum  +=  weights[i]  *  dev;  accum  +=  values[i]  *  dev;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum    +=    weights[i]    *    dev;    accum  +=  values[i]  *  dev;  double  accum  +=  weights[i]  *  dev;  accum  +=  values[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum        +=        weights[i]        *        dev;        accum    +=    values[i]    *    dev;    double  accum  +=  weights[i]  *  dev;  accum  +=  values[i]  *  dev;	  	non-compiled	[CE]  ';'  expected	108	None	add
313	[BUG]  [BUGGY]  accum  +=  dev[i]  /  weights;  [CE]  array  required,  but  double  found  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev[i]  /  weights;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev[i]  /  weights;	  accum    +=    weights[i]    /    dev;    	non-compiled	[CE]  array  required,  but  double  found	107	None	replace
314	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  values[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum2  +=  values[i]  *  dev;	  accum2    +=    weights[i]    *    dev;    	compilable	  [FE]  AssertionError  	66	3	replace
315	[BUG]  [BUGGY]  accum2  +=  values[i]  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  values[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2  +=  values[i]  *  dev;	  accum2    +=    weights[i]    *    dev;    	compilable	  [FE]  AssertionError  	66	3	replace
316	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  -=  weights[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum2  -=  weights[i]  *  dev;	  accum2    +=    weights[i]    *    dev;    	compilable	  [FE]  AssertionError  	66	2	replace
317	[BUG]  [BUGGY]  accum2  -=  weights[i]  *  dev;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  -=  weights[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2  -=  weights[i]  *  dev;	  accum2    +=    weights[i]    *    dev;    	compilable	  [FE]  AssertionError  	66	2	replace
318	[BUG]  [BUGGY]  accum  +=  dev  *  values[i];  accum  +=  dev  *  poids[i];  [CE]  cannot  find  symbol  poids  [FE]        AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  values[i];  accum  +=  dev  *  poids[i];  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev  *  values[i];  accum  +=  dev  *  poids[i];	  accum    +=    dev    *    weights[i];    accum    +=    dev    *    poids[i];    	non-compiled	[CE]  cannot  find  symbol  poids	94	None	replace
319	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  values[i];  accum  +=  dev  *  weights[i];  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum  +=  dev  *  values[i];  accum  +=  dev  *  weights[i];	  accum    +=    dev    *    weights[i];    accum    +=    dev    *    poids[i];    	compilable	  [FE]  AssertionError  	94	3	replace
320	[BUG]  [BUGGY]  accum  +=  dev  *  values[i];  accum  +=  dev  *  weights[i];  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  values[i];  accum  +=  dev  *  weights[i];  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev  *  values[i];  accum  +=  dev  *  weights[i];	  accum    +=    dev    *    weights[i];    accum    +=    dev    *    poids[i];    	compilable	  [FE]  AssertionError  	94	3	replace
321	[BUG]  [BUGGY]  double  dev  =  values[i]  /  mean2  +  length;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                    AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  dev  =  values[i]  /  mean2  +  length;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  dev  =  values[i]  /  mean2  +  length;	  double    dev    =    values[i]    /    mean2;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	29	None	replace
322	[BUG]  [BUGGY]  accum  +=  weights[i]  *  (dev  *  dev);  Accum  +=  values[i]  *  (dev  *  dev);  [CE]  cannot  find  symbol  Accum  [FE]            AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  weights[i]  *  (dev  *  dev);  Accum  +=  values[i]  *  (dev  *  dev);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  weights[i]  *  (dev  *  dev);  Accum  +=  values[i]  *  (dev  *  dev);	          accum    +=    values[i]    *    (dev    *    dev);    Accum    +=    values[i]    *    (dev    *    dev);    	non-compiled	[CE]  cannot  find  symbol  Accum	35	None	replace
323	[BUG]  [BUGGY]  accum  +=  dev  *  values[i];  accum  +=  dev  *  values[i].;  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  values[i];  accum  +=  dev  *  values[i].;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    dev    *    values[i];    accum  +=  dev  *  values[i].;	  	non-compiled	[CE]  <identifier>  expected	80	None	add
324	[BUG]  [BUGGY]  accum  +=  dev  *  weights[i];  accum2  +=  dev  *  Weights[i];  [CE]  cannot  find  symbol  Weights  [FE]              AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  weights[i];  accum2  +=  dev  *  Weights[i];  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev  *  weights[i];  accum2  +=  dev  *  Weights[i];	  accum    +=    dev    *    weights[i];    accum    +=    dev    *    Weights[i];    	non-compiled	[CE]  cannot  find  symbol  Weights	48	None	replace
325	[BUG]  [BUGGY]  accum  +=  weights[i]  *  (dev  /  dev2;  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  weights[i]  *  (dev  /  dev2;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  weights[i]  *  (dev  /  dev2;	  accum    +=    weights[i]    *    (dev    /    dev);    accum    +=    weights[i]    *    (dev    /    dev;    	non-compiled	[CE]  ')'  expected	73	None	replace
326	[BUG]  [BUGGY]  accum  +=  weights[i]  *  (dev  *  dev2);  [CE]  cannot  find  symbol  dev2  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  weights[i]  *  (dev  *  dev2);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  weights[i]  *  (dev  *  dev2);	          accum    +=    values[i]    *    (dev    *    dev);    accum    +=    weights[i]    *    (dev    *    dev);    	non-compiled	[CE]  cannot  find  symbol  dev2	34	None	replace
327	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  var;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum  +=  dev  *  var;	  accum    +=    dev    *    dev2;    	compilable	  [FE]  AssertionError  	79	2	replace
328	[BUG]  [BUGGY]  accum  +=  dev  *  var;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  var;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev  *  var;	  accum    +=    dev    *    dev2;    	compilable	  [FE]  AssertionError  	79	2	replace
329	[BUG]  [BUGGY]  accum  +=  dev  *  (values[i]  /  weights);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]        AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  (values[i]  /  weights);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev  *  (values[i]  /  weights);	  accum    +=    dev    *    (dev    /    weights);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	85	None	replace
330	[BUG]  [BUGGY]  accum  +=  dev  *  (values[i  /  dev);  [CE]  ']'  expected  [FE]          AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  (values[i  /  dev);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev  *  (values[i  /  dev);	  accum    +=    dev    *    (dev    /    weights);    	non-compiled	[CE]  ']'  expected	85	None	replace
331	[BUG]  [BUGGY]  accum  +=  dev  *  mean2;  Accum  +=  dev  *  mean;  [CE]  cannot  find  symbol  mean2  [FE]            AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  mean2;  Accum  +=  dev  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev  *  mean2;  Accum  +=  dev  *  mean;	          accum    +=    dev    *    mean;    Accum    +=    dev    *    mean;    	non-compiled	[CE]  cannot  find  symbol  mean2	24	None	replace
332	[BUG]  [BUGGY]  accum  +=  dev  *  dev2;  Accum  +=  dev  *  mean;  [CE]  cannot  find  symbol  dev2  [FE]              AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  dev2;  Accum  +=  dev  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev  *  dev2;  Accum  +=  dev  *  mean;	          accum    +=    dev    *    mean;    Accum    +=    dev    *    mean;    	non-compiled	[CE]  cannot  find  symbol  dev2	24	None	replace
333	[BUG]  [BUGGY]  accum2  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  DEV;  [CE]  cannot  find  symbol  DEV  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  DEV;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    +=    weights[i]    *    dev;    accum2  +=  weights[i]  *  DEV;	  	non-compiled	[CE]  cannot  find  symbol  DEV	65	None	add
334	[BUG]  [BUGGY]  int  dev  =  values[i]  -  mean2;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  int  dev  =  values[i]  -  mean2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	int  dev  =  values[i]  -  mean2;	          accum    +=    dev    *    mean;    int    dev    =    values[i]    -    mean;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	89	None	replace
335	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  mean  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum  +=  mean  *  dev;	          accum    +=    dev    *    mean;    int    dev    =    values[i]    -    mean;    	compilable	  [FE]  AssertionError  	89	3	replace
336	[BUG]  [BUGGY]  accum  +=  mean  *  dev;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  mean  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  mean  *  dev;	          accum    +=    dev    *    mean;    int    dev    =    values[i]    -    mean;    	compilable	  [FE]  AssertionError  	89	3	replace
337	[BUG]  [BUGGY]          accum    +=    values[i]    *    dev;    accum  +=  values[i]  *  dev;  accum  +=  values[i]  *  dev;  accum  +=  values[i]  *  DEV;  [CE]  cannot  find  symbol  DEV  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum    +=    values[i]    *    dev;    accum  +=  values[i]  *  dev;  accum  +=  values[i]  *  dev;  accum  +=  values[i]  *  DEV;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	                accum        +=        values[i]        *        dev;        accum    +=    values[i]    *    dev;    accum  +=  values[i]  *  dev;  accum  +=  values[i]  *  DEV;	  	non-compiled	[CE]  cannot  find  symbol  DEV	59	None	add
338	[BUG]  [BUGGY]          accum    +=    values[i]    *    dev;    accum  +=  values[i]  *  dev;  double  dev  =  values[i]  *  dev;  accum  +=  values[i]  *  dev;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum    +=    values[i]    *    dev;    accum  +=  values[i]  *  dev;  double  dev  =  values[i]  *  dev;  accum  +=  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	                accum        +=        values[i]        *        dev;        accum    +=    values[i]    *    dev;    double  dev  =  values[i]  *  dev;  accum  +=  values[i]  *  dev;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	59	None	add
339	[BUG]  [BUGGY]  accum  +=  values[i]  *  (dev  /  dev);  accum  +=  values[i]  *  (dev  /  DEV);  [CE]  cannot  find  symbol  DEV  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  values[i]  *  (dev  /  dev);  accum  +=  values[i]  *  (dev  /  DEV);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    values[i]    *    (dev    /    dev);    accum  +=  values[i]  *  (dev  /  DEV);	  	non-compiled	[CE]  cannot  find  symbol  DEV	82	None	add
340	[BUG]  [BUGGY]  double  accum  +=  dev  *  weights[i];  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  accum  +=  dev  *  weights[i];  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  accum  +=  dev  *  weights[i];	  accum    +=    dev    *    weights[i];    double    accum    +=    dev    *    weights[i];    	non-compiled	[CE]  ';'  expected	47	None	replace
341	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  /  values[i];  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum  +=  dev  /  values[i];	  accum    +=    dev    /    weights[i];    	compilable	  [FE]  AssertionError  	105	3	replace
342	[BUG]  [BUGGY]  accum  +=  dev  /  values[i];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  /  values[i];  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev  /  values[i];	  accum    +=    dev    /    weights[i];    	compilable	  [FE]  AssertionError  	105	3	replace
343	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  /  weights);  Accum  +=  weights[i]  *  (dev  /  dev);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]            AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  (dev  /  weights);  Accum  +=  weights[i]  *  (dev  /  dev);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev  *  (dev  /  weights);  Accum  +=  weights[i]  *  (dev  /  dev);	  accum    +=    weights[i]    *    (dev    /    dev);    Accum    +=    weights[i]    *    (dev    /    dev);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	72	None	replace
344	[BUG]  [BUGGY]          accum    +=    values[i]    *    dev;    accum  +=  weights[i]  *  dev;  accum  +=  values[i]  *  DEV;  accum  +=  weights[i]  *  dev;  [CE]  cannot  find  symbol  DEV  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum    +=    values[i]    *    dev;    accum  +=  weights[i]  *  dev;  accum  +=  values[i]  *  DEV;  accum  +=  weights[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	                accum        +=        values[i]        *        dev;        accum    +=    weights[i]    *    dev;    accum  +=  values[i]  *  DEV;  accum  +=  weights[i]  *  dev;	  	non-compiled	[CE]  cannot  find  symbol  DEV	61	None	add
345	[BUG]  [BUGGY]  accum  +=  dev  /  mean;  accum  +=  DEV  /  mean;  [CE]  cannot  find  symbol  DEV  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  /  mean;  accum  +=  DEV  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    dev    /    mean;    accum  +=  DEV  /  mean;	  	non-compiled	[CE]  cannot  find  symbol  DEV	102	None	add
346	[BUG]  [BUGGY]  accum  +=  dev  /  mean;  accum  +=  dev  /  means;  [CE]  cannot  find  symbol  means  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  /  mean;  accum  +=  dev  /  means;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    dev    /    mean;    accum  +=  dev  /  means;	  	non-compiled	[CE]  cannot  find  symbol  means	102	None	add
347	[BUG]  [BUGGY]  int  accum2  +=  dev  *  mean;  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  int  accum2  +=  dev  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	int  accum2  +=  dev  *  mean;	          accum2    +=    dev    *    mean;    int    accum2    +=    dev    *    mean;    	non-compiled	[CE]  ';'  expected	52	None	replace
348	[BUG]  [BUGGY]  int  dev  =  values[i]  -  mean2  +  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  int  dev  =  values[i]  -  mean2  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	int  dev  =  values[i]  -  mean2  +  1;	  int    dev    =    values[i]    -    mean    +    1;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	110	None	replace
349	[BUG]  [BUGGY]  int  dev  =  values[i]  /  length;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  int  dev  =  values[i]  /  length;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	int  dev  =  values[i]  /  length;	  int    dev    =    values[i]    /    mean;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	56	None	replace
350	[BUG]  [BUGGY]  accum  +=  dev  *  values[i];  accum  +=  DEV  *  weights[i];  [CE]  cannot  find  symbol  DEV  [FE]        AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  values[i];  accum  +=  DEV  *  weights[i];  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev  *  values[i];  accum  +=  DEV  *  weights[i];	  accum    +=    dev    *    weights[i];    accum    +=    DEV    *    weights[i];    	non-compiled	[CE]  cannot  find  symbol  DEV	113	None	replace
351	[BUG]  [BUGGY]  accum2  +=  dev  /  mean;  accum2  +=  DEV  /  mean;  [CE]  cannot  find  symbol  DEV  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  dev  /  mean;  accum2  +=  DEV  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    +=    dev    /    mean;    accum2  +=  DEV  /  mean;	  	non-compiled	[CE]  cannot  find  symbol  DEV	19	None	add
352	[BUG]  [BUGGY]  accum2  /=  dev;  int  dev2  /=  dev;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  /=  dev;  int  dev2  /=  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    /=    dev;    int  dev2  /=  dev;	  	non-compiled	[CE]  ';'  expected	3	None	add
353	[BUG]  [BUGGY]  accum2  /=  dev;  (accum2  /=  dev);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  /=  dev;  (accum2  /=  dev);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    /=    dev;    (accum2  /=  dev);	  	non-compiled	[CE]  not  a  statement	3	None	add
354	[BUG]  [BUGGY]  accum  +=  weights[i]  *  dev2;  Accum  +=  weights[i]  *  dev;  [CE]  cannot  find  symbol  dev2  [FE]            AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  weights[i]  *  dev2;  Accum  +=  weights[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  weights[i]  *  dev2;  Accum  +=  weights[i]  *  dev;	  accum    +=    weights[i]    *    dev;    Accum    +=    weights[i]    *    dev;    	non-compiled	[CE]  cannot  find  symbol  dev2	12	None	replace
355	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  /  weights[i]);  double  accum  +=  dev  *  (dev  /  weights[i]);  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  (dev  /  weights[i]);  double  accum  +=  dev  *  (dev  /  weights[i]);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    dev    *    (dev    /    weights[i]);    double  accum  +=  dev  *  (dev  /  weights[i]);	  	non-compiled	[CE]  ';'  expected	7	None	add
356	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  -=  dev  *  dev  +  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum2  -=  dev  *  dev  +  mean;	  accum2    -=    dev    *    dev;    	compilable	  [FE]  AssertionError  	98	3	replace
357	[BUG]  [BUGGY]  accum2  -=  dev  *  dev  +  mean;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  -=  dev  *  dev  +  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2  -=  dev  *  dev  +  mean;	  accum2    -=    dev    *    dev;    	compilable	  [FE]  AssertionError  	98	3	replace
358	[BUG]  [BUGGY]  accum  +=  values[i]  *  (dev  /  dev);  accum  +=  values[i]  *  (dev  /  dev;  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  values[i]  *  (dev  /  dev);  accum  +=  values[i]  *  (dev  /  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    values[i]    *    (dev    /    dev);    accum  +=  values[i]  *  (dev  /  dev;	  	non-compiled	[CE]  ')'  expected	82	None	add
359	[BUG]  [BUGGY]  accum1  +=  dev;  accum2  +=  dev;  [CE]  cannot  find  symbol  accum1  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum1  +=  dev;  accum2  +=  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum1  +=  dev;  accum2  +=  dev;	          accum2    +=    dev;    accum2    +=    dev;    	non-compiled	[CE]  cannot  find  symbol  accum1	40	None	replace
360	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum    +=    weights[i]    *    (dev    /    dev);    accum  +=  weights[i]  *  (dev  /  dev);  accum  +=  values[i]  *  (dev  /  dev);  accum  +=  weights[i]  *  (dev  /  dev);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum        +=        weights[i]        *        (dev        /        dev);        accum    +=    weights[i]    *    (dev    /    dev);    accum  +=  values[i]  *  (dev  /  dev);  accum  +=  weights[i]  *  (dev  /  dev);	  	compilable	  [FE]  AssertionError  	69	3	add
361	[BUG]  [BUGGY]  accum    +=    weights[i]    *    (dev    /    dev);    accum  +=  weights[i]  *  (dev  /  dev);  accum  +=  values[i]  *  (dev  /  dev);  accum  +=  weights[i]  *  (dev  /  dev);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum    +=    weights[i]    *    (dev    /    dev);    accum  +=  weights[i]  *  (dev  /  dev);  accum  +=  values[i]  *  (dev  /  dev);  accum  +=  weights[i]  *  (dev  /  dev);  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum        +=        weights[i]        *        (dev        /        dev);        accum    +=    weights[i]    *    (dev    /    dev);    accum  +=  values[i]  *  (dev  /  dev);  accum  +=  weights[i]  *  (dev  /  dev);	  	compilable	  [FE]  AssertionError  	69	3	add
362	[BUG]  [BUGGY]          accum    +=    values[i]    *    dev;    accum  +=  weights[i]  *  dev;  accum  +=  values[i]  *  dev;  accum  +=  pounds[i]  *  dev;  [CE]  cannot  find  symbol  pounds  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum    +=    values[i]    *    dev;    accum  +=  weights[i]  *  dev;  accum  +=  values[i]  *  dev;  accum  +=  pounds[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	                accum        +=        values[i]        *        dev;        accum    +=    weights[i]    *    dev;    accum  +=  values[i]  *  dev;  accum  +=  pounds[i]  *  dev;	  	non-compiled	[CE]  cannot  find  symbol  pounds	61	None	add
363	[BUG]  [BUGGY]  int  accum2  =  dev;  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  int  accum2  =  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	int  accum2  =  dev;	          accum2    +=    dev;    int    accum2    +=    dev;    	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	41	None	replace
364	[BUG]  [BUGGY]  Accum  +=  dev  *  mean;  [CE]  cannot  find  symbol  Accum  [FE]            AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  Accum  +=  dev  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	Accum  +=  dev  *  mean;	          accum    +=    dev    *    mean;    Accum    +=    dev    *    mean;    	non-compiled	[CE]  cannot  find  symbol  Accum	24	None	replace
365	[BUG]  [BUGGY]  int  dev  =  values[i]  -  mean  +  2;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  int  dev  =  values[i]  -  mean  +  2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	int  dev  =  values[i]  -  mean  +  2;	  int    dev    =    values[i]    -    mean    +    1;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	110	None	replace
366	[BUG]  [BUGGY]  int  dev  =  values[i]  -  begin  +  length  +  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  int  dev  =  values[i]  -  begin  +  length  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	int  dev  =  values[i]  -  begin  +  length  +  1;	  int    dev    =    values[i]    -    mean    +    1;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	110	None	replace
367	[BUG]  [BUGGY]  double  dev  =  values[i]  *  (dev);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  dev  =  values[i]  *  (dev);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  dev  =  values[i]  *  (dev);	  double    dev    =    values[i]    *    dev;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	37	None	replace
368	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  -=  weights[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum  -=  weights[i]  *  dev;	  accum    +=    weights[i]    *    dev;    accum    +=    weights[i]    *    dev;    	compilable	  [FE]  AssertionError  	10	3	replace
369	[BUG]  [BUGGY]  accum  -=  weights[i]  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  -=  weights[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  -=  weights[i]  *  dev;	  accum    +=    weights[i]    *    dev;    accum    +=    weights[i]    *    dev;    	compilable	  [FE]  AssertionError  	10	3	replace
370	[BUG]  [BUGGY]  accum  +=  weights[i]  /  dev;  accum  +=  poidss[i]  /  dev;  [CE]  cannot  find  symbol  poidss  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  weights[i]  /  dev;  accum  +=  poidss[i]  /  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    weights[i]    /    dev;    accum  +=  poidss[i]  /  dev;	  	non-compiled	[CE]  cannot  find  symbol  poidss	106	None	add
371	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  weights[i]  /  dev;  accum  +=  values[i]  /  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum    +=    weights[i]    /    dev;    accum  +=  values[i]  /  dev;	  	compilable	  [FE]  AssertionError  	106	3	add
372	[BUG]  [BUGGY]  accum  +=  weights[i]  /  dev;  accum  +=  values[i]  /  dev;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  weights[i]  /  dev;  accum  +=  values[i]  /  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    weights[i]    /    dev;    accum  +=  values[i]  /  dev;	  	compilable	  [FE]  AssertionError  	106	3	add
373	[BUG]  [BUGGY]  double  dev  =  values[i]  /  DEV;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  dev  =  values[i]  /  DEV;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  dev  =  values[i]  /  DEV;	  double    dev    =    values[i]    /    dev;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	27	None	replace
374	[BUG]  [BUGGY]  double  dev  =  accum2[i]  -  weights[i];  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  dev  =  accum2[i]  -  weights[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  dev  =  accum2[i]  -  weights[i];	  double    dev    =    weights[i]    -    accum2;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	87	None	replace
375	[BUG]  [BUGGY]  accum2  +=  dev  *  accum2;  accum2  +=  dev  *  accum2.;  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  dev  *  accum2;  accum2  +=  dev  *  accum2.;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    +=    dev    *    accum2;    accum2  +=  dev  *  accum2.;	  	non-compiled	[CE]  <identifier>  expected	17	None	add
376	[BUG]  [BUGGY]  double  dev  =  values[i]  *  mean  +  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  dev  =  values[i]  *  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  dev  =  values[i]  *  mean  +  1;	  double    dev    =    values[i]    /    mean    +    1;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	28	None	replace
377	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  /  weights[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum  +=  dev  /  weights[i]  *  dev;	  accum    +=    dev    /    weights[i];    	compilable	  [FE]  AssertionError  	105	3	replace
378	[BUG]  [BUGGY]  accum  +=  dev  /  weights[i]  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  /  weights[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev  /  weights[i]  *  dev;	  accum    +=    dev    /    weights[i];    	compilable	  [FE]  AssertionError  	105	3	replace
379	[BUG]  [BUGGY]  accum2  +=  dev  *  dev;  Accum2  +=  dev  *  dev;  [CE]  cannot  find  symbol  Accum2  [FE]            AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  dev  *  dev;  Accum2  +=  dev  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2  +=  dev  *  dev;  Accum2  +=  dev  *  dev;	          accum2    +=    dev    *    mean;    Accum2    +=    dev    *    mean;    	non-compiled	[CE]  cannot  find  symbol  Accum2	53	None	replace
380	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  weights[i]  *  mean;  accum  +=  values[i]  *  mean;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum    +=    weights[i]    *    mean;    accum  +=  values[i]  *  mean;	  	compilable	  [FE]  AssertionError  	67	3	add
381	[BUG]  [BUGGY]  accum  +=  weights[i]  *  mean;  accum  +=  values[i]  *  mean;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  weights[i]  *  mean;  accum  +=  values[i]  *  mean;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum    +=    weights[i]    *    mean;    accum  +=  values[i]  *  mean;	  	compilable	  [FE]  AssertionError  	67	3	add
382	[BUG]  [BUGGY]          accum    +=    values[i]    *    dev;    accum  +=  values[i]  *  dev;  accum  +=  values[i]  *  DEV;  accum  +=  values[i]  *  dev;  [CE]  cannot  find  symbol  DEV  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]          accum    +=    values[i]    *    dev;    accum  +=  values[i]  *  dev;  accum  +=  values[i]  *  DEV;  accum  +=  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	                accum        +=        values[i]        *        dev;        accum    +=    values[i]    *    dev;    accum  +=  values[i]  *  DEV;  accum  +=  values[i]  *  dev;	  	non-compiled	[CE]  cannot  find  symbol  DEV	59	None	add
383	[BUG]  [BUGGY]  accum  +=  dev  *  DEV;  [CE]  cannot  find  symbol  DEV  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  DEV;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev  *  DEV;	  accum    +=    dev    *    dev;    	non-compiled	[CE]  cannot  find  symbol  DEV	76	None	replace
384	[BUG]  [BUGGY]  accum    +=    weights[i]    *    dev;    accum  +=  values[i]  *  dev;  accum  +=  poids[i]  *  dev;  accum  +=  values[i]  *  dev;  [CE]  cannot  find  symbol  poids  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum    +=    weights[i]    *    dev;    accum  +=  values[i]  *  dev;  accum  +=  poids[i]  *  dev;  accum  +=  values[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum        +=        weights[i]        *        dev;        accum    +=    values[i]    *    dev;    accum  +=  poids[i]  *  dev;  accum  +=  values[i]  *  dev;	  	non-compiled	[CE]  cannot  find  symbol  poids	108	None	add
385	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  weights[i]  *  dev;  accum2  +=  values[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum2    +=    weights[i]    *    dev;    accum2  +=  values[i]  *  dev;	  	compilable	  [FE]  AssertionError  	65	3	add
386	[BUG]  [BUGGY]  accum2  +=  weights[i]  *  dev;  accum2  +=  values[i]  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  weights[i]  *  dev;  accum2  +=  values[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    +=    weights[i]    *    dev;    accum2  +=  values[i]  *  dev;	  	compilable	  [FE]  AssertionError  	65	3	add
387	[BUG]  [BUGGY]  accum2  +=  weights[i]  *  dev;  accum2  +=  pounds[i]  *  dev;  [CE]  cannot  find  symbol  pounds  [FE]      AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum2  +=  weights[i]  *  dev;  accum2  +=  pounds[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum2    +=    weights[i]    *    dev;    accum2  +=  pounds[i]  *  dev;	  	non-compiled	[CE]  cannot  find  symbol  pounds	65	None	add
388	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum    +=    weights[i]    *    dev;    accum  +=  weights[i]  *  dev;  accum  +=  values[i]  *  dev;  accum  +=  weights[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum        +=        weights[i]        *        dev;        accum    +=    weights[i]    *    dev;    accum  +=  values[i]  *  dev;  accum  +=  weights[i]  *  dev;	  	compilable	  [FE]  AssertionError  	9	3	add
389	[BUG]  [BUGGY]  accum    +=    weights[i]    *    dev;    accum  +=  weights[i]  *  dev;  accum  +=  values[i]  *  dev;  accum  +=  weights[i]  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum    +=    weights[i]    *    dev;    accum  +=  weights[i]  *  dev;  accum  +=  values[i]  *  dev;  accum  +=  weights[i]  *  dev;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum        +=        weights[i]        *        dev;        accum    +=    weights[i]    *    dev;    accum  +=  values[i]  *  dev;  accum  +=  weights[i]  *  dev;	  	compilable	  [FE]  AssertionError  	9	3	add
390	[BUG]  [BUGGY]  accum  +=  values[i]  *  (dev  *  dev);  int  dev  =  values[i]  *  dev;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  values[i]  *  (dev  *  dev);  int  dev  =  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  values[i]  *  (dev  *  dev);  int  dev  =  values[i]  *  dev;	          accum    +=    values[i]    *    dev;    int    dev    =    values[i]    *    dev;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	93	None	replace
391	[BUG]  [BUGGY]  double  dev  =  values[i]  -  mean.length  +  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  dev  =  values[i]  -  mean.length  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  dev  =  values[i]  -  mean.length  +  1;	  double    dev    =    values[i]    -    mean    +    1;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	100	None	replace
392	[BUG]  [BUGGY]  double  dev  =  values[i]  -  mean  *  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  double  dev  =  values[i]  -  mean  *  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	double  dev  =  values[i]  -  mean  *  1;	  double    dev    =    values[i]    -    mean    +    1;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	100	None	replace
393	[BUG]  [BUGGY]  accum  +=  dev  *  mean2;  int  dev  =  values[i]  -  mean;  [CE]  cannot  find  symbol  mean2  [FE]        AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  mean2;  int  dev  =  values[i]  -  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev  *  mean2;  int  dev  =  values[i]  -  mean;	          accum    +=    dev    *    mean;    int    dev    =    values[i]    -    mean;    	non-compiled	[CE]  cannot  find  symbol  mean2	89	None	replace
394	[BUG]  [BUGGY]  accum  +=  dev  *  mean;  int  dev  =  values[i]  -  mean2;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  mean;  int  dev  =  values[i]  -  mean2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev  *  mean;  int  dev  =  values[i]  -  mean2;	          accum    +=    dev    *    mean;    int    dev    =    values[i]    -    mean;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	89	None	replace
395	[BUG]  [BUGGY]  accum  +=  mean  *  dev;  int  dev  =  values[i]  -  mean;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  mean  *  dev;  int  dev  =  values[i]  -  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  mean  *  dev;  int  dev  =  values[i]  -  mean;	          accum    +=    dev    *    mean;    int    dev    =    values[i]    -    mean;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	89	None	replace
396	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  weights[i]  -  1;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	accum  +=  dev  *  weights[i]  -  1;	  accum    +=    dev    *    weights[i];    accum    +=    DEV    *    weights[i];    	compilable	  [FE]  AssertionError  	113	3	replace
397	[BUG]  [BUGGY]  accum  +=  dev  *  weights[i]  -  1;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;      [BUGGY]  accum  +=  dev  *  weights[i]  -  1;  [BUGGY]      accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	accum  +=  dev  *  weights[i]  -  1;	  accum    +=    dev    *    weights[i];    accum    +=    DEV    *    weights[i];    	compilable	  [FE]  AssertionError  	113	3	replace
