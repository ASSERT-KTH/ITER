bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Double  var  =  Double.POSITIVE_INFINITY  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  Double  var  =  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	Double  var  =  Double.POSITIVE_INFINITY  +  1;	  Double    var    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
2	[BUG]  [BUGGY]  test(values,  accum2,  begin,  length));  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  test(values,  accum2,  begin,  length));  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  accum2,  begin,  length));	  test(values,    mean,    begin,    length));    	non-compiled	[CE]  ';'  expected	9	None	replace
3	[BUG]  [BUGGY]  double  accum  =  Integer.MIN_VALUE;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  Integer.MIN_VALUE;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  Integer.MIN_VALUE;	  double    accum    =    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
4	[BUG]  [BUGGY]  double  accum  =  Integer.MAX_VALUE  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  Integer.MAX_VALUE  +  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  Integer.MAX_VALUE  +  1;	  double    accum    =    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
5	[BUG]  [BUGGY]  double  accum  =  Double.MAX_VALUE;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  Double.MAX_VALUE;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  Double.MAX_VALUE;	  double    accum    =    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
6	[BUG]  [BUGGY]  Test(values,  weights,  begin,  length);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  Test(values,  weights,  begin,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	Test(values,  weights,  begin,  length);	          test(values,    weights,    begin,    length);    Test(values,    weights,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
7	[BUG]  [BUGGY]  int  var  =  Double.NaN;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  int  var  =  Double.NaN;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	int  var  =  Double.NaN;	          var    =    Double.NaN;    int    var    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
8	[BUG]  [BUGGY]  Double[]  values  =  getValues().toArray(values,  var);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  Double[]  values  =  getValues().toArray(values,  var);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	Double[]  values  =  getValues().toArray(values,  var);	  Double[]    values    =    getValues().toArray(values);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
9	[BUG]  [BUGGY]  Double[]  values  =  getValues().toArray(values,  length);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  Double[]  values  =  getValues().toArray(values,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	Double[]  values  =  getValues().toArray(values,  length);	  Double[]    values    =    getValues().toArray(values);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
10	[BUG]  [BUGGY]  double[]  values  =  getValues().toArray(values);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double[]  values  =  getValues().toArray(values);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double[]  values  =  getValues().toArray(values);	  Double[]    values    =    getValues().toArray(values);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
11	[BUG]  [BUGGY]  Double[]  values  =  getValues(values,  var);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  Double[]  values  =  getValues(values,  var);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	Double[]  values  =  getValues(values,  var);	  Double[]    values    =    getValues(values);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
12	[BUG]  [BUGGY]  Double[]  values  =  getValues(values,  length);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  Double[]  values  =  getValues(values,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	Double[]  values  =  getValues(values,  length);	  Double[]    values    =    getValues(values);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
13	[BUG]  [BUGGY]  double[]  values  =  getValues(values);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double[]  values  =  getValues(values);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double[]  values  =  getValues(values);	  Double[]    values    =    getValues(values);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
14	[BUG]  [BUGGY]  accum  =  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  accum  =  Double.POSITIVE_INFINITY;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	accum  =  Double.POSITIVE_INFINITY;	  double    accum    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
15	[BUG]  [BUGGY]  double  accum  =  Double.POSITIVE_INFINITY  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  Double.POSITIVE_INFINITY  +  1;	  double    accum    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
16	[BUG]  [BUGGY]  if(begin  <  1)  {  if(length  <  1)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(begin  <  1)  {  if(length  <  1)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(begin  <  1)  {  if(length  <  1)  {	  if    (length    <    1)    {    if    (length    <    1)    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
17	[BUG]  [BUGGY]  if(begin  <  1)  {  if(length  >  1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(begin  <  1)  {  if(length  >  1)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(begin  <  1)  {  if(length  >  1)  {	  if    (length    <    1)    {    if    (length    <    1)    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
18	[BUG]  [BUGGY]  double  accum  =  1.0;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  1.0;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  1.0;	  double    accum    =    0.0;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
19	[BUG]  [BUGGY]  double  accum  =  incMoment?  Boolean.TRUE  :  Boolean.FALSE,  isBiasCorrected;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  incMoment?  Boolean.TRUE  :  Boolean.FALSE,  isBiasCorrected;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  incMoment?  Boolean.TRUE  :  Boolean.FALSE,  isBiasCorrected;	  double    accum    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE,    incMoment;    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
20	[BUG]  [BUGGY]  double  accum  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE,  mean;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE,  mean;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE,  mean;	  double    accum    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE,    incMoment;    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
21	[BUG]  [BUGGY]  double  accum  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE,  var;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE,  var;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE,  var;	  double    accum    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE,    incMoment;    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
22	[BUG]  [BUGGY]  double  accum2  =  Math.abs(values.length)+  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  Math.abs(values.length)+  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Math.abs(values.length)+  1;	  double    accum2    =    Math.abs(values.length    +    1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
23	[BUG]  [BUGGY]  double  accum2  =  Math.abs(values.length  /  1);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  Math.abs(values.length  /  1);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Math.abs(values.length  /  1);	  double    accum2    =    Math.abs(values.length    +    1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
24	[BUG]  [BUGGY]  double  accum2  =  Math.abs(mean);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  Math.abs(mean);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Math.abs(mean);	  double    accum2    =    Math.abs(var);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
25	[BUG]  [BUGGY]  double  accum2  =  Math.abs(var  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  Math.abs(var  +  1);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Math.abs(var  +  1);	  double    accum2    =    Math.abs(var);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
26	[BUG]  [BUGGY]  double  accum2  =  Math.abs(Math.abs(mean));  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  Math.abs(Math.abs(mean));  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Math.abs(Math.abs(mean));	  double    accum2    =    Math.abs(var);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
27	[BUG]  [BUGGY]  double  accum2  =  Math.abs(values[var]);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  Math.abs(values[var]);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Math.abs(values[var]);	  double    accum2    =    Math.abs(var);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
28	[BUG]  [BUGGY]  double[]  values  =  getValues(mean);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double[]  values  =  getValues(mean);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double[]  values  =  getValues(mean);	  Double[]    values    =    getValues(mean);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
29	[BUG]  [BUGGY]  double  accum2  =  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  1;	  double    accum2    =    0;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
30	[BUG]  [BUGGY]  double  accum2  =  Math.abs(mean  -  values.length);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  Math.abs(mean  -  values.length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Math.abs(mean  -  values.length);	  double    accum2    =    Math.abs(values.length    -    mean);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
31	[BUG]  [BUGGY]  double  accum2  =  Math.abs(values.length  -  mean  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  Math.abs(values.length  -  mean  +  1);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Math.abs(values.length  -  mean  +  1);	  double    accum2    =    Math.abs(values.length    -    mean);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
32	[BUG]  [BUGGY]  double  accum2  =  Math.abs(values.length  -  mean,  length);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  Math.abs(values.length  -  mean,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Math.abs(values.length  -  mean,  length);	  double    accum2    =    Math.abs(values.length    -    mean);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
33	[BUG]  [BUGGY]  double  accum2  =  Math.abs(values.length  /  mean);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  Math.abs(values.length  /  mean);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Math.abs(values.length  /  mean);	  double    accum2    =    Math.abs(values.length    -    mean);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
34	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]          test(values,    weights,    begin,    length);    var  =  Double.NaN;  test(values,  weights,  begin,  length);  var  =  Double.NaN;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	                test(values,        weights,        begin,        length);        var    =    Double.NaN;    test(values,  weights,  begin,  length);  var  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	102	1	add
35	[BUG]  [BUGGY]          test(values,    weights,    begin,    length);    var  =  Double.NaN;  test(values,  weights,  begin,  length);  var  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]          test(values,    weights,    begin,    length);    var  =  Double.NaN;  test(values,  weights,  begin,  length);  var  =  Double.NaN;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	                test(values,        weights,        begin,        length);        var    =    Double.NaN;    test(values,  weights,  begin,  length);  var  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	102	1	add
36	[BUG]  [BUGGY]          test(values,    weights,    begin,    length);    var  =  Double.NaN;  Test(values,  weights,  begin,  length);  var  =  Double.NaN;  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]          test(values,    weights,    begin,    length);    var  =  Double.NaN;  Test(values,  weights,  begin,  length);  var  =  Double.NaN;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	                test(values,        weights,        begin,        length);        var    =    Double.NaN;    Test(values,  weights,  begin,  length);  var  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol	102	None	add
37	[BUG]  [BUGGY]          test(values,    weights,    begin,    length);    var  =  Double.NaN;  test(values,  weights,  start,  length);  var  =  Double.NaN;  [CE]  cannot  find  symbol  start  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]          test(values,    weights,    begin,    length);    var  =  Double.NaN;  test(values,  weights,  start,  length);  var  =  Double.NaN;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	                test(values,        weights,        begin,        length);        var    =    Double.NaN;    test(values,  weights,  start,  length);  var  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  start	102	None	add
38	[BUG]  [BUGGY]          test(values,    weights,    begin,    length);    var  =  Double.NaN;  double  var  =  Double.NaN;  test(values,  weights,  begin,  length);  var  =  Double.NaN;  [CE]  variable  var  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]          test(values,    weights,    begin,    length);    var  =  Double.NaN;  double  var  =  Double.NaN;  test(values,  weights,  begin,  length);  var  =  Double.NaN;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	                test(values,        weights,        begin,        length);        var    =    Double.NaN;    double  var  =  Double.NaN;  test(values,  weights,  begin,  length);  var  =  Double.NaN;	  	non-compiled	[CE]  variable  var  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	102	None	add
39	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]          test(values,    weights,    begin,    length);    var  =  Double.NaN;  test(values,  weights,  begin,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	                test(values,        weights,        begin,        length);        var    =    Double.NaN;    test(values,  weights,  begin,  length);	  	compilable	  [FE]  AssertionError  	102	1	add
40	[BUG]  [BUGGY]          test(values,    weights,    begin,    length);    var  =  Double.NaN;  test(values,  weights,  begin,  length);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]          test(values,    weights,    begin,    length);    var  =  Double.NaN;  test(values,  weights,  begin,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	                test(values,        weights,        begin,        length);        var    =    Double.NaN;    test(values,  weights,  begin,  length);	  	compilable	  [FE]  AssertionError  	102	1	add
41	[BUG]  [BUGGY]  test(values,  var,  length);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  test(values,  var,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  var,  length);	  test(values,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
42	[BUG]  [BUGGY]  test(values,  begin,  length,  mean);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  test(values,  begin,  length,  mean);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  begin,  length,  mean);	  test(values,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
43	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(isBiasCorrected)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if(isBiasCorrected)  {	  if    (test(values,    values,    begin,    length))    {    if    (test(values,    values,    begin,    length))    {    	compilable	  [FE]  AssertionError  	26	2	replace
44	[BUG]  [BUGGY]  if(isBiasCorrected)  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(isBiasCorrected)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(isBiasCorrected)  {	  if    (test(values,    values,    begin,    length))    {    if    (test(values,    values,    begin,    length))    {    	compilable	  [FE]  AssertionError  	26	2	replace
45	[BUG]  [BUGGY]  double  var  =  Double.NEGATIVE_INFINITY  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  var  =  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  var  =  Double.NEGATIVE_INFINITY  +  1;	  double    var    =    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
46	[BUG]  [BUGGY]  var  =  Double.POSITIVE_INFINITY;  var  =  Double.NaN  +  1;  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  Double.POSITIVE_INFINITY;  var  =  Double.NaN  +  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  Double.POSITIVE_INFINITY;  var  =  Double.NaN  +  1;	          var    =    Double.NaN;    var    =    Double.NaN    +    1;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
47	[BUG]  [BUGGY]  var  =  Double.NaN;  var  =  Double.NaN  +  2;  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  Double.NaN;  var  =  Double.NaN  +  2;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  Double.NaN;  var  =  Double.NaN  +  2;	          var    =    Double.NaN;    var    =    Double.NaN    +    1;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
48	[BUG]  [BUGGY]  var  =  Double.MIN_VALUE;  var  =  Double.NaN  +  1;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  Double.MIN_VALUE;  var  =  Double.NaN  +  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  Double.MIN_VALUE;  var  =  Double.NaN  +  1;	          var    =    Double.NaN;    var    =    Double.NaN    +    1;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
49	[BUG]  [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  weights,  begin,  length)/  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  weights,  begin,  length)/  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  weights,  begin,  length)/  1;	  double    accum    =    isBiasCorrected?    Double.NaN    :    test(values,    weights,    begin,    length)+    1;    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
50	[BUG]  [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  begin,  length)+  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  begin,  length)+  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  begin,  length)+  1;	  double    accum    =    isBiasCorrected?    Double.NaN    :    test(values,    weights,    begin,    length)+    1;    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
51	[BUG]  [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  begin,  length)/  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  begin,  length)/  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  begin,  length)/  1;	  double    accum    =    isBiasCorrected?    Double.NaN    :    test(values,    weights,    begin,    length)+    1;    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
52	[BUG]  [BUGGY]  if(hasBiasCorrected)  {  [CE]  cannot  find  symbol  hasBiasCorrected  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(hasBiasCorrected)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(hasBiasCorrected)  {	  if(biasCorrected)    {    	non-compiled	[CE]  cannot  find  symbol  hasBiasCorrected	104	None	replace
53	[BUG]  [BUGGY]  double  var  =  Double.POSITIVE;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  var  =  Double.POSITIVE;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  var  =  Double.POSITIVE;	  double    var    =    Double.NEGATIVE;    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
54	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(length  >=  2)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if(length  >=  2)  {	  if(length    <    2)    {    	compilable	  [FE]  AssertionError  	113	2	replace
55	[BUG]  [BUGGY]  if(length  >=  2)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(length  >=  2)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(length  >=  2)  {	  if(length    <    2)    {    	compilable	  [FE]  AssertionError  	113	2	replace
56	[BUG]  [BUGGY]  if(length  >=  1)  {  if(length  >=  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(length  >=  1)  {  if(length  >=  1)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(length    >=    1)    {    if(length  >=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	90	None	add
57	[BUG]  [BUGGY]  if(length  >=  1)  {  if(length  >>  1)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(length  >=  1)  {  if(length  >>  1)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(length    >=    1)    {    if(length  >>  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	90	None	add
58	[BUG]  [BUGGY]  if(length  >=  1)  {  if(length!=  1)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(length  >=  1)  {  if(length!=  1)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(length    >=    1)    {    if(length!=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	90	None	add
59	[BUG]  [BUGGY]  if(length  >=  1)  {  if(length  ==  1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(length  >=  1)  {  if(length  ==  1)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(length    >=    1)    {    if(length  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	90	None	add
60	[BUG]  [BUGGY]  if(length  >=  1)  {  if(length  [Delete]  1)  {  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(length  >=  1)  {  if(length  [Delete]  1)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(length    >=    1)    {    if(length  [Delete]  1)  {	  	non-compiled	[CE]  ')'  expected	90	None	add
61	[BUG]  [BUGGY]  if(incMoment)  {  if(incMoment)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(incMoment)  {  if(incMoment)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(incMoment)    {    if(incMoment)  {	  	non-compiled	[CE]  illegal  start  of  expression	124	None	add
62	[BUG]  [BUGGY]  if(incMoment)  {  If(incMoment)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(incMoment)  {  If(incMoment)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(incMoment)    {    If(incMoment)  {	  	non-compiled	[CE]  ';'  expected	124	None	add
63	[BUG]  [BUGGY]  Double  accum2  =  1.0;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  Double  accum2  =  1.0;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	Double  accum2  =  1.0;	  Double    accum2    =    0.0;    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
64	[BUG]  [BUGGY]  Double  accum2  =  0.001;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  Double  accum2  =  0.001;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	Double  accum2  =  0.001;	  Double    accum2    =    0.0;    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
65	[BUG]  [BUGGY]  accum2  =  Double.NEGATIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  accum2  =  Double.NEGATIVE_INFINITY;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	accum2  =  Double.NEGATIVE_INFINITY;	  double    accum2    =    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
66	[BUG]  [BUGGY]  var  =  Double.POSITIVE;  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  Double.POSITIVE;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  Double.POSITIVE;	  var    =    Double.NEGATIVE;    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
67	[BUG]  [BUGGY]  if  (test(values,  begin,  length))  {  if  (test(values,  begin,  length))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if  (test(values,  begin,  length))  {  if  (test(values,  begin,  length))  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if    (test(values,    begin,    length))    {    if  (test(values,  begin,  length))  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
68	[BUG]  [BUGGY]  if  (test(values,  begin,  length))  {  if  (test(values,  start,  length))  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if  (test(values,  begin,  length))  {  if  (test(values,  start,  length))  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if    (test(values,    begin,    length))    {    if  (test(values,  start,  length))  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
69	[BUG]  [BUGGY]  if  (test(values,  begin,  length))  {  if  (test(values,  end,  length))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if  (test(values,  begin,  length))  {  if  (test(values,  end,  length))  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if    (test(values,    begin,    length))    {    if  (test(values,  end,  length))  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
70	[BUG]  [BUGGY]  if  (test(values,  begin,  length))  {  if  (test(values,  0,  length))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if  (test(values,  begin,  length))  {  if  (test(values,  0,  length))  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if    (test(values,    begin,    length))    {    if  (test(values,  0,  length))  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
71	[BUG]  [BUGGY]  double  var  =  Double.POSITIVE_INFINITY  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  var  =  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  var  =  Double.POSITIVE_INFINITY  +  1;	  double    var    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
72	[BUG]  [BUGGY]  Var  var  =  Double.NaN;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  Var  var  =  Double.NaN;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	Var  var  =  Double.NaN;	          var    =    Double.NaN;    Var    var    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
73	[BUG]  [BUGGY]  double  var  =  Double.NaN;  Var  var  =  Double.NaN;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  var  =  Double.NaN;  Var  var  =  Double.NaN;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  var  =  Double.NaN;  Var  var  =  Double.NaN;	          var    =    Double.NaN;    Var    var    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
74	[BUG]  [BUGGY]  var  =  Double.POSITIVE_INFINITY;  Var  var  =  Double.NaN;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  Double.POSITIVE_INFINITY;  Var  var  =  Double.NaN;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  Double.POSITIVE_INFINITY;  Var  var  =  Double.NaN;	          var    =    Double.NaN;    Var    var    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
75	[BUG]  [BUGGY]  double  accum  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NaN  +  2;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NaN  +  2;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NaN  +  2;	  double    accum    =    isBiasCorrected?    Double.POSITIVE_INFINITY    :    Double.NaN    +    1;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
76	[BUG]  [BUGGY]  double  accum  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NaN  +  3;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NaN  +  3;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NaN  +  3;	  double    accum    =    isBiasCorrected?    Double.POSITIVE_INFINITY    :    Double.NaN    +    1;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
77	[BUG]  [BUGGY]  if  (test(values,  begin,  length)||  test(values,  length))  {  [CE]  no  suitable  method  found  for  test(double[],int)  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if  (test(values,  begin,  length)||  test(values,  length))  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if  (test(values,  begin,  length)||  test(values,  length))  {	  if    (test(values,    begin,    length))    {    	non-compiled	[CE]  no  suitable  method  found  for  test(double[],int)	45	None	replace
78	[BUG]  [BUGGY]  validate(values,  weights,  begin,  length);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  validate(values,  weights,  begin,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	validate(values,  weights,  begin,  length);	          test(values,    weights,    begin,    length);    validate(values,    weights,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
79	[BUG]  [BUGGY]  test(values,  var,  begin,  length);  validate(values,  weights,  begin,  length);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  test(values,  var,  begin,  length);  validate(values,  weights,  begin,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  var,  begin,  length);  validate(values,  weights,  begin,  length);	          test(values,    weights,    begin,    length);    validate(values,    weights,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
80	[BUG]  [BUGGY]  test(values,  begin,  length);  validate(values,  weights,  begin,  length);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  test(values,  begin,  length);  validate(values,  weights,  begin,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  begin,  length);  validate(values,  weights,  begin,  length);	          test(values,    weights,    begin,    length);    validate(values,    weights,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
81	[BUG]  [BUGGY]  double  accum  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE  +  2;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE  +  2;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE  +  2;	  double    accum    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE    +    1;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
82	[BUG]  [BUGGY]  double  accum  =  incMoment?  Boolean.TRUE  :  Boolean.FALSE  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  incMoment?  Boolean.TRUE  :  Boolean.FALSE  +  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  incMoment?  Boolean.TRUE  :  Boolean.FALSE  +  1;	  double    accum    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE    +    1;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
83	[BUG]  [BUGGY]  Double  var  =  Double.NEGATIVE;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  Double  var  =  Double.NEGATIVE;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	Double  var  =  Double.NEGATIVE;	  Double    var    =    null;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
84	[BUG]  [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  mean,  begin,  length);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  mean,  begin,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  mean,  begin,  length);	  double    accum    =    isBiasCorrected?    Double.NaN    :    test(values,    values,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
85	[BUG]  [BUGGY]  var  =  Double.NEGATIVE_INFINITY  |  Double.NEGATIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  Double.NEGATIVE_INFINITY  |  Double.NEGATIVE_INFINITY;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  Double.NEGATIVE_INFINITY  |  Double.NEGATIVE_INFINITY;	  var    =    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
86	[BUG]  [BUGGY]  double  accum2  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NaN  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NaN  +  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NaN  +  1;	  double    accum2    =    isBiasCorrected?    Double.POSITIVE_INFINITY    :    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
87	[BUG]  [BUGGY]  double  accum2  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY;	  double    accum2    =    isBiasCorrected?    Double.POSITIVE_INFINITY    :    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
88	[BUG]  [BUGGY]  double  accum  =  Double.NaN  +  2;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  Double.NaN  +  2;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  Double.NaN  +  2;	  double    accum    =    Double.NaN    +    1;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
89	[BUG]  [BUGGY]  double  accum  =  Double.NaN  /  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  Double.NaN  /  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  Double.NaN  /  1;	  double    accum    =    Double.NaN    +    1;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
90	[BUG]  [BUGGY]  if  (test(values,  begin,  length,  mean))  {  [CE]  no  suitable  method  found  for  test(double[],int,int,double)  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if  (test(values,  begin,  length,  mean))  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if  (test(values,  begin,  length,  mean))  {	  if    (test(values,    mean,    begin,    length))    {    	non-compiled	[CE]  no  suitable  method  found  for  test(double[],int,int,double)	41	None	replace
91	[BUG]  [BUGGY]  if  (test(values,  mean,  begin,  length,  sumWts))  {  [CE]  cannot  find  symbol  sumWts  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if  (test(values,  mean,  begin,  length,  sumWts))  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if  (test(values,  mean,  begin,  length,  sumWts))  {	  if    (test(values,    mean,    begin,    length))    {    	non-compiled	[CE]  cannot  find  symbol  sumWts	41	None	replace
92	[BUG]  [BUGGY]  double  accum2  =  Integer.MAX_VALUE  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  Integer.MAX_VALUE  +  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Integer.MAX_VALUE  +  1;	  double    accum2    =    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
93	[BUG]  [BUGGY]  double  accum2  =  Integer.MIN_VALUE;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  Integer.MIN_VALUE;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Integer.MIN_VALUE;	  double    accum2    =    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
94	[BUG]  [BUGGY]  double  accum2  =  0,  length  =  Integer.MAX_VALUE;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  0,  length  =  Integer.MAX_VALUE;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  0,  length  =  Integer.MAX_VALUE;	  double    accum2    =    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
95	[BUG]  [BUGGY]  test(values,  accum2,  mean,  length);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  test(values,  accum2,  mean,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  accum2,  mean,  length);	  test(values,    accum,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
96	[BUG]  [BUGGY]  test(values,  mean,  accum,  begin,  length);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  test(values,  mean,  accum,  begin,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  mean,  accum,  begin,  length);	  test(values,    accum,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
97	[BUG]  [BUGGY]  test(values,  accum2,  begin,  length);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  test(values,  accum2,  begin,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  accum2,  begin,  length);	  test(values,    accum,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
98	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(incMoment  ||  isBiasCorrected)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if(incMoment  ||  isBiasCorrected)  {	  if(isBiasCorrected    ||    isBiasCorrected)    {    	compilable	  [FE]  AssertionError  	50	2	replace
99	[BUG]  [BUGGY]  if(incMoment  ||  isBiasCorrected)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(incMoment  ||  isBiasCorrected)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(incMoment  ||  isBiasCorrected)  {	  if(isBiasCorrected    ||    isBiasCorrected)    {    	compilable	  [FE]  AssertionError  	50	2	replace
100	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(isBiasCorrected  &&  isBiasCorrected)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if(isBiasCorrected  &&  isBiasCorrected)  {	  if(isBiasCorrected    ||    isBiasCorrected)    {    	compilable	  [FE]  AssertionError  	50	2	replace
101	[BUG]  [BUGGY]  if(isBiasCorrected  &&  isBiasCorrected)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(isBiasCorrected  &&  isBiasCorrected)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(isBiasCorrected  &&  isBiasCorrected)  {	  if(isBiasCorrected    ||    isBiasCorrected)    {    	compilable	  [FE]  AssertionError  	50	2	replace
102	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(isBiasCorrected  ||  incMoment)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if(isBiasCorrected  ||  incMoment)  {	  if(isBiasCorrected    ||    isBiasCorrected)    {    	compilable	  [FE]  AssertionError  	50	2	replace
103	[BUG]  [BUGGY]  if(isBiasCorrected  ||  incMoment)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(isBiasCorrected  ||  incMoment)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(isBiasCorrected  ||  incMoment)  {	  if(isBiasCorrected    ||    isBiasCorrected)    {    	compilable	  [FE]  AssertionError  	50	2	replace
104	[BUG]  [BUGGY]  if(isBiasCorrected  ||  isMoment)  {  [CE]  cannot  find  symbol  isMoment  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(isBiasCorrected  ||  isMoment)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(isBiasCorrected  ||  isMoment)  {	  if(isBiasCorrected    ||    isBiasCorrected)    {    	non-compiled	[CE]  cannot  find  symbol  isMoment	50	None	replace
105	[BUG]  [BUGGY]  if(length  >  2)  {  if(length  >  2)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(length  >  2)  {  if(length  >  2)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(length    >    2)    {    if(length  >  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
106	[BUG]  [BUGGY]  if(length  >  2)  {  If(length  >  2)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(length  >  2)  {  If(length  >  2)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(length    >    2)    {    If(length  >  2)  {	  	non-compiled	[CE]  ';'  expected	19	None	add
107	[BUG]  [BUGGY]  if(length  >  2)  {  int  length  >  2)  {  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(length  >  2)  {  int  length  >  2)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(length    >    2)    {    int  length  >  2)  {	  	non-compiled	[CE]  ';'  expected	19	None	add
108	[BUG]  [BUGGY]  if(length  >  2)  {  while(length  >  2)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(length  >  2)  {  while(length  >  2)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(length    >    2)    {    while(length  >  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
109	[BUG]  [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  weights,  length);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  weights,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  weights,  length);	  double    accum    =    isBiasCorrected?    Double.NaN    :    test(values,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
110	[BUG]  [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  length,  begin);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  length,  begin);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  length,  begin);	  double    accum    =    isBiasCorrected?    Double.NaN    :    test(values,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
111	[BUG]  [BUGGY]  if(isBiasCorrected  ||  isBiasCorrected)  {  if(isBiasCorrected  ||  isBiasCorrected)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(isBiasCorrected  ||  isBiasCorrected)  {  if(isBiasCorrected  ||  isBiasCorrected)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(isBiasCorrected    ||    isBiasCorrected)    {    if(isBiasCorrected  ||  isBiasCorrected)  {	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
112	[BUG]  [BUGGY]  if(isBiasCorrected  ||  isBiasCorrected)  {  If(isBiasCorrected  ||  isBiasCorrected)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(isBiasCorrected  ||  isBiasCorrected)  {  If(isBiasCorrected  ||  isBiasCorrected)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(isBiasCorrected    ||    isBiasCorrected)    {    If(isBiasCorrected  ||  isBiasCorrected)  {	  	non-compiled	[CE]  ';'  expected	49	None	add
113	[BUG]  [BUGGY]  if(isBiasCorrected  ||  isBiasCorrected)  {  if(isBiasCorrected  ||  areBiasCorrected)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(isBiasCorrected  ||  isBiasCorrected)  {  if(isBiasCorrected  ||  areBiasCorrected)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(isBiasCorrected    ||    isBiasCorrected)    {    if(isBiasCorrected  ||  areBiasCorrected)  {	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
114	[BUG]  [BUGGY]  if(!incMoment)  {  if(!incMoment)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(!incMoment)  {  if(!incMoment)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(!incMoment)    {    if(!incMoment)  {	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
115	[BUG]  [BUGGY]  if(!incMoment)  {  If(!incMoment)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(!incMoment)  {  If(!incMoment)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(!incMoment)    {    If(!incMoment)  {	  	non-compiled	[CE]  ';'  expected	74	None	add
116	[BUG]  [BUGGY]  double  accum2  =  0.5;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  0.5;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  0.5;	  double    accum2    =    1.0;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
117	[BUG]  [BUGGY]  double  accum  =  incMoment?  Double.NaN  :  test(values,  begin,  length);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  incMoment?  Double.NaN  :  test(values,  begin,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  incMoment?  Double.NaN  :  test(values,  begin,  length);	  double    accum    =    incMoment?    Double.NaN    :    test(values,    weights,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
118	[BUG]  [BUGGY]  double  accum  =  Math.abs(values.length);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  Math.abs(values.length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  Math.abs(values.length);	          test(values,    weights,    begin,    length);    double    accum    =    Math.abs(values.length);    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
119	[BUG]  [BUGGY]  accum  =  Math.abs(values.length);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  accum  =  Math.abs(values.length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	accum  =  Math.abs(values.length);	          test(values,    weights,    begin,    length);    double    accum    =    Math.abs(values.length);    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
120	[BUG]  [BUGGY]  double  accum2  =  Math.abs(values.length  /  length);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  Math.abs(values.length  /  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Math.abs(values.length  /  length);	  double    accum2    =    Math.abs(values.length    -    begin);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
121	[BUG]  [BUGGY]  double  accum2  =  Math.abs(values.length  /  begin);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  Math.abs(values.length  /  begin);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Math.abs(values.length  /  begin);	  double    accum2    =    Math.abs(values.length    -    begin);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
122	[BUG]  [BUGGY]  test(values,  accum2,  mean,  length));  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  test(values,  accum2,  mean,  length));  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  accum2,  mean,  length));	  test(values,    accum,    begin,    length));    	non-compiled	[CE]  ';'  expected	12	None	replace
123	[BUG]  [BUGGY]  test(values,  weights,  start,  length);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  test(values,  weights,  start,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  weights,  start,  length);	          test(values,    weights,    begin,    length);    test(values,    weights,    start,    length);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
124	[BUG]  [BUGGY]  test(values,  weights,  accum2,  length);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  test(values,  weights,  accum2,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  weights,  accum2,  length);	          test(values,    weights,    begin,    length);    test(values,    weights,    start,    length);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
125	[BUG]  [BUGGY]  test(values,  weights,  var,  length);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  test(values,  weights,  var,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  weights,  var,  length);	          test(values,    weights,    begin,    length);    test(values,    weights,    start,    length);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
126	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(isBiasCorrected  ||  begin  >  length)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if(isBiasCorrected  ||  begin  >  length)  {	  if(biasCorrected    ||    begin    >    length)    {    	compilable	  [FE]  AssertionError  	106	2	replace
127	[BUG]  [BUGGY]  if(isBiasCorrected  ||  begin  >  length)  {  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(isBiasCorrected  ||  begin  >  length)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(isBiasCorrected  ||  begin  >  length)  {	  if(biasCorrected    ||    begin    >    length)    {    	compilable	  [FE]  AssertionError  	106	2	replace
128	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(incMoment  ||  begin  >  length)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if(incMoment  ||  begin  >  length)  {	  if(biasCorrected    ||    begin    >    length)    {    	compilable	  [FE]  AssertionError  	106	2	replace
129	[BUG]  [BUGGY]  if(incMoment  ||  begin  >  length)  {  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(incMoment  ||  begin  >  length)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(incMoment  ||  begin  >  length)  {	  if(biasCorrected    ||    begin    >    length)    {    	compilable	  [FE]  AssertionError  	106	2	replace
130	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(!incMoment  ||  begin  >  length)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if(!incMoment  ||  begin  >  length)  {	  if(biasCorrected    ||    begin    >    length)    {    	compilable	  [FE]  AssertionError  	106	1	replace
131	[BUG]  [BUGGY]  if(!incMoment  ||  begin  >  length)  {  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(!incMoment  ||  begin  >  length)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(!incMoment  ||  begin  >  length)  {	  if(biasCorrected    ||    begin    >    length)    {    	compilable	  [FE]  AssertionError  	106	1	replace
132	[BUG]  [BUGGY]  if(ignoreBiasCorrected  ||  begin  >  length)  {  [CE]  cannot  find  symbol  ignoreBiasCorrected  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(ignoreBiasCorrected  ||  begin  >  length)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(ignoreBiasCorrected  ||  begin  >  length)  {	  if(biasCorrected    ||    begin    >    length)    {    	non-compiled	[CE]  cannot  find  symbol  ignoreBiasCorrected	106	None	replace
133	[BUG]  [BUGGY]  var  =  Double.NaN;  for(final  double  var  :  values.values())  {  var  =  Double.NaN;  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  Double.NaN;  for(final  double  var  :  values.values())  {  var  =  Double.NaN;  }  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  Double.NaN;  for(final  double  var  :  values.values())  {  var  =  Double.NaN;  }	          var    =    Double.NaN;    for(final    double    var    :    values.values())    {    var    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
134	[BUG]  [BUGGY]  double  var  =  Double.NaN;  for(final  double  var  :  values.values())  {  var  =  Double.NaN;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  var  =  Double.NaN;  for(final  double  var  :  values.values())  {  var  =  Double.NaN;  }  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  var  =  Double.NaN;  for(final  double  var  :  values.values())  {  var  =  Double.NaN;  }	          var    =    Double.NaN;    for(final    double    var    :    values.values())    {    var    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
135	[BUG]  [BUGGY]  for(final  double  var  :  values.values())  {  var  =  Double.NaN;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  for(final  double  var  :  values.values())  {  var  =  Double.NaN;  }  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	for(final  double  var  :  values.values())  {  var  =  Double.NaN;  }	          var    =    Double.NaN;    for(final    double    var    :    values.values())    {    var    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
136	[BUG]  [BUGGY]  test(values,  mean,  var,  length);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  test(values,  mean,  var,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  mean,  var,  length);	  test(values,    var,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
137	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]          var    =    Double.NaN;    var  =  Double.NaN;  var  =  Double.NaN;  var  =  Double.NaN;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	                var        =        Double.NaN;        var    =    Double.NaN;    var  =  Double.NaN;  var  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	58	1	add
138	[BUG]  [BUGGY]          var    =    Double.NaN;    var  =  Double.NaN;  var  =  Double.NaN;  var  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]          var    =    Double.NaN;    var  =  Double.NaN;  var  =  Double.NaN;  var  =  Double.NaN;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	                var        =        Double.NaN;        var    =    Double.NaN;    var  =  Double.NaN;  var  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	58	1	add
139	[BUG]  [BUGGY]          var    =    Double.NaN;    var  =  Double.NaN;  double  var  =  Double.NaN;  var  =  Double.NaN;  [CE]  variable  var  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]          var    =    Double.NaN;    var  =  Double.NaN;  double  var  =  Double.NaN;  var  =  Double.NaN;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	                var        =        Double.NaN;        var    =    Double.NaN;    double  var  =  Double.NaN;  var  =  Double.NaN;	  	non-compiled	[CE]  variable  var  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	58	None	add
140	[BUG]  [BUGGY]          var    =    Double.NaN;    var  =  Double.NaN;  ||  test(values,  weights,  begin,  length))  {  var  =  Double.NaN;  var  =  Double.NaN;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]          var    =    Double.NaN;    var  =  Double.NaN;  ||  test(values,  weights,  begin,  length))  {  var  =  Double.NaN;  var  =  Double.NaN;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	                var        =        Double.NaN;        var    =    Double.NaN;    ||  test(values,  weights,  begin,  length))  {  var  =  Double.NaN;  var  =  Double.NaN;	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
141	[BUG]  [BUGGY]          var    =    Double.NaN;    var  =  Double.NaN;  int  var  =  Double.NaN;  var  =  Double.NaN;  [CE]  variable  var  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]          var    =    Double.NaN;    var  =  Double.NaN;  int  var  =  Double.NaN;  var  =  Double.NaN;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	                var        =        Double.NaN;        var    =    Double.NaN;    int  var  =  Double.NaN;  var  =  Double.NaN;	  	non-compiled	[CE]  variable  var  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	58	None	add
142	[BUG]  [BUGGY]          var    =    Double.NaN;    var  =  Double.NaN;  Var  var  =  Double.NaN;  var  =  Double.NaN;  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]          var    =    Double.NaN;    var  =  Double.NaN;  Var  var  =  Double.NaN;  var  =  Double.NaN;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	                var        =        Double.NaN;        var    =    Double.NaN;    Var  var  =  Double.NaN;  var  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol	58	None	add
143	[BUG]  [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  compare(values,  weights,  length);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  compare(values,  weights,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  isBiasCorrected?  Double.NaN  :  compare(values,  weights,  length);	  double    accum    =    isBiasCorrected?    Double.NaN    :    compare(values,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
144	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]          test(values,    weights,    begin,    length);    test(values,  weights,  begin,  length);  test(values,  weights,  begin,  length);  test(values,  weights,  begin,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	                test(values,        weights,        begin,        length);        test(values,    weights,    begin,    length);    test(values,  weights,  begin,  length);  test(values,  weights,  begin,  length);	  	compilable	  [FE]  AssertionError  	13	1	add
145	[BUG]  [BUGGY]          test(values,    weights,    begin,    length);    test(values,  weights,  begin,  length);  test(values,  weights,  begin,  length);  test(values,  weights,  begin,  length);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]          test(values,    weights,    begin,    length);    test(values,  weights,  begin,  length);  test(values,  weights,  begin,  length);  test(values,  weights,  begin,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	                test(values,        weights,        begin,        length);        test(values,    weights,    begin,    length);    test(values,  weights,  begin,  length);  test(values,  weights,  begin,  length);	  	compilable	  [FE]  AssertionError  	13	1	add
146	[BUG]  [BUGGY]          test(values,    weights,    begin,    length);    test(values,  weights,  begin,  length);  Test(values,  weights,  begin,  length);  test(values,  weights,  begin,  length);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]          test(values,    weights,    begin,    length);    test(values,  weights,  begin,  length);  Test(values,  weights,  begin,  length);  test(values,  weights,  begin,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	                test(values,        weights,        begin,        length);        test(values,    weights,    begin,    length);    Test(values,  weights,  begin,  length);  test(values,  weights,  begin,  length);	  	non-compiled	[CE]  cannot  find  symbol	13	None	add
147	[BUG]  [BUGGY]          test(values,    weights,    begin,    length);    test(values,  weights,  begin,  length);  test(values,  weights,  start,  length);  test(values,  weights,  begin,  length);  [CE]  cannot  find  symbol  start  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]          test(values,    weights,    begin,    length);    test(values,  weights,  begin,  length);  test(values,  weights,  start,  length);  test(values,  weights,  begin,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	                test(values,        weights,        begin,        length);        test(values,    weights,    begin,    length);    test(values,  weights,  start,  length);  test(values,  weights,  begin,  length);	  	non-compiled	[CE]  cannot  find  symbol  start	13	None	add
148	[BUG]  [BUGGY]          test(values,    weights,    begin,    length);    test(values,  weights,  begin,  length);  test(values,  weights,  begin,  length);  test(values,  weights,  start,  length);  [CE]  cannot  find  symbol  start  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]          test(values,    weights,    begin,    length);    test(values,  weights,  begin,  length);  test(values,  weights,  begin,  length);  test(values,  weights,  start,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	                test(values,        weights,        begin,        length);        test(values,    weights,    begin,    length);    test(values,  weights,  begin,  length);  test(values,  weights,  start,  length);	  	non-compiled	[CE]  cannot  find  symbol  start	13	None	add
149	[BUG]  [BUGGY]          test(values,    weights,    begin,    length);    test(values,  weights,  begin,  length);  test(values,  Weights,  begin,  length);  test(values,  weights,  begin,  length);  [CE]  cannot  find  symbol  Weights  [FE]            AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]          test(values,    weights,    begin,    length);    test(values,  weights,  begin,  length);  test(values,  Weights,  begin,  length);  test(values,  weights,  begin,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	                test(values,        weights,        begin,        length);        test(values,    weights,    begin,    length);    test(values,  Weights,  begin,  length);  test(values,  weights,  begin,  length);	  	non-compiled	[CE]  cannot  find  symbol  Weights	13	None	add
150	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(incMoment  ||  test(values,  begin,  length))  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if(incMoment  ||  test(values,  begin,  length))  {	  if(isBiasCorrected    ||    test(values,    begin,    length))    {    	compilable	  [FE]  AssertionError  	43	2	replace
151	[BUG]  [BUGGY]  if(incMoment  ||  test(values,  begin,  length))  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(incMoment  ||  test(values,  begin,  length))  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(incMoment  ||  test(values,  begin,  length))  {	  if(isBiasCorrected    ||    test(values,    begin,    length))    {    	compilable	  [FE]  AssertionError  	43	2	replace
152	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(isBiasCorrected  &&  test(values,  begin,  length))  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if(isBiasCorrected  &&  test(values,  begin,  length))  {	  if(isBiasCorrected    ||    test(values,    begin,    length))    {    	compilable	  [FE]  AssertionError  	43	2	replace
153	[BUG]  [BUGGY]  if(isBiasCorrected  &&  test(values,  begin,  length))  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(isBiasCorrected  &&  test(values,  begin,  length))  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(isBiasCorrected  &&  test(values,  begin,  length))  {	  if(isBiasCorrected    ||    test(values,    begin,    length))    {    	compilable	  [FE]  AssertionError  	43	2	replace
154	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(incMoment  &&  isBiasCorrected  ||  test(values,  begin,  length))  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if(incMoment  &&  isBiasCorrected  ||  test(values,  begin,  length))  {	  if(isBiasCorrected    ||    test(values,    begin,    length))    {    	compilable	  [FE]  AssertionError  	43	2	replace
155	[BUG]  [BUGGY]  if(incMoment  &&  isBiasCorrected  ||  test(values,  begin,  length))  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(incMoment  &&  isBiasCorrected  ||  test(values,  begin,  length))  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(incMoment  &&  isBiasCorrected  ||  test(values,  begin,  length))  {	  if(isBiasCorrected    ||    test(values,    begin,    length))    {    	compilable	  [FE]  AssertionError  	43	2	replace
156	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(!incMoment  &&  isBiasCorrected  ||  test(values,  begin,  length))  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if(!incMoment  &&  isBiasCorrected  ||  test(values,  begin,  length))  {	  if(isBiasCorrected    ||    test(values,    begin,    length))    {    	compilable	  [FE]  AssertionError  	43	2	replace
157	[BUG]  [BUGGY]  if(!incMoment  &&  isBiasCorrected  ||  test(values,  begin,  length))  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(!incMoment  &&  isBiasCorrected  ||  test(values,  begin,  length))  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(!incMoment  &&  isBiasCorrected  ||  test(values,  begin,  length))  {	  if(isBiasCorrected    ||    test(values,    begin,    length))    {    	compilable	  [FE]  AssertionError  	43	2	replace
158	[BUG]  [BUGGY]  Double[]  values  =  getValues().toArray(new  Double[values.size()  +  1]);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  Double[]  values  =  getValues().toArray(new  Double[values.size()  +  1]);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	Double[]  values  =  getValues().toArray(new  Double[values.size()  +  1]);	  Double[]    values    =    getValues().toArray(new    Double[values.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
159	[BUG]  [BUGGY]  Double[]  values  =  getValues().toArray(new  Double[values.size()  -  1]);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  Double[]  values  =  getValues().toArray(new  Double[values.size()  -  1]);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	Double[]  values  =  getValues().toArray(new  Double[values.size()  -  1]);	  Double[]    values    =    getValues().toArray(new    Double[values.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
160	[BUG]  [BUGGY]  double[]  values  =  getValues().toArray(new  Double[values.size()  ]);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double[]  values  =  getValues().toArray(new  Double[values.size()  ]);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double[]  values  =  getValues().toArray(new  Double[values.size()  ]);	  Double[]    values    =    getValues().toArray(new    Double[values.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
161	[BUG]  [BUGGY]  double  accum  =  incMoment?  Boolean.FALSE  :  Boolean.TRUE;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  incMoment?  Boolean.FALSE  :  Boolean.TRUE;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  incMoment?  Boolean.FALSE  :  Boolean.TRUE;	  double    accum    =    isBiasCorrected?    Boolean.FALSE    :    Boolean.TRUE;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
162	[BUG]  [BUGGY]  double  accum2  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;	  double    accum    =    isBiasCorrected?    Boolean.FALSE    :    Boolean.TRUE;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
163	[BUG]  [BUGGY]  if(isBiasCorrected  ||  test(values,  begin,  length))  {  if(isBiasCorrected  ||  test(values,  begin,  length))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(isBiasCorrected  ||  test(values,  begin,  length))  {  if(isBiasCorrected  ||  test(values,  begin,  length))  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(isBiasCorrected    ||    test(values,    begin,    length))    {    if(isBiasCorrected  ||  test(values,  begin,  length))  {	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
164	[BUG]  [BUGGY]  if(isBiasCorrected  ||  test(values,  begin,  length))  {  if(isBiasCorrected  ||  test(values,  start,  length))  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(isBiasCorrected  ||  test(values,  begin,  length))  {  if(isBiasCorrected  ||  test(values,  start,  length))  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(isBiasCorrected    ||    test(values,    begin,    length))    {    if(isBiasCorrected  ||  test(values,  start,  length))  {	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
165	[BUG]  [BUGGY]  if(isBiasCorrected  ||  test(values,  begin,  length))  {  If(isBiasCorrected  ||  test(values,  begin,  length))  {  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(isBiasCorrected  ||  test(values,  begin,  length))  {  If(isBiasCorrected  ||  test(values,  begin,  length))  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(isBiasCorrected    ||    test(values,    begin,    length))    {    If(isBiasCorrected  ||  test(values,  begin,  length))  {	  	non-compiled	[CE]  ';'  expected	42	None	add
166	[BUG]  [BUGGY]  for(final  double  var  :  values.length)  {  var  =  Double.NaN;  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  for(final  double  var  :  values.length)  {  var  =  Double.NaN;  }  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	for(final  double  var  :  values.length)  {  var  =  Double.NaN;  }	          var    =    Double.NaN;    for(final    double    var    :    values.length)    {    var    =    Double.NaN;    }    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
167	[BUG]  [BUGGY]  final  double  var  =  Double.NaN;  for(final  double  var  :  values.length)  {  var  =  Double.NaN;  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  final  double  var  =  Double.NaN;  for(final  double  var  :  values.length)  {  var  =  Double.NaN;  }  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	final  double  var  =  Double.NaN;  for(final  double  var  :  values.length)  {  var  =  Double.NaN;  }	          var    =    Double.NaN;    for(final    double    var    :    values.length)    {    var    =    Double.NaN;    }    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
168	[BUG]  [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  begin,  length));  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  begin,  length));  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  begin,  length));	  double    accum    =    isBiasCorrected?    Double.NaN    :    test(values,    weights,    begin,    length));    	non-compiled	[CE]  ';'  expected	130	None	replace
169	[BUG]  [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  values,  begin,  length));  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  values,  begin,  length));  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  values,  begin,  length));	  double    accum    =    isBiasCorrected?    Double.NaN    :    test(values,    weights,    begin,    length));    	non-compiled	[CE]  ';'  expected	130	None	replace
170	[BUG]  [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  mean,  begin,  length));  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  mean,  begin,  length));  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  mean,  begin,  length));	  double    accum    =    isBiasCorrected?    Double.NaN    :    test(values,    weights,    begin,    length));    	non-compiled	[CE]  ';'  expected	130	None	replace
171	[BUG]  [BUGGY]  int  length  =  values.length;  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  int  length  =  values.length;  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	int  length  =  values.length;	  if    (length    >    1)    {    int    length    =    values.length;    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
172	[BUG]  [BUGGY]  if(begin  <  begin  ||  length  >  1)  {  int  length  =  values.length;  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(begin  <  begin  ||  length  >  1)  {  int  length  =  values.length;  }  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(begin  <  begin  ||  length  >  1)  {  int  length  =  values.length;  }	  if    (length    >    1)    {    int    length    =    values.length;    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
173	[BUG]  [BUGGY]  if(length  >  1)  {  int  length  =  values.length;  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(length  >  1)  {  int  length  =  values.length;  }  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(length  >  1)  {  int  length  =  values.length;  }	  if    (length    >    1)    {    int    length    =    values.length;    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
174	[BUG]  [BUGGY]  Integer  length  =  values.length;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  Integer  length  =  values.length;  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	Integer  length  =  values.length;	  if    (length    >    1)    {    int    length    =    values.length;    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
175	[BUG]  [BUGGY]  if(length!=  1)  {  if(length!=  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(length!=  1)  {  if(length!=  1)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(length!=    1)    {    if(length!=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
176	[BUG]  [BUGGY]  if(length!=  1)  {  if(length  >=  1)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(length!=  1)  {  if(length  >=  1)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(length!=    1)    {    if(length  >=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
177	[BUG]  [BUGGY]  if(length!=  1)  {  if(length  >>  1)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(length!=  1)  {  if(length  >>  1)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(length!=    1)    {    if(length  >>  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
178	[BUG]  [BUGGY]  if(length!=  1)  {  if(length  ==  1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(length!=  1)  {  if(length  ==  1)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(length!=    1)    {    if(length  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
179	[BUG]  [BUGGY]  if(length!=  1)  {  if(length  [BUGGY]  1)  {  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(length!=  1)  {  if(length  [BUGGY]  1)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(length!=    1)    {    if(length  [BUGGY]  1)  {	  	non-compiled	[CE]  ')'  expected	21	None	add
180	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(isBiasCorrected  ||  begin  <  length)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if(isBiasCorrected  ||  begin  <  length)  {	  if(biasCorrected    ||    begin    <    length)    {    	compilable	  [FE]  AssertionError  	105	2	replace
181	[BUG]  [BUGGY]  if(isBiasCorrected  ||  begin  <  length)  {  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(isBiasCorrected  ||  begin  <  length)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(isBiasCorrected  ||  begin  <  length)  {	  if(biasCorrected    ||    begin    <    length)    {    	compilable	  [FE]  AssertionError  	105	2	replace
182	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(incMoment  ||  begin  <  length)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if(incMoment  ||  begin  <  length)  {	  if(biasCorrected    ||    begin    <    length)    {    	compilable	  [FE]  AssertionError  	105	2	replace
183	[BUG]  [BUGGY]  if(incMoment  ||  begin  <  length)  {  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(incMoment  ||  begin  <  length)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(incMoment  ||  begin  <  length)  {	  if(biasCorrected    ||    begin    <    length)    {    	compilable	  [FE]  AssertionError  	105	2	replace
184	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(!incMoment  ||  begin  <  length)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if(!incMoment  ||  begin  <  length)  {	  if(biasCorrected    ||    begin    <    length)    {    	compilable	  [FE]  AssertionError  	105	3	replace
185	[BUG]  [BUGGY]  if(!incMoment  ||  begin  <  length)  {  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(!incMoment  ||  begin  <  length)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(!incMoment  ||  begin  <  length)  {	  if(biasCorrected    ||    begin    <    length)    {    	compilable	  [FE]  AssertionError  	105	3	replace
186	[BUG]  [BUGGY]  if(ignoreBiasCorrected  ||  begin  <  length)  {  [CE]  cannot  find  symbol  ignoreBiasCorrected  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(ignoreBiasCorrected  ||  begin  <  length)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(ignoreBiasCorrected  ||  begin  <  length)  {	  if(biasCorrected    ||    begin    <    length)    {    	non-compiled	[CE]  cannot  find  symbol  ignoreBiasCorrected	105	None	replace
187	[BUG]  [BUGGY]  if(length  <  2)  {  if(length  <  2)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(length  <  2)  {  if(length  <  2)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(length    <    2)    {    if(length  <  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	112	None	add
188	[BUG]  [BUGGY]  if(length  <  2)  {  If(length  <  2)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(length  <  2)  {  If(length  <  2)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(length    <    2)    {    If(length  <  2)  {	  	non-compiled	[CE]  ';'  expected	112	None	add
189	[BUG]  [BUGGY]  if(length  <  2)  {  if(length  >=  2)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(length  <  2)  {  if(length  >=  2)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(length    <    2)    {    if(length  >=  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	112	None	add
190	[BUG]  [BUGGY]  if(length  <  2)  {  int  length  <  2)  {  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(length  <  2)  {  int  length  <  2)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(length    <    2)    {    int  length  <  2)  {	  	non-compiled	[CE]  ';'  expected	112	None	add
191	[BUG]  [BUGGY]  Double[]  values  =  getValues(var,  mean);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  Double[]  values  =  getValues(var,  mean);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	Double[]  values  =  getValues(var,  mean);	  Double[]    values    =    getValues(var);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
192	[BUG]  [BUGGY]  double[]  values  =  getValues(var);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double[]  values  =  getValues(var);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double[]  values  =  getValues(var);	  Double[]    values    =    getValues(var);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
193	[BUG]  [BUGGY]  Double[]  values  =  getValues(var,  length);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  Double[]  values  =  getValues(var,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	Double[]  values  =  getValues(var,  length);	  Double[]    values    =    getValues(var);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
194	[BUG]  [BUGGY]  var  =  Double.POSITIVE_INFINITY  +  1;  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  Double.POSITIVE_INFINITY  +  1;	  var    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
195	[BUG]  [BUGGY]  var  =  Double.POSITIVE_INFINITY  |  Double.NaN;  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  Double.POSITIVE_INFINITY  |  Double.NaN;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  Double.POSITIVE_INFINITY  |  Double.NaN;	  var    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
196	[BUG]  [BUGGY]  var  =  test(values,  weights,  begin,  length);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  test(values,  weights,  begin,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  test(values,  weights,  begin,  length);	          test(values,    weights,    begin,    length);    var    =    test(values,    weights,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
197	[BUG]  [BUGGY]  var  =  test(values,  begin,  length);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  test(values,  begin,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  test(values,  begin,  length);	          test(values,    weights,    begin,    length);    var    =    test(values,    weights,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
198	[BUG]  [BUGGY]  var  =  test(values,  values,  begin,  length);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  test(values,  values,  begin,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  test(values,  values,  begin,  length);	          test(values,    weights,    begin,    length);    var    =    test(values,    weights,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
199	[BUG]  [BUGGY]  var  =  test(values,  weights.length,  begin,  length);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  test(values,  weights.length,  begin,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  test(values,  weights.length,  begin,  length);	          test(values,    weights,    begin,    length);    var    =    test(values,    weights,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
200	[BUG]  [BUGGY]  accum2  =  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  accum2  =  Double.POSITIVE_INFINITY;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	accum2  =  Double.POSITIVE_INFINITY;	  double    accum2    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
201	[BUG]  [BUGGY]  double  accum2  =  Double.POSITIVE_INFINITY  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Double.POSITIVE_INFINITY  +  1;	  double    accum2    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
202	[BUG]  [BUGGY]  test(values,  mean,  length));  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  test(values,  mean,  length));  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  mean,  length));	  test(values,    begin,    length));    	non-compiled	[CE]  ';'  expected	10	None	replace
203	[BUG]  [BUGGY]  test(values,  var,  length));  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  test(values,  var,  length));  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  var,  length));	  test(values,    begin,    length));    	non-compiled	[CE]  ';'  expected	10	None	replace
204	[BUG]  [BUGGY]  test(values,  values,  begin,  length);  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  test(values,  values,  begin,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  values,  begin,  length);	          test(values,    weights,    begin,    length);    test(values,    weights,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
205	[BUG]  [BUGGY]  var  =  Double.POSITIVE_INFINITY;  var  =  Double.NaN;  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  Double.POSITIVE_INFINITY;  var  =  Double.NaN;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  Double.POSITIVE_INFINITY;  var  =  Double.NaN;	          var    =    Double.NaN;    var    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
206	[BUG]  [BUGGY]  var  =  null;  var  =  Double.NaN;  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  null;  var  =  Double.NaN;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  null;  var  =  Double.NaN;	          var    =    Double.NaN;    var    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
207	[BUG]  [BUGGY]  var  =  Double.NaN;  for(final  int  var  :  values.length)  {  var  =  Double.NaN;  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  Double.NaN;  for(final  int  var  :  values.length)  {  var  =  Double.NaN;  }  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  Double.NaN;  for(final  int  var  :  values.length)  {  var  =  Double.NaN;  }	          var    =    Double.NaN;    for(final    double    var    :    values.length)    {    var    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
208	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(!isBiasCorrected)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if(!isBiasCorrected)  {	  if(!incMoment)    {    	compilable	  [FE]  AssertionError  	75	1	replace
209	[BUG]  [BUGGY]  if(!isBiasCorrected)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(!isBiasCorrected)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(!isBiasCorrected)  {	  if(!incMoment)    {    	compilable	  [FE]  AssertionError  	75	1	replace
210	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(isBiasCorrected  ||!incMoment)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if(isBiasCorrected  ||!incMoment)  {	  if(!incMoment)    {    	compilable	  [FE]  AssertionError  	75	2	replace
211	[BUG]  [BUGGY]  if(isBiasCorrected  ||!incMoment)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(isBiasCorrected  ||!incMoment)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(isBiasCorrected  ||!incMoment)  {	  if(!incMoment)    {    	compilable	  [FE]  AssertionError  	75	2	replace
212	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(!isBiasCorrected  ||!incMoment)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if(!isBiasCorrected  ||!incMoment)  {	  if(!incMoment)    {    	compilable	  [FE]  AssertionError  	75	1	replace
213	[BUG]  [BUGGY]  if(!isBiasCorrected  ||!incMoment)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(!isBiasCorrected  ||!incMoment)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(!isBiasCorrected  ||!incMoment)  {	  if(!incMoment)    {    	compilable	  [FE]  AssertionError  	75	1	replace
214	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]          var    =    Double.NaN;    var  =  Double.NaN  +  1;  var  =  Double.NaN;  var  =  Double.NaN  +  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	                var        =        Double.NaN;        var    =    Double.NaN    +    1;    var  =  Double.NaN;  var  =  Double.NaN  +  1;	  	compilable	  [FE]  AssertionError  	63	1	add
215	[BUG]  [BUGGY]          var    =    Double.NaN;    var  =  Double.NaN  +  1;  var  =  Double.NaN;  var  =  Double.NaN  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]          var    =    Double.NaN;    var  =  Double.NaN  +  1;  var  =  Double.NaN;  var  =  Double.NaN  +  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	                var        =        Double.NaN;        var    =    Double.NaN    +    1;    var  =  Double.NaN;  var  =  Double.NaN  +  1;	  	compilable	  [FE]  AssertionError  	63	1	add
216	[BUG]  [BUGGY]          var    =    Double.NaN;    var  =  Double.NaN  +  1;  double  var  =  Double.NaN;  var  =  Double.NaN  +  1;  [CE]  variable  var  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]          var    =    Double.NaN;    var  =  Double.NaN  +  1;  double  var  =  Double.NaN;  var  =  Double.NaN  +  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	                var        =        Double.NaN;        var    =    Double.NaN    +    1;    double  var  =  Double.NaN;  var  =  Double.NaN  +  1;	  	non-compiled	[CE]  variable  var  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	63	None	add
217	[BUG]  [BUGGY]          var    =    Double.NaN;    var  =  Double.NaN  +  1;  int  var  =  Double.NaN;  var  =  Double.NaN  +  1;  [CE]  variable  var  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]          var    =    Double.NaN;    var  =  Double.NaN  +  1;  int  var  =  Double.NaN;  var  =  Double.NaN  +  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	                var        =        Double.NaN;        var    =    Double.NaN    +    1;    int  var  =  Double.NaN;  var  =  Double.NaN  +  1;	  	non-compiled	[CE]  variable  var  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	63	None	add
218	[BUG]  [BUGGY]          var    =    Double.NaN;    var  =  Double.NaN  +  1;  Var  var  =  Double.NaN;  var  =  Double.NaN  +  1;  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]          var    =    Double.NaN;    var  =  Double.NaN  +  1;  Var  var  =  Double.NaN;  var  =  Double.NaN  +  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	                var        =        Double.NaN;        var    =    Double.NaN    +    1;    Var  var  =  Double.NaN;  var  =  Double.NaN  +  1;	  	non-compiled	[CE]  cannot  find  symbol	63	None	add
219	[BUG]  [BUGGY]          var    =    Double.NaN;    var  =  Double.NaN  +  1;  Double.NaN;  var  =  Double.NaN  +  1;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]          var    =    Double.NaN;    var  =  Double.NaN  +  1;  Double.NaN;  var  =  Double.NaN  +  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	                var        =        Double.NaN;        var    =    Double.NaN    +    1;    Double.NaN;  var  =  Double.NaN  +  1;	  	non-compiled	[CE]  not  a  statement	63	None	add
220	[BUG]  [BUGGY]  double  accum  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY  +  1;	  double    accum    =    isBiasCorrected?    Double.POSITIVE_INFINITY    :    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
221	[BUG]  [BUGGY]  accum  =  Double.NEGATIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  accum  =  Double.NEGATIVE_INFINITY;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	accum  =  Double.NEGATIVE_INFINITY;	  double    accum    =    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
222	[BUG]  [BUGGY]  test(values,  mean,  begin,  length);  double  var  =  Double.NaN;  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  test(values,  mean,  begin,  length);  double  var  =  Double.NaN;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  mean,  begin,  length);  double  var  =  Double.NaN;	          test(values,    weights,    begin,    length);    double    var    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
223	[BUG]  [BUGGY]  test(values,  mean,  begin,  length);  var  =  Double.NaN;  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  test(values,  mean,  begin,  length);  var  =  Double.NaN;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  mean,  begin,  length);  var  =  Double.NaN;	          test(values,    weights,    begin,    length);    var    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
224	[BUG]  [BUGGY]  test(values,  begin,  length);  var  =  Double.NaN;  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  test(values,  begin,  length);  var  =  Double.NaN;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  begin,  length);  var  =  Double.NaN;	          test(values,    weights,    begin,    length);    var    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
225	[BUG]  [BUGGY]  double  accum2  =  0.0001;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  0.0001;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  0.0001;	  double    accum2    =    0.001;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
226	[BUG]  [BUGGY]  test(values,  Weights,  begin,  length);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  test(values,  Weights,  begin,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  Weights,  begin,  length);	          test(values,    weights,    begin,    length);    test(values,    Weights,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
227	[BUG]  [BUGGY]  Test(values,  Weights,  begin,  length);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  Test(values,  Weights,  begin,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	Test(values,  Weights,  begin,  length);	          test(values,    weights,    begin,    length);    test(values,    Weights,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
228	[BUG]  [BUGGY]  test(values,  Weights,  start,  length);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  test(values,  Weights,  start,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  Weights,  start,  length);	          test(values,    weights,    begin,    length);    test(values,    Weights,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
229	[BUG]  [BUGGY]  var  =  Double.MIN_VALUE;  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  Double.MIN_VALUE;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  Double.MIN_VALUE;	          var    =    Double.NaN;    double    var    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
230	[BUG]  [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  weights,  start,  length);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  weights,  start,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  weights,  start,  length);	  double    accum    =    isBiasCorrected?    Double.NaN    :    test(values,    start,    length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
231	[BUG]  [BUGGY]  var  =  new  Double(values,  begin,  length);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  new  Double(values,  begin,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  new  Double(values,  begin,  length);	  var    =    new    Double(values.length);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
232	[BUG]  [BUGGY]  var  =  new  Double(values.length  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  new  Double(values.length  +  1);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  new  Double(values.length  +  1);	  var    =    new    Double(values.length);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
233	[BUG]  [BUGGY]  var  =  new  Double(values,  length);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  new  Double(values,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  new  Double(values,  length);	  var    =    new    Double(values.length);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
234	[BUG]  [BUGGY]  var  =  new  Double(values.length  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  new  Double(values.length  -  1);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  new  Double(values.length  -  1);	  var    =    new    Double(values.length);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
235	[BUG]  [BUGGY]  var  =  Double.NaN;  var  =  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  Double.NaN;  var  =  Double.POSITIVE_INFINITY;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  Double.NaN;  var  =  Double.POSITIVE_INFINITY;	          var    =    Double.NaN;    var    =    Double.naN;    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
236	[BUG]  [BUGGY]  if(begin  <  1)  {  if(length  >=  1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(begin  <  1)  {  if(length  >=  1)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(begin  <  1)  {  if(length  >=  1)  {	  if    (length    <    1)    {    if    (length    >=    1)    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
237	[BUG]  [BUGGY]  double  accum  =  incMoment?  Double.NaN  :  compare(values,  begin,  length);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  incMoment?  Double.NaN  :  compare(values,  begin,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  incMoment?  Double.NaN  :  compare(values,  begin,  length);	  double    accum    =    incMoment?    Double.NaN    :    compare(values,    weights,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
238	[BUG]  [BUGGY]  double  accum2  =  Math.abs(values.length  -  2);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  Math.abs(values.length  -  2);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Math.abs(values.length  -  2);	  double    accum2    =    Math.abs(values.length    -    1);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
239	[BUG]  [BUGGY]  double  accum2  =  Math.abs(values.length  -  1,  length);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  Math.abs(values.length  -  1,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Math.abs(values.length  -  1,  length);	  double    accum2    =    Math.abs(values.length    -    1);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
240	[BUG]  [BUGGY]  var  =  Double.POSITIVE_INFINITY  |  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  Double.POSITIVE_INFINITY  |  Double.POSITIVE_INFINITY;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  Double.POSITIVE_INFINITY  |  Double.POSITIVE_INFINITY;	  var    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
241	[BUG]  [BUGGY]  var  =  Double.POSITIVE_INFINITY  |  Double.NEGATIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  Double.POSITIVE_INFINITY  |  Double.NEGATIVE_INFINITY;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  Double.POSITIVE_INFINITY  |  Double.NEGATIVE_INFINITY;	  var    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
242	[BUG]  [BUGGY]  double  accum  =  this.incMoment?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  this.incMoment?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  this.incMoment?  Boolean.TRUE  :  Boolean.FALSE;	  double    accum    =    incMoment?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
243	[BUG]  [BUGGY]  double  accum  =  0,  length  =  Integer.MAX_VALUE;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  0,  length  =  Integer.MAX_VALUE;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  0,  length  =  Integer.MAX_VALUE;	  double    accum    =    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
244	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(test(values,  begin,  length)&&  test(values,  weights,  0,  length))  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if(test(values,  begin,  length)&&  test(values,  weights,  0,  length))  {	  if    (test(values,    weights,    begin,    length))    {    if    (test(values,    weights,    0,    length))    {    	compilable	  [FE]  AssertionError  	87	2	replace
245	[BUG]  [BUGGY]  if(test(values,  begin,  length)&&  test(values,  weights,  0,  length))  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(test(values,  begin,  length)&&  test(values,  weights,  0,  length))  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(test(values,  begin,  length)&&  test(values,  weights,  0,  length))  {	  if    (test(values,    weights,    begin,    length))    {    if    (test(values,    weights,    0,    length))    {    	compilable	  [FE]  AssertionError  	87	2	replace
246	[BUG]  [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  compare(values,  start,  length);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  compare(values,  start,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  isBiasCorrected?  Double.NaN  :  compare(values,  start,  length);	  double    accum    =    isBiasCorrected?    Double.NaN    :    compare(values,    mean,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
247	[BUG]  [BUGGY]  var  =  Double.NEGATIVE_INFINITY  +  1;  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  Double.NEGATIVE_INFINITY  +  1;	  var    =    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
248	[BUG]  [BUGGY]  double  accum  =  Double.NaN  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  Double.NaN  -  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  Double.NaN  -  1;	  double    accum    =    Double.NaN    +    1;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
249	[BUG]  [BUGGY]  double  accum  =  10.0;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  10.0;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  10.0;	  double    accum    =    0.0;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
250	[BUG]  [BUGGY]  if(begin  <  begin)  {  if(length  >  1)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(begin  <  begin)  {  if(length  >  1)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(begin  <  begin)  {  if(length  >  1)  {	  if    (length    >    1)    {    if    (length    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
251	[BUG]  [BUGGY]  if(begin  >=  begin)  {  if(length  >  1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(begin  >=  begin)  {  if(length  >  1)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(begin  >=  begin)  {  if(length  >  1)  {	  if    (length    >    1)    {    if    (length    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
252	[BUG]  [BUGGY]  if(length  >  2)  {  int  length  =  values.length;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(length  >  2)  {  int  length  =  values.length;  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(length    >    2)    {    int  length  =  values.length;	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
253	[BUG]  [BUGGY]  if(length  >  2)  {  int  length  =  values.length  -  mean;  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(length  >  2)  {  int  length  =  values.length  -  mean;  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(length    >    2)    {    int  length  =  values.length  -  mean;	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
254	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(incMoment  ||  test(values,  weights,  begin,  length))  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if(incMoment  ||  test(values,  weights,  begin,  length))  {	  if(isBiasCorrected    ||    test(values,    begin,    length))    {    	compilable	  [FE]  AssertionError  	43	2	replace
255	[BUG]  [BUGGY]  if(incMoment  ||  test(values,  weights,  begin,  length))  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(incMoment  ||  test(values,  weights,  begin,  length))  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(incMoment  ||  test(values,  weights,  begin,  length))  {	  if(isBiasCorrected    ||    test(values,    begin,    length))    {    	compilable	  [FE]  AssertionError  	43	2	replace
256	[BUG]  [BUGGY]  Double  accum2  =(var  <  0.0)?  0.0  :  0.0;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  Double  accum2  =(var  <  0.0)?  0.0  :  0.0;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	Double  accum2  =(var  <  0.0)?  0.0  :  0.0;	  Double    accum2    =    0.0;    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
257	[BUG]  [BUGGY]          test(values,    weights,    begin,    length);    var  =  Double.NaN;  double  var  =  Double.NaN;  [CE]  variable  var  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]          test(values,    weights,    begin,    length);    var  =  Double.NaN;  double  var  =  Double.NaN;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	                test(values,        weights,        begin,        length);        var    =    Double.NaN;    double  var  =  Double.NaN;	  	non-compiled	[CE]  variable  var  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	102	None	add
258	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]          test(values,    weights,    begin,    length);    var  =  Double.NaN;  var  =  Double.NaN;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	                test(values,        weights,        begin,        length);        var    =    Double.NaN;    var  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	102	1	add
259	[BUG]  [BUGGY]          test(values,    weights,    begin,    length);    var  =  Double.NaN;  var  =  Double.NaN;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]          test(values,    weights,    begin,    length);    var  =  Double.NaN;  var  =  Double.NaN;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	                test(values,        weights,        begin,        length);        var    =    Double.NaN;    var  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	102	1	add
260	[BUG]  [BUGGY]  double  var  =  Integer.POSITIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  var  =  Integer.POSITIVE_INFINITY;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  var  =  Integer.POSITIVE_INFINITY;	  double    var    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
261	[BUG]  [BUGGY]  double  var  =  Double.POSITIVE_INFINITY  |  Double.NEGATIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  var  =  Double.POSITIVE_INFINITY  |  Double.NEGATIVE_INFINITY;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  var  =  Double.POSITIVE_INFINITY  |  Double.NEGATIVE_INFINITY;	  double    var    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
262	[BUG]  [BUGGY]  test(values,  mean,  var,  begin,  length);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  test(values,  mean,  var,  begin,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  mean,  var,  begin,  length);	  test(values,    var,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
263	[BUG]  [BUGGY]  double  var  =  Double.NaN;  for(final  double  var  :  values.length)  {  var  =  Double.NaN;  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  var  =  Double.NaN;  for(final  double  var  :  values.length)  {  var  =  Double.NaN;  }  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  var  =  Double.NaN;  for(final  double  var  :  values.length)  {  var  =  Double.NaN;  }	          var    =    Double.NaN;    for(final    double    var    :    values.length)    {    var    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
264	[BUG]  [BUGGY]  double  accum2  =  0.001  +  mean;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  0.001  +  mean;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  0.001  +  mean;	  double    accum2    =    0.001;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
265	[BUG]  [BUGGY]  test(values,  accum,  0,  length));  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  test(values,  accum,  0,  length));  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  accum,  0,  length));	  test(values,    accum,    begin,    length));    	non-compiled	[CE]  ';'  expected	12	None	replace
266	[BUG]  [BUGGY]  test(values,  accum,  mean,  length));  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  test(values,  accum,  mean,  length));  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  accum,  mean,  length));	  test(values,    accum,    begin,    length));    	non-compiled	[CE]  ';'  expected	12	None	replace
267	[BUG]  [BUGGY]  if  (test(values,  begin,  length))  {  if  (test(values,  weights,  length))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if  (test(values,  begin,  length))  {  if  (test(values,  weights,  length))  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if    (test(values,    begin,    length))    {    if  (test(values,  weights,  length))  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
268	[BUG]  [BUGGY]  if  (test(values,  begin,  length))  {  if  (test(values,  length))  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if  (test(values,  begin,  length))  {  if  (test(values,  length))  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if    (test(values,    begin,    length))    {    if  (test(values,  length))  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
269	[BUG]  [BUGGY]  double  accum2  =  0.000;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  0.000;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  0.000;	  double    accum2    =    0.00;    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
270	[BUG]  [BUGGY]  if(incMoment)  {  if(incMoment  ||  isBiasCorrected)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(incMoment)  {  if(incMoment  ||  isBiasCorrected)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(incMoment)    {    if(incMoment  ||  isBiasCorrected)  {	  	non-compiled	[CE]  illegal  start  of  expression	124	None	add
271	[BUG]  [BUGGY]  if(incMoment)  {  if(incMoment  ||  incMoment)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(incMoment)  {  if(incMoment  ||  incMoment)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(incMoment)    {    if(incMoment  ||  incMoment)  {	  	non-compiled	[CE]  illegal  start  of  expression	124	None	add
272	[BUG]  [BUGGY]  if(begin  >=  begin)  {  if(length  >=  2)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(begin  >=  begin)  {  if(length  >=  2)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(begin  >=  begin)  {  if(length  >=  2)  {	  if(length    ==    2)    {    if(length    >=    2)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
273	[BUG]  [BUGGY]  if(begin  >=  begin  +  length)  {  if(length  >=  2)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(begin  >=  begin  +  length)  {  if(length  >=  2)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(begin  >=  begin  +  length)  {  if(length  >=  2)  {	  if(length    ==    2)    {    if(length    >=    2)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
274	[BUG]  [BUGGY]  if(begin  ==  begin)  {  if(length  ==  2)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(begin  ==  begin)  {  if(length  ==  2)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(begin  ==  begin)  {  if(length  ==  2)  {	  if(length    ==    2)    {    if(length    ==    2)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
275	[BUG]  [BUGGY]  var  =  test(values,  weights,  start,  length);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  test(values,  weights,  start,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  test(values,  weights,  start,  length);	          test(values,    weights,    begin,    length);    var    =    test(values,    weights,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
276	[BUG]  [BUGGY]  Double  accum  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  Double  accum  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	Double  accum  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY;	  double    accum    =    isBiasCorrected?    Double.POSITIVE_INFINITY    :    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
277	[BUG]  [BUGGY]  double  accum2  =  Math.abs(var  +  mean);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  Math.abs(var  +  mean);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Math.abs(var  +  mean);	  double    accum2    =    Math.abs(var);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
278	[BUG]  [BUGGY]  if(!incMoment)  {  if(!incMoment  ||  isBiasCorrected)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(!incMoment)  {  if(!incMoment  ||  isBiasCorrected)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(!incMoment)    {    if(!incMoment  ||  isBiasCorrected)  {	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
279	[BUG]  [BUGGY]  var  =  mean;  var  =  Double.NaN;  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  mean;  var  =  Double.NaN;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  mean;  var  =  Double.NaN;	          var    =    Double.NaN;    var    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
280	[BUG]  [BUGGY]  var  =  0.0;  var  =  0.0;  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  0.0;  var  =  0.0;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  0.0;  var  =  0.0;	          var    =    Double.NaN;    var    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
281	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(test(values,  begin,  length)||  test(values,  0,  length))  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if(test(values,  begin,  length)||  test(values,  0,  length))  {	  if    (test(values,    weights,    begin,    length))    {    if    (test(values,    0,    length))    {    	compilable	  [FE]  AssertionError  	119	2	replace
282	[BUG]  [BUGGY]  if(test(values,  begin,  length)||  test(values,  0,  length))  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(test(values,  begin,  length)||  test(values,  0,  length))  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(test(values,  begin,  length)||  test(values,  0,  length))  {	  if    (test(values,    weights,    begin,    length))    {    if    (test(values,    0,    length))    {    	compilable	  [FE]  AssertionError  	119	2	replace
283	[BUG]  [BUGGY]          var    =    Double.NaN;    var  =  Double.NaN;  Double.NaN;  var  =  Double.NaN;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]          var    =    Double.NaN;    var  =  Double.NaN;  Double.NaN;  var  =  Double.NaN;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	                var        =        Double.NaN;        var    =    Double.NaN;    Double.NaN;  var  =  Double.NaN;	  	non-compiled	[CE]  not  a  statement	58	None	add
284	[BUG]  [BUGGY]  double  accum  =  incMoment?  Double.POSITIVE_INFINITY  :  Double.NaN  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  incMoment?  Double.POSITIVE_INFINITY  :  Double.NaN  +  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  incMoment?  Double.POSITIVE_INFINITY  :  Double.NaN  +  1;	  double    accum    =    incMoment?    Double.POSITIVE_INFINITY    :    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
285	[BUG]  [BUGGY]  var  =  Double.POSITIVE_INFINITY;  double  var  =  Double.NaN;  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  Double.POSITIVE_INFINITY;  double  var  =  Double.NaN;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  Double.POSITIVE_INFINITY;  double  var  =  Double.NaN;	          var    =    Double.NaN;    double    var    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
286	[BUG]  [BUGGY]  var  =  Double.NEGATIVE;  var  =  Double.NaN  +  1;  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  Double.NEGATIVE;  var  =  Double.NaN  +  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  Double.NEGATIVE;  var  =  Double.NaN  +  1;	          var    =    Double.NaN;    var    =    Double.NaN    +    1;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
287	[BUG]  [BUGGY]  double  accum2  =  Math.abs(values.length  *  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  Math.abs(values.length  *  1);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Math.abs(values.length  *  1);	  double    accum2    =    Math.abs(values.length    +    1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
288	[BUG]  [BUGGY]  test(values,  Weights,  var,  length);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  test(values,  Weights,  var,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  Weights,  var,  length);	          test(values,    weights,    begin,    length);    test(values,    Weights,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
289	[BUG]  [BUGGY]  Double[]  values  =  getValues(values,  begin);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  Double[]  values  =  getValues(values,  begin);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	Double[]  values  =  getValues(values,  begin);	  Double[]    values    =    getValues(mean);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
290	[BUG]  [BUGGY]  if(length  <  2)  {  while(length  <  2)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(length  <  2)  {  while(length  <  2)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(length    <    2)    {    while(length  <  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	112	None	add
291	[BUG]  [BUGGY]  test(values,  mean,  begin,  length);  validate(values,  weights,  begin,  length);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  test(values,  mean,  begin,  length);  validate(values,  weights,  begin,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  mean,  begin,  length);  validate(values,  weights,  begin,  length);	          test(values,    weights,    begin,    length);    validate(values,    weights,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
292	[BUG]  [BUGGY]  double  accum2  =  Double.POSITIVE;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  Double.POSITIVE;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Double.POSITIVE;	  double    accum2    =    Double.NEGATIVE;    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
293	[BUG]  [BUGGY]  double  accum  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE  *  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE  *  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE  *  1;	  double    accum    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE    +    1;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
294	[BUG]  [BUGGY]  Double[]  values  =  getValues().toArray(values,  begin);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  Double[]  values  =  getValues().toArray(values,  begin);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	Double[]  values  =  getValues().toArray(values,  begin);	  Double[]    values    =    getValues().toArray(values);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
295	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]          test(values,    weights,    begin,    length);    test(values,  weights,  begin,  length);  test(values,  begin,  length);  test(values,  weights,  begin,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	                test(values,        weights,        begin,        length);        test(values,    weights,    begin,    length);    test(values,  begin,  length);  test(values,  weights,  begin,  length);	  	compilable	  [FE]  AssertionError  	13	1	add
296	[BUG]  [BUGGY]          test(values,    weights,    begin,    length);    test(values,  weights,  begin,  length);  test(values,  begin,  length);  test(values,  weights,  begin,  length);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]          test(values,    weights,    begin,    length);    test(values,  weights,  begin,  length);  test(values,  begin,  length);  test(values,  weights,  begin,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	                test(values,        weights,        begin,        length);        test(values,    weights,    begin,    length);    test(values,  begin,  length);  test(values,  weights,  begin,  length);	  	compilable	  [FE]  AssertionError  	13	1	add
297	[BUG]  [BUGGY]  if(begin  <  begin  +  length)  {  if(length  <  1)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(begin  <  begin  +  length)  {  if(length  <  1)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(begin  <  begin  +  length)  {  if(length  <  1)  {	  if    (length    <    1)    {    if    (length    <    1)    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
298	[BUG]  [BUGGY]  if(begin  <  begin)  {  if(length  <  1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(begin  <  begin)  {  if(length  <  1)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(begin  <  begin)  {  if(length  <  1)  {	  if    (length    <    1)    {    if    (length    <    1)    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
299	[BUG]  [BUGGY]  if(begin  <  length)  {  if(length  <  1)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(begin  <  length)  {  if(length  <  1)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(begin  <  length)  {  if(length  <  1)  {	  if    (length    <    1)    {    if    (length    <    1)    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
300	[BUG]  [BUGGY]  var  =  new  Double(values,  begin);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  new  Double(values,  begin);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  new  Double(values,  begin);	  var    =    new    Double(values.length);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
301	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(incMoment  &&  isBiasCorrected)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if(incMoment  &&  isBiasCorrected)  {	  if(isBiasCorrected    ||    isBiasCorrected)    {    	compilable	  [FE]  AssertionError  	50	2	replace
302	[BUG]  [BUGGY]  if(incMoment  &&  isBiasCorrected)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(incMoment  &&  isBiasCorrected)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(incMoment  &&  isBiasCorrected)  {	  if(isBiasCorrected    ||    isBiasCorrected)    {    	compilable	  [FE]  AssertionError  	50	2	replace
303	[BUG]  [BUGGY]  var  =  Double.NaN;  var  =  Double.NEGATIVE;  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  Double.NaN;  var  =  Double.NEGATIVE;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  Double.NaN;  var  =  Double.NEGATIVE;	          var    =    Double.NaN;    var    =    Double.naN;    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
304	[BUG]  [BUGGY]  test(values,  accum,  mean,  begin,  length);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  test(values,  accum,  mean,  begin,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  accum,  mean,  begin,  length);	  test(values,    accum,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
305	[BUG]  [BUGGY]  if(var  ==  null)  {  [CE]  incomparable  types:  double  and  <null>  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(var  ==  null)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(var  ==  null)  {	  if    (test(values,    values,    begin,    length))    {    if    (test(values,    weights,    begin,    length))    {    	non-compiled	[CE]  incomparable  types:  double  and  <null>	107	None	replace
306	[BUG]  [BUGGY]  double  accum  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE,  0,  incMoment;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE,  0,  incMoment;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE,  0,  incMoment;	  double    accum    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE,    incMoment;    	non-compiled	[CE]  <identifier>  expected	128	None	replace
307	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(begin  <  begin  ||  begin  >  length)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if(begin  <  begin  ||  begin  >  length)  {	  if    (length    >    1)    {    int    length    >    1)    {    	compilable	  [FE]  AssertionError  	6	1	replace
308	[BUG]  [BUGGY]  if(begin  <  begin  ||  begin  >  length)  {  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(begin  <  begin  ||  begin  >  length)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(begin  <  begin  ||  begin  >  length)  {	  if    (length    >    1)    {    int    length    >    1)    {    	compilable	  [FE]  AssertionError  	6	1	replace
309	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(begin  <  begin  ||  length  >  1)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if(begin  <  begin  ||  length  >  1)  {	  if    (length    >    1)    {    int    length    >    1)    {    	compilable	  [FE]  AssertionError  	6	2	replace
310	[BUG]  [BUGGY]  if(begin  <  begin  ||  length  >  1)  {  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(begin  <  begin  ||  length  >  1)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(begin  <  begin  ||  length  >  1)  {	  if    (length    >    1)    {    int    length    >    1)    {    	compilable	  [FE]  AssertionError  	6	2	replace
311	[BUG]  [BUGGY]  if(begin  <  length)  {  if(length  >  1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(begin  <  length)  {  if(length  >  1)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(begin  <  length)  {  if(length  >  1)  {	  if    (length    <    1)    {    if    (length    >=    1)    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
312	[BUG]  [BUGGY]  if(begin  <  begin  +  length)  {  if(length  >  1)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(begin  <  begin  +  length)  {  if(length  >  1)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(begin  <  begin  +  length)  {  if(length  >  1)  {	  if    (length    <    1)    {    if    (length    >=    1)    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
313	[BUG]  [BUGGY]  if(hasBiasCorrected  ||  begin  <  length)  {  [CE]  cannot  find  symbol  hasBiasCorrected  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(hasBiasCorrected  ||  begin  <  length)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(hasBiasCorrected  ||  begin  <  length)  {	  if(biasCorrected    ||    begin    <    length)    {    	non-compiled	[CE]  cannot  find  symbol  hasBiasCorrected	105	None	replace
314	[BUG]  [BUGGY]  double  accum2  =  Double.NEGATIVE_INFINITY  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Double.NEGATIVE_INFINITY  +  1;	  double    accum2    =    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
315	[BUG]  [BUGGY]  if(length  >  1)  {  int  begin  =  values.length;  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(length  >  1)  {  int  begin  =  values.length;  }  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(length  >  1)  {  int  begin  =  values.length;  }	  if    (length    >    1)    {    int    length    =    values.length;    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
316	[BUG]  [BUGGY]  if(length  ==  1)  {  int  length  =  values.length;  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(length  ==  1)  {  int  length  =  values.length;  }  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(length  ==  1)  {  int  length  =  values.length;  }	  if    (length    >    1)    {    int    length    =    values.length;    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
317	[BUG]  [BUGGY]  if(begin  <  begin  ||  length  >  1)  {  int  length  =  values.length;  [CE]  variable  length  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(begin  <  begin  ||  length  >  1)  {  int  length  =  values.length;  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(begin  <  begin  ||  length  >  1)  {  int  length  =  values.length;	  if    (length    >    1)    {    int    length    =    values.length;    	non-compiled	[CE]  variable  length  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	108	None	replace
318	[BUG]  [BUGGY]  double  accum2  =  Math.abs(values.length  -  mean,  begin);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  Math.abs(values.length  -  mean,  begin);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Math.abs(values.length  -  mean,  begin);	  double    accum2    =    Math.abs(values.length    -    mean);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
319	[BUG]  [BUGGY]  double  accum  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NaN  *  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NaN  *  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NaN  *  1;	  double    accum    =    isBiasCorrected?    Double.POSITIVE_INFINITY    :    Double.NaN    +    1;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
320	[BUG]  [BUGGY]  Double  accum  =  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  Double  accum  =  Double.POSITIVE_INFINITY;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	Double  accum  =  Double.POSITIVE_INFINITY;	  double    accum    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
321	[BUG]  [BUGGY]  test(values,  mean,  begin,  length);  Test(values,  weights,  begin,  length);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  test(values,  mean,  begin,  length);  Test(values,  weights,  begin,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  mean,  begin,  length);  Test(values,  weights,  begin,  length);	          test(values,    weights,    begin,    length);    Test(values,    weights,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
322	[BUG]  [BUGGY]  test(values,  begin,  length);  Test(values,  weights,  begin,  length);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  test(values,  begin,  length);  Test(values,  weights,  begin,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  begin,  length);  Test(values,  weights,  begin,  length);	          test(values,    weights,    begin,    length);    Test(values,    weights,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
323	[BUG]  [BUGGY]  double  accum  =  hasBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  hasBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  hasBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;	  double    accum    =    isBiasCorrected?    Boolean.FALSE    :    Boolean.TRUE;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
324	[BUG]  [BUGGY]  double  accum2  =  Math.abs(values.length  *  begin);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  Math.abs(values.length  *  begin);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Math.abs(values.length  *  begin);	  double    accum2    =    Math.abs(values.length    -    begin);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
325	[BUG]  [BUGGY]  double  accum2  =  Math.abs(values.length  -  begin  +  length);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  Math.abs(values.length  -  begin  +  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Math.abs(values.length  -  begin  +  length);	  double    accum2    =    Math.abs(values.length    -    begin);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
326	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if  (test(values,  begin,  length)||  isBiasCorrected)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if  (test(values,  begin,  length)||  isBiasCorrected)  {	  if    (test(values,    begin,    length))    {    	compilable	  [FE]  AssertionError  	45	2	replace
327	[BUG]  [BUGGY]  if  (test(values,  begin,  length)||  isBiasCorrected)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if  (test(values,  begin,  length)||  isBiasCorrected)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if  (test(values,  begin,  length)||  isBiasCorrected)  {	  if    (test(values,    begin,    length))    {    	compilable	  [FE]  AssertionError  	45	2	replace
328	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if  (test(values,  begin,  length)&&  isBiasCorrected)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if  (test(values,  begin,  length)&&  isBiasCorrected)  {	  if    (test(values,    begin,    length))    {    	compilable	  [FE]  AssertionError  	45	2	replace
329	[BUG]  [BUGGY]  if  (test(values,  begin,  length)&&  isBiasCorrected)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if  (test(values,  begin,  length)&&  isBiasCorrected)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if  (test(values,  begin,  length)&&  isBiasCorrected)  {	  if    (test(values,    begin,    length))    {    	compilable	  [FE]  AssertionError  	45	2	replace
330	[BUG]  [BUGGY]  double  accum  =  Double.NEGATIVE_INFINITY  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  Double.NEGATIVE_INFINITY  +  1;	  double    accum    =    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
331	[BUG]  [BUGGY]  if  (test(values,  end,  length))  {  [CE]  cannot  find  symbol  end  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if  (test(values,  end,  length))  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if  (test(values,  end,  length))  {	  if    (test(values,    values,    begin,    length))    {    if    (test(values,    values,    end,    length))    {    	non-compiled	[CE]  cannot  find  symbol  end	28	None	replace
332	[BUG]  [BUGGY]  Double  var  =  Double.POSITIVE_INFINITY  |  Double.NEGATIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  Double  var  =  Double.POSITIVE_INFINITY  |  Double.NEGATIVE_INFINITY;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	Double  var  =  Double.POSITIVE_INFINITY  |  Double.NEGATIVE_INFINITY;	  Double    var    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
333	[BUG]  [BUGGY]  if  (test(values,  mean,  begin,  length)&&  length  >  1)  {  [CE]  no  suitable  method  found  for  test(double[],double,int,int)  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if  (test(values,  mean,  begin,  length)&&  length  >  1)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if  (test(values,  mean,  begin,  length)&&  length  >  1)  {	  if    (test(values,    mean,    begin,    length))    {    	non-compiled	[CE]  no  suitable  method  found  for  test(double[],double,int,int)	41	None	replace
334	[BUG]  [BUGGY]  if  (test(values,  start,  begin,  length))  {  [CE]  cannot  find  symbol  start  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if  (test(values,  start,  begin,  length))  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if  (test(values,  start,  begin,  length))  {	  if    (test(values,    mean,    begin,    length))    {    	non-compiled	[CE]  cannot  find  symbol  start	41	None	replace
335	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(length  >  0)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if(length  >  0)  {	  if(length    >    2)    {    	compilable	  [FE]  AssertionError  	20	2	replace
336	[BUG]  [BUGGY]  if(length  >  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(length  >  0)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(length  >  0)  {	  if(length    >    2)    {    	compilable	  [FE]  AssertionError  	20	2	replace
337	[BUG]  [BUGGY]  if(begin  ==  begin)  {  if(length!=  2)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(begin  ==  begin)  {  if(length!=  2)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(begin  ==  begin)  {  if(length!=  2)  {	  if(length    ==    2)    {    if(length!=    2)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
338	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(var  ==  0.0)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if(var  ==  0.0)  {	  if    (test(values,    weights,    begin,    length))    {    if    (test(values,    weights,    begin,    length))    {    	compilable	  [FE]  AssertionError  	46	1	replace
339	[BUG]  [BUGGY]  if(var  ==  0.0)  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(var  ==  0.0)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(var  ==  0.0)  {	  if    (test(values,    weights,    begin,    length))    {    if    (test(values,    weights,    begin,    length))    {    	compilable	  [FE]  AssertionError  	46	1	replace
340	[BUG]  [BUGGY]  double  accum  =  incMoment?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  incMoment?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  incMoment?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY;	  double    accum    =    isBiasCorrected?    Double.POSITIVE_INFINITY    :    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
341	[BUG]  [BUGGY]  for(final  double  var  :  values.values())  {  var  =  Double.NaN;  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  for(final  double  var  :  values.values())  {  var  =  Double.NaN;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	for(final  double  var  :  values.values())  {  var  =  Double.NaN;	          var    =    Double.NaN;    for(final    double    var    :    values.values())    {    var    =    Double.NaN;    	non-compiled	[CE]  'else'  without  'if'	111	None	replace
342	[BUG]  [BUGGY]  for(final  double  var  :  values.values())  {  var  =  0.0;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  for(final  double  var  :  values.values())  {  var  =  0.0;  }  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	for(final  double  var  :  values.values())  {  var  =  0.0;  }	          var    =    Double.NaN;    for(final    double    var    :    values.values())    {    var    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
343	[BUG]  [BUGGY]  double  accum  =  incMoment?  Double.NaN  :  compare(values,  weights,  begin,  length));  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  incMoment?  Double.NaN  :  compare(values,  weights,  begin,  length));  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  incMoment?  Double.NaN  :  compare(values,  weights,  begin,  length));	  double    accum    =    incMoment?    Double.NaN    :    compare(values,    weights,    begin,    length);    	non-compiled	[CE]  ';'  expected	121	None	replace
344	[BUG]  [BUGGY]  Double[]  values  =  getValues(values,  begin,  length);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  Double[]  values  =  getValues(values,  begin,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	Double[]  values  =  getValues(values,  begin,  length);	  Double[]    values    =    getValues(values);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
345	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(begin  <  begin  ||  length  >  2)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if(begin  <  begin  ||  length  >  2)  {	  if(length    ==    2)    {    if(length    ==    2)    {    	compilable	  [FE]  AssertionError  	34	2	replace
346	[BUG]  [BUGGY]  if(begin  <  begin  ||  length  >  2)  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(begin  <  begin  ||  length  >  2)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(begin  <  begin  ||  length  >  2)  {	  if(length    ==    2)    {    if(length    ==    2)    {    	compilable	  [FE]  AssertionError  	34	2	replace
347	[BUG]  [BUGGY]          test(values,    weights,    begin,    length);    test(values,  weights,  begin,  length);  test(values,  0,  0,  length);  test(values,  weights,  begin,  length);  [CE]  no  suitable  method  found  for  test(double[],int,int,int)  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]          test(values,    weights,    begin,    length);    test(values,  weights,  begin,  length);  test(values,  0,  0,  length);  test(values,  weights,  begin,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	                test(values,        weights,        begin,        length);        test(values,    weights,    begin,    length);    test(values,  0,  0,  length);  test(values,  weights,  begin,  length);	  	non-compiled	[CE]  no  suitable  method  found  for  test(double[],int,int,int)	13	None	add
348	[BUG]  [BUGGY]  double  var  =  Infinispan.POSITIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  var  =  Infinispan.POSITIVE_INFINITY;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  var  =  Infinispan.POSITIVE_INFINITY;	  double    var    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
349	[BUG]  [BUGGY]  if(test(values,  begin,  length)&&  test(values,  weights,  length))  {  [CE]  no  suitable  method  found  for  test(double[],double[],int)  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(test(values,  begin,  length)&&  test(values,  weights,  length))  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(test(values,  begin,  length)&&  test(values,  weights,  length))  {	  if    (test(values,    weights,    begin,    length))    {    if    (test(values,    weights,    start,    length))    {    	non-compiled	[CE]  no  suitable  method  found  for  test(double[],double[],int)	47	None	replace
350	[BUG]  [BUGGY]  var  =  new  Double(Double.doubleToLongBits(mean));  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  new  Double(Double.doubleToLongBits(mean));  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  new  Double(Double.doubleToLongBits(mean));	  var    =    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
351	[BUG]  [BUGGY]  double  accum  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE  /  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE  /  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE  /  1;	  double    accum    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE    +    1;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
352	[BUG]  [BUGGY]  double  accum  =  incMoment?  Double.NaN  :  test(values,  weights,  begin,  length)+  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  incMoment?  Double.NaN  :  test(values,  weights,  begin,  length)+  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  incMoment?  Double.NaN  :  test(values,  weights,  begin,  length)+  1;	  double    accum    =    isBiasCorrected?    Double.NaN    :    test(values,    weights,    begin,    length)+    1;    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
353	[BUG]  [BUGGY]  var  =  test(values,  methods,  begin,  length);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  test(values,  methods,  begin,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  test(values,  methods,  begin,  length);	          test(values,    weights,    begin,    length);    var    =    test(values,    weights,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
354	[BUG]  [BUGGY]  double  accum  =  incMoment?  Double.NaN  :  compare(values,  values,  begin,  length));  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  incMoment?  Double.NaN  :  compare(values,  values,  begin,  length));  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  incMoment?  Double.NaN  :  compare(values,  values,  begin,  length));	  double    accum    =    incMoment?    Double.NaN    :    compare(values,    values,    begin,    length);    	non-compiled	[CE]  ';'  expected	122	None	replace
355	[BUG]  [BUGGY]  Double  var  =  Double.POSITIVE_INFINITY  |  Double.NaN;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  Double  var  =  Double.POSITIVE_INFINITY  |  Double.NaN;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	Double  var  =  Double.POSITIVE_INFINITY  |  Double.NaN;	  Double    var    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
356	[BUG]  [BUGGY]          var    =    Double.NaN;    var  =  Double.NaN;  var  =  double.NaN;  var  =  Double.NaN;  [CE]  class  expected  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]          var    =    Double.NaN;    var  =  Double.NaN;  var  =  double.NaN;  var  =  Double.NaN;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	                var        =        Double.NaN;        var    =    Double.NaN;    var  =  double.NaN;  var  =  Double.NaN;	  	non-compiled	[CE]  class  expected	58	None	add
357	[BUG]  [BUGGY]          var    =    Double.NaN;    var  =  Double.NaN;  var  =  Integer.NaN;  var  =  Double.NaN;  [CE]  cannot  find  symbol  NaN  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]          var    =    Double.NaN;    var  =  Double.NaN;  var  =  Integer.NaN;  var  =  Double.NaN;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	                var        =        Double.NaN;        var    =    Double.NaN;    var  =  Integer.NaN;  var  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  NaN	58	None	add
358	[BUG]  [BUGGY]  try  {  test(values,  Weights,  begin,  length);  }  catch(NumberFormatException  nfe)  {  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  try  {  test(values,  Weights,  begin,  length);  }  catch(NumberFormatException  nfe)  {  }  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	try  {  test(values,  Weights,  begin,  length);  }  catch(NumberFormatException  nfe)  {  }	          test(values,    weights,    begin,    length);    test(values,    Weights,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
359	[BUG]  [BUGGY]  try  {  test(values,  Weights,  begin,  length);  }  catch(NumberFormatException  e)  {  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  try  {  test(values,  Weights,  begin,  length);  }  catch(NumberFormatException  e)  {  }  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	try  {  test(values,  Weights,  begin,  length);  }  catch(NumberFormatException  e)  {  }	          test(values,    weights,    begin,    length);    test(values,    Weights,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
360	[BUG]  [BUGGY]  double  accum  =  incMoment?  Double.NaN  :  test(values,  weights,  begin,  length));  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  incMoment?  Double.NaN  :  test(values,  weights,  begin,  length));  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  incMoment?  Double.NaN  :  test(values,  weights,  begin,  length));	  double    accum    =    isBiasCorrected?    Double.NaN    :    test(values,    weights,    begin,    length));    	non-compiled	[CE]  ';'  expected	130	None	replace
361	[BUG]  [BUGGY]  double  accum  =  incMoment?  Double.NaN  :  test(values,  begin,  length));  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  incMoment?  Double.NaN  :  test(values,  begin,  length));  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  incMoment?  Double.NaN  :  test(values,  begin,  length));	  double    accum    =    isBiasCorrected?    Double.NaN    :    test(values,    weights,    begin,    length));    	non-compiled	[CE]  ';'  expected	130	None	replace
362	[BUG]  [BUGGY]  double  accum2  =  Math.abs(values.length)/  2;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  Math.abs(values.length)/  2;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Math.abs(values.length)/  2;	  double    accum2    =    Math.abs(values.length    +    1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
363	[BUG]  [BUGGY]  double  accum2  =  Math.abs(values.length)/  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  Math.abs(values.length)/  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Math.abs(values.length)/  1;	  double    accum2    =    Math.abs(values.length    +    1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
364	[BUG]  [BUGGY]  double  accum2  =  Integer.MAX_VALUE  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  Integer.MAX_VALUE  -  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Integer.MAX_VALUE  -  1;	  double    accum2    =    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
365	[BUG]  [BUGGY]  double  var  =  Infinispan.NEGATIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  var  =  Infinispan.NEGATIVE_INFINITY;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  var  =  Infinispan.NEGATIVE_INFINITY;	  double    var    =    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
366	[BUG]  [BUGGY]  Double  accum2  =  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  Double  accum2  =  Double.POSITIVE_INFINITY;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	Double  accum2  =  Double.POSITIVE_INFINITY;	  double    accum2    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
367	[BUG]  [BUGGY]  double  accum2  =  incMoment?  Double.POSITIVE_INFINITY  :  Double.NaN;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  incMoment?  Double.POSITIVE_INFINITY  :  Double.NaN;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  incMoment?  Double.POSITIVE_INFINITY  :  Double.NaN;	  double    accum2    =    isBiasCorrected?    Double.POSITIVE_INFINITY    :    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
368	[BUG]  [BUGGY]  if(test(values,  mean,  length))  {  [CE]  no  suitable  method  found  for  test(double[],double,int)  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(test(values,  mean,  length))  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(test(values,  mean,  length))  {	  if    (test(values,    begin,    length))    {    	non-compiled	[CE]  no  suitable  method  found  for  test(double[],double,int)	45	None	replace
369	[BUG]  [BUGGY]  if(test(values,  length,  begin,  length))  {  [CE]  no  suitable  method  found  for  test(double[],int,int,int)  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(test(values,  length,  begin,  length))  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(test(values,  length,  begin,  length))  {	  if    (test(values,    begin,    length))    {    	non-compiled	[CE]  no  suitable  method  found  for  test(double[],int,int,int)	45	None	replace
370	[BUG]  [BUGGY]  Double  accum2  =  Double.NEGATIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  Double  accum2  =  Double.NEGATIVE_INFINITY;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	Double  accum2  =  Double.NEGATIVE_INFINITY;	  double    accum2    =    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
371	[BUG]  [BUGGY]  double  accum2  =.0;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =.0;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =.0;	  double    accum2    =    1.0;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
372	[BUG]  [BUGGY]  var  =  Double.NaN;  var  =  Double.NEGATIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  Double.NaN;  var  =  Double.NEGATIVE_INFINITY;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  Double.NaN;  var  =  Double.NEGATIVE_INFINITY;	          var    =    Double.NaN;    var    =    Double.naN;    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
373	[BUG]  [BUGGY]  double  accum2  =  Math.abs(values.length  -  mean,  begin  +  length);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  Math.abs(values.length  -  mean,  begin  +  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Math.abs(values.length  -  mean,  begin  +  length);	  double    accum2    =    Math.abs(values.length    -    mean);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
374	[BUG]  [BUGGY]  double  accum2  =  Math.abs(values.length  -  mean)/  2;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  Math.abs(values.length  -  mean)/  2;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Math.abs(values.length  -  mean)/  2;	  double    accum2    =    Math.abs(values.length    -    mean);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
375	[BUG]  [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  compare(values,  weights,  begin,  length));  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  compare(values,  weights,  begin,  length));  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  isBiasCorrected?  Double.NaN  :  compare(values,  weights,  begin,  length));	  double    accum    =    isBiasCorrected?    Double.NaN    :    compare(values,    weights,    begin,    length);    	non-compiled	[CE]  ';'  expected	65	None	replace
376	[BUG]  [BUGGY]  double  accum2  =  0.01;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  0.01;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  0.01;	  double    accum2    =    10.0;    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
377	[BUG]  [BUGGY]  var  =  Double.NEGATIVE_INFINITY;  var  =  Double.NaN  +  1;  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  Double.NEGATIVE_INFINITY;  var  =  Double.NaN  +  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  Double.NEGATIVE_INFINITY;  var  =  Double.NaN  +  1;	          var    =    Double.NaN;    var    =    Double.NaN    +    1;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
378	[BUG]  [BUGGY]  var  =  Double.NaN;  var  =  Double.NaN  +  length;  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  Double.NaN;  var  =  Double.NaN  +  length;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  Double.NaN;  var  =  Double.NaN  +  length;	          var    =    Double.NaN;    var    =    Double.NaN    +    1;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
379	[BUG]  [BUGGY]  Double.NaN;  Var  var  =  Double.NaN;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  Double.NaN;  Var  var  =  Double.NaN;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	Double.NaN;  Var  var  =  Double.NaN;	          var    =    Double.NaN;    Var    var    =    Double.NaN;    	non-compiled	[CE]  not  a  statement	62	None	replace
380	[BUG]  [BUGGY]  if(isBiasCorrected  ||  isBiasCorrected)  {  if(isbiasCorrected  ||  isBiasCorrected)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(isBiasCorrected  ||  isBiasCorrected)  {  if(isbiasCorrected  ||  isBiasCorrected)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(isBiasCorrected    ||    isBiasCorrected)    {    if(isbiasCorrected  ||  isBiasCorrected)  {	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
381	[BUG]  [BUGGY]  Double[]  values  =  getValues(mean,  begin);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  Double[]  values  =  getValues(mean,  begin);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	Double[]  values  =  getValues(mean,  begin);	  Double[]    values    =    getValues(mean);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
382	[BUG]  [BUGGY]  test(values,  accum,  mean,  length);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  test(values,  accum,  mean,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  accum,  mean,  length);	  test(values,    accum,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
383	[BUG]  [BUGGY]  var  =  new  Double(Double.POSITIVE_INFINITY);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  new  Double(Double.POSITIVE_INFINITY);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  new  Double(Double.POSITIVE_INFINITY);	  var    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
384	[BUG]  [BUGGY]          test(values,    weights,    begin,    length);    var  =  Double.NaN;  var  =  test(values,  weights,  begin,  length);  var  =  Double.NaN;  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]          test(values,    weights,    begin,    length);    var  =  Double.NaN;  var  =  test(values,  weights,  begin,  length);  var  =  Double.NaN;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	                test(values,        weights,        begin,        length);        var    =    Double.NaN;    var  =  test(values,  weights,  begin,  length);  var  =  Double.NaN;	  	non-compiled	[CE]  incompatible  types	102	None	add
385	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(!incMoment  &&  isBiasCorrected)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if(!incMoment  &&  isBiasCorrected)  {	  if(!incMoment)    {    	compilable	  [FE]  AssertionError  	75	1	replace
386	[BUG]  [BUGGY]  if(!incMoment  &&  isBiasCorrected)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(!incMoment  &&  isBiasCorrected)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(!incMoment  &&  isBiasCorrected)  {	  if(!incMoment)    {    	compilable	  [FE]  AssertionError  	75	1	replace
387	[BUG]  [BUGGY]  double  accum  =  Integer.MAX_VALUE  -  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  Integer.MAX_VALUE  -  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  Integer.MAX_VALUE  -  1;	  double    accum    =    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
388	[BUG]  [BUGGY]  double[]  values  =  getValues(var,  begin);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double[]  values  =  getValues(var,  begin);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double[]  values  =  getValues(var,  begin);	  Double[]    values    =    getValues(var);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
389	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(test(values,  begin,  length)&&  test(values,  0,  length))  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if(test(values,  begin,  length)&&  test(values,  0,  length))  {	  if    (test(values,    weights,    begin,    length))    {    if    (test(values,    0,    length))    {    	compilable	  [FE]  AssertionError  	119	2	replace
390	[BUG]  [BUGGY]  if(test(values,  begin,  length)&&  test(values,  0,  length))  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(test(values,  begin,  length)&&  test(values,  0,  length))  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(test(values,  begin,  length)&&  test(values,  0,  length))  {	  if    (test(values,    weights,    begin,    length))    {    if    (test(values,    0,    length))    {    	compilable	  [FE]  AssertionError  	119	2	replace
391	[BUG]  [BUGGY]  var  =  Double.NEGATIVE_INFINITY;  var  =  Double.NaN;  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  Double.NEGATIVE_INFINITY;  var  =  Double.NaN;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  Double.NEGATIVE_INFINITY;  var  =  Double.NaN;	          var    =    Double.NaN;    var    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
392	[BUG]  [BUGGY]  if(length  <  1)  {  int  length  =  values.length;  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(length  <  1)  {  int  length  =  values.length;  }  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(length  <  1)  {  int  length  =  values.length;  }	  if    (length    >    1)    {    int    length    =    values.length;    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
393	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(this.incMoment)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if(this.incMoment)  {	  if(biasCorrected)    {    	compilable	  [FE]  AssertionError  	104	2	replace
394	[BUG]  [BUGGY]  if(this.incMoment)  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(this.incMoment)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(this.incMoment)  {	  if(biasCorrected)    {    	compilable	  [FE]  AssertionError  	104	2	replace
395	[BUG]  [BUGGY]  test(values,  var,  begin,  length)+  1;  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  test(values,  var,  begin,  length)+  1;  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  var,  begin,  length)+  1;	  test(values,    var,    begin,    length);    	non-compiled	[CE]  not  a  statement	72	None	replace
396	[BUG]  [BUGGY]  Double[]  values  =  getValues().toArray(values,  begin,  length);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  Double[]  values  =  getValues().toArray(values,  begin,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	Double[]  values  =  getValues().toArray(values,  begin,  length);	  Double[]    values    =    getValues().toArray(values);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
397	[BUG]  [BUGGY]  double  accum  =  incMoment?  Double.NaN  :  test(values,  values,  begin,  length);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum  =  incMoment?  Double.NaN  :  test(values,  values,  begin,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  incMoment?  Double.NaN  :  test(values,  values,  begin,  length);	  double    accum    =    isBiasCorrected?    Double.NaN    :    test(values,    values,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
398	[BUG]  [BUGGY]  validate(values,  values,  begin,  length);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  validate(values,  values,  begin,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	validate(values,  values,  begin,  length);	          test(values,    weights,    begin,    length);    validate(values,    weights,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
399	[BUG]  [BUGGY]  validate(values,  var,  begin,  length);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  validate(values,  var,  begin,  length);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	validate(values,  var,  begin,  length);	          test(values,    weights,    begin,    length);    validate(values,    weights,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
400	[BUG]  [BUGGY]  double  accum2  =  Math.abs(values[var].doubleValue());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  double  accum2  =  Math.abs(values[var].doubleValue());  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Math.abs(values[var].doubleValue());	  double    accum2    =    Math.abs(var);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
401	[BUG]  [BUGGY]  var  =  new  Double(values.length  -  mean);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  var  =  new  Double(values.length  -  mean);  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  new  Double(values.length  -  mean);	  var    =    new    Double(values.length);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
402	[BUG]  [BUGGY]  if(incMoment  ||  start  >  length)  {  [CE]  cannot  find  symbol  start  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  if(incMoment  ||  start  >  length)  {  [BUGGY]      var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(incMoment  ||  start  >  length)  {	  if(biasCorrected    ||    begin    >    length)    {    	non-compiled	[CE]  cannot  find  symbol  start	106	None	replace
403	[BUG]  [BUGGY]  test(values,  means,  begin,  length));  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {      [BUGGY]  test(values,  means,  begin,  length));  [BUGGY]      if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  means,  begin,  length));	  test(values,    var,    begin,    length));    	non-compiled	[CE]  ';'  expected	11	None	replace
