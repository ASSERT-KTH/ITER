bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  accum2  =  Math.abs(var);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  accum2  =  Math.abs(var);  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Math.abs(var);	      double    accum2    =    Math.abs(values.length);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
2	[BUG]  [BUGGY]  double  accum2  =  Math.abs(values.length  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  accum2  =  Math.abs(values.length  -  1);  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Math.abs(values.length  -  1);	      double    accum2    =    Math.abs(values.length);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
3	[BUG]  [BUGGY]  double  accum2  =  Math.abs(values.length  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  accum2  =  Math.abs(values.length  +  1);  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Math.abs(values.length  +  1);	      double    accum2    =    Math.abs(values.length);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
4	[BUG]  [BUGGY]  if  (length  >  1)  {  if  (length  >  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if  (length  >  1)  {  if  (length  >  1)  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if    (length    >    1)    {    if  (length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
5	[BUG]  [BUGGY]  if  (length  >  1)  {  If  (length  >  1)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if  (length  >  1)  {  If  (length  >  1)  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if    (length    >    1)    {    If  (length  >  1)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
6	[BUG]  [BUGGY]  if  (length  >  1)  {  int  length  >  1)  {  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if  (length  >  1)  {  int  length  >  1)  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if    (length    >    1)    {    int  length  >  1)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
7	[BUG]  [BUGGY]  double  accum  =  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  accum  =  Double.POSITIVE_INFINITY;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  Double.POSITIVE_INFINITY;	      double    accum    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
8	[BUG]  [BUGGY]  double  accum  =  0.0;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  accum  =  0.0;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  0.0;	      double    accum    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
9	[BUG]  [BUGGY]  test(values,  mean,  begin,  length));  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  test(values,  mean,  begin,  length));  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  mean,  begin,  length));	      test(values,    weights,    begin,    length));    	non-compiled	[CE]  ';'  expected	1	None	replace
10	[BUG]  [BUGGY]  test(values,  begin,  length));  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  test(values,  begin,  length));  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  begin,  length));	      test(values,    weights,    begin,    length));    	non-compiled	[CE]  ';'  expected	1	None	replace
11	[BUG]  [BUGGY]  test(values,  var,  begin,  length));  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  test(values,  var,  begin,  length));  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  var,  begin,  length));	      test(values,    weights,    begin,    length));    	non-compiled	[CE]  ';'  expected	1	None	replace
12	[BUG]  [BUGGY]  test(values,  accum,  begin,  length));  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  test(values,  accum,  begin,  length));  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  accum,  begin,  length));	      test(values,    weights,    begin,    length));    	non-compiled	[CE]  ';'  expected	1	None	replace
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]      test(values,  weights,  begin,  length);  test(values,  weights,  begin,  length);  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	        test(values,    weights,    begin,    length);    test(values,  weights,  begin,  length);	  	compilable	  [FE]  AssertionError  	2	1	add
14	[BUG]  [BUGGY]      test(values,  weights,  begin,  length);  test(values,  weights,  begin,  length);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]      test(values,  weights,  begin,  length);  test(values,  weights,  begin,  length);  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	        test(values,    weights,    begin,    length);    test(values,  weights,  begin,  length);	  	compilable	  [FE]  AssertionError  	2	1	add
15	[BUG]  [BUGGY]      test(values,  weights,  begin,  length);  Test(values,  weights,  begin,  length);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]      test(values,  weights,  begin,  length);  Test(values,  weights,  begin,  length);  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	        test(values,    weights,    begin,    length);    Test(values,  weights,  begin,  length);	  	non-compiled	[CE]  cannot  find  symbol	2	None	add
16	[BUG]  [BUGGY]      test(values,  weights,  begin,  length);  test(values,  weights,  start,  length);  [CE]  cannot  find  symbol  start  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]      test(values,  weights,  begin,  length);  test(values,  weights,  start,  length);  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	        test(values,    weights,    begin,    length);    test(values,  weights,  start,  length);	  	non-compiled	[CE]  cannot  find  symbol  start	2	None	add
17	[BUG]  [BUGGY]      test(values,  weights,  begin,  length);  validate(values,  weights,  begin,  length);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]      test(values,  weights,  begin,  length);  validate(values,  weights,  begin,  length);  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	        test(values,    weights,    begin,    length);    validate(values,  weights,  begin,  length);	  	non-compiled	[CE]  cannot  find  symbol	2	None	add
18	[BUG]  [BUGGY]      test(values,  weights,  begin,  length);  test(values,  Weights,  begin,  length);  [CE]  cannot  find  symbol  Weights  [FE]            AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]      test(values,  weights,  begin,  length);  test(values,  Weights,  begin,  length);  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	        test(values,    weights,    begin,    length);    test(values,  Weights,  begin,  length);	  	non-compiled	[CE]  cannot  find  symbol  Weights	2	None	add
19	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if(length  >  2)  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if(length  >  2)  {	  if(length    ==    2)    {    	compilable	  [FE]  AssertionError  	22	2	replace
20	[BUG]  [BUGGY]  if(length  >  2)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if(length  >  2)  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(length  >  2)  {	  if(length    ==    2)    {    	compilable	  [FE]  AssertionError  	22	2	replace
21	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if(length!=  1)  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if(length!=  1)  {	  if(length    ==    2)    {    	compilable	  [FE]  AssertionError  	22	2	replace
22	[BUG]  [BUGGY]  if(length!=  1)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if(length!=  1)  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(length!=  1)  {	  if(length    ==    2)    {    	compilable	  [FE]  AssertionError  	22	2	replace
23	[BUG]  [BUGGY]  double  var  =  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  var  =  Double.POSITIVE_INFINITY;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  var  =  Double.POSITIVE_INFINITY;	      double    var    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
24	[BUG]  [BUGGY]  double  var  =  Double.MIN_VALUE;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  var  =  Double.MIN_VALUE;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  var  =  Double.MIN_VALUE;	      double    var    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
25	[BUG]  [BUGGY]  double  var  =  0.0;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  var  =  0.0;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  var  =  0.0;	      double    var    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
26	[BUG]  [BUGGY]  if  (test(values,  values,  begin,  length))  {  if  (test(values,  values,  begin,  length))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if  (test(values,  values,  begin,  length))  {  if  (test(values,  values,  begin,  length))  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if    (test(values,    values,    begin,    length))    {    if  (test(values,  values,  begin,  length))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
27	[BUG]  [BUGGY]  if  (test(values,  values,  begin,  length))  {  if  (test(values,  values,  start,  length))  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if  (test(values,  values,  begin,  length))  {  if  (test(values,  values,  start,  length))  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if    (test(values,    values,    begin,    length))    {    if  (test(values,  values,  start,  length))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
28	[BUG]  [BUGGY]  if  (test(values,  values,  begin,  length))  {  if  (test(values,  values,  end,  length))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if  (test(values,  values,  begin,  length))  {  if  (test(values,  values,  end,  length))  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if    (test(values,    values,    begin,    length))    {    if  (test(values,  values,  end,  length))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
29	[BUG]  [BUGGY]  double  accum  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  accum  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;	      double    accum    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
30	[BUG]  [BUGGY]  double  accum  =  incMoment?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  accum  =  incMoment?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  incMoment?  Boolean.TRUE  :  Boolean.FALSE;	      double    accum    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
31	[BUG]  [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  begin,  length);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  begin,  length);  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  begin,  length);	      double    accum    =    isBiasCorrected?    Double.NaN    :    test(values,    weights,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
32	[BUG]  [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  values,  begin,  length);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  values,  begin,  length);  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  values,  begin,  length);	      double    accum    =    isBiasCorrected?    Double.NaN    :    test(values,    weights,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
33	[BUG]  [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  start,  length);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  start,  length);  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  start,  length);	      double    accum    =    isBiasCorrected?    Double.NaN    :    test(values,    weights,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
34	[BUG]  [BUGGY]  if(length  ==  2)  {  if(length  ==  2)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if(length  ==  2)  {  if(length  ==  2)  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(length    ==    2)    {    if(length  ==  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
35	[BUG]  [BUGGY]  if(length  ==  2)  {  if(length  >=  2)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if(length  ==  2)  {  if(length  >=  2)  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(length    ==    2)    {    if(length  >=  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
36	[BUG]  [BUGGY]  if(length  ==  2)  {  if(length!=  2)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if(length  ==  2)  {  if(length!=  2)  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(length    ==    2)    {    if(length!=  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
37	[BUG]  [BUGGY]  if(length  ==  2)  {  If(length  ==  2)  {  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if(length  ==  2)  {  If(length  ==  2)  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(length    ==    2)    {    If(length  ==  2)  {	  	non-compiled	[CE]  ';'  expected	21	None	add
38	[BUG]  [BUGGY]  Double[]  values  =  getValues().toArray(values);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  Double[]  values  =  getValues().toArray(values);  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	Double[]  values  =  getValues().toArray(values);	      Double[]    values    =    getValues();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
39	[BUG]  [BUGGY]  Double[]  values  =  getValues().toArray(new  Double[values.size()  ]);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  Double[]  values  =  getValues().toArray(new  Double[values.size()  ]);  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	Double[]  values  =  getValues().toArray(new  Double[values.size()  ]);	      Double[]    values    =    getValues();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
40	[BUG]  [BUGGY]  Double[]  values  =  getValues(var);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  Double[]  values  =  getValues(var);  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	Double[]  values  =  getValues(var);	      Double[]    values    =    getValues();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
41	[BUG]  [BUGGY]  if  (test(values,  mean,  begin,  length))  {  [CE]  no  suitable  method  found  for  test(double[],double,int,int)  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if  (test(values,  mean,  begin,  length))  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if  (test(values,  mean,  begin,  length))  {	  if    (test(values,    values,    begin,    length))    {    	non-compiled	[CE]  no  suitable  method  found  for  test(double[],double,int,int)	10	None	replace
42	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if(isBiasCorrected  ||  test(values,  begin,  length))  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if(isBiasCorrected  ||  test(values,  begin,  length))  {	  if    (test(values,    values,    begin,    length))    {    	compilable	  [FE]  AssertionError  	10	2	replace
43	[BUG]  [BUGGY]  if(isBiasCorrected  ||  test(values,  begin,  length))  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if(isBiasCorrected  ||  test(values,  begin,  length))  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(isBiasCorrected  ||  test(values,  begin,  length))  {	  if    (test(values,    values,    begin,    length))    {    	compilable	  [FE]  AssertionError  	10	2	replace
44	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if  (test(values,  begin,  length))  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if  (test(values,  begin,  length))  {	  if    (test(values,    values,    begin,    length))    {    	compilable	  [FE]  AssertionError  	10	2	replace
45	[BUG]  [BUGGY]  if  (test(values,  begin,  length))  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if  (test(values,  begin,  length))  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if  (test(values,  begin,  length))  {	  if    (test(values,    values,    begin,    length))    {    	compilable	  [FE]  AssertionError  	10	2	replace
46	[BUG]  [BUGGY]  if  (test(values,  weights,  begin,  length))  {  if  (test(values,  weights,  begin,  length))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if  (test(values,  weights,  begin,  length))  {  if  (test(values,  weights,  begin,  length))  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if    (test(values,    weights,    begin,    length))    {    if  (test(values,  weights,  begin,  length))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
47	[BUG]  [BUGGY]  if  (test(values,  weights,  begin,  length))  {  if  (test(values,  weights,  start,  length))  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if  (test(values,  weights,  begin,  length))  {  if  (test(values,  weights,  start,  length))  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if    (test(values,    weights,    begin,    length))    {    if  (test(values,  weights,  start,  length))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
48	[BUG]  [BUGGY]  if  (test(values,  weights,  begin,  length))  {  if  (test(values,  values,  begin,  length))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if  (test(values,  weights,  begin,  length))  {  if  (test(values,  values,  begin,  length))  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if    (test(values,    weights,    begin,    length))    {    if  (test(values,  values,  begin,  length))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
49	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if(isBiasCorrected  ||  isBiasCorrected)  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if(isBiasCorrected  ||  isBiasCorrected)  {	  if    (length    >    1)    {    	compilable	  [FE]  AssertionError  	18	2	replace
50	[BUG]  [BUGGY]  if(isBiasCorrected  ||  isBiasCorrected)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if(isBiasCorrected  ||  isBiasCorrected)  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(isBiasCorrected  ||  isBiasCorrected)  {	  if    (length    >    1)    {    	compilable	  [FE]  AssertionError  	18	2	replace
51	[BUG]  [BUGGY]  var  =  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  var  =  Double.POSITIVE_INFINITY;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  Double.POSITIVE_INFINITY;	      var    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
52	[BUG]  [BUGGY]  var  =  0.0;  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  var  =  0.0;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  0.0;	      var    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
53	[BUG]  [BUGGY]  var  =  new  Double(values.length);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  var  =  new  Double(values.length);  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  new  Double(values.length);	      var    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
54	[BUG]  [BUGGY]  double  accum2  =  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  accum2  =  Double.POSITIVE_INFINITY;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Double.POSITIVE_INFINITY;	      double    accum2    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
55	[BUG]  [BUGGY]  double  accum2  =  Double.NEGATIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  accum2  =  Double.NEGATIVE_INFINITY;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Double.NEGATIVE_INFINITY;	      double    accum2    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
56	[BUG]  [BUGGY]  Double  var  =  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  Double  var  =  Double.POSITIVE_INFINITY;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	Double  var  =  Double.POSITIVE_INFINITY;	      Double    var    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
57	[BUG]  [BUGGY]  Double  var  =  null;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  Double  var  =  null;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	Double  var  =  null;	      Double    var    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
58	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]      var  =  Double.NaN;  var  =  Double.NaN;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	        var    =    Double.NaN;    var  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	12	1	add
59	[BUG]  [BUGGY]      var  =  Double.NaN;  var  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]      var  =  Double.NaN;  var  =  Double.NaN;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	        var    =    Double.NaN;    var  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	12	1	add
60	[BUG]  [BUGGY]      var  =  Double.NaN;  double  var  =  Double.NaN;  [CE]  variable  var  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]      var  =  Double.NaN;  double  var  =  Double.NaN;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	        var    =    Double.NaN;    double  var  =  Double.NaN;	  	non-compiled	[CE]  variable  var  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	12	None	add
61	[BUG]  [BUGGY]      var  =  Double.NaN;  int  var  =  Double.NaN;  [CE]  variable  var  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]      var  =  Double.NaN;  int  var  =  Double.NaN;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	        var    =    Double.NaN;    int  var  =  Double.NaN;	  	non-compiled	[CE]  variable  var  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	12	None	add
62	[BUG]  [BUGGY]      var  =  Double.NaN;  Var  var  =  Double.NaN;  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]      var  =  Double.NaN;  Var  var  =  Double.NaN;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	        var    =    Double.NaN;    Var  var  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol	12	None	add
63	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]      var  =  Double.NaN;  var  =  Double.NaN  +  1;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	        var    =    Double.NaN;    var  =  Double.NaN  +  1;	  	compilable	  [FE]  AssertionError  	12	1	add
64	[BUG]  [BUGGY]      var  =  Double.NaN;  var  =  Double.NaN  +  1;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]      var  =  Double.NaN;  var  =  Double.NaN  +  1;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	        var    =    Double.NaN;    var  =  Double.NaN  +  1;	  	compilable	  [FE]  AssertionError  	12	1	add
65	[BUG]  [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  compare(values,  weights,  begin,  length);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  compare(values,  weights,  begin,  length);  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  isBiasCorrected?  Double.NaN  :  compare(values,  weights,  begin,  length);	      double    accum    =    isBiasCorrected?    Double.NaN    :    compare(values,    values,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
66	[BUG]  [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  compare(values,  begin,  length);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  compare(values,  begin,  length);  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  isBiasCorrected?  Double.NaN  :  compare(values,  begin,  length);	      double    accum    =    isBiasCorrected?    Double.NaN    :    compare(values,    values,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
67	[BUG]  [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  compare(values,  mean,  begin,  length);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  compare(values,  mean,  begin,  length);  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  isBiasCorrected?  Double.NaN  :  compare(values,  mean,  begin,  length);	      double    accum    =    isBiasCorrected?    Double.NaN    :    compare(values,    values,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
68	[BUG]  [BUGGY]  double  accum  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NaN  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  accum  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NaN  +  1;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NaN  +  1;	      double    accum    =    isBiasCorrected?    Double.POSITIVE_INFINITY    :    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
69	[BUG]  [BUGGY]  double  accum2  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NaN;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  accum2  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NaN;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NaN;	      double    accum    =    isBiasCorrected?    Double.POSITIVE_INFINITY    :    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
70	[BUG]  [BUGGY]  double  accum  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  accum  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY;	      double    accum    =    isBiasCorrected?    Double.POSITIVE_INFINITY    :    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
71	[BUG]  [BUGGY]  test(values,  mean,  begin,  length);  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  test(values,  mean,  begin,  length);  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  mean,  begin,  length);	      test(values,    weights,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
72	[BUG]  [BUGGY]  test(values,  var,  begin,  length);  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  test(values,  var,  begin,  length);  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  var,  begin,  length);	      test(values,    weights,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
73	[BUG]  [BUGGY]  test(values,  accum,  begin,  length);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  test(values,  accum,  begin,  length);  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  accum,  begin,  length);	      test(values,    weights,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
74	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if(!incMoment)  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if(!incMoment)  {	  if    (test(values,    weights,    begin,    length))    {    	compilable	  [FE]  AssertionError  	8	1	replace
75	[BUG]  [BUGGY]  if(!incMoment)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if(!incMoment)  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(!incMoment)  {	  if    (test(values,    weights,    begin,    length))    {    	compilable	  [FE]  AssertionError  	8	1	replace
76	[BUG]  [BUGGY]  if  (length  <  1)  {  if  (length  <  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if  (length  <  1)  {  if  (length  <  1)  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if    (length    <    1)    {    if  (length  <  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
77	[BUG]  [BUGGY]  if  (length  <  1)  {  if  (length  >=  1)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if  (length  <  1)  {  if  (length  >=  1)  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if    (length    <    1)    {    if  (length  >=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
78	[BUG]  [BUGGY]  if  (length  <  1)  {  If  (length  <  1)  {  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if  (length  <  1)  {  If  (length  <  1)  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if    (length    <    1)    {    If  (length  <  1)  {	  	non-compiled	[CE]  ';'  expected	19	None	add
79	[BUG]  [BUGGY]  double  accum2  =  1.0;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  accum2  =  1.0;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  1.0;	      double    accum2    =    0.0;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
80	[BUG]  [BUGGY]  double  accum2  =  0.001;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  accum2  =  0.001;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  0.001;	      double    accum2    =    0.0;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
81	[BUG]  [BUGGY]  Double  accum2  =  0.0;  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  Double  accum2  =  0.0;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	Double  accum2  =  0.0;	      double    accum2    =    0.0;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
82	[BUG]  [BUGGY]  Double[]  values  =  getValues(values);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  Double[]  values  =  getValues(values);  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	Double[]  values  =  getValues(values);	      Double[]    values    =    getValues();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
83	[BUG]  [BUGGY]  Double[]  values  =  getValues(mean);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  Double[]  values  =  getValues(mean);  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	Double[]  values  =  getValues(mean);	      Double[]    values    =    getValues();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
84	[BUG]  [BUGGY]  double  accum  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE  +  1;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  accum  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE  +  1;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE  +  1;	      double    accum    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
85	[BUG]  [BUGGY]  double  accum2  =  0;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  accum2  =  0;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  0;	      double    accum2    =    0.0;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
86	[BUG]  [BUGGY]  double  accum2  =  0.00;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  accum2  =  0.00;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  0.00;	      double    accum2    =    0.0;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
87	[BUG]  [BUGGY]  if  (test(values,  weights,  begin,  length))  {  if  (test(values,  weights,  0,  length))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if  (test(values,  weights,  begin,  length))  {  if  (test(values,  weights,  0,  length))  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if    (test(values,    weights,    begin,    length))    {    if  (test(values,  weights,  0,  length))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
88	[BUG]  [BUGGY]  var  =  Double.NEGATIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  var  =  Double.NEGATIVE_INFINITY;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  Double.NEGATIVE_INFINITY;	      var    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
89	[BUG]  [BUGGY]  var  =  Double.NEGATIVE;  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  var  =  Double.NEGATIVE;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	var  =  Double.NEGATIVE;	      var    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
90	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if(length  >=  1)  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if(length  >=  1)  {	  if(length    ==    2)    {    	compilable	  [FE]  AssertionError  	22	2	replace
91	[BUG]  [BUGGY]  if(length  >=  1)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if(length  >=  1)  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(length  >=  1)  {	  if(length    ==    2)    {    	compilable	  [FE]  AssertionError  	22	2	replace
92	[BUG]  [BUGGY]  double  var  =  Double.NEGATIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  var  =  Double.NEGATIVE_INFINITY;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  var  =  Double.NEGATIVE_INFINITY;	      double    var    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
93	[BUG]  [BUGGY]  double  var  =  Double.NEGATIVE;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  var  =  Double.NEGATIVE;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  var  =  Double.NEGATIVE;	      double    var    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
94	[BUG]  [BUGGY]  Double  var  =  Double.NEGATIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  Double  var  =  Double.NEGATIVE_INFINITY;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	Double  var  =  Double.NEGATIVE_INFINITY;	      Double    var    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
95	[BUG]  [BUGGY]  double  accum2  =  Math.abs(values.length  -  mean);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  accum2  =  Math.abs(values.length  -  mean);  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Math.abs(values.length  -  mean);	      double    accum2    =    Math.abs(values.length);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
96	[BUG]  [BUGGY]  double  accum2  =  Double.NEGATIVE;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  accum2  =  Double.NEGATIVE;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Double.NEGATIVE;	      double    accum2    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
97	[BUG]  [BUGGY]  double  accum  =  Double.NEGATIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  accum  =  Double.NEGATIVE_INFINITY;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  Double.NEGATIVE_INFINITY;	      double    accum    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
98	[BUG]  [BUGGY]  double  accum  =  Double.NaN  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  accum  =  Double.NaN  +  1;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  Double.NaN  +  1;	      double    accum    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
99	[BUG]  [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  weights,  begin,  length)+  1;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  weights,  begin,  length)+  1;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  weights,  begin,  length)+  1;	      double    accum    =    isBiasCorrected?    Double.NaN    :    test(values,    weights,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
100	[BUG]  [BUGGY]  test(values,  begin,  length);  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  test(values,  begin,  length);  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	test(values,  begin,  length);	      test(values,    weights,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
101	[BUG]  [BUGGY]      test(values,  weights,  begin,  length);  double  var  =  Double.NaN;  [CE]  variable  var  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]      test(values,  weights,  begin,  length);  double  var  =  Double.NaN;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	        test(values,    weights,    begin,    length);    double  var  =  Double.NaN;	  	non-compiled	[CE]  variable  var  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	2	None	add
102	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]      test(values,  weights,  begin,  length);  var  =  Double.NaN;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	        test(values,    weights,    begin,    length);    var  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	2	1	add
103	[BUG]  [BUGGY]      test(values,  weights,  begin,  length);  var  =  Double.NaN;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]      test(values,  weights,  begin,  length);  var  =  Double.NaN;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	        test(values,    weights,    begin,    length);    var  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	2	1	add
104	[BUG]  [BUGGY]  if(biasCorrected)  {  [CE]  cannot  find  symbol  biasCorrected  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if(biasCorrected)  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(biasCorrected)  {	  if    (length    >    1)    {    	non-compiled	[CE]  cannot  find  symbol  biasCorrected	18	None	replace
105	[BUG]  [BUGGY]  if(biasCorrected  ||  begin  <  length)  {  [CE]  cannot  find  symbol  biasCorrected  [FE]      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if(biasCorrected  ||  begin  <  length)  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(biasCorrected  ||  begin  <  length)  {	  if    (length    >    1)    {    	non-compiled	[CE]  cannot  find  symbol  biasCorrected	18	None	replace
106	[BUG]  [BUGGY]  if(biasCorrected  ||  begin  >  length)  {  [CE]  cannot  find  symbol  biasCorrected  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if(biasCorrected  ||  begin  >  length)  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(biasCorrected  ||  begin  >  length)  {	  if    (length    >    1)    {    	non-compiled	[CE]  cannot  find  symbol  biasCorrected	18	None	replace
107	[BUG]  [BUGGY]  if  (test(values,  values,  begin,  length))  {  if  (test(values,  weights,  begin,  length))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if  (test(values,  values,  begin,  length))  {  if  (test(values,  weights,  begin,  length))  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if    (test(values,    values,    begin,    length))    {    if  (test(values,  weights,  begin,  length))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
108	[BUG]  [BUGGY]  if  (length  >  1)  {  int  length  =  values.length;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if  (length  >  1)  {  int  length  =  values.length;  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if    (length    >    1)    {    int  length  =  values.length;	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
109	[BUG]  [BUGGY]      var  =  Double.NaN;  for(final  double  var  :  values.length)  {  var  =  Double.NaN;  }  [CE]  variable  var  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]      var  =  Double.NaN;  for(final  double  var  :  values.length)  {  var  =  Double.NaN;  }  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	        var    =    Double.NaN;    for(final  double  var  :  values.length)  {  var  =  Double.NaN;  }	  	non-compiled	[CE]  variable  var  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	12	None	add
110	[BUG]  [BUGGY]      var  =  Double.NaN;  for(final  double  var  :  values.length)  {  var  =  Double.NaN;  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]      var  =  Double.NaN;  for(final  double  var  :  values.length)  {  var  =  Double.NaN;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	        var    =    Double.NaN;    for(final  double  var  :  values.length)  {  var  =  Double.NaN;	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
111	[BUG]  [BUGGY]      var  =  Double.NaN;  for(final  double  var  :  values.values())  {  var  =  Double.NaN;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]      var  =  Double.NaN;  for(final  double  var  :  values.values())  {  var  =  Double.NaN;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	        var    =    Double.NaN;    for(final  double  var  :  values.values())  {  var  =  Double.NaN;	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
112	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if(length  <  2)  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if(length  <  2)  {	  if(length    ==    2)    {    	compilable	  [FE]  AssertionError  	22	1	replace
113	[BUG]  [BUGGY]  if(length  <  2)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if(length  <  2)  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(length  <  2)  {	  if(length    ==    2)    {    	compilable	  [FE]  AssertionError  	22	1	replace
114	[BUG]  [BUGGY]      var  =  Double.NaN;  Double  var  =  Double.NaN;  [CE]  variable  var  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]      var  =  Double.NaN;  Double  var  =  Double.NaN;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	        var    =    Double.NaN;    Double  var  =  Double.NaN;	  	non-compiled	[CE]  variable  var  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	12	None	add
115	[BUG]  [BUGGY]      var  =  Double.NaN;  var  =  Double.naN;  [CE]  cannot  find  symbol  naN  [FE]      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]      var  =  Double.NaN;  var  =  Double.naN;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	        var    =    Double.NaN;    var  =  Double.naN;	  	non-compiled	[CE]  cannot  find  symbol  naN	12	None	add
116	[BUG]  [BUGGY]  double  accum2  =  Math.abs(values.length  -  begin);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  accum2  =  Math.abs(values.length  -  begin);  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Math.abs(values.length  -  begin);	      double    accum2    =    Math.abs(values.length);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
117	[BUG]  [BUGGY]      test(values,  weights,  begin,  length);  var  =  test(values,  weights,  begin,  length);  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]      test(values,  weights,  begin,  length);  var  =  test(values,  weights,  begin,  length);  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	        test(values,    weights,    begin,    length);    var  =  test(values,  weights,  begin,  length);	  	non-compiled	[CE]  incompatible  types	2	None	add
118	[BUG]  [BUGGY]      test(values,  weights,  begin,  length);  double  accum  =  Math.abs(values.length);  [CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]      test(values,  weights,  begin,  length);  double  accum  =  Math.abs(values.length);  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	        test(values,    weights,    begin,    length);    double  accum  =  Math.abs(values.length);	  	non-compiled	[CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	2	None	add
119	[BUG]  [BUGGY]  if  (test(values,  weights,  begin,  length))  {  if  (test(values,  0,  length))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if  (test(values,  weights,  begin,  length))  {  if  (test(values,  0,  length))  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if    (test(values,    weights,    begin,    length))    {    if  (test(values,  0,  length))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
120	[BUG]  [BUGGY]  double  accum2  =  10.0;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  accum2  =  10.0;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  10.0;	      double    accum2    =    0.0;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
121	[BUG]  [BUGGY]  double  accum  =  incMoment?  Double.NaN  :  compare(values,  weights,  begin,  length);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  accum  =  incMoment?  Double.NaN  :  compare(values,  weights,  begin,  length);  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  incMoment?  Double.NaN  :  compare(values,  weights,  begin,  length);	      double    accum    =    isBiasCorrected?    Double.NaN    :    compare(values,    values,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
122	[BUG]  [BUGGY]  double  accum  =  incMoment?  Double.NaN  :  compare(values,  values,  begin,  length);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  accum  =  incMoment?  Double.NaN  :  compare(values,  values,  begin,  length);  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  incMoment?  Double.NaN  :  compare(values,  values,  begin,  length);	      double    accum    =    isBiasCorrected?    Double.NaN    :    compare(values,    values,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
123	[BUG]  [BUGGY]  double  accum2  =  Integer.MAX_VALUE;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  accum2  =  Integer.MAX_VALUE;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum2  =  Integer.MAX_VALUE;	      double    accum2    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
124	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if(incMoment)  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	if(incMoment)  {	  if    (length    >    1)    {    	compilable	  [FE]  AssertionError  	18	2	replace
125	[BUG]  [BUGGY]  if(incMoment)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if(incMoment)  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(incMoment)  {	  if    (length    >    1)    {    	compilable	  [FE]  AssertionError  	18	2	replace
126	[BUG]  [BUGGY]  double  accum  =  Integer.MAX_VALUE;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  accum  =  Integer.MAX_VALUE;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  Integer.MAX_VALUE;	      double    accum    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
127	[BUG]  [BUGGY]  double  accum  =  incMoment?  Double.POSITIVE_INFINITY  :  Double.NaN;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  accum  =  incMoment?  Double.POSITIVE_INFINITY  :  Double.NaN;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  incMoment?  Double.POSITIVE_INFINITY  :  Double.NaN;	      double    accum    =    isBiasCorrected?    Double.POSITIVE_INFINITY    :    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
128	[BUG]  [BUGGY]  double  accum  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE,  incMoment;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  accum  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE,  incMoment;  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE,  incMoment;	      double    accum    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
129	[BUG]  [BUGGY]  if(length  ==  2)  {  if(length  {  2)  {  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if(length  ==  2)  {  if(length  {  2)  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if(length    ==    2)    {    if(length  {  2)  {	  	non-compiled	[CE]  ')'  expected	21	None	add
130	[BUG]  [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  weights,  begin,  length));  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  weights,  begin,  length));  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  isBiasCorrected?  Double.NaN  :  test(values,  weights,  begin,  length));	      double    accum    =    isBiasCorrected?    Double.NaN    :    test(values,    weights,    begin,    length);    	non-compiled	[CE]  ';'  expected	24	None	replace
131	[BUG]  [BUGGY]  double  accum  =  incMoment?  Double.NaN  :  test(values,  weights,  begin,  length);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  double  accum  =  incMoment?  Double.NaN  :  test(values,  weights,  begin,  length);  [BUGGY]    if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	double  accum  =  incMoment?  Double.NaN  :  test(values,  weights,  begin,  length);	      double    accum    =    isBiasCorrected?    Double.NaN    :    test(values,    weights,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
132	[BUG]  [BUGGY]  if  (test(values,  values,  begin,  length))  {  if  (test(values,  isBiasCorrected))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {    [BUGGY]  if  (test(values,  values,  begin,  length))  {  if  (test(values,  isBiasCorrected))  {  [BUGGY]    var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	if    (test(values,    values,    begin,    length))    {    if  (test(values,  isBiasCorrected))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
