bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected(values,  accum,  length);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  int  mean  =  isBiasCorrected(values,  accum,  length);  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected(values,  accum,  length);	      int    mean    =    isBiasCorrected(values,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
2	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected(values,  begin,  length,  dev);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  int  mean  =  isBiasCorrected(values,  begin,  length,  dev);  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected(values,  begin,  length,  dev);	      int    mean    =    isBiasCorrected(values,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
3	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected(values,  begin,  length,  accum);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  int  mean  =  isBiasCorrected(values,  begin,  length,  accum);  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected(values,  begin,  length,  accum);	      int    mean    =    isBiasCorrected(values,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
4	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  values[accum]  :  values[accum2];  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  mean  =  isBiasCorrected?  values[accum]  :  values[accum2];  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  values[accum]  :  values[accum2];	      int    mean    =    isBiasCorrected?    values[accum]    :    values[accum2];    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
5	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  values[accum]  :  accum2;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  int  mean  =  isBiasCorrected?  values[accum]  :  accum2;  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  values[accum]  :  accum2;	      int    mean    =    isBiasCorrected?    values[accum]    :    values[accum2];    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
6	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  values[accum]  :  accum;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  int  mean  =  isBiasCorrected?  values[accum]  :  accum;  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  values[accum]  :  accum;	      int    mean    =    isBiasCorrected?    values[accum]    :    values[accum2];    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
7	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  values[accum]  :  dev;  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  int  mean  =  isBiasCorrected?  values[accum]  :  dev;  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  values[accum]  :  dev;	      int    mean    =    isBiasCorrected?    values[accum]    :    values[accum2];    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
8	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length)+  1);  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length)+  1);  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length)+  1);	      double    mean    =    isBiasCorrected?    Double.NaN    :    ValueUtils.doubleToLongBits(values,    begin,    length));    	non-compiled	[CE]  ';'  expected	14	None	replace
9	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length  +  1));  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length  +  1));  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length  +  1));	      double    mean    =    isBiasCorrected?    Double.NaN    :    ValueUtils.doubleToLongBits(values,    begin,    length));    	non-compiled	[CE]  ';'  expected	14	None	replace
10	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length  -  1));  [CE]  ';'  expected  [FE]                    AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length  -  1));  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length  -  1));	      double    mean    =    isBiasCorrected?    Double.NaN    :    ValueUtils.doubleToLongBits(values,    begin,    length));    	non-compiled	[CE]  ';'  expected	14	None	replace
11	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum  /  var);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  dev  =  Math.abs(accum  /  var);  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum  /  var);	      double    dev    =    Math.abs(accum    /    dev);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
12	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum2  /  dev);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  dev  =  Math.abs(accum2  /  dev);  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum2  /  dev);	      double    dev    =    Math.abs(accum    /    dev);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
13	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum  *  accum);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  dev  =  Math.abs(accum  *  accum);  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum  *  accum);	      double    dev    =    Math.abs(accum    /    dev);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
14	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  1  :  -1;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  int  mean  =  isBiasCorrected?  1  :  -1;  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  1  :  -1;	      int    mean    =    isBiasCorrected?    1    :    0;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
15	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  1  :  0;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  mean  =  isBiasCorrected?  1  :  0;  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  1  :  0;	      int    mean    =    isBiasCorrected?    1    :    0;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
16	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  values[accum2]  :  null;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  int  mean  =  isBiasCorrected?  values[accum2]  :  null;  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  values[accum2]  :  null;	      int    mean    =    isBiasCorrected?    values[accum]    :    null;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
17	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  values[accum]  :  var;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  int  mean  =  isBiasCorrected?  values[accum]  :  var;  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  values[accum]  :  var;	      int    mean    =    isBiasCorrected?    values[accum]    :    null;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
18	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  values[accum1]  :  null;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  int  mean  =  isBiasCorrected?  values[accum1]  :  null;  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  values[accum1]  :  null;	      int    mean    =    isBiasCorrected?    values[accum]    :    null;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
19	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  Double.NaN  :  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  mean  =  isBiasCorrected?  Double.NaN  :  Double.POSITIVE_INFINITY;  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  Double.NaN  :  Double.POSITIVE_INFINITY;	      double    mean    =    isBiasCorrected?    Double.POSITIVE_INFINITY    :    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
20	[BUG]  [BUGGY]  double  mean  =  incMoment?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  mean  =  incMoment?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  incMoment?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;	      double    mean    =    isBiasCorrected?    Double.POSITIVE_INFINITY    :    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
21	[BUG]  [BUGGY]  For(int  i  =  begin;  i  <  begin  +  length  -  1;  i++)  {  [CE]  '.class'  expected  [FE]          AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  For(int  i  =  begin;  i  <  begin  +  length  -  1;  i++)  {  [BUGGY]    dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	For(int  i  =  begin;  i  <  begin  +  length  -  1;  i++)  {	  For(int    i    =    begin;    i    <    begin    +    length;    i++)    {    	non-compiled	[CE]  '.class'  expected	3	None	replace
22	[BUG]  [BUGGY]  For(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  [CE]  '.class'  expected  [FE]            AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  For(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  [BUGGY]    dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	For(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {	  For(int    i    =    begin;    i    <    begin    +    length;    i++)    {    	non-compiled	[CE]  '.class'  expected	3	None	replace
23	[BUG]  [BUGGY]  For(int  i  =  begin;  i  <  begin  +  length  /  2;  i++)  {  [CE]  '.class'  expected  [FE]              AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  For(int  i  =  begin;  i  <  begin  +  length  /  2;  i++)  {  [BUGGY]    dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	For(int  i  =  begin;  i  <  begin  +  length  /  2;  i++)  {	  For(int    i    =    begin;    i    <    begin    +    length;    i++)    {    	non-compiled	[CE]  '.class'  expected	3	None	replace
24	[BUG]  [BUGGY]  double  dev  =  getDev(values,  accum,  length);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  dev  =  getDev(values,  accum,  length);  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  getDev(values,  accum,  length);	      double    dev    =    getDev(values,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
25	[BUG]  [BUGGY]  double  dev  =  getDev(values,  begin,  length,  accum);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  dev  =  getDev(values,  begin,  length,  accum);  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  getDev(values,  begin,  length,  accum);	      double    dev    =    getDev(values,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
26	[BUG]  [BUGGY]  double  dev  =  getDev(values,  accum2,  length);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  dev  =  getDev(values,  accum2,  length);  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  getDev(values,  accum2,  length);	      double    dev    =    getDev(values,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
27	[BUG]  [BUGGY]  double  dev  =  getDev(values,  begin,  length,  accum2);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  dev  =  getDev(values,  begin,  length,  accum2);  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  getDev(values,  begin,  length,  accum2);	      double    dev    =    getDev(values,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
28	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum2);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  dev  =  Math.abs(accum2);  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum2);	      double    dev    =    Math.abs(accum);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
29	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum2,  var);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  dev  =  Math.abs(accum2,  var);  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum2,  var);	      double    dev    =    Math.abs(accum);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
30	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum2  -  accum);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  dev  =  Math.abs(accum2  -  accum);  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum2  -  accum);	      double    dev    =    Math.abs(accum);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
31	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected(values,  accum,  length);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  mean  =  isBiasCorrected(values,  accum,  length);  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected(values,  accum,  length);	      double    mean    =    isBiasCorrected(values,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
32	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected(values,  begin,  length,  dev);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  mean  =  isBiasCorrected(values,  begin,  length,  dev);  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected(values,  begin,  length,  dev);	      double    mean    =    isBiasCorrected(values,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
33	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected(values,  weights,  begin,  length);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  mean  =  isBiasCorrected(values,  weights,  begin,  length);  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected(values,  weights,  begin,  length);	      double    mean    =    isBiasCorrected(values,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
34	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected(values,  accum2,  length);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  mean  =  isBiasCorrected(values,  accum2,  length);  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected(values,  accum2,  length);	      double    mean    =    isBiasCorrected(values,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
35	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  for(int  i  =  begin  +  length;  i  >=  begin  +  length;  i++)  {  [BUGGY]    dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	add	for(int  i  =  begin  +  length;  i  >=  begin  +  length;  i++)  {	  for(int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	3	replace
36	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  >=  begin  +  length;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  for(int  i  =  begin  +  length;  i  >=  begin  +  length;  i++)  {  [BUGGY]    dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int  i  =  begin  +  length;  i  >=  begin  +  length;  i++)  {	  for(int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	3	replace
37	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  for(int  i  =  begin  +  1;  i  <  begin  +  length;  i++)  {  [BUGGY]    dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	add	for(int  i  =  begin  +  1;  i  <  begin  +  length;  i++)  {	  for(int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    	compilable	  [FE]  AssertionError  	2	3	replace
38	[BUG]  [BUGGY]  for(int  i  =  begin  +  1;  i  <  begin  +  length;  i++)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  for(int  i  =  begin  +  1;  i  <  begin  +  length;  i++)  {  [BUGGY]    dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int  i  =  begin  +  1;  i  <  begin  +  length;  i++)  {	  for(int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    	compilable	  [FE]  AssertionError  	2	3	replace
39	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  1;  i++)  {  [BUGGY]    dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	add	for(int  i  =  begin  +  length;  i  <  begin  +  1;  i++)  {	  for(int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    	compilable	  [FE]  AssertionError  	2	2	replace
40	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  1;  i++)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  1;  i++)  {  [BUGGY]    dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int  i  =  begin  +  length;  i  <  begin  +  1;  i++)  {	  for(int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    	compilable	  [FE]  AssertionError  	2	2	replace
41	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  mean  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY  +  1;	      double    mean    =    isBiasCorrected?    Double.POSITIVE_INFINITY    :    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
42	[BUG]  [BUGGY]  Double  mean  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  Double  mean  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY;  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	Double  mean  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY;	      double    mean    =    isBiasCorrected?    Double.POSITIVE_INFINITY    :    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
43	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NaN  +  1;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  mean  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NaN  +  1;  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NaN  +  1;	      double    mean    =    isBiasCorrected?    Double.POSITIVE_INFINITY    :    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
44	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum2  -  mean);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  dev  =  Math.abs(accum2  -  mean);  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum2  -  mean);	      double    dev    =    Math.abs(accum    -    mean);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
45	[BUG]  [BUGGY]  double  dev  =  Math.abs(dev  -  mean);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  dev  =  Math.abs(dev  -  mean);  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(dev  -  mean);	      double    dev    =    Math.abs(accum    -    mean);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
46	[BUG]  [BUGGY]  double  dev  =  Math.abs(mean  -  accum2);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  dev  =  Math.abs(mean  -  accum2);  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(mean  -  accum2);	      double    dev    =    Math.abs(accum    -    mean);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
47	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum  -  mean,  dev);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  dev  =  Math.abs(accum  -  mean,  dev);  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum  -  mean,  dev);	      double    dev    =    Math.abs(accum    -    mean);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
48	[BUG]  [BUGGY]  double  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  [BUGGY]    dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
49	[BUG]  [BUGGY]  double  dev  =  values[i]  -  mean;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  dev  =  values[i]  -  mean;  [BUGGY]    dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  values[i]  -  mean;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
50	[BUG]  [BUGGY]  double  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  DEV);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  DEV);  [BUGGY]    dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  DEV);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
51	[BUG]  [BUGGY]  double  accum2  =  1.0;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  accum2  =  1.0;  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  accum2  =  1.0;	      double    accum2    =    0.0;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
52	[BUG]  [BUGGY]  double  accum2  =  0;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  accum2  =  0;  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  accum2  =  0;	      double    accum2    =    0.0;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
53	[BUG]  [BUGGY]  accum2  =  0.0;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  accum2  =  0.0;  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	accum2  =  0.0;	      double    accum2    =    0.0;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
54	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected.length  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  int  mean  =  isBiasCorrected.length  -  1;  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected.length  -  1;	      int    mean    =    isBiasCorrected.length;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
55	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected.length;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  mean  =  isBiasCorrected.length;  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected.length;	      int    mean    =    isBiasCorrected.length;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
56	[BUG]  [BUGGY]  int  mean  =  accum.length;  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  int  mean  =  accum.length;  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  accum.length;	      int    mean    =    isBiasCorrected.length;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
57	[BUG]  [BUGGY]  int  mean  =  var.length;  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  int  mean  =  var.length;  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  var.length;	      int    mean    =    isBiasCorrected.length;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
58	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  for(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  for(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  [BUGGY]    dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    for(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
59	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  For(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  [CE]  '.class'  expected  [FE]      AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  For(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  [BUGGY]    dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    For(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {	  	non-compiled	[CE]  '.class'  expected	1	None	add
60	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  [CE]  >  expected  [FE]        AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  [BUGGY]    dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {	  	non-compiled	[CE]  >  expected	1	None	add
61	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  for(int  i  =  start  +  length;  i  <  begin  +  length;  i++)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  for(int  i  =  start  +  length;  i  <  begin  +  length;  i++)  {  [BUGGY]    dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    for(int  i  =  start  +  length;  i  <  begin  +  length;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
62	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  for(int  i  =  beginning  +  length;  i  <  begin  +  length;  i++)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  for(int  i  =  beginning  +  length;  i  <  begin  +  length;  i++)  {  [BUGGY]    dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    for(int  i  =  beginning  +  length;  i  <  begin  +  length;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
63	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum  /  dev2);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  dev  =  Math.abs(accum  /  dev2);  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum  /  dev2);	      double    dev    =    Math.abs(accum    /    dev);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
64	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum  *  var);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  dev  =  Math.abs(accum  *  var);  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum  *  var);	      double    dev    =    Math.abs(accum    /    dev);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
65	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected(values,  begin,  length  -  1);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  mean  =  isBiasCorrected(values,  begin,  length  -  1);  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected(values,  begin,  length  -  1);	      double    mean    =    isBiasCorrected(values,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
66	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected(values,  begin,  length  -  1);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  int  mean  =  isBiasCorrected(values,  begin,  length  -  1);  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected(values,  begin,  length  -  1);	      int    mean    =    isBiasCorrected(values,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
67	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected(values,  accum2,  length);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  int  mean  =  isBiasCorrected(values,  accum2,  length);  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected(values,  accum2,  length);	      int    mean    =    isBiasCorrected(values,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
68	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  values[accum0]  :  null;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  int  mean  =  isBiasCorrected?  values[accum0]  :  null;  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  values[accum0]  :  null;	      int    mean    =    isBiasCorrected?    values[accum]    :    null;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
69	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  while(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  [CE]  '.class'  expected  [FE]    AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  while(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  [BUGGY]    dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    while(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {	  	non-compiled	[CE]  '.class'  expected	1	None	add
70	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  (int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  (int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  [BUGGY]    dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    (int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {	  	non-compiled	[CE]  ')'  expected	1	None	add
71	[BUG]  [BUGGY]  double  accum2  =  10.0;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  accum2  =  10.0;  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  accum2  =  10.0;	      double    accum2    =    0.0;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
72	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  1  :  0,  length;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  int  mean  =  isBiasCorrected?  1  :  0,  length;  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  1  :  0,  length;	      int    mean    =    isBiasCorrected?    1    :    0;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
73	[BUG]  [BUGGY]  For(int  i  =  begin  +  length;  i  >=  begin  +  length;  i++)  {  [CE]  '.class'  expected  [FE]          AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  For(int  i  =  begin  +  length;  i  >=  begin  +  length;  i++)  {  [BUGGY]    dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	For(int  i  =  begin  +  length;  i  >=  begin  +  length;  i++)  {	  For(int    i    =    begin;    i    <    begin    +    length;    i++)    {    	non-compiled	[CE]  '.class'  expected	3	None	replace
74	[BUG]  [BUGGY]  For(int  i  =  start;  i  <  begin  +  length;  i++)  {  [CE]  '.class'  expected  [FE]            AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  For(int  i  =  start;  i  <  begin  +  length;  i++)  {  [BUGGY]    dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	For(int  i  =  start;  i  <  begin  +  length;  i++)  {	  For(int    i    =    begin;    i    <    begin    +    length;    i++)    {    	non-compiled	[CE]  '.class'  expected	3	None	replace
75	[BUG]  [BUGGY]  double  mean  =  incMoment?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  mean  =  incMoment?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY;  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  incMoment?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY;	      double    mean    =    isBiasCorrected?    Double.POSITIVE_INFINITY    :    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
76	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length),  dev);  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length),  dev);  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length),  dev);	      double    mean    =    isBiasCorrected?    Double.NaN    :    ValueUtils.doubleToLongBits(values,    begin,    length));    	non-compiled	[CE]  ';'  expected	14	None	replace
77	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length)-  1);  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length)-  1);  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length)-  1);	      double    mean    =    isBiasCorrected?    Double.NaN    :    ValueUtils.doubleToLongBits(values,    begin,    length));    	non-compiled	[CE]  ';'  expected	14	None	replace
78	[BUG]  [BUGGY]  double  dev  =  getDev(values,  begin,  length  -  1);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  dev  =  getDev(values,  begin,  length  -  1);  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  getDev(values,  begin,  length  -  1);	      double    dev    =    getDev(values,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
79	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected.length  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  int  mean  =  isBiasCorrected.length  +  1;  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected.length  +  1;	      int    mean    =    isBiasCorrected.length;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
80	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  values[accum]  :  values[accum2  -  1];  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  int  mean  =  isBiasCorrected?  values[accum]  :  values[accum2  -  1];  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  values[accum]  :  values[accum2  -  1];	      int    mean    =    isBiasCorrected?    values[accum]    :    values[accum2];    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
81	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  values[accum]  :  values[accum2  +  1];  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  int  mean  =  isBiasCorrected?  values[accum]  :  values[accum2  +  1];  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  values[accum]  :  values[accum2  +  1];	      int    mean    =    isBiasCorrected?    values[accum]    :    values[accum2];    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
82	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  values[accum1]  :  values[accum2];  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  int  mean  =  isBiasCorrected?  values[accum1]  :  values[accum2];  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  values[accum1]  :  values[accum2];	      int    mean    =    isBiasCorrected?    values[accum]    :    values[accum2];    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
83	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  values[accum]  :  values[accum1];  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  int  mean  =  isBiasCorrected?  values[accum]  :  values[accum1];  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  values[accum]  :  values[accum1];	      int    mean    =    isBiasCorrected?    values[accum]    :    values[accum2];    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
84	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected.get(values,  begin,  length);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  int  mean  =  isBiasCorrected.get(values,  begin,  length);  [BUGGY]    dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected.get(values,  begin,  length);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
85	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  begin  :  begin  +  length;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  int  mean  =  isBiasCorrected?  begin  :  begin  +  length;  [BUGGY]    dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  begin  :  begin  +  length;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
86	[BUG]  [BUGGY]  double  dev  =  Math.abs(m2  -  mean);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  dev  =  Math.abs(m2  -  mean);  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(m2  -  mean);	      double    dev    =    Math.abs(accum    -    mean);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
87	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum2,  dev);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  dev  =  Math.abs(accum2,  dev);  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum2,  dev);	      double    dev    =    Math.abs(accum);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
88	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum2  -  var);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  dev  =  Math.abs(accum2  -  var);  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum2  -  var);	      double    dev    =    Math.abs(accum);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
89	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  values[accum2]  :  values[accum2];  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  int  mean  =  isBiasCorrected?  values[accum2]  :  values[accum2];  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  values[accum2]  :  values[accum2];	      int    mean    =    isBiasCorrected?    values[accum]    :    values[accum2];    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
90	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  values[accum0]  :  values[accum2];  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  int  mean  =  isBiasCorrected?  values[accum0]  :  values[accum2];  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  values[accum0]  :  values[accum2];	      int    mean    =    isBiasCorrected?    values[accum]    :    values[accum2];    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
91	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  1  :  accum;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  int  mean  =  isBiasCorrected?  1  :  accum;  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  1  :  accum;	      int    mean    =    isBiasCorrected?    1    :    0;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
92	[BUG]  [BUGGY]  For(int  i  =  begin;  i  <  begin  +  length  &&  length  >  1)  {  [CE]  '.class'  expected  [FE]          AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  For(int  i  =  begin;  i  <  begin  +  length  &&  length  >  1)  {  [BUGGY]    dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	For(int  i  =  begin;  i  <  begin  +  length  &&  length  >  1)  {	  For(int    i    =    begin;    i    <    begin    +    length;    i++)    {    	non-compiled	[CE]  '.class'  expected	3	None	replace
93	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  length;  i++)  {  [BUGGY]    dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	add	for(int  i  =  begin  +  length;  i  <  begin  +  length  *  length;  i++)  {	  for(int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	3	replace
94	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  length;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  length;  i++)  {  [BUGGY]    dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int  i  =  begin  +  length;  i  <  begin  +  length  *  length;  i++)  {	  for(int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	3	replace
95	[BUG]  [BUGGY]  double  dev  =  getDev(values,  accum,  begin,  length);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  dev  =  getDev(values,  accum,  begin,  length);  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  getDev(values,  accum,  begin,  length);	      double    dev    =    getDev(values,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
96	[BUG]  [BUGGY]  double  mean  =  incMoment?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length));  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  mean  =  incMoment?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length));  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  incMoment?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length));	      double    mean    =    isBiasCorrected?    Double.NaN    :    ValueUtils.doubleToLongBits(values,    begin,    length));    	non-compiled	[CE]  ';'  expected	14	None	replace
97	[BUG]  [BUGGY]  double  mean  =  incMoment?  Double.POSITIVE_INFINITY  :  Double.NaN;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  mean  =  incMoment?  Double.POSITIVE_INFINITY  :  Double.NaN;  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  incMoment?  Double.POSITIVE_INFINITY  :  Double.NaN;	      double    mean    =    isBiasCorrected?    Double.POSITIVE_INFINITY    :    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
98	[BUG]  [BUGGY]  double  accum2  =  0.001;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  accum2  =  0.001;  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  accum2  =  0.001;	      double    accum2    =    0.0;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
99	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum  *  dev);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  double  dev  =  Math.abs(accum  *  dev);  [BUGGY]    for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum  *  dev);	      double    dev    =    Math.abs(accum    /    dev);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
100	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]    dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
101	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  incMoment  =  isBiasCorrected;  [BUGGY]    dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	incMoment  =  isBiasCorrected;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
102	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  for(int  i  =  begin  +  length;  i  <  beginning  +  length;  i++)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  for(int  i  =  begin  +  length;  i  <  beginning  +  length;  i++)  {  [BUGGY]    dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    for(int  i  =  begin  +  length;  i  <  beginning  +  length;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
103	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  for(int  i  =  begin  +  length;  i  <  start  +  length;  i++)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;    [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  for(int  i  =  begin  +  length;  i  <  start  +  length;  i++)  {  [BUGGY]    dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    for(int  i  =  begin  +  length;  i  <  start  +  length;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
