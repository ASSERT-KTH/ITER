bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    AssertionError  [CONTEXT]  public  double  evaluate(final  double[]  values,  final  double[]  weights,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,begin,  length))  {  clear();  [BUGGY]    var  =  evaluate(values,  weights,  begin,  length);  [BUGGY]  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  Mean  mean  =  new  Mean();  double  m  =  mean.evaluate(values,  weights,  begin,  length);  var  =  evaluate(values,  weights,  m,  begin,  length);  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  int  begin  final  int  length  [VARIABLES]  Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  weights  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	320	320	1	add	    var  =  evaluate(values,  weights,  begin,  length);		compilable	  [FE]  StackOverflowError  	10	3	add
2	[BUG]  [BUGGY]    var  =  evaluate(values,  weights,  begin,  length);  [FE]  StackOverflowError  [FE]    AssertionError  [CONTEXT]  public  double  evaluate(final  double[]  values,  final  double[]  weights,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,begin,  length))  {  clear();  [BUGGY]    var  =  evaluate(values,  weights,  begin,  length);  [BUGGY]  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  Mean  mean  =  new  Mean();  double  m  =  mean.evaluate(values,  weights,  begin,  length);  var  =  evaluate(values,  weights,  m,  begin,  length);  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  int  begin  final  int  length  [VARIABLES]  Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  weights  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	320	320	1	replace	    var  =  evaluate(values,  weights,  begin,  length);		compilable	  [FE]  StackOverflowError  	10	3	add
3	[BUG]  [BUGGY]    double  m  =  evaluate(values,  weights,  begin,  length);  [CE]  variable  m  is  already  defined  in  method  evaluate(double[],double[],int,int)  [FE]      AssertionError  [CONTEXT]  public  double  evaluate(final  double[]  values,  final  double[]  weights,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,begin,  length))  {  clear();  [BUGGY]    double  m  =  evaluate(values,  weights,  begin,  length);  [BUGGY]  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  Mean  mean  =  new  Mean();  double  m  =  mean.evaluate(values,  weights,  begin,  length);  var  =  evaluate(values,  weights,  m,  begin,  length);  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  int  begin  final  int  length  [VARIABLES]  Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  weights  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	320	320	1	replace	    double  m  =  evaluate(values,  weights,  begin,  length);		non-compiled	[CE]  variable  m  is  already  defined  in  method  evaluate(double[],double[],int,int)	10	None	add
4	[BUG]  [BUGGY]    double  var  =  evaluate(values,  weights,  begin,  length);  [CE]  variable  var  is  already  defined  in  method  evaluate(double[],double[],int,int)  [FE]        AssertionError  [CONTEXT]  public  double  evaluate(final  double[]  values,  final  double[]  weights,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,begin,  length))  {  clear();  [BUGGY]    double  var  =  evaluate(values,  weights,  begin,  length);  [BUGGY]  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  Mean  mean  =  new  Mean();  double  m  =  mean.evaluate(values,  weights,  begin,  length);  var  =  evaluate(values,  weights,  m,  begin,  length);  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  int  begin  final  int  length  [VARIABLES]  Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  weights  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	320	320	1	replace	    double  var  =  evaluate(values,  weights,  begin,  length);		non-compiled	[CE]  variable  var  is  already  defined  in  method  evaluate(double[],double[],int,int)	10	None	add
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  public  double  evaluate(final  double[]  values,  final  double[]  weights,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,begin,  length))  {  clear();  [BUGGY]    incMoment  =  isBiasCorrected;  [BUGGY]  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  Mean  mean  =  new  Mean();  double  m  =  mean.evaluate(values,  weights,  begin,  length);  var  =  evaluate(values,  weights,  m,  begin,  length);  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  int  begin  final  int  length  [VARIABLES]  Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  weights  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	320	320	1	add	    incMoment  =  isBiasCorrected;		compilable	  [FE]  AssertionError  	10	1	add
6	[BUG]  [BUGGY]    incMoment  =  isBiasCorrected;  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  public  double  evaluate(final  double[]  values,  final  double[]  weights,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,begin,  length))  {  clear();  [BUGGY]    incMoment  =  isBiasCorrected;  [BUGGY]  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  Mean  mean  =  new  Mean();  double  m  =  mean.evaluate(values,  weights,  begin,  length);  var  =  evaluate(values,  weights,  m,  begin,  length);  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  int  begin  final  int  length  [VARIABLES]  Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  weights  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	320	320	1	replace	    incMoment  =  isBiasCorrected;		compilable	  [FE]  AssertionError  	10	1	add
7	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]            AssertionError  [CONTEXT]  public  double  evaluate(final  double[]  values,  final  double[]  weights,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,begin,  length))  {  clear();  [BUGGY]    var  =  evaluate(values,  values,  begin,  length);  [BUGGY]  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  Mean  mean  =  new  Mean();  double  m  =  mean.evaluate(values,  weights,  begin,  length);  var  =  evaluate(values,  weights,  m,  begin,  length);  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  int  begin  final  int  length  [VARIABLES]  Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  weights  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	320	320	1	add	    var  =  evaluate(values,  values,  begin,  length);		compilable	  [FE]  StackOverflowError  	10	3	add
8	[BUG]  [BUGGY]    var  =  evaluate(values,  values,  begin,  length);  [FE]  StackOverflowError  [FE]            AssertionError  [CONTEXT]  public  double  evaluate(final  double[]  values,  final  double[]  weights,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,begin,  length))  {  clear();  [BUGGY]    var  =  evaluate(values,  values,  begin,  length);  [BUGGY]  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  Mean  mean  =  new  Mean();  double  m  =  mean.evaluate(values,  weights,  begin,  length);  var  =  evaluate(values,  weights,  m,  begin,  length);  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  int  begin  final  int  length  [VARIABLES]  Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  weights  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	320	320	1	replace	    var  =  evaluate(values,  values,  begin,  length);		compilable	  [FE]  StackOverflowError  	10	3	add
9	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  double  evaluate(final  double[]  values,  final  double[]  weights,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,begin,  length))  {  clear();  [BUGGY]  if  (length  >  1)  {  [BUGGY]  var  =  0.0;  }  else  if  (length  >  1)  {  Mean  mean  =  new  Mean();  double  m  =  mean.evaluate(values,  weights,  begin,  length);  var  =  evaluate(values,  weights,  m,  begin,  length);  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  int  begin  final  int  length  [VARIABLES]  Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  weights  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	320	320	1	add	if  (length  >  1)  {	if  (length  ==  1)  {  	compilable	  [FE]  AssertionError  	9	2	replace
10	[BUG]  [BUGGY]  if  (length  >  1)  {  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  double  evaluate(final  double[]  values,  final  double[]  weights,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,begin,  length))  {  clear();  [BUGGY]  if  (length  >  1)  {  [BUGGY]  var  =  0.0;  }  else  if  (length  >  1)  {  Mean  mean  =  new  Mean();  double  m  =  mean.evaluate(values,  weights,  begin,  length);  var  =  evaluate(values,  weights,  m,  begin,  length);  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  int  begin  final  int  length  [VARIABLES]  Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  weights  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	320	320	1	replace	if  (length  >  1)  {	if  (length  ==  1)  {  	compilable	  [FE]  AssertionError  	9	2	replace
11	[BUG]  [BUGGY]    var  =  evaluate(values,  weights,  m,  begin,  length);  [CE]  cannot  find  symbol  m  [FE]    AssertionError  [CONTEXT]  public  double  evaluate(final  double[]  values,  final  double[]  weights,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,begin,  length))  {  clear();  [BUGGY]    var  =  evaluate(values,  weights,  m,  begin,  length);  [BUGGY]  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  Mean  mean  =  new  Mean();  double  m  =  mean.evaluate(values,  weights,  begin,  length);  var  =  evaluate(values,  weights,  m,  begin,  length);  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  int  begin  final  int  length  [VARIABLES]  Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  weights  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	320	320	1	replace	    var  =  evaluate(values,  weights,  m,  begin,  length);		non-compiled	[CE]  cannot  find  symbol  m	10	None	add
12	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  double  evaluate(final  double[]  values,  final  double[]  weights,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,begin,  length))  {  clear();  [BUGGY]    incMoment  =  isBiasCorrected  &&  isBiasCorrected;  [BUGGY]  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  Mean  mean  =  new  Mean();  double  m  =  mean.evaluate(values,  weights,  begin,  length);  var  =  evaluate(values,  weights,  m,  begin,  length);  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  int  begin  final  int  length  [VARIABLES]  Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  weights  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	320	320	1	add	    incMoment  =  isBiasCorrected  &&  isBiasCorrected;		compilable	  [FE]  AssertionError  	10	1	add
13	[BUG]  [BUGGY]    incMoment  =  isBiasCorrected  &&  isBiasCorrected;  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  double  evaluate(final  double[]  values,  final  double[]  weights,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,begin,  length))  {  clear();  [BUGGY]    incMoment  =  isBiasCorrected  &&  isBiasCorrected;  [BUGGY]  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  Mean  mean  =  new  Mean();  double  m  =  mean.evaluate(values,  weights,  begin,  length);  var  =  evaluate(values,  weights,  m,  begin,  length);  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  int  begin  final  int  length  [VARIABLES]  Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  weights  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	320	320	1	replace	    incMoment  =  isBiasCorrected  &&  isBiasCorrected;		compilable	  [FE]  AssertionError  	10	1	add
14	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  double  evaluate(final  double[]  values,  final  double[]  weights,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,begin,  length))  {  clear();  [BUGGY]  if  (length  <  1)  {  [BUGGY]  var  =  0.0;  }  else  if  (length  >  1)  {  Mean  mean  =  new  Mean();  double  m  =  mean.evaluate(values,  weights,  begin,  length);  var  =  evaluate(values,  weights,  m,  begin,  length);  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  int  begin  final  int  length  [VARIABLES]  Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  weights  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	320	320	1	add	if  (length  <  1)  {	if  (length  ==  1)  {  	compilable	  [FE]  AssertionError  	9	1	replace
15	[BUG]  [BUGGY]  if  (length  <  1)  {  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  double  evaluate(final  double[]  values,  final  double[]  weights,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,begin,  length))  {  clear();  [BUGGY]  if  (length  <  1)  {  [BUGGY]  var  =  0.0;  }  else  if  (length  >  1)  {  Mean  mean  =  new  Mean();  double  m  =  mean.evaluate(values,  weights,  begin,  length);  var  =  evaluate(values,  weights,  m,  begin,  length);  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  int  begin  final  int  length  [VARIABLES]  Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  weights  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	320	320	1	replace	if  (length  <  1)  {	if  (length  ==  1)  {  	compilable	  [FE]  AssertionError  	9	1	replace
16	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  double  evaluate(final  double[]  values,  final  double[]  weights,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,begin,  length))  {  clear();  [BUGGY]  if(length  ==  0)  {  [BUGGY]  var  =  0.0;  }  else  if  (length  >  1)  {  Mean  mean  =  new  Mean();  double  m  =  mean.evaluate(values,  weights,  begin,  length);  var  =  evaluate(values,  weights,  m,  begin,  length);  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  int  begin  final  int  length  [VARIABLES]  Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  weights  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	320	320	1	add	if(length  ==  0)  {	if  (length  ==  1)  {  	compilable	  [FE]  AssertionError  	9	1	replace
17	[BUG]  [BUGGY]  if(length  ==  0)  {  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  double  evaluate(final  double[]  values,  final  double[]  weights,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,begin,  length))  {  clear();  [BUGGY]  if(length  ==  0)  {  [BUGGY]  var  =  0.0;  }  else  if  (length  >  1)  {  Mean  mean  =  new  Mean();  double  m  =  mean.evaluate(values,  weights,  begin,  length);  var  =  evaluate(values,  weights,  m,  begin,  length);  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  int  begin  final  int  length  [VARIABLES]  Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  weights  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	320	320	1	replace	if(length  ==  0)  {	if  (length  ==  1)  {  	compilable	  [FE]  AssertionError  	9	1	replace
18	[BUG]  [BUGGY]    var  =  evaluate(values,  values,  weights,  begin,  length);  [CE]  no  suitable  method  found  for  evaluate(double[],double[],double[],int,int)  [FE]    AssertionError  [CONTEXT]  public  double  evaluate(final  double[]  values,  final  double[]  weights,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,begin,  length))  {  clear();  [BUGGY]    var  =  evaluate(values,  values,  weights,  begin,  length);  [BUGGY]  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  Mean  mean  =  new  Mean();  double  m  =  mean.evaluate(values,  weights,  begin,  length);  var  =  evaluate(values,  weights,  m,  begin,  length);  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  int  begin  final  int  length  [VARIABLES]  Mean  mean  boolean  incMoment  isBiasCorrected  double[]  values  weights  double  m  var  long  serialVersionUID  SecondMoment  m2  moment  int  begin  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	320	320	1	replace	    var  =  evaluate(values,  values,  weights,  begin,  length);		non-compiled	[CE]  no  suitable  method  found  for  evaluate(double[],double[],double[],int,int)	10	None	add
