bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  var  =  (accum  -  (values[i]  *  accum2  /  mean))  /  (sumWts  -  1.0);  [CE]  cannot  find  symbol  i  [FE]        AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (values[i]  *  accum2  /  mean))  /  (sumWts  -  1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[i]  *  accum2  /  mean))  /  (sumWts  -  1.0);	  var    =    (accum    -    (values[i]    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  i	14	None	replace
2	[BUG]  [BUGGY]  var  =  (accum  -  (weights[i]  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CE]  cannot  find  symbol  i  [FE]          AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (weights[i]  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (weights[i]  *  accum2  /  sumWts))  /  (sumWts  -  1.0);	  var    =    (accum    -    (values[i]    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  i	14	None	replace
3	[BUG]  [BUGGY]  var  =  (accum  -  (values[i]  *  accum2  /  dev))  /  (sumWts  -  1.0);  [CE]  cannot  find  symbol  i  [FE]            AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (values[i]  *  accum2  /  dev))  /  (sumWts  -  1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[i]  *  accum2  /  dev))  /  (sumWts  -  1.0);	  var    =    (accum    -    (values[i]    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  i	14	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;	  var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	9	3	replace
5	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;	  var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	9	3	replace
6	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  totalWts;  [CE]  cannot  find  symbol  totalWts  [FE]      AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  totalWts;  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  totalWts;	  var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  totalWts	9	None	replace
7	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  amountWts;  [CE]  cannot  find  symbol  amountWts  [FE]        AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  amountWts;  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  amountWts;	  var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  amountWts	9	None	replace
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev;  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev;	  var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	9	2	replace
9	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev;  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev;	  var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	9	2	replace
10	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);	  	compilable	  [FE]  AssertionError  	25	1	add
11	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);	  	compilable	  [FE]  AssertionError  	25	1	add
12	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))(sumWts  *  1.0);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))(sumWts  *  1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))(sumWts  *  1.0);	  	non-compiled	[CE]  ';'  expected	25	None	add
13	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWtes))/(sumWts  *  1.0);  [CE]  cannot  find  symbol  sumWtes  [FE]        AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWtes))/(sumWts  *  1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWtes))/(sumWts  *  1.0);	  	non-compiled	[CE]  cannot  find  symbol  sumWtes	25	None	add
14	[BUG]  [BUGGY]  if(isBiasCorrected)  {  accum2  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CE]  cannot  find  symbol  i  [FE]          AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  if(isBiasCorrected)  {  accum2  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	if(isBiasCorrected)  {  accum2  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }	      if(isBiasCorrected)    {    accum2    +=    weights[i]    *    dev;    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  i	2	None	replace
15	[BUG]  [BUGGY]  accum2  +=  weights[i]  *  (dev  *  dev);  [CE]  cannot  find  symbol  i  [FE]            AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  accum2  +=  weights[i]  *  (dev  *  dev);  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum2  +=  weights[i]  *  (dev  *  dev);	      accum2    +=    weights[i]    *    dev;    	non-compiled	[CE]  cannot  find  symbol  i	3	None	replace
16	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  dev;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  dev;	      accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    	compilable	  [FE]  AssertionError  	22	2	replace
17	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  dev;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  dev;	      accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    	compilable	  [FE]  AssertionError  	22	2	replace
18	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;	      accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    	compilable	  [FE]  AssertionError  	22	2	replace
19	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;	      accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    	compilable	  [FE]  AssertionError  	22	2	replace
20	[BUG]  [BUGGY]  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  [CE]  cannot  find  symbol  i  [FE]        AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;	      accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    	non-compiled	[CE]  cannot  find  symbol  i	22	None	replace
21	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]      accum  +=  accum2  *  dev;  accum  +=  accum2  *  dev;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	        accum    +=    accum2    *    dev;    accum  +=  accum2  *  dev;	  	compilable	  [FE]  AssertionError  	17	1	add
22	[BUG]  [BUGGY]      accum  +=  accum2  *  dev;  accum  +=  accum2  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]      accum  +=  accum2  *  dev;  accum  +=  accum2  *  dev;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	        accum    +=    accum2    *    dev;    accum  +=  accum2  *  dev;	  	compilable	  [FE]  AssertionError  	17	1	add
23	[BUG]  [BUGGY]      accum  +=  accum2  *  dev;  accum  +=  accum2  *  DEV;  [CE]  cannot  find  symbol  DEV  [FE]      AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]      accum  +=  accum2  *  dev;  accum  +=  accum2  *  DEV;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	        accum    +=    accum2    *    dev;    accum  +=  accum2  *  DEV;	  	non-compiled	[CE]  cannot  find  symbol  DEV	17	None	add
24	[BUG]  [BUGGY]      accum  +=  accum2  *  dev;  accum  +=  accum2  *  desv;  [CE]  cannot  find  symbol  desv  [FE]        AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]      accum  +=  accum2  *  dev;  accum  +=  accum2  *  desv;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	        accum    +=    accum2    *    dev;    accum  +=  accum2  *  desv;	  	non-compiled	[CE]  cannot  find  symbol  desv	17	None	add
25	[BUG]  [BUGGY]      accum  +=  accum2  *  dev;  Accum  +=  accum2  *  dev;  [CE]  cannot  find  symbol  Accum  [FE]          AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]      accum  +=  accum2  *  dev;  Accum  +=  accum2  *  dev;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	        accum    +=    accum2    *    dev;    Accum  +=  accum2  *  dev;	  	non-compiled	[CE]  cannot  find  symbol  Accum	17	None	add
26	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);	  	compilable	  [FE]  AssertionError  	8	1	add
27	[BUG]  [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);	  	compilable	  [FE]  AssertionError  	8	1	add
28	[BUG]  [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var  =  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);	  	non-compiled	[CE]  ';'  expected	8	None	add
29	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  /(sumWts  -  1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  /(sumWts  -  1.0);	  var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	7	3	replace
30	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  /(sumWts  -  1.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  /(sumWts  -  1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  /(sumWts  -  1.0);	  var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	7	3	replace
31	[BUG]  [BUGGY]  accum  -=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  [CE]  cannot  find  symbol  i  [FE]        AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  accum  -=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  -=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;	      accum    -=    weights[i]    *    (dev    *    mean);    accum2    +=    weights[i]    *    dev;    	non-compiled	[CE]  cannot  find  symbol  i	11	None	replace
32	[BUG]  [BUGGY]  accum  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  [CE]  cannot  find  symbol  i  [FE]                AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  accum  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;	      if(isBiasCorrected)    {    accum    +=    weights[i]    *    dev;    accum2    +=    weights[i]    *    dev;    }    else    {    sumWts    -=    1.0;    }    	non-compiled	[CE]  cannot  find  symbol  i	5	None	replace
33	[BUG]  [BUGGY]  if(incMoment)  {  accum  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  }  else  {  sumWts  -=  1.0;  }  [CE]  cannot  find  symbol  i  [FE]                  AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  if(incMoment)  {  accum  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  }  else  {  sumWts  -=  1.0;  }  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	if(incMoment)  {  accum  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  }  else  {  sumWts  -=  1.0;  }	      if(isBiasCorrected)    {    accum    +=    weights[i]    *    dev;    accum2    +=    weights[i]    *    dev;    }    else    {    sumWts    -=    1.0;    }    	non-compiled	[CE]  cannot  find  symbol  i	5	None	replace
34	[BUG]  [BUGGY]  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  [CE]  cannot  find  symbol  i  [FE]                    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;	      if(isBiasCorrected)    {    accum    +=    weights[i]    *    dev;    accum2    +=    weights[i]    *    dev;    }    else    {    sumWts    -=    1.0;    }    	non-compiled	[CE]  cannot  find  symbol  i	5	None	replace
35	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);	  	compilable	  [FE]  AssertionError  	27	1	add
36	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);	  	compilable	  [FE]  AssertionError  	27	1	add
37	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))(sumWts  *  2.0);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))(sumWts  *  2.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))(sumWts  *  2.0);	  	non-compiled	[CE]  ';'  expected	27	None	add
38	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWtes))/(sumWts  *  2.0);  [CE]  cannot  find  symbol  sumWtes  [FE]        AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWtes))/(sumWts  *  2.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWtes))/(sumWts  *  2.0);	  	non-compiled	[CE]  cannot  find  symbol  sumWtes	27	None	add
39	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  2.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  2.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    	compilable	  [FE]  AssertionError  	28	3	replace
40	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  2.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  2.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  2.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    	compilable	  [FE]  AssertionError  	28	3	replace
41	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  2.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  2.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    	compilable	  [FE]  AssertionError  	28	3	replace
42	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  2.0);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  2.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  2.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    	compilable	  [FE]  AssertionError  	28	3	replace
43	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  mean  /  sumWts))  /(sumWts  -  1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  mean  /  sumWts))  /(sumWts  -  1.0);	  var    =    (accum    -    (m2    *    accum2    /    sumWts))/(sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	16	1	replace
44	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  mean  /  sumWts))  /(sumWts  -  1.0);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  mean  /  sumWts))  /(sumWts  -  1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  mean  /  sumWts))  /(sumWts  -  1.0);	  var    =    (accum    -    (m2    *    accum2    /    sumWts))/(sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	16	1	replace
45	[BUG]  [BUGGY]  var  =  (accum  -  (accum1  *  accum2  /  sumWts))  /(sumWts  -  1.0);  [CE]  cannot  find  symbol  accum1  [FE]              AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum1  *  accum2  /  sumWts))  /(sumWts  -  1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum1  *  accum2  /  sumWts))  /(sumWts  -  1.0);	  var    =    (accum    -    (m2    *    accum2    /    sumWts))/(sumWts    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  accum1	16	None	replace
46	[BUG]  [BUGGY]  accum  +=  dev  *  weights[i]  *  weights[i];  [CE]  cannot  find  symbol  i  [FE]            AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  accum  +=  dev  *  weights[i]  *  weights[i];  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  weights[i]  *  weights[i];	      if(isBiasCorrected)    {    accum    +=    dev    *    weights[i]    *    dev;    accum2    +=    dev    *    weights[i]    *    weights[i];    }    	non-compiled	[CE]  cannot  find  symbol  i	13	None	replace
47	[BUG]  [BUGGY]  accum  +=  dev  *  weights[i]  *  dev;  accum2  +=  dev  *  weights[i]  *  weights[i];  [CE]  cannot  find  symbol  i  [FE]              AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  accum  +=  dev  *  weights[i]  *  dev;  accum2  +=  dev  *  weights[i]  *  weights[i];  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  weights[i]  *  dev;  accum2  +=  dev  *  weights[i]  *  weights[i];	      if(isBiasCorrected)    {    accum    +=    dev    *    weights[i]    *    dev;    accum2    +=    dev    *    weights[i]    *    weights[i];    }    	non-compiled	[CE]  cannot  find  symbol  i	13	None	replace
48	[BUG]  [BUGGY]  accum  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  weights[i];  [CE]  cannot  find  symbol  i  [FE]                AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  accum  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  weights[i];  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  weights[i];	      if(isBiasCorrected)    {    accum    +=    dev    *    weights[i]    *    dev;    accum2    +=    dev    *    weights[i]    *    weights[i];    }    	non-compiled	[CE]  cannot  find  symbol  i	13	None	replace
49	[BUG]  [BUGGY]  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  dev  *  dev;  [CE]  cannot  find  symbol  i  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  dev  *  dev;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  dev  *  dev;	      accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    	non-compiled	[CE]  cannot  find  symbol  i	20	None	replace
50	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  amount;  [CE]  cannot  find  symbol  amount  [FE]                AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  amount;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  amount;	      accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    totalWts;    	non-compiled	[CE]  cannot  find  symbol  amount	24	None	replace
51	[BUG]  [BUGGY]  double  accum2  =  Math.abs(sumWts  -  1);  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  double  accum2  =  Math.abs(sumWts  -  1);  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	double  accum2  =  Math.abs(sumWts  -  1);	      double    accum2    =    Math.abs(sumWts);    	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	23	None	replace
52	[BUG]  [BUGGY]  double  accum2  =  Math.abs(sumWts  /  dev);  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  double  accum2  =  Math.abs(sumWts  /  dev);  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	double  accum2  =  Math.abs(sumWts  /  dev);	      double    accum2    =    Math.abs(sumWts);    	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	23	None	replace
53	[BUG]  [BUGGY]  double  accum2  =  Math.abs(sumWts  +  1);  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  double  accum2  =  Math.abs(sumWts  +  1);  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	double  accum2  =  Math.abs(sumWts  +  1);	      double    accum2    =    Math.abs(sumWts);    	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	23	None	replace
54	[BUG]  [BUGGY]  double  accum2  =  Math.abs(sumWts  -  1.0);  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  double  accum2  =  Math.abs(sumWts  -  1.0);  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	double  accum2  =  Math.abs(sumWts  -  1.0);	      double    accum2    =    Math.abs(sumWts);    	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	23	None	replace
55	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);	  	compilable	  [FE]  AssertionError  	6	1	add
56	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);	  	compilable	  [FE]  AssertionError  	6	1	add
57	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (dev  *  accum2  /  sumWts))(sumWts  -  1.0);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (dev  *  accum2  /  sumWts))(sumWts  -  1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var  =  (accum  -  (dev  *  accum2  /  sumWts))(sumWts  -  1.0);	  	non-compiled	[CE]  ';'  expected	6	None	add
58	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]      accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	        accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	21	3	add
59	[BUG]  [BUGGY]      accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]      accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	        accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	21	3	add
60	[BUG]  [BUGGY]      accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  weights[i]);  accum2  +=  dev  *  sumWts;  [CE]  cannot  find  symbol  i  [FE]      AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]      accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  weights[i]);  accum2  +=  dev  *  sumWts;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	        accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  weights[i]);  accum2  +=  dev  *  sumWts;	  	non-compiled	[CE]  cannot  find  symbol  i	21	None	add
61	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]      accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	        accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	21	3	add
62	[BUG]  [BUGGY]      accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]      accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	        accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	21	3	add
63	[BUG]  [BUGGY]      accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  totalWts;  [CE]  cannot  find  symbol  totalWts  [FE]          AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]      accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  totalWts;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	        accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  totalWts;	  	non-compiled	[CE]  cannot  find  symbol  totalWts	21	None	add
64	[BUG]  [BUGGY]  Accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  [CE]  cannot  find  symbol  Accum  [FE]              AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  Accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	Accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;	      if(isBiasCorrected)    {    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  Accum	4	None	replace
65	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /(sumWts  *  1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (dev  *  accum2  /  sumWts))  /(sumWts  *  1.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    	compilable	  [FE]  AssertionError  	26	3	replace
66	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /(sumWts  *  1.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /(sumWts  *  1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (dev  *  accum2  /  sumWts))  /(sumWts  *  1.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    	compilable	  [FE]  AssertionError  	26	3	replace
67	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  totalWts))  /(sumWts  *  2.0);  [CE]  cannot  find  symbol  totalWts  [FE]      AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  totalWts))  /(sumWts  *  2.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  totalWts))  /(sumWts  *  2.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    	non-compiled	[CE]  cannot  find  symbol  totalWts	26	None	replace
68	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  *  1.0;  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  *  1.0;	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    	compilable	  [FE]  AssertionError  	26	2	replace
69	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  *  1.0;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  *  1.0;  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  *  1.0;	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    	compilable	  [FE]  AssertionError  	26	2	replace
70	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  totalWts))  /(sumWts  -  1.0);  [CE]  cannot  find  symbol  totalWts  [FE]            AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  totalWts))  /(sumWts  -  1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  totalWts))  /(sumWts  -  1.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(maximumWts    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  totalWts	29	None	replace
71	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]      accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	        accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;	  	compilable	  [FE]  AssertionError  	19	3	add
72	[BUG]  [BUGGY]      accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]      accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	        accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;	  	compilable	  [FE]  AssertionError  	19	3	add
73	[BUG]  [BUGGY]      accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  accum  +=  dev  *  (dev  *  DEV);  accum2  +=  dev  *  dev;  [CE]  cannot  find  symbol  DEV  [FE]      AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]      accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  accum  +=  dev  *  (dev  *  DEV);  accum2  +=  dev  *  dev;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	        accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    accum  +=  dev  *  (dev  *  DEV);  accum2  +=  dev  *  dev;	  	non-compiled	[CE]  cannot  find  symbol  DEV	19	None	add
74	[BUG]  [BUGGY]      accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  DEV;  [CE]  cannot  find  symbol  DEV  [FE]        AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]      accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  DEV;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	        accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  DEV;	  	non-compiled	[CE]  cannot  find  symbol  DEV	19	None	add
75	[BUG]  [BUGGY]  if(incMoment)  {  accum  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  }  else  {  sumWts  =  1.0;  }  [CE]  cannot  find  symbol  i  [FE]          AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  if(incMoment)  {  accum  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  }  else  {  sumWts  =  1.0;  }  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	if(incMoment)  {  accum  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  }  else  {  sumWts  =  1.0;  }	      if(isBiasCorrected)    {    accum    +=    weights[i]    *    dev;    accum2    +=    weights[i]    *    dev;    }    else    {    sumWts    =    1.0;    }    	non-compiled	[CE]  cannot  find  symbol  i	12	None	replace
76	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  1.0);	  var    =    (accum    -    (accum2    *    accum2    /    totalWts))/(sumWts    *    1.0);    	compilable	  [FE]  AssertionError  	10	3	replace
77	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  1.0);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  1.0);	  var    =    (accum    -    (accum2    *    accum2    /    totalWts))/(sumWts    *    1.0);    	compilable	  [FE]  AssertionError  	10	3	replace
78	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  1.0);	  var    =    (accum    -    (accum2    *    accum2    /    totalWts))/(sumWts    *    1.0);    	compilable	  [FE]  AssertionError  	10	3	replace
79	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  1.0);  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  1.0);	  var    =    (accum    -    (accum2    *    accum2    /    totalWts))/(sumWts    *    1.0);    	compilable	  [FE]  AssertionError  	10	3	replace
80	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  accum2  /  mean))  /(1.0);	  var    =    (accum    -    (accum2    *    accum2    /    totalWts))/(sumWts    *    1.0);    	compilable	  [FE]  AssertionError  	10	2	replace
81	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(1.0);  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  mean))  /(1.0);	  var    =    (accum    -    (accum2    *    accum2    /    totalWts))/(sumWts    *    1.0);    	compilable	  [FE]  AssertionError  	10	2	replace
82	[BUG]  [BUGGY]  var  =  (accum  -  (sumWts  *  accum2  /  values))  /  (sumWts  -  1.0);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]          AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (sumWts  *  accum2  /  values))  /  (sumWts  -  1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (sumWts  *  accum2  /  values))  /  (sumWts  -  1.0);	  var    =    (accum    -    (values    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	15	None	replace
83	[BUG]  [BUGGY]  var  =  (accum  -  (values[accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [CE]  ']'  expected  [FE]            AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (values[accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);	  var    =    (accum    -    (values    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	non-compiled	[CE]  ']'  expected	15	None	replace
84	[BUG]  [BUGGY]  var  =  (accum  -  (values  *  accum2  /  sumWts))  /  (sumWts  *  2.0);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]              AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (values  *  accum2  /  sumWts))  /  (sumWts  *  2.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values  *  accum2  /  sumWts))  /  (sumWts  *  2.0);	  var    =    (accum    -    (values    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	15	None	replace
85	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  accum  +=  dev  *  accum2;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum  +=  dev  *  accum2;	      accum    +=    accum2    *    dev;    	compilable	  [FE]  AssertionError  	18	2	replace
86	[BUG]  [BUGGY]  accum  +=  dev  *  accum2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  accum  +=  dev  *  accum2;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  accum2;	      accum    +=    accum2    *    dev;    	compilable	  [FE]  AssertionError  	18	2	replace
87	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  accum  /=  accum2  *  dev;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum  /=  accum2  *  dev;	      accum    +=    accum2    *    dev;    	compilable	  [FE]  AssertionError  	18	2	replace
88	[BUG]  [BUGGY]  accum  /=  accum2  *  dev;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  accum  /=  accum2  *  dev;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  /=  accum2  *  dev;	      accum    +=    accum2    *    dev;    	compilable	  [FE]  AssertionError  	18	2	replace
89	[BUG]  [BUGGY]  var  =  (accum  -  (values  *  accum2  /  sumWts))  /  sumWts;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]          AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (values  *  accum2  /  sumWts))  /  sumWts;  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values  *  accum2  /  sumWts))  /  sumWts;	  var    =    (accum    -    (values    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	15	None	replace
90	[BUG]  [BUGGY]  var  =  (accum  -  (values  *  sumWts  /  accum2))  /  (sumWts  -  1.0);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]            AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (values  *  sumWts  /  accum2))  /  (sumWts  -  1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values  *  sumWts  /  accum2))  /  (sumWts  -  1.0);	  var    =    (accum    -    (values    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	15	None	replace
91	[BUG]  [BUGGY]  var  =  (accum  -  (sumWts  *  accum2  /  valueWts))  /  (sumWts  -  1.0);  [CE]  cannot  find  symbol  valueWts  [FE]              AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (sumWts  *  accum2  /  valueWts))  /  (sumWts  -  1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (sumWts  *  accum2  /  valueWts))  /  (sumWts  -  1.0);	  var    =    (accum    -    (values    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  valueWts	15	None	replace
92	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  2.0;  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  2.0;	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    	compilable	  [FE]  AssertionError  	28	3	replace
93	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  2.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  2.0;  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  2.0;	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    	compilable	  [FE]  AssertionError  	28	3	replace
94	[BUG]  [BUGGY]  var  =  (accum  -  (values[accum2  *  accum2  /  sumWts))  /(sumWts  *  2.0);  [CE]  ']'  expected  [FE]      AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (values[accum2  *  accum2  /  sumWts))  /(sumWts  *  2.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[accum2  *  accum2  /  sumWts))  /(sumWts  *  2.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    	non-compiled	[CE]  ']'  expected	28	None	replace
95	[BUG]  [BUGGY]  var  =  (accum  -  (m2  *  accum2  /  sumWts))  /(sumWts  *  2.0);  [CE]  cannot  find  symbol  m2  [FE]        AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (m2  *  accum2  /  sumWts))  /(sumWts  *  2.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (m2  *  accum2  /  sumWts))  /(sumWts  *  2.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    	non-compiled	[CE]  cannot  find  symbol  m2	28	None	replace
96	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum1  *  accum2  /  sumWts))/(sumWts  *  1.0);  [CE]  cannot  find  symbol  accum1  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum1  *  accum2  /  sumWts))/(sumWts  *  1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var  =  (accum  -  (accum1  *  accum2  /  sumWts))/(sumWts  *  1.0);	  	non-compiled	[CE]  cannot  find  symbol  accum1	25	None	add
97	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);	  	compilable	  [FE]  AssertionError  	25	1	add
98	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);	  	compilable	  [FE]  AssertionError  	25	1	add
99	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  1.0;  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  1.0;	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    	compilable	  [FE]  AssertionError  	26	3	replace
100	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  1.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  1.0;  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  1.0;	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    	compilable	  [FE]  AssertionError  	26	3	replace
101	[BUG]  [BUGGY]  var  =  (accum  -  (values  *  accum2  /  sumWts))  /(sumWts  *  1.0);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]      AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (values  *  accum2  /  sumWts))  /(sumWts  *  1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values  *  accum2  /  sumWts))  /(sumWts  *  1.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	26	None	replace
102	[BUG]  [BUGGY]  var  =  (accum  -  (m2  *  accum2  /  sumWts))  /(sumWts  *  1.0);  [CE]  cannot  find  symbol  m2  [FE]        AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (m2  *  accum2  /  sumWts))  /(sumWts  *  1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (m2  *  accum2  /  sumWts))  /(sumWts  *  1.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    	non-compiled	[CE]  cannot  find  symbol  m2	26	None	replace
103	[BUG]  [BUGGY]  var  =  (accum  -  (values[accum2  *  accum2  /  sumWts))  /(sumWts  *  1.0);  [CE]  ']'  expected  [FE]          AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (values[accum2  *  accum2  /  sumWts))  /(sumWts  *  1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[accum2  *  accum2  /  sumWts))  /(sumWts  *  1.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    	non-compiled	[CE]  ']'  expected	26	None	replace
104	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts;  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts;	  var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	9	3	replace
105	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts;  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts;	  var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	9	3	replace
106	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  -  1.0;  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  -  1.0;	  var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	9	3	replace
107	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  -  1.0;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  -  1.0;  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  -  1.0;	  var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	9	3	replace
108	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (dev  *  accum2  /  totalWts))/  (sumWts  -  1.0);  [CE]  cannot  find  symbol  totalWts  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (dev  *  accum2  /  totalWts))/  (sumWts  -  1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var  =  (accum  -  (dev  *  accum2  /  totalWts))/  (sumWts  -  1.0);	  	non-compiled	[CE]  cannot  find  symbol  totalWts	6	None	add
109	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;	      accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    totalWts;    	compilable	  [FE]  AssertionError  	24	2	replace
110	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;	      accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    totalWts;    	compilable	  [FE]  AssertionError  	24	2	replace
111	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  totalWts;  [CE]  cannot  find  symbol  totalWts  [FE]                  AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  totalWts;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  totalWts;	      accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    totalWts;    	non-compiled	[CE]  cannot  find  symbol  totalWts	24	None	replace
112	[BUG]  [BUGGY]  if(incMoment)  {  accum  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  }  [CE]  cannot  find  symbol  i  [FE]        AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  if(incMoment)  {  accum  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  }  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	if(incMoment)  {  accum  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  }	      if(isBiasCorrected)    {    accum    +=    weights[i]    *    dev;    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  i	1	None	replace
113	[BUG]  [BUGGY]  Accum  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  [CE]  cannot  find  symbol  Accum  [FE]          AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  Accum  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	Accum  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;	      if(isBiasCorrected)    {    accum    +=    weights[i]    *    dev;    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  Accum	1	None	replace
114	[BUG]  [BUGGY]      accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  DEV);  accum2  +=  dev  *  sumWts;  [CE]  cannot  find  symbol  DEV  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]      accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  DEV);  accum2  +=  dev  *  sumWts;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	        accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  DEV);  accum2  +=  dev  *  sumWts;	  	non-compiled	[CE]  cannot  find  symbol  DEV	21	None	add
115	[BUG]  [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (mean  *  accum2  /  sumWtes))/  (sumWts  -  1.0);  [CE]  cannot  find  symbol  sumWtes  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (mean  *  accum2  /  sumWtes))/  (sumWts  -  1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var  =  (accum  -  (mean  *  accum2  /  sumWtes))/  (sumWts  -  1.0);	  	non-compiled	[CE]  cannot  find  symbol  sumWtes	8	None	add
116	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]      accum  +=  accum2  *  dev;  accum  =  accum2  *  dev;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	        accum    +=    accum2    *    dev;    accum  =  accum2  *  dev;	  	compilable	  [FE]  AssertionError  	17	3	add
117	[BUG]  [BUGGY]      accum  +=  accum2  *  dev;  accum  =  accum2  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]      accum  +=  accum2  *  dev;  accum  =  accum2  *  dev;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	        accum    +=    accum2    *    dev;    accum  =  accum2  *  dev;	  	compilable	  [FE]  AssertionError  	17	3	add
118	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  amount);  accum2  +=  dev  *  dev;  [CE]  cannot  find  symbol  amount  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  accum  +=  dev  *  (dev  *  amount);  accum2  +=  dev  *  dev;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  (dev  *  amount);  accum2  +=  dev  *  dev;	      accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    	non-compiled	[CE]  cannot  find  symbol  amount	20	None	replace
119	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  dev;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  dev;	      accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    	compilable	  [FE]  AssertionError  	20	2	replace
120	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  dev;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  dev;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  dev;	      accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    	compilable	  [FE]  AssertionError  	20	2	replace
121	[BUG]  [BUGGY]  double  accum2  =  Math.abs(sumWts  /  2.0);  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  double  accum2  =  Math.abs(sumWts  /  2.0);  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	double  accum2  =  Math.abs(sumWts  /  2.0);	      double    accum2    =    Math.abs(sumWts);    	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	23	None	replace
122	[BUG]  [BUGGY]  if(incMoment)  {  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CE]  cannot  find  symbol  i  [FE]              AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  if(incMoment)  {  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	if(incMoment)  {  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }	      if(isBiasCorrected)    {    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  i	4	None	replace
123	[BUG]  [BUGGY]  accum2  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  [CE]  cannot  find  symbol  i  [FE]          AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  accum2  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum2  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;	      if(isBiasCorrected)    {    accum2    +=    weights[i]    *    dev;    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  i	2	None	replace
124	[BUG]  [BUGGY]  if(incMoment)  {  accum2  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  }  [CE]  cannot  find  symbol  i  [FE]            AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  if(incMoment)  {  accum2  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  }  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	if(incMoment)  {  accum2  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  }	      if(isBiasCorrected)    {    accum2    +=    weights[i]    *    dev;    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  i	2	None	replace
125	[BUG]  [BUGGY]  if(incMoment)  {  accum2  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CE]  cannot  find  symbol  i  [FE]              AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  if(incMoment)  {  accum2  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	if(incMoment)  {  accum2  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }	      if(isBiasCorrected)    {    accum2    +=    weights[i]    *    dev;    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  i	2	None	replace
126	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (dev  *  dev  /  sumWts))  /  sumWts  -  1.0;  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (dev  *  dev  /  sumWts))  /  sumWts  -  1.0;	  var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	7	3	replace
127	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  dev  /  sumWts))  /  sumWts  -  1.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (dev  *  dev  /  sumWts))  /  sumWts  -  1.0;  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (dev  *  dev  /  sumWts))  /  sumWts  -  1.0;	  var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	7	3	replace
128	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  dev;  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  dev;	  var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	7	3	replace
129	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  dev;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  dev;  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  dev;	  var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	7	3	replace
130	[BUG]  [BUGGY]  var  =  (accum  -  (m2  *  accum2  /  sumWts))  /  sumWts;  [CE]  cannot  find  symbol  m2  [FE]        AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (m2  *  accum2  /  sumWts))  /  sumWts;  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (m2  *  accum2  /  sumWts))  /  sumWts;	  var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  m2	7	None	replace
131	[BUG]  [BUGGY]  if(isBiasCorrected)  {  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  else  {  sumWts  =  1.0;  }  [CE]  cannot  find  symbol  i  [FE]          AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  if(isBiasCorrected)  {  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  else  {  sumWts  =  1.0;  }  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	if(isBiasCorrected)  {  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  else  {  sumWts  =  1.0;  }	      if(isBiasCorrected)    {    accum    +=    weights[i]    *    dev;    accum2    +=    weights[i]    *    dev;    }    else    {    sumWts    =    1.0;    }    	non-compiled	[CE]  cannot  find  symbol  i	12	None	replace
132	[BUG]  [BUGGY]  if(incMoment)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  if(incMoment)  {  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	if(incMoment)  {	      if(isBiasCorrected)    {    accum    +=    weights[i]    *    dev;    accum2    +=    weights[i]    *    dev;    }    else    {    sumWts    =    1.0;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
133	[BUG]  [BUGGY]  if(incMoment)  {  accum  +=  dev  *  weights[i]  *  dev;  accum2  +=  dev  *  weights[i]  *  weights[i];  }  [CE]  cannot  find  symbol  i  [FE]            AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  if(incMoment)  {  accum  +=  dev  *  weights[i]  *  dev;  accum2  +=  dev  *  weights[i]  *  weights[i];  }  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	if(incMoment)  {  accum  +=  dev  *  weights[i]  *  dev;  accum2  +=  dev  *  weights[i]  *  weights[i];  }	      if(isBiasCorrected)    {    accum    +=    dev    *    weights[i]    *    dev;    accum2    +=    dev    *    weights[i]    *    weights[i];    }    	non-compiled	[CE]  cannot  find  symbol  i	13	None	replace
134	[BUG]  [BUGGY]  Accum  +=  dev  *  weights[i]  *  dev;  accum2  +=  dev  *  weights[i]  *  weights[i];  [CE]  cannot  find  symbol  Accum  [FE]              AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  Accum  +=  dev  *  weights[i]  *  dev;  accum2  +=  dev  *  weights[i]  *  weights[i];  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	Accum  +=  dev  *  weights[i]  *  dev;  accum2  +=  dev  *  weights[i]  *  weights[i];	      if(isBiasCorrected)    {    accum    +=    dev    *    weights[i]    *    dev;    accum2    +=    dev    *    weights[i]    *    weights[i];    }    	non-compiled	[CE]  cannot  find  symbol  Accum	13	None	replace
135	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum1  *  accum2  /  sumWts))/(sumWts  *  2.0);  [CE]  cannot  find  symbol  accum1  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum1  *  accum2  /  sumWts))/(sumWts  *  2.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    var  =  (accum  -  (accum1  *  accum2  /  sumWts))/(sumWts  *  2.0);	  	non-compiled	[CE]  cannot  find  symbol  accum1	27	None	add
136	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  totalWts))/(sumWts  *  2.0);  [CE]  cannot  find  symbol  totalWts  [FE]      AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  totalWts))/(sumWts  *  2.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    var  =  (accum  -  (accum2  *  accum2  /  totalWts))/(sumWts  *  2.0);	  	non-compiled	[CE]  cannot  find  symbol  totalWts	27	None	add
137	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  amount);  accum2  +=  dev  *  sumWts;  [CE]  cannot  find  symbol  amount  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  accum  +=  dev  *  (dev  *  amount);  accum2  +=  dev  *  sumWts;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  (dev  *  amount);  accum2  +=  dev  *  sumWts;	      accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    	non-compiled	[CE]  cannot  find  symbol  amount	22	None	replace
138	[BUG]  [BUGGY]  var  =  (accum  -  (values[i]  *  accum2  /  sumWts))  /  sumWts;  [CE]  cannot  find  symbol  i  [FE]        AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (values[i]  *  accum2  /  sumWts))  /  sumWts;  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[i]  *  accum2  /  sumWts))  /  sumWts;	  var    =    (accum    -    (values[i]    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  i	14	None	replace
139	[BUG]  [BUGGY]  var  =  (accum  -  (weights[i]  *  accum2  /  sumWts))  /  sumWts;  [CE]  cannot  find  symbol  i  [FE]          AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (weights[i]  *  accum2  /  sumWts))  /  sumWts;  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (weights[i]  *  accum2  /  sumWts))  /  sumWts;	  var    =    (accum    -    (values[i]    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  i	14	None	replace
140	[BUG]  [BUGGY]  var  =  (accum  -  (values[i]  *  accum2  /  totalWts))  /  sumWts;  [CE]  cannot  find  symbol  i  [FE]            AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (values[i]  *  accum2  /  totalWts))  /  sumWts;  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[i]  *  accum2  /  totalWts))  /  sumWts;	  var    =    (accum    -    (values[i]    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  i	14	None	replace
141	[BUG]  [BUGGY]  var  =  (accum  -  (values[i]  *  accum2  /  sumWts))  /  totalWts;  [CE]  cannot  find  symbol  i  [FE]              AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (values[i]  *  accum2  /  sumWts))  /  totalWts;  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[i]  *  accum2  /  sumWts))  /  totalWts;	  var    =    (accum    -    (values[i]    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  i	14	None	replace
142	[BUG]  [BUGGY]  accum  +=  weights[i]  *  dev;  [CE]  cannot  find  symbol  i  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  accum  +=  weights[i]  *  dev;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  weights[i]  *  dev;	      accum    +=    accum2    *    dev;    	non-compiled	[CE]  cannot  find  symbol  i	18	None	replace
143	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  accum  -=  dev  *  accum2;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum  -=  dev  *  accum2;	      accum    +=    accum2    *    dev;    	compilable	  [FE]  AssertionError  	18	2	replace
144	[BUG]  [BUGGY]  accum  -=  dev  *  accum2;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  accum  -=  dev  *  accum2;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  -=  dev  *  accum2;	      accum    +=    accum2    *    dev;    	compilable	  [FE]  AssertionError  	18	2	replace
145	[BUG]  [BUGGY]  if(isBiasCorrected)  {  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  else  {  sumWts  -=  1.0;  }  [CE]  cannot  find  symbol  i  [FE]                AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  if(isBiasCorrected)  {  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  else  {  sumWts  -=  1.0;  }  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	if(isBiasCorrected)  {  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  else  {  sumWts  -=  1.0;  }	      if(isBiasCorrected)    {    accum    +=    weights[i]    *    dev;    accum2    +=    weights[i]    *    dev;    }    else    {    sumWts    -=    1.0;    }    	non-compiled	[CE]  cannot  find  symbol  i	5	None	replace
146	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (values.length  *  accum2  /  sumWts))  /(sumWts  -  1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (values.length  *  accum2  /  sumWts))  /(sumWts  -  1.0);	  var    =    (accum    -    (m2    *    accum2    /    sumWts))/(sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	16	1	replace
147	[BUG]  [BUGGY]  var  =  (accum  -  (values.length  *  accum2  /  sumWts))  /(sumWts  -  1.0);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (values.length  *  accum2  /  sumWts))  /(sumWts  -  1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values.length  *  accum2  /  sumWts))  /(sumWts  -  1.0);	  var    =    (accum    -    (m2    *    accum2    /    sumWts))/(sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	16	1	replace
148	[BUG]  [BUGGY]  accum  -=  weights[i]  *  (dev  *  dev);  [CE]  cannot  find  symbol  i  [FE]        AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  accum  -=  weights[i]  *  (dev  *  dev);  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  -=  weights[i]  *  (dev  *  dev);	      accum    -=    weights[i]    *    (dev    *    mean);    accum2    +=    weights[i]    *    dev;    	non-compiled	[CE]  cannot  find  symbol  i	11	None	replace
149	[BUG]  [BUGGY]  accum2  +=  weights[i]  *  DEV;  [CE]  cannot  find  symbol  i  [FE]            AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  accum2  +=  weights[i]  *  DEV;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum2  +=  weights[i]  *  DEV;	      accum2    +=    weights[i]    *    dev;    	non-compiled	[CE]  cannot  find  symbol  i	3	None	replace
150	[BUG]  [BUGGY]      accum  +=  accum2  *  dev;  accum  accum  +=  accum2  *  dev;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]      accum  +=  accum2  *  dev;  accum  accum  +=  accum2  *  dev;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	        accum    +=    accum2    *    dev;    accum  accum  +=  accum2  *  dev;	  	non-compiled	[CE]  ';'  expected	17	None	add
151	[BUG]  [BUGGY]  accum  +=  dev  *  weights[i]  *  dev;  accum2  +=  dev  *  weights[i]  *  weights[i];  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  accum  +=  dev  *  weights[i]  *  dev;  accum2  +=  dev  *  weights[i]  *  weights[i];  }  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  weights[i]  *  dev;  accum2  +=  dev  *  weights[i]  *  weights[i];  }	      if(isBiasCorrected)    {    accum    +=    dev    *    weights[i]    *    dev;    accum2    +=    dev    *    weights[i]    *    weights[i];    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
152	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]      accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	        accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	21	3	add
153	[BUG]  [BUGGY]      accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]      accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	        accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	21	3	add
154	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /(sumWts  /  2.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /(sumWts  /  2.0);	  var    =    (accum    -    (m2    *    accum2    /    sumWts))/(sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	16	3	replace
155	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /(sumWts  /  2.0);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /(sumWts  /  2.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /(sumWts  /  2.0);	  var    =    (accum    -    (m2    *    accum2    /    sumWts))/(sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	16	3	replace
156	[BUG]  [BUGGY]  var  =  (accum  -  (sumWts[i]  *  accum2  /  sumWts))  /  sumWts;  [CE]  cannot  find  symbol  i  [FE]        AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (sumWts[i]  *  accum2  /  sumWts))  /  sumWts;  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (sumWts[i]  *  accum2  /  sumWts))  /  sumWts;	  var    =    (accum    -    (values[i]    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  i	14	None	replace
157	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (dev  *  accum2  /  sumWtes))/  (sumWts  -  1.0);  [CE]  cannot  find  symbol  sumWtes  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (dev  *  accum2  /  sumWtes))/  (sumWts  -  1.0);  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var  =  (accum  -  (dev  *  accum2  /  sumWtes))/  (sumWts  -  1.0);	  	non-compiled	[CE]  cannot  find  symbol  sumWtes	6	None	add
158	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  accum  +=  dev  *  (dev  /  dev);  accum2  +=  dev  *  dev;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum  +=  dev  *  (dev  /  dev);  accum2  +=  dev  *  dev;	      accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    	compilable	  [FE]  AssertionError  	20	2	replace
159	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  /  dev);  accum2  +=  dev  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  accum  +=  dev  *  (dev  /  dev);  accum2  +=  dev  *  dev;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  (dev  /  dev);  accum2  +=  dev  *  dev;	      accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    	compilable	  [FE]  AssertionError  	20	2	replace
160	[BUG]  [BUGGY]  accum  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  accum  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  }  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  }	      if(isBiasCorrected)    {    accum    +=    weights[i]    *    dev;    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
161	[BUG]  [BUGGY]  accum  -=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  [CE]  cannot  find  symbol  i  [FE]                AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  accum  -=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  [BUGGY]    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  -=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;	      if(isBiasCorrected)    {    accum    +=    weights[i]    *    dev;    accum2    +=    weights[i]    *    dev;    }    else    {    sumWts    -=    1.0;    }    	non-compiled	[CE]  cannot  find  symbol  i	5	None	replace
162	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  totalWts  *  1.0;  [CE]  cannot  find  symbol  totalWts  [FE]    AssertionError    [CONTEXT]    accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {    [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  totalWts  *  1.0;  [BUGGY]    }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  totalWts  *  1.0;	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    	non-compiled	[CE]  cannot  find  symbol  totalWts	26	None	replace
