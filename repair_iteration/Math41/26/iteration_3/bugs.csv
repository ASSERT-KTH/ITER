bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Accum2  +=  weights[i]  *  dev;  [CE]  cannot  find  symbol  Accum2  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  Accum2  +=  weights[i]  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	Accum2  +=  weights[i]  *  dev;	  accum2    +=    weights[i]    *    dev;    accum2    +=    weights[i]    *    dev;    	non-compiled	[CE]  cannot  find  symbol  Accum2	123	None	replace
2	[BUG]  [BUGGY]  var  =  (accum  -  (values[i]  *  accum2  /  mean))/  sumWts;  [CE]  cannot  find  symbol  i  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values[i]  *  accum2  /  mean))/  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[i]  *  accum2  /  mean))/  sumWts;	  var    =    (accum    -    (values[i]    *    accum2    /    sumWts))    /    sumWts;    	non-compiled	[CE]  cannot  find  symbol  i	138	None	replace
3	[BUG]  [BUGGY]  var  =  (accum  -  (values[i]  *  mean  /  sumWts))/  sumWts;  [CE]  cannot  find  symbol  i  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values[i]  *  mean  /  sumWts))/  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[i]  *  mean  /  sumWts))/  sumWts;	  var    =    (accum    -    (values[i]    *    accum2    /    sumWts))    /    sumWts;    	non-compiled	[CE]  cannot  find  symbol  i	138	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum2  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum2  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    	compilable	  [FE]  AssertionError  	72	2	replace
5	[BUG]  [BUGGY]  accum2  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum2  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum2  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    	compilable	  [FE]  AssertionError  	72	2	replace
6	[BUG]  [BUGGY]  accum  +=  weights[i]  *  (dev  *  dev);  [CE]  cannot  find  symbol  i  [FE]                  AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  weights[i]  *  (dev  *  dev);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  weights[i]  *  (dev  *  dev);	  Accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    dev;    	non-compiled	[CE]  cannot  find  symbol  i	64	None	replace
7	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  (dev  *  dev);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  (dev  *  dev);	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    totalWts;    	compilable	  [FE]  AssertionError  	63	2	replace
8	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  (dev  *  dev);  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  (dev  *  dev);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  (dev  *  dev);	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    totalWts;    	compilable	  [FE]  AssertionError  	63	2	replace
9	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  dev);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum  +=  dev  *  (dev  *  dev);	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    totalWts;    	compilable	  [FE]  AssertionError  	63	2	replace
10	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  dev);  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  dev);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  (dev  *  dev);	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    totalWts;    	compilable	  [FE]  AssertionError  	63	2	replace
11	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  dev  /  sumWts))/  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (dev  *  dev  /  sumWts))/  sumWts;	  var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts;    	compilable	  [FE]  AssertionError  	105	3	replace
12	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  dev  /  sumWts))/  sumWts;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  dev  /  sumWts))/  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (dev  *  dev  /  sumWts))/  sumWts;	  var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts;    	compilable	  [FE]  AssertionError  	105	3	replace
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (mean  *  accum2  /  sumWts))/  sumWts;	  var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts;    	compilable	  [FE]  AssertionError  	105	3	replace
14	[BUG]  [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  sumWts;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (mean  *  accum2  /  sumWts))/  sumWts;	  var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts;    	compilable	  [FE]  AssertionError  	105	3	replace
15	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  dev  /  sumWts))  /  sumWts  -  1.0;  var  =  (accum  -  (dev  *  dev  /  sumWts))  /  sumWts  -  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var    =    (accum    -    (dev    *    dev    /    sumWts))    /    sumWts    -    1.0;    var  =  (accum  -  (dev  *  dev  /  sumWts))  /  sumWts  -  1.0;	  	compilable	  [FE]  AssertionError  	126	1	add
16	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  dev  /  sumWts))  /  sumWts  -  1.0;  var  =  (accum  -  (dev  *  dev  /  sumWts))  /  sumWts  -  1.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  dev  /  sumWts))  /  sumWts  -  1.0;  var  =  (accum  -  (dev  *  dev  /  sumWts))  /  sumWts  -  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (dev    *    dev    /    sumWts))    /    sumWts    -    1.0;    var  =  (accum  -  (dev  *  dev  /  sumWts))  /  sumWts  -  1.0;	  	compilable	  [FE]  AssertionError  	126	1	add
17	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  dev  /  sumWts))  /  sumWts  -  1.0;  var  =  (accum  -  (dev  *  DEV  /  sumWts))  /  sumWts  -  1.0;  [CE]  cannot  find  symbol  DEV  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  dev  /  sumWts))  /  sumWts  -  1.0;  var  =  (accum  -  (dev  *  DEV  /  sumWts))  /  sumWts  -  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (dev    *    dev    /    sumWts))    /    sumWts    -    1.0;    var  =  (accum  -  (dev  *  DEV  /  sumWts))  /  sumWts  -  1.0;	  	non-compiled	[CE]  cannot  find  symbol  DEV	126	None	add
18	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  dev  /  sumWts))  /  sumWts  -  1.0;  var  =  (accum  -  (dev  *  desv  /  sumWts))  /  sumWts  -  1.0;  [CE]  cannot  find  symbol  desv  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  dev  /  sumWts))  /  sumWts  -  1.0;  var  =  (accum  -  (dev  *  desv  /  sumWts))  /  sumWts  -  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (dev    *    dev    /    sumWts))    /    sumWts    -    1.0;    var  =  (accum  -  (dev  *  desv  /  sumWts))  /  sumWts  -  1.0;	  	non-compiled	[CE]  cannot  find  symbol  desv	126	None	add
19	[BUG]  [BUGGY]  if(incMoment)  {  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  else  {  sumWts  =  1.0;  }  [CE]  cannot  find  symbol  i  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  if(incMoment)  {  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  else  {  sumWts  =  1.0;  }  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	if(incMoment)  {  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  else  {  sumWts  =  1.0;  }	  if(isBiasCorrected)    {    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    dev;    }    else    {    sumWts    =    1.0;    }    	non-compiled	[CE]  cannot  find  symbol  i	131	None	replace
20	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  sumWts  /  sumWts))/  (sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  sumWts  /  sumWts))/  (sumWts  -  1.0);	  var    =    (accum    -    (values    *    sumWts    /    accum2))    /    (sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	90	1	replace
21	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  sumWts  /  sumWts))/  (sumWts  -  1.0);  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  sumWts  /  sumWts))/  (sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  sumWts  /  sumWts))/  (sumWts  -  1.0);	  var    =    (accum    -    (values    *    sumWts    /    accum2))    /    (sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	90	1	replace
22	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  -=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum  -=  dev  *  sumWts;	  accum    -=    dev    *    accum2;    	compilable	  [FE]  AssertionError  	144	2	replace
23	[BUG]  [BUGGY]  accum  -=  dev  *  sumWts;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  -=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  -=  dev  *  sumWts;	  accum    -=    dev    *    accum2;    	compilable	  [FE]  AssertionError  	144	2	replace
24	[BUG]  [BUGGY]  accum  -=  weights[i]  *  accum2;  [CE]  cannot  find  symbol  i  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  -=  weights[i]  *  accum2;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  -=  weights[i]  *  accum2;	  accum    -=    dev    *    accum2;    	non-compiled	[CE]  cannot  find  symbol  i	144	None	replace
25	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  -=  dev  *  mean;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum  -=  dev  *  mean;	  accum    -=    dev    *    accum2;    	compilable	  [FE]  AssertionError  	144	2	replace
26	[BUG]  [BUGGY]  accum  -=  dev  *  mean;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  -=  dev  *  mean;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  -=  dev  *  mean;	  accum    -=    dev    *    accum2;    	compilable	  [FE]  AssertionError  	144	2	replace
27	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  -=  dev  *  accum2  +  1;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum  -=  dev  *  accum2  +  1;	  accum    -=    dev    *    accum2;    	compilable	  [FE]  AssertionError  	144	2	replace
28	[BUG]  [BUGGY]  accum  -=  dev  *  accum2  +  1;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  -=  dev  *  accum2  +  1;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  -=  dev  *  accum2  +  1;	  accum    -=    dev    *    accum2;    	compilable	  [FE]  AssertionError  	144	2	replace
29	[BUG]  [BUGGY]  var  =  (accum  -  (values[accum2  *  accum2  /  mean))/(sumWts  *  2.0);  [CE]  ']'  expected  [FE]          AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values[accum2  *  accum2  /  mean))/(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[accum2  *  accum2  /  mean))/(sumWts  *  2.0);	  var    =    (accum    -    (values[accum2    *    accum2    /    sumWts))    /(sumWts    *    2.0);    	non-compiled	[CE]  ']'  expected	94	None	replace
30	[BUG]  [BUGGY]  var  =  (accum  -  (values[accum2  *  accum2  /  totalWts))/(sumWts  *  2.0);  [CE]  ']'  expected  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values[accum2  *  accum2  /  totalWts))/(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[accum2  *  accum2  /  totalWts))/(sumWts  *  2.0);	  var    =    (accum    -    (values[accum2    *    accum2    /    sumWts))    /(sumWts    *    2.0);    	non-compiled	[CE]  ']'  expected	94	None	replace
31	[BUG]  [BUGGY]  var  =  (accum  -  (values[accum2  *  accum2  /  dev))/(sumWts  *  2.0);  [CE]  ']'  expected  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values[accum2  *  accum2  /  dev))/(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[accum2  *  accum2  /  dev))/(sumWts  *  2.0);	  var    =    (accum    -    (values[accum2    *    accum2    /    sumWts))    /(sumWts    *    2.0);    	non-compiled	[CE]  ']'  expected	94	None	replace
32	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum    +=    dev    *    (dev    *    sumWts);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	109	3	add
33	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum    +=    dev    *    (dev    *    sumWts);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	109	3	add
34	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  SumWts);  accum2  +=  dev  *  sumWts;  [CE]  cannot  find  symbol  SumWts  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  SumWts);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum    +=    dev    *    (dev    *    sumWts);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  SumWts);  accum2  +=  dev  *  sumWts;	  	non-compiled	[CE]  cannot  find  symbol  SumWts	109	None	add
35	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/  dev  -  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  accum2  /  sumWts))/  dev  -  1.0;	  var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts    -    1.0;    	compilable	  [FE]  AssertionError  	107	2	replace
36	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/  dev  -  1.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/  dev  -  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  sumWts))/  dev  -  1.0;	  var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts    -    1.0;    	compilable	  [FE]  AssertionError  	107	2	replace
37	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  sumWts  -  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (mean  *  accum2  /  sumWts))/  sumWts  -  1.0;	  var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts    -    1.0;    	compilable	  [FE]  AssertionError  	107	3	replace
38	[BUG]  [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  sumWts  -  1.0;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  sumWts  -  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (mean  *  accum2  /  sumWts))/  sumWts  -  1.0;	  var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts    -    1.0;    	compilable	  [FE]  AssertionError  	107	3	replace
39	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  -  1.0;  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  -  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts    -    1.0;    var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  -  1.0;	  	compilable	  [FE]  AssertionError  	106	1	add
40	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  -  1.0;  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  -  1.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  -  1.0;  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  -  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts    -    1.0;    var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  -  1.0;	  	compilable	  [FE]  AssertionError  	106	1	add
41	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  -  1.0;  var  =  (accum  -  (dev  *  accum2  /  sumWtes))  /  sumWts  -  1.0;  [CE]  cannot  find  symbol  sumWtes  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  -  1.0;  var  =  (accum  -  (dev  *  accum2  /  sumWtes))  /  sumWts  -  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts    -    1.0;    var  =  (accum  -  (dev  *  accum2  /  sumWtes))  /  sumWts  -  1.0;	  	non-compiled	[CE]  cannot  find  symbol  sumWtes	106	None	add
42	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  -  1.0;  var  =  (accum  -  (dev  *  Accum2  /  sumWts))  /  sumWts  -  1.0;  [CE]  cannot  find  symbol  Accum2  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  -  1.0;  var  =  (accum  -  (dev  *  Accum2  /  sumWts))  /  sumWts  -  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts    -    1.0;    var  =  (accum  -  (dev  *  Accum2  /  sumWts))  /  sumWts  -  1.0;	  	non-compiled	[CE]  cannot  find  symbol  Accum2	106	None	add
43	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  =  accum2  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum  =  accum2  *  dev;	          accum    +=    accum2    *    dev;    accum    =    accum2    *    dev;    	compilable	  [FE]  AssertionError  	117	2	replace
44	[BUG]  [BUGGY]  accum  =  accum2  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  =  accum2  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  =  accum2  *  dev;	          accum    +=    accum2    *    dev;    accum    =    accum2    *    dev;    	compilable	  [FE]  AssertionError  	117	2	replace
45	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum2  =  accum2  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum2  =  accum2  *  dev;	          accum    +=    accum2    *    dev;    accum    =    accum2    *    dev;    	compilable	  [FE]  AssertionError  	117	2	replace
46	[BUG]  [BUGGY]  accum2  =  accum2  *  dev;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum2  =  accum2  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum2  =  accum2  *  dev;	          accum    +=    accum2    *    dev;    accum    =    accum2    *    dev;    	compilable	  [FE]  AssertionError  	117	2	replace
47	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/  sumWts  -  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  accum2  /  sumWts))/  sumWts  -  1.0;	  var    =    (accum    -    (dev    *    dev    /    sumWts))    /    sumWts    -    1.0;    	compilable	  [FE]  AssertionError  	127	3	replace
48	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/  sumWts  -  1.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/  sumWts  -  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  sumWts))/  sumWts  -  1.0;	  var    =    (accum    -    (dev    *    dev    /    sumWts))    /    sumWts    -    1.0;    	compilable	  [FE]  AssertionError  	127	3	replace
49	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum2  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum2  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    	compilable	  [FE]  AssertionError  	59	2	replace
50	[BUG]  [BUGGY]  accum2  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum2  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum2  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    	compilable	  [FE]  AssertionError  	59	2	replace
51	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values.length  *  accum2  /  sumWts))  /(sumWts  -  1.0);  var  =  (accum  -  (values.length  *  accum2  /  sumWts))  /(sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var    =    (accum    -    (values.length    *    accum2    /    sumWts))    /(sumWts    -    1.0);    var  =  (accum  -  (values.length  *  accum2  /  sumWts))  /(sumWts  -  1.0);	  	compilable	  [FE]  AssertionError  	146	1	add
52	[BUG]  [BUGGY]  var  =  (accum  -  (values.length  *  accum2  /  sumWts))  /(sumWts  -  1.0);  var  =  (accum  -  (values.length  *  accum2  /  sumWts))  /(sumWts  -  1.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values.length  *  accum2  /  sumWts))  /(sumWts  -  1.0);  var  =  (accum  -  (values.length  *  accum2  /  sumWts))  /(sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (values.length    *    accum2    /    sumWts))    /(sumWts    -    1.0);    var  =  (accum  -  (values.length  *  accum2  /  sumWts))  /(sumWts  -  1.0);	  	compilable	  [FE]  AssertionError  	146	1	add
53	[BUG]  [BUGGY]  var  =  (accum  -  (values.length  *  accum2  /  sumWts))  /(sumWts  -  1.0);  var  =  (accum  -  (values.length  *  Accum2  /  sumWts))  /(sumWts  -  1.0);  [CE]  cannot  find  symbol  Accum2  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values.length  *  accum2  /  sumWts))  /(sumWts  -  1.0);  var  =  (accum  -  (values.length  *  Accum2  /  sumWts))  /(sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (values.length    *    accum2    /    sumWts))    /(sumWts    -    1.0);    var  =  (accum  -  (values.length  *  Accum2  /  sumWts))  /(sumWts  -  1.0);	  	non-compiled	[CE]  cannot  find  symbol  Accum2	146	None	add
54	[BUG]  [BUGGY]  var  =  (accum  -  (values[accum2  *  accum2  /  mean))/(sumWts  -  1.0);  [CE]  ']'  expected  [FE]                AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values[accum2  *  accum2  /  mean))/(sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[accum2  *  accum2  /  mean))/(sumWts  -  1.0);	  var    =    (accum    -    (values[accum2    *    accum2    /    sumWts))    /    (sumWts    -    1.0);    	non-compiled	[CE]  ']'  expected	83	None	replace
55	[BUG]  [BUGGY]  var  =  (accum  -  (values[i  *  accum2  /  sumWts))/  (sumWts  -  1.0);  [CE]  ']'  expected  [FE]                  AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values[i  *  accum2  /  sumWts))/  (sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[i  *  accum2  /  sumWts))/  (sumWts  -  1.0);	  var    =    (accum    -    (values[accum2    *    accum2    /    sumWts))    /    (sumWts    -    1.0);    	non-compiled	[CE]  ']'  expected	83	None	replace
56	[BUG]  [BUGGY]  var  =  (accum  -  (values[accum2  *  accum2  /  totalWts))/(sumWts  *  1.0);  [CE]  ']'  expected  [FE]                    AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values[accum2  *  accum2  /  totalWts))/(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[accum2  *  accum2  /  totalWts))/(sumWts  *  1.0);	  var    =    (accum    -    (values[accum2    *    accum2    /    sumWts))    /    (sumWts    -    1.0);    	non-compiled	[CE]  ']'  expected	83	None	replace
57	[BUG]  [BUGGY]  var  =  (accum  -  (weights[i]  *  accum2  /  dev))/  (sumWts  -  1.0);  [CE]  cannot  find  symbol  i  [FE]                AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (weights[i]  *  accum2  /  dev))/  (sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (weights[i]  *  accum2  /  dev))/  (sumWts  -  1.0);	  var    =    (accum    -    (values[i]    *    accum2    /    dev))    /    (sumWts    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  i	3	None	replace
58	[BUG]  [BUGGY]  var  =  (accum  -  (values[i]  *  accum2  /  dev))/  sumWts;  [CE]  cannot  find  symbol  i  [FE]                  AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values[i]  *  accum2  /  dev))/  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[i]  *  accum2  /  dev))/  sumWts;	  var    =    (accum    -    (values[i]    *    accum2    /    dev))    /    (sumWts    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  i	3	None	replace
59	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  -=  dev  *  accum2;  accum  -=  dev  *  accum2;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum    -=    dev    *    accum2;    accum  -=  dev  *  accum2;	  	compilable	  [FE]  AssertionError  	143	1	add
60	[BUG]  [BUGGY]  accum  -=  dev  *  accum2;  accum  -=  dev  *  accum2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  -=  dev  *  accum2;  accum  -=  dev  *  accum2;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum    -=    dev    *    accum2;    accum  -=  dev  *  accum2;	  	compilable	  [FE]  AssertionError  	143	1	add
61	[BUG]  [BUGGY]  accum  -=  dev  *  accum2;  accum  -=  desv  *  accum2;  [CE]  cannot  find  symbol  desv  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  -=  dev  *  accum2;  accum  -=  desv  *  accum2;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum    -=    dev    *    accum2;    accum  -=  desv  *  accum2;	  	non-compiled	[CE]  cannot  find  symbol  desv	143	None	add
62	[BUG]  [BUGGY]  accum  -=  dev  *  accum2;  accum  -=  DEV  *  accum2;  [CE]  cannot  find  symbol  DEV  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  -=  dev  *  accum2;  accum  -=  DEV  *  accum2;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum    -=    dev    *    accum2;    accum  -=  DEV  *  accum2;	  	non-compiled	[CE]  cannot  find  symbol  DEV	143	None	add
63	[BUG]  [BUGGY]  accum  -=  dev  *  accum2;  Accum  -=  dev  *  accum2;  [CE]  cannot  find  symbol  Accum  [FE]          AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  -=  dev  *  accum2;  Accum  -=  dev  *  accum2;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum    -=    dev    *    accum2;    Accum  -=  dev  *  accum2;	  	non-compiled	[CE]  cannot  find  symbol  Accum	143	None	add
64	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts;  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts;    var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts;	  	compilable	  [FE]  AssertionError  	104	1	add
65	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts;  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts;  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts;    var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts;	  	compilable	  [FE]  AssertionError  	104	1	add
66	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts;  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  totalWts;  [CE]  cannot  find  symbol  totalWts  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts;  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  totalWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts;    var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  totalWts;	  	non-compiled	[CE]  cannot  find  symbol  totalWts	104	None	add
67	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts;  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  amountWts;  [CE]  cannot  find  symbol  amountWts  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts;  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  amountWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts;    var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  amountWts;	  	non-compiled	[CE]  cannot  find  symbol  amountWts	104	None	add
68	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var        =        (accum        -        (accum2        *        accum2        /        sumWts))/(sumWts        *        1.0);        var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);	  	compilable	  [FE]  AssertionError  	97	1	add
69	[BUG]  [BUGGY]  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var        =        (accum        -        (accum2        *        accum2        /        sumWts))/(sumWts        *        1.0);        var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);	  	compilable	  [FE]  AssertionError  	97	1	add
70	[BUG]  [BUGGY]  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var        =        (accum        -        (accum2        *        accum2        /        sumWts))/(sumWts        *        1.0);        var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))	  	non-compiled	[CE]  ';'  expected	97	None	add
71	[BUG]  [BUGGY]  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var        =        (accum        -        (accum2        *        accum2        /        sumWts))/(sumWts        *        1.0);        var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0	  	non-compiled	[CE]  ')'  expected	97	None	add
72	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))/  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  accum2  /  mean))/  sumWts;	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    totalWts;    	compilable	  [FE]  AssertionError  	6	3	replace
73	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))/  sumWts;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))/  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  mean))/  sumWts;	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    totalWts;    	compilable	  [FE]  AssertionError  	6	3	replace
74	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  dev))/  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  accum2  /  dev))/  sumWts;	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    totalWts;    	compilable	  [FE]  AssertionError  	6	3	replace
75	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  dev))/  sumWts;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  dev))/  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  dev))/  sumWts;	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    totalWts;    	compilable	  [FE]  AssertionError  	6	3	replace
76	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  totalWts))/  sumWts;  [CE]  cannot  find  symbol  totalWts  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  totalWts))/  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  totalWts))/  sumWts;	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    totalWts;    	non-compiled	[CE]  cannot  find  symbol  totalWts	6	None	replace
77	[BUG]  [BUGGY]  var  =  (accum  -  (weights[i]  *  accum2  /  mean))/  sumWts;  [CE]  cannot  find  symbol  i  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (weights[i]  *  accum2  /  mean))/  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (weights[i]  *  accum2  /  mean))/  sumWts;	  var    =    (accum    -    (weights[i]    *    accum2    /    sumWts))    /    sumWts;    	non-compiled	[CE]  cannot  find  symbol  i	139	None	replace
78	[BUG]  [BUGGY]  var  =  (accum  -  (weights[i]  *  accum2  /  dev))/  sumWts;  [CE]  cannot  find  symbol  i  [FE]                AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (weights[i]  *  accum2  /  dev))/  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (weights[i]  *  accum2  /  dev))/  sumWts;	  var    =    (accum    -    (weights[i]    *    accum2    /    sumWts))    /    sumWts;    	non-compiled	[CE]  cannot  find  symbol  i	139	None	replace
79	[BUG]  [BUGGY]  var  =  (accum  -  (sumWts[i]  *  accum2  /  weights.length))/  sumWts;  [CE]  cannot  find  symbol  i  [FE]                  AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (sumWts[i]  *  accum2  /  weights.length))/  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (sumWts[i]  *  accum2  /  weights.length))/  sumWts;	  var    =    (accum    -    (weights[i]    *    accum2    /    sumWts))    /    sumWts;    	non-compiled	[CE]  cannot  find  symbol  i	139	None	replace
80	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  dev;  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  dev;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    dev;    var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  dev;	  	compilable	  [FE]  AssertionError  	128	1	add
81	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  dev;  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  dev;  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  dev;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    dev;    var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  dev;	  	compilable	  [FE]  AssertionError  	128	1	add
82	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  dev;  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  DEV;  [CE]  cannot  find  symbol  DEV  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  dev;  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  DEV;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    dev;    var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  DEV;	  	non-compiled	[CE]  cannot  find  symbol  DEV	128	None	add
83	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  dev;  var  =  (accum  -  (dev  *  accum2  /  totalWts))  /  dev;  [CE]  cannot  find  symbol  totalWts  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  dev;  var  =  (accum  -  (dev  *  accum2  /  totalWts))  /  dev;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    dev;    var  =  (accum  -  (dev  *  accum2  /  totalWts))  /  dev;	  	non-compiled	[CE]  cannot  find  symbol  totalWts	128	None	add
84	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  mean  /  accum2))/  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  mean  /  accum2))/  sumWts;	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    amountWts;    	compilable	  [FE]  AssertionError  	7	3	replace
85	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  mean  /  accum2))/  sumWts;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  mean  /  accum2))/  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  mean  /  accum2))/  sumWts;	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    amountWts;    	compilable	  [FE]  AssertionError  	7	3	replace
86	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  DEV;  [CE]  cannot  find  symbol  DEV  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  DEV;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  DEV;	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    DEV;    	non-compiled	[CE]  cannot  find  symbol  DEV	74	None	replace
87	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  DEV);  accum2  +=  dev  *  DEV;  [CE]  cannot  find  symbol  DEV  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  DEV);  accum2  +=  dev  *  DEV;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  (dev  *  DEV);  accum2  +=  dev  *  DEV;	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    DEV;    	non-compiled	[CE]  cannot  find  symbol  DEV	74	None	replace
88	[BUG]  [BUGGY]  var  =  (accum  -  (values  *  accum2  /  accumWts))/  (sumWts  -  1.0);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values  *  accum2  /  accumWts))/  (sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values  *  accum2  /  accumWts))/  (sumWts  -  1.0);	  var    =    (accum    -    (sumWts    *    accum2    /    values))    /    (sumWts    -    1.0);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	82	None	replace
89	[BUG]  [BUGGY]  var  =  (accum  -  (values  *  accum2  /  accum2))/  (sumWts  -  1.0);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values  *  accum2  /  accum2))/  (sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values  *  accum2  /  accum2))/  (sumWts  -  1.0);	  var    =    (accum    -    (sumWts    *    accum2    /    values))    /    (sumWts    -    1.0);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	82	None	replace
90	[BUG]  [BUGGY]  var  =  (accum  -  (values  *  accum2  /  values))/  (sumWts  -  1.0);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                  AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values  *  accum2  /  values))/  (sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values  *  accum2  /  values))/  (sumWts  -  1.0);	  var    =    (accum    -    (sumWts    *    accum2    /    values))    /    (sumWts    -    1.0);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	82	None	replace
91	[BUG]  [BUGGY]  if(incMoment)  {  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  else  {  sumWts  -=  1.0;  }  [CE]  cannot  find  symbol  i  [FE]                      AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  if(incMoment)  {  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  else  {  sumWts  -=  1.0;  }  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	if(incMoment)  {  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  else  {  sumWts  -=  1.0;  }	  if(incMoment)    {    accum    +=    weights[i]    *    dev;    accum2    +=    weights[i]    *    dev;    }    else    {    sumWts    -=    1.0;    }    	non-compiled	[CE]  cannot  find  symbol  i	33	None	replace
92	[BUG]  [BUGGY]  var  =  (accum  -  (accum1  *  accum2  /  sumWts))  /(sumWts  *  2.0);  [CE]  cannot  find  symbol  accum1  [FE]        AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum1  *  accum2  /  sumWts))  /(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum1  *  accum2  /  sumWts))  /(sumWts  *  2.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    var    =    (accum    -    (accum1    *    accum2    /    sumWts))/(sumWts    *    2.0);    	non-compiled	[CE]  cannot  find  symbol  accum1	135	None	replace
93	[BUG]  [BUGGY]  accum2  +=  weights[i]  *  (dev  *  mean);  [CE]  cannot  find  symbol  i  [FE]                AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum2  +=  weights[i]  *  (dev  *  mean);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum2  +=  weights[i]  *  (dev  *  mean);	  accum2    +=    weights[i]    *    (dev    *    dev);    	non-compiled	[CE]  cannot  find  symbol  i	15	None	replace
94	[BUG]  [BUGGY]  accum2  +=  weights[i]  *  (dev  *  sumWts);  [CE]  cannot  find  symbol  i  [FE]                  AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum2  +=  weights[i]  *  (dev  *  sumWts);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum2  +=  weights[i]  *  (dev  *  sumWts);	  accum2    +=    weights[i]    *    (dev    *    dev);    	non-compiled	[CE]  cannot  find  symbol  i	15	None	replace
95	[BUG]  [BUGGY]  accum2  +=  weights[i]  *  (dev  /  dev);  [CE]  cannot  find  symbol  i  [FE]                    AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum2  +=  weights[i]  *  (dev  /  dev);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum2  +=  weights[i]  *  (dev  /  dev);	  accum2    +=    weights[i]    *    (dev    *    dev);    	non-compiled	[CE]  cannot  find  symbol  i	15	None	replace
96	[BUG]  [BUGGY]  accum2  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  [CE]  cannot  find  symbol  i  [FE]                  AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum2  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum2  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;	  if(incMoment)    {    accum2    +=    weights[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  i	125	None	replace
97	[BUG]  [BUGGY]  accum  -=  weights[i]  *  (dev  *  mean);  [CE]  cannot  find  symbol  i  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  -=  weights[i]  *  (dev  *  mean);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  -=  weights[i]  *  (dev  *  mean);	  accum    -=    weights[i]    *    (dev    *    dev);    	non-compiled	[CE]  cannot  find  symbol  i	148	None	replace
98	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  mean  /  sumWts))  /(sumWts  -  1.0);  var  =  (accum  -  (accum2  *  mean  /  sumWts))  /(sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var    =    (accum    -    (accum2    *    mean    /    sumWts))    /(sumWts    -    1.0);    var  =  (accum  -  (accum2  *  mean  /  sumWts))  /(sumWts  -  1.0);	  	compilable	  [FE]  AssertionError  	43	1	add
99	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  mean  /  sumWts))  /(sumWts  -  1.0);  var  =  (accum  -  (accum2  *  mean  /  sumWts))  /(sumWts  -  1.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  mean  /  sumWts))  /(sumWts  -  1.0);  var  =  (accum  -  (accum2  *  mean  /  sumWts))  /(sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    mean    /    sumWts))    /(sumWts    -    1.0);    var  =  (accum  -  (accum2  *  mean  /  sumWts))  /(sumWts  -  1.0);	  	compilable	  [FE]  AssertionError  	43	1	add
100	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  mean  /  sumWts))  /(sumWts  -  1.0);  var  =  (accum  -  (accum2  *  mean  /  sumWtes))  /(sumWts  -  1.0);  [CE]  cannot  find  symbol  sumWtes  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  mean  /  sumWts))  /(sumWts  -  1.0);  var  =  (accum  -  (accum2  *  mean  /  sumWtes))  /(sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    mean    /    sumWts))    /(sumWts    -    1.0);    var  =  (accum  -  (accum2  *  mean  /  sumWtes))  /(sumWts  -  1.0);	  	non-compiled	[CE]  cannot  find  symbol  sumWtes	43	None	add
101	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  mean  /  sumWts))  /(sumWts  -  1.0);  var  =  (accum  -  (accum2  *  mean  /  SumWts))  /(sumWts  -  1.0);  [CE]  cannot  find  symbol  SumWts  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  mean  /  sumWts))  /(sumWts  -  1.0);  var  =  (accum  -  (accum2  *  mean  /  SumWts))  /(sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    mean    /    sumWts))    /(sumWts    -    1.0);    var  =  (accum  -  (accum2  *  mean  /  SumWts))  /(sumWts  -  1.0);	  	non-compiled	[CE]  cannot  find  symbol  SumWts	43	None	add
102	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(1.0);  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var    =    (accum    -    (accum2    *    accum2    /    mean))    /(1.0);    var  =  (accum  -  (accum2  *  accum2  /  mean))  /(1.0);	  	compilable	  [FE]  AssertionError  	80	1	add
103	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(1.0);  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(1.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(1.0);  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    mean))    /(1.0);    var  =  (accum  -  (accum2  *  accum2  /  mean))  /(1.0);	  	compilable	  [FE]  AssertionError  	80	1	add
104	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(1.0);  var  =  (accum  -  (accum2  *  accum2)  /  mean))  /(1.0);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(1.0);  var  =  (accum  -  (accum2  *  accum2)  /  mean))  /(1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    mean))    /(1.0);    var  =  (accum  -  (accum2  *  accum2)  /  mean))  /(1.0);	  	non-compiled	[CE]  ';'  expected	80	None	add
105	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(1.0);  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var    =    (accum    -    (accum2    *    accum2    /    mean))    /(1.0);    var  =  (accum  -  (accum2  *  accum2  /  mean))  /(2.0);	  	compilable	  [FE]  AssertionError  	80	1	add
106	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(1.0);  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(2.0);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(1.0);  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    mean))    /(1.0);    var  =  (accum  -  (accum2  *  accum2  /  mean))  /(2.0);	  	compilable	  [FE]  AssertionError  	80	1	add
107	[BUG]  [BUGGY]  var  =  (accum  -  (values[i]  *  accum2  /  mean))/  totalWts;  [CE]  cannot  find  symbol  i  [FE]                  AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values[i]  *  accum2  /  mean))/  totalWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[i]  *  accum2  /  mean))/  totalWts;	  var    =    (accum    -    (values[i]    *    accum2    /    sumWts))    /    totalWts;    	non-compiled	[CE]  cannot  find  symbol  i	141	None	replace
108	[BUG]  [BUGGY]  var  =  (accum  -  (sumWts[i]  *  accum2  /  values.length))/  totalWts;  [CE]  cannot  find  symbol  i  [FE]                    AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (sumWts[i]  *  accum2  /  values.length))/  totalWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (sumWts[i]  *  accum2  /  values.length))/  totalWts;	  var    =    (accum    -    (values[i]    *    accum2    /    sumWts))    /    totalWts;    	non-compiled	[CE]  cannot  find  symbol  i	141	None	replace
109	[BUG]  [BUGGY]  var  =  (accum  -  (values[i]  *  accum2  /  sumWts))/  mean;  [CE]  cannot  find  symbol  i  [FE]                      AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values[i]  *  accum2  /  sumWts))/  mean;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[i]  *  accum2  /  sumWts))/  mean;	  var    =    (accum    -    (values[i]    *    accum2    /    sumWts))    /    totalWts;    	non-compiled	[CE]  cannot  find  symbol  i	141	None	replace
110	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var    =    (accum    -    (accum2    *    accum2    /    mean))    /(sumWts    *    2.0);    var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  2.0);	  	compilable	  [FE]  AssertionError  	41	1	add
111	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  2.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    mean))    /(sumWts    *    2.0);    var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  2.0);	  	compilable	  [FE]  AssertionError  	41	1	add
112	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2)  /  mean))  /(sumWts  *  2.0);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2)  /  mean))  /(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    mean))    /(sumWts    *    2.0);    var  =  (accum  -  (accum2  *  accum2)  /  mean))  /(sumWts  *  2.0);	  	non-compiled	[CE]  ';'  expected	41	None	add
113	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  2.0;  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  2.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    mean))    /(sumWts    *    2.0);    var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  2.0;	  	non-compiled	[CE]  ')'  expected	41	None	add
114	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  i);  accum2  +=  dev  *  sumWts;  [CE]  cannot  find  symbol  i  [FE]        AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  i);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  (dev  *  i);  accum2  +=  dev  *  sumWts;	  accum    +=    dev    *    (dev    *    amount);    accum2    +=    dev    *    sumWts;    	non-compiled	[CE]  cannot  find  symbol  i	137	None	replace
115	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  accum2  +=  dev  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        dev;        accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  accum2  +=  dev  *  dev;	  	compilable	  [FE]  AssertionError  	71	3	add
116	[BUG]  [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  accum2  +=  dev  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  accum2  +=  dev  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        dev;        accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  accum2  +=  dev  *  dev;	  	compilable	  [FE]  AssertionError  	71	3	add
117	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  accum  +=  dev  *(dev  *  dev);  accum2  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        dev;        accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    accum  +=  dev  *(dev  *  dev);  accum2  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;	  	compilable	  [FE]  AssertionError  	71	3	add
118	[BUG]  [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  accum  +=  dev  *(dev  *  dev);  accum2  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  accum  +=  dev  *(dev  *  dev);  accum2  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        dev;        accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    accum  +=  dev  *(dev  *  dev);  accum2  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;	  	compilable	  [FE]  AssertionError  	71	3	add
119	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        dev;        accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;	  	compilable	  [FE]  AssertionError  	71	3	add
120	[BUG]  [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        dev;        accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;	  	compilable	  [FE]  AssertionError  	71	3	add
121	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  dev;  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum    +=    dev    *    (dev    *    sumWts);    accum2    +=    dev    *    dev;    accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  dev;	  	compilable	  [FE]  AssertionError  	16	3	add
122	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  dev;  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  dev;  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum    +=    dev    *    (dev    *    sumWts);    accum2    +=    dev    *    dev;    accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  dev;	  	compilable	  [FE]  AssertionError  	16	3	add
123	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  dev;  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  DEV;  [CE]  cannot  find  symbol  DEV  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  dev;  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  DEV;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum    +=    dev    *    (dev    *    sumWts);    accum2    +=    dev    *    dev;    accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  DEV;	  	non-compiled	[CE]  cannot  find  symbol  DEV	16	None	add
124	[BUG]  [BUGGY]  if(isBiasCorrected)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  if(isBiasCorrected)  {  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	if(isBiasCorrected)  {	  if(incMoment)    {    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
125	[BUG]  [BUGGY]  if(incMoment  &&  isBiasCorrected)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  if(incMoment  &&  isBiasCorrected)  {  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	if(incMoment  &&  isBiasCorrected)  {	  if(incMoment)    {    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
126	[BUG]  [BUGGY]  if(!incMoment)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  if(!incMoment)  {  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	if(!incMoment)  {	  if(incMoment)    {    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
127	[BUG]  [BUGGY]  if(incMoment  ||  isBiasCorrected)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  if(incMoment  ||  isBiasCorrected)  {  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	if(incMoment  ||  isBiasCorrected)  {	  if(incMoment)    {    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
128	[BUG]  [BUGGY]  double  accum2  =  Math.abs(sumWts  /  1);  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                      AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  double  accum2  =  Math.abs(sumWts  /  1);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	double  accum2  =  Math.abs(sumWts  /  1);	  double    accum2    =    Math.abs(sumWts    +    1);    	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	53	None	replace
129	[BUG]  [BUGGY]  double  accum2  =  Math.abs(sumWts  +  1.0);  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                        AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  double  accum2  =  Math.abs(sumWts  +  1.0);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	double  accum2  =  Math.abs(sumWts  +  1.0);	  double    accum2    =    Math.abs(sumWts    +    1);    	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	53	None	replace
130	[BUG]  [BUGGY]  double  accum2  =  Math.abs(sumWts  *  1);  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                          AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  double  accum2  =  Math.abs(sumWts  *  1);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	double  accum2  =  Math.abs(sumWts  *  1);	  double    accum2    =    Math.abs(sumWts    +    1);    	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	53	None	replace
131	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  mean  /  sumWts))/(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  mean  /  sumWts))/(sumWts  *  2.0);	  var    =    (accum    -    (m2    *    accum2    /    sumWts))    /(sumWts    *    2.0);    	compilable	  [FE]  AssertionError  	95	3	replace
132	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  mean  /  sumWts))/(sumWts  *  2.0);  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  mean  /  sumWts))/(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  mean  /  sumWts))/(sumWts  *  2.0);	  var    =    (accum    -    (m2    *    accum2    /    sumWts))    /(sumWts    *    2.0);    	compilable	  [FE]  AssertionError  	95	3	replace
133	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  sumWts))/(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (mean  *  accum2  /  sumWts))/(sumWts  *  2.0);	  var    =    (accum    -    (m2    *    accum2    /    sumWts))    /(sumWts    *    2.0);    	compilable	  [FE]  AssertionError  	95	3	replace
134	[BUG]  [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  sumWts))/(sumWts  *  2.0);  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  sumWts))/(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (mean  *  accum2  /  sumWts))/(sumWts  *  2.0);	  var    =    (accum    -    (m2    *    accum2    /    sumWts))    /(sumWts    *    2.0);    	compilable	  [FE]  AssertionError  	95	3	replace
135	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  dev  /  sumWts))/  sumWts  *  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (dev  *  dev  /  sumWts))/  sumWts  *  1.0;	  var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts    *    1.0;    	compilable	  [FE]  AssertionError  	100	3	replace
136	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  dev  /  sumWts))/  sumWts  *  1.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  dev  /  sumWts))/  sumWts  *  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (dev  *  dev  /  sumWts))/  sumWts  *  1.0;	  var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts    *    1.0;    	compilable	  [FE]  AssertionError  	100	3	replace
137	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /(sumWts  /  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /(sumWts  /  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /(sumWts    /    2.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /(sumWts  /  2.0);	  	compilable	  [FE]  AssertionError  	154	1	add
138	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /(sumWts  /  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /(sumWts  /  2.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /(sumWts  /  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /(sumWts  /  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /(sumWts    /    2.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /(sumWts  /  2.0);	  	compilable	  [FE]  AssertionError  	154	1	add
139	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /(sumWts  /  2.0);  var  =  (accum  -  (accum1  *  accum2  /  sumWts))  /(sumWts  /  2.0);  [CE]  cannot  find  symbol  accum1  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /(sumWts  /  2.0);  var  =  (accum  -  (accum1  *  accum2  /  sumWts))  /(sumWts  /  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /(sumWts    /    2.0);    var  =  (accum  -  (accum1  *  accum2  /  sumWts))  /(sumWts  /  2.0);	  	non-compiled	[CE]  cannot  find  symbol  accum1	154	None	add
140	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /(sumWts  /  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWtes))  /(sumWts  /  2.0);  [CE]  cannot  find  symbol  sumWtes  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /(sumWts  /  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWtes))  /(sumWts  /  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /(sumWts    /    2.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWtes))  /(sumWts  /  2.0);	  	non-compiled	[CE]  cannot  find  symbol  sumWtes	154	None	add
141	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  DEV);  accum2  +=  dev  *  (dev  *  DEV);  [CE]  cannot  find  symbol  DEV  [FE]        AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  DEV);  accum2  +=  dev  *  (dev  *  DEV);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  (dev  *  DEV);  accum2  +=  dev  *  (dev  *  DEV);	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum    +=    dev    *    (dev    *    DEV);    accum2    +=    dev    *    sumWts;    	non-compiled	[CE]  cannot  find  symbol  DEV	114	None	replace
142	[BUG]  [BUGGY]  accum2  +=  dev  *  (dev  *  DEV);  [CE]  cannot  find  symbol  DEV  [FE]          AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum2  +=  dev  *  (dev  *  DEV);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum2  +=  dev  *  (dev  *  DEV);	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum    +=    dev    *    (dev    *    DEV);    accum2    +=    dev    *    sumWts;    	non-compiled	[CE]  cannot  find  symbol  DEV	114	None	replace
143	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  DEV);  [CE]  cannot  find  symbol  DEV  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  DEV);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  (dev  *  DEV);	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum    +=    dev    *    (dev    *    DEV);    accum2    +=    dev    *    sumWts;    	non-compiled	[CE]  cannot  find  symbol  DEV	114	None	replace
144	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  accum2;  accum  +=  dev  *  accum2;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum    +=    dev    *    accum2;    accum  +=  dev  *  accum2;	  	compilable	  [FE]  AssertionError  	85	1	add
145	[BUG]  [BUGGY]  accum  +=  dev  *  accum2;  accum  +=  dev  *  accum2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  accum2;  accum  +=  dev  *  accum2;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum    +=    dev    *    accum2;    accum  +=  dev  *  accum2;	  	compilable	  [FE]  AssertionError  	85	1	add
146	[BUG]  [BUGGY]  accum  +=  dev  *  accum2;  double  accum2  +=  dev  *  accum2;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  accum2;  double  accum2  +=  dev  *  accum2;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum    +=    dev    *    accum2;    double  accum2  +=  dev  *  accum2;	  	non-compiled	[CE]  ';'  expected	85	None	add
147	[BUG]  [BUGGY]  accum  +=  dev  *  accum2;  Accum  +=  dev  *  accum2;  [CE]  cannot  find  symbol  Accum  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  accum2;  Accum  +=  dev  *  accum2;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum    +=    dev    *    accum2;    Accum  +=  dev  *  accum2;	  	non-compiled	[CE]  cannot  find  symbol  Accum	85	None	add
148	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  accum2;  accum  /=  dev  *  accum2;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum    +=    dev    *    accum2;    accum  /=  dev  *  accum2;	  	compilable	  [FE]  AssertionError  	85	3	add
149	[BUG]  [BUGGY]  accum  +=  dev  *  accum2;  accum  /=  dev  *  accum2;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  accum2;  accum  /=  dev  *  accum2;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum    +=    dev    *    accum2;    accum  /=  dev  *  accum2;	  	compilable	  [FE]  AssertionError  	85	3	add
150	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  accum2  *  mean;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum  +=  accum2  *  mean;	          accum    +=    accum2    *    dev;    accum    +=    accum2    *    desv;    	compilable	  [FE]  AssertionError  	24	2	replace
151	[BUG]  [BUGGY]  accum  +=  accum2  *  mean;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  accum2  *  mean;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  accum2  *  mean;	          accum    +=    accum2    *    dev;    accum    +=    accum2    *    desv;    	compilable	  [FE]  AssertionError  	24	2	replace
152	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var    =    (accum    -    (accum2    *    accum2    /    dev))    /(sumWts    *    1.0);    var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  1.0);	  	compilable	  [FE]  AssertionError  	78	1	add
153	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  1.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    dev))    /(sumWts    *    1.0);    var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  1.0);	  	compilable	  [FE]  AssertionError  	78	1	add
154	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  DEV))  /(sumWts  *  1.0);  [CE]  cannot  find  symbol  DEV  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  DEV))  /(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    dev))    /(sumWts    *    1.0);    var  =  (accum  -  (accum2  *  accum2  /  DEV))  /(sumWts  *  1.0);	  	non-compiled	[CE]  cannot  find  symbol  DEV	78	None	add
155	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var    =    (accum    -    (accum2    *    accum2    /    dev))    /(sumWts    *    1.0);    var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  2.0);	  	compilable	  [FE]  AssertionError  	78	1	add
156	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  2.0);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    dev))    /(sumWts    *    1.0);    var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  2.0);	  	compilable	  [FE]  AssertionError  	78	1	add
157	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  *  1.0;  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  *  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    dev    *    1.0;    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  *  1.0;	  	compilable	  [FE]  AssertionError  	68	1	add
158	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  *  1.0;  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  *  1.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  *  1.0;  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  *  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    dev    *    1.0;    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  *  1.0;	  	compilable	  [FE]  AssertionError  	68	1	add
159	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  *  1.0;  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  DEV  *  1.0;  [CE]  cannot  find  symbol  DEV  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  *  1.0;  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  DEV  *  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    dev    *    1.0;    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  DEV  *  1.0;	  	non-compiled	[CE]  cannot  find  symbol  DEV	68	None	add
160	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  *  1.0;  var  =  (accum  -  (accum2  *  accum2  /  totalWts))  /  dev  *  1.0;  [CE]  cannot  find  symbol  totalWts  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  *  1.0;  var  =  (accum  -  (accum2  *  accum2  /  totalWts))  /  dev  *  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    dev    *    1.0;    var  =  (accum  -  (accum2  *  accum2  /  totalWts))  /  dev  *  1.0;	  	non-compiled	[CE]  cannot  find  symbol  totalWts	68	None	add
161	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  accum2  +  1;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum  +=  dev  *  accum2  +  1;	  accum    +=    dev    *    accum2;    	compilable	  [FE]  AssertionError  	86	2	replace
162	[BUG]  [BUGGY]  accum  +=  dev  *  accum2  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  accum2  +  1;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  accum2  +  1;	  accum    +=    dev    *    accum2;    	compilable	  [FE]  AssertionError  	86	2	replace
163	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  mean;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum  +=  dev  *  mean;	  accum    +=    dev    *    accum2;    	compilable	  [FE]  AssertionError  	86	2	replace
164	[BUG]  [BUGGY]  accum  +=  dev  *  mean;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  mean;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  mean;	  accum    +=    dev    *    accum2;    	compilable	  [FE]  AssertionError  	86	2	replace
165	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  totalWts))  /  sumWts;  [CE]  cannot  find  symbol  totalWts  [FE]          AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  totalWts))  /  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (dev  *  accum2  /  totalWts))  /  sumWts;	  var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var    =    (accum    -    (dev    *    accum2    /    sumWts))(sumWts    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  totalWts	57	None	replace
166	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  totalWts;  [CE]  cannot  find  symbol  totalWts  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  totalWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  totalWts;	  var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var    =    (accum    -    (dev    *    accum2    /    sumWts))(sumWts    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  totalWts	57	None	replace
167	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(1.0);	  var    =    (accum    -    (accum2    *    accum2    /    mean))    /(1.0);    	compilable	  [FE]  AssertionError  	81	2	replace
168	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(1.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(1.0);	  var    =    (accum    -    (accum2    *    accum2    /    mean))    /(1.0);    	compilable	  [FE]  AssertionError  	81	2	replace
169	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  mean))/(1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (dev  *  accum2  /  mean))/(1.0);	  var    =    (accum    -    (accum2    *    accum2    /    mean))    /(1.0);    	compilable	  [FE]  AssertionError  	81	2	replace
170	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  mean))/(1.0);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  mean))/(1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (dev  *  accum2  /  mean))/(1.0);	  var    =    (accum    -    (accum2    *    accum2    /    mean))    /(1.0);    	compilable	  [FE]  AssertionError  	81	2	replace
171	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/  2.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  accum2  /  sumWts))/  2.0;	  var    =    (accum    -    (accum2    *    accum2    /    mean))    /(1.0);    	compilable	  [FE]  AssertionError  	81	2	replace
172	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/  2.0;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/  2.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  sumWts))/  2.0;	  var    =    (accum    -    (accum2    *    accum2    /    mean))    /(1.0);    	compilable	  [FE]  AssertionError  	81	2	replace
173	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  /  20.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  /  20.0);	  var    =    (accum    -    (values.length    *    accum2    /    sumWts))    /(sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	147	3	replace
174	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  /  20.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  /  20.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  /  20.0);	  var    =    (accum    -    (values.length    *    accum2    /    sumWts))    /(sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	147	3	replace
175	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  i);  accum2  +=  dev  *  dev;  [CE]  cannot  find  symbol  i  [FE]        AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  i);  accum2  +=  dev  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  (dev  *  i);  accum2  +=  dev  *  dev;	  accum    +=    dev    *    (dev    *    amount);    accum2    +=    dev    *    dev;    	non-compiled	[CE]  cannot  find  symbol  i	118	None	replace
176	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))/  DEV;  [CE]  cannot  find  symbol  DEV  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))/  DEV;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (dev  *  accum2  /  sumWts))/  DEV;	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    dev;    	non-compiled	[CE]  cannot  find  symbol  DEV	9	None	replace
177	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  weights[i]);  accum2  +=  dev  *  sumWts;  [CE]  cannot  find  symbol  i  [FE]          AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  weights[i]);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  (dev  *  weights[i]);  accum2  +=  dev  *  sumWts;	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum    +=    dev    *    (dev    *    weights[i]);    accum2    +=    dev    *    sumWts;    	non-compiled	[CE]  cannot  find  symbol  i	60	None	replace
178	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  weights[i]);  [CE]  cannot  find  symbol  i  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  weights[i]);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  (dev  *  weights[i]);	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum    +=    dev    *    (dev    *    weights[i]);    accum2    +=    dev    *    sumWts;    	non-compiled	[CE]  cannot  find  symbol  i	60	None	replace
179	[BUG]  [BUGGY]  accum  +=  dev  *(dev  *  weights[i]);  accum2  +=  dev  *  (dev  *  weights[i]);  [CE]  cannot  find  symbol  i  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *(dev  *  weights[i]);  accum2  +=  dev  *  (dev  *  weights[i]);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *(dev  *  weights[i]);  accum2  +=  dev  *  (dev  *  weights[i]);	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum    +=    dev    *    (dev    *    weights[i]);    accum2    +=    dev    *    sumWts;    	non-compiled	[CE]  cannot  find  symbol  i	60	None	replace
180	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    sumWts);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	61	3	add
181	[BUG]  [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum2  +=  dev  *  sumWts;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    sumWts);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	61	3	add
182	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *(dev  *  dev);  accum2  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    sumWts);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *(dev  *  dev);  accum2  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	61	3	add
183	[BUG]  [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *(dev  *  dev);  accum2  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *(dev  *  dev);  accum2  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    sumWts);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *(dev  *  dev);  accum2  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	61	3	add
184	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    sumWts);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	61	3	add
185	[BUG]  [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    sumWts);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	61	3	add
186	[BUG]  [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  weights[i]);  accum2  +=  dev  *  sumWts;  accum2  +=  dev  *  sumWts;  [CE]  cannot  find  symbol  i  [FE]          AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  weights[i]);  accum2  +=  dev  *  sumWts;  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    sumWts);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  weights[i]);  accum2  +=  dev  *  sumWts;  accum2  +=  dev  *  sumWts;	  	non-compiled	[CE]  cannot  find  symbol  i	61	None	add
187	[BUG]  [BUGGY]  accum  +=  dev  *  weights[i]  *  dev;  accum2  +=  weights[i]  *  weights[i];  [CE]  cannot  find  symbol  i  [FE]                AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  weights[i]  *  dev;  accum2  +=  weights[i]  *  weights[i];  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  weights[i]  *  dev;  accum2  +=  weights[i]  *  weights[i];	  accum    +=    dev    *    weights[i]    *    dev;    accum2    +=    dev    *    weights[i]    *    weights[i];    }    	non-compiled	[CE]  cannot  find  symbol  i	151	None	replace
188	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  mean))  /  (sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (dev  *  accum2  /  mean))  /  (sumWts  -  1.0);	  var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var    =    (accum    -    (dev    *    accum2    /    totalWts))/    (sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	108	1	replace
189	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  mean))  /  (sumWts  -  1.0);  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  mean))  /  (sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (dev  *  accum2  /  mean))  /  (sumWts  -  1.0);	  var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var    =    (accum    -    (dev    *    accum2    /    totalWts))/    (sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	108	1	replace
190	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  dev))  /  (sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (dev  *  accum2  /  dev))  /  (sumWts  -  1.0);	  var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var    =    (accum    -    (dev    *    accum2    /    totalWts))/    (sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	108	1	replace
191	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  dev))  /  (sumWts  -  1.0);  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  dev))  /  (sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (dev  *  accum2  /  dev))  /  (sumWts  -  1.0);	  var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var    =    (accum    -    (dev    *    accum2    /    totalWts))/    (sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	108	1	replace
192	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  totalWts))  /  (sumWts  -  1.0);  [CE]  cannot  find  symbol  totalWts  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  totalWts))  /  (sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (dev  *  accum2  /  totalWts))  /  (sumWts  -  1.0);	  var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var    =    (accum    -    (dev    *    accum2    /    totalWts))/    (sumWts    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  totalWts	108	None	replace
193	[BUG]  [BUGGY]  var  =  (accum  -  (values[i]  *  accum2  /  totalWts))/  mean;  [CE]  cannot  find  symbol  i  [FE]                AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values[i]  *  accum2  /  totalWts))/  mean;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[i]  *  accum2  /  totalWts))/  mean;	  var    =    (accum    -    (values[i]    *    accum2    /    totalWts))    /    sumWts;    	non-compiled	[CE]  cannot  find  symbol  i	140	None	replace
194	[BUG]  [BUGGY]  var  =  (accum  -  (weights[i]  *  accum2  /  totalWts))/  sumWts;  [CE]  cannot  find  symbol  i  [FE]                  AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (weights[i]  *  accum2  /  totalWts))/  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (weights[i]  *  accum2  /  totalWts))/  sumWts;	  var    =    (accum    -    (values[i]    *    accum2    /    totalWts))    /    sumWts;    	non-compiled	[CE]  cannot  find  symbol  i	140	None	replace
195	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))/  dev  *  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (dev  *  accum2  /  sumWts))/  dev  *  1.0;	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    dev    *    1.0;    	compilable	  [FE]  AssertionError  	69	3	replace
196	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))/  dev  *  1.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))/  dev  *  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (dev  *  accum2  /  sumWts))/  dev  *  1.0;	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    dev    *    1.0;    	compilable	  [FE]  AssertionError  	69	3	replace
197	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  mean  /  sumWts))/(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  mean  /  sumWts))/(sumWts  *  1.0);	  var    =    (accum    -    (m2    *    accum2    /    sumWts))    /(sumWts    *    1.0);    	compilable	  [FE]  AssertionError  	102	3	replace
198	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  mean  /  sumWts))/(sumWts  *  1.0);  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  mean  /  sumWts))/(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  mean  /  sumWts))/(sumWts  *  1.0);	  var    =    (accum    -    (m2    *    accum2    /    sumWts))    /(sumWts    *    1.0);    	compilable	  [FE]  AssertionError  	102	3	replace
199	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  sumWts))/(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (mean  *  accum2  /  sumWts))/(sumWts  *  1.0);	  var    =    (accum    -    (m2    *    accum2    /    sumWts))    /(sumWts    *    1.0);    	compilable	  [FE]  AssertionError  	102	3	replace
200	[BUG]  [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  sumWts))/(sumWts  *  1.0);  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  sumWts))/(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (mean  *  accum2  /  sumWts))/(sumWts  *  1.0);	  var    =    (accum    -    (m2    *    accum2    /    sumWts))    /(sumWts    *    1.0);    	compilable	  [FE]  AssertionError  	102	3	replace
201	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /(sumWts  *  1.0);  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var    =    (accum    -    (dev    *    accum2    /    sumWts))    /(sumWts    *    1.0);    var  =  (accum  -  (dev  *  accum2  /  sumWts))  /(sumWts  *  1.0);	  	compilable	  [FE]  AssertionError  	65	1	add
202	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /(sumWts  *  1.0);  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /(sumWts  *  1.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /(sumWts  *  1.0);  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (dev    *    accum2    /    sumWts))    /(sumWts    *    1.0);    var  =  (accum  -  (dev  *  accum2  /  sumWts))  /(sumWts  *  1.0);	  	compilable	  [FE]  AssertionError  	65	1	add
203	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /(sumWts  *  1.0);  var  =  (accum  -  (dev  *  accum2  /  sumWtes))  /(sumWts  *  1.0);  [CE]  cannot  find  symbol  sumWtes  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /(sumWts  *  1.0);  var  =  (accum  -  (dev  *  accum2  /  sumWtes))  /(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (dev    *    accum2    /    sumWts))    /(sumWts    *    1.0);    var  =  (accum  -  (dev  *  accum2  /  sumWtes))  /(sumWts  *  1.0);	  	non-compiled	[CE]  cannot  find  symbol  sumWtes	65	None	add
204	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /(sumWts  *  1.0);  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var    =    (accum    -    (dev    *    accum2    /    sumWts))    /(sumWts    *    1.0);    var  =  (accum  -  (dev  *  accum2  /  sumWts))  /(sumWts  *  2.0);	  	compilable	  [FE]  AssertionError  	65	1	add
205	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /(sumWts  *  1.0);  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /(sumWts  *  2.0);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /(sumWts  *  1.0);  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (dev    *    accum2    /    sumWts))    /(sumWts    *    1.0);    var  =  (accum  -  (dev  *  accum2  /  sumWts))  /(sumWts  *  2.0);	  	compilable	  [FE]  AssertionError  	65	1	add
206	[BUG]  [BUGGY]  Accum  +=  accum2  *  dev;  [CE]  cannot  find  symbol  Accum  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  Accum  +=  accum2  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	Accum  +=  accum2  *  dev;	          accum    +=    accum2    *    dev;    Accum    +=    accum2    *    dev;    	non-compiled	[CE]  cannot  find  symbol  Accum	25	None	replace
207	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  DEV);  accum2  +=  dev  *  dev;  [CE]  cannot  find  symbol  DEV  [FE]          AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  DEV);  accum2  +=  dev  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  (dev  *  DEV);  accum2  +=  dev  *  dev;	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    accum    +=    dev    *    (dev    *    DEV);    accum2    +=    dev    *    dev;    	non-compiled	[CE]  cannot  find  symbol  DEV	73	None	replace
208	[BUG]  [BUGGY]  var  =  (accum  -  (values[accum2  *  accum2  /  sumWts))/  sumWts;  [CE]  ']'  expected  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values[accum2  *  accum2  /  sumWts))/  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[accum2  *  accum2  /  sumWts))/  sumWts;	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    sumWts;    	non-compiled	[CE]  ']'  expected	5	None	replace
209	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum2  +=  accum2  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum2  +=  accum2  *  dev;	          accum    +=    accum2    *    dev;    accum    accum    +=    accum2    *    dev;    	compilable	  [FE]  AssertionError  	150	2	replace
210	[BUG]  [BUGGY]  accum2  +=  accum2  *  dev;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum2  +=  accum2  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum2  +=  accum2  *  dev;	          accum    +=    accum2    *    dev;    accum    accum    +=    accum2    *    dev;    	compilable	  [FE]  AssertionError  	150	2	replace
211	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  dev;  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    dev;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  dev;	  	compilable	  [FE]  AssertionError  	119	3	add
212	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  dev;  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  dev;  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    dev;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  dev;	  	compilable	  [FE]  AssertionError  	119	3	add
213	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  dev;  Accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  dev;  [CE]  cannot  find  symbol  Accum  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  dev;  Accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    dev;    Accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  dev;	  	non-compiled	[CE]  cannot  find  symbol  Accum	119	None	add
214	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  dev;  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  DEV;  [CE]  cannot  find  symbol  DEV  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  dev;  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  DEV;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    dev;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  DEV;	  	non-compiled	[CE]  cannot  find  symbol  DEV	119	None	add
215	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))/(sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  accum2  /  mean))/(sumWts  -  1.0);	  var    =    (accum    -    (accum2    *    accum2    /    totalWts))    /(sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	70	1	replace
216	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))/(sumWts  -  1.0);  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))/(sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  mean))/(sumWts  -  1.0);	  var    =    (accum    -    (accum2    *    accum2    /    totalWts))    /(sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	70	1	replace
217	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  dev))/(sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  accum2  /  dev))/(sumWts  -  1.0);	  var    =    (accum    -    (accum2    *    accum2    /    totalWts))    /(sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	70	1	replace
218	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  dev))/(sumWts  -  1.0);  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  dev))/(sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  dev))/(sumWts  -  1.0);	  var    =    (accum    -    (accum2    *    accum2    /    totalWts))    /(sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	70	1	replace
219	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	18	3	add
220	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	18	3	add
221	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  mean  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    accum  +=  mean  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	18	3	add
222	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  mean  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  mean  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    accum  +=  mean  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	18	3	add
223	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  Accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  [CE]  cannot  find  symbol  Accum  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  Accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    Accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;	  	non-compiled	[CE]  cannot  find  symbol  Accum	18	None	add
224	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum2  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum2  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    	compilable	  [FE]  AssertionError  	153	2	replace
225	[BUG]  [BUGGY]  accum2  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum2  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum2  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    	compilable	  [FE]  AssertionError  	153	2	replace
226	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  if(isBiasCorrected)  {  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  }  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	if(isBiasCorrected)  {  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  }	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    	compilable	  [FE]  AssertionError  	153	2	replace
227	[BUG]  [BUGGY]  if(isBiasCorrected)  {  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  if(isBiasCorrected)  {  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  }  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	if(isBiasCorrected)  {  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  }	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    	compilable	  [FE]  AssertionError  	153	2	replace
228	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var    =    (accum    -    (accum2    *    accum2    /    dev))    /(sumWts    *    2.0);    var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  2.0);	  	compilable	  [FE]  AssertionError  	39	1	add
229	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  2.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    dev))    /(sumWts    *    2.0);    var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  2.0);	  	compilable	  [FE]  AssertionError  	39	1	add
230	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  DEV))  /(sumWts  *  2.0);  [CE]  cannot  find  symbol  DEV  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  DEV))  /(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    dev))    /(sumWts    *    2.0);    var  =  (accum  -  (accum2  *  accum2  /  DEV))  /(sumWts  *  2.0);	  	non-compiled	[CE]  cannot  find  symbol  DEV	39	None	add
231	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  2.0);  var  =  (accum  -  (accum1  *  accum2  /  dev))  /(sumWts  *  2.0);  [CE]  cannot  find  symbol  accum1  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  2.0);  var  =  (accum  -  (accum1  *  accum2  /  dev))  /(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    dev))    /(sumWts    *    2.0);    var  =  (accum  -  (accum1  *  accum2  /  dev))  /(sumWts  *  2.0);	  	non-compiled	[CE]  cannot  find  symbol  accum1	39	None	add
232	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  mean))  /  (sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (mean  *  accum2  /  mean))  /  (sumWts  -  1.0);	  var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var    =    (accum    -    (mean    *    accum2    /    sumWtes))/    (sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	115	1	replace
233	[BUG]  [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  mean))  /  (sumWts  -  1.0);  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  mean))  /  (sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (mean  *  accum2  /  mean))  /  (sumWts  -  1.0);	  var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var    =    (accum    -    (mean    *    accum2    /    sumWtes))/    (sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	115	1	replace
234	[BUG]  [BUGGY]  accum  +=  accum2  *  DEV;  [CE]  cannot  find  symbol  DEV  [FE]          AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  accum2  *  DEV;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  accum2  *  DEV;	          accum    +=    accum2    *    dev;    accum    +=    accum2    *    DEV;    	non-compiled	[CE]  cannot  find  symbol  DEV	23	None	replace
235	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev;  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    dev;    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev;	  	compilable	  [FE]  AssertionError  	8	1	add
236	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev;  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev;  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    dev;    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev;	  	compilable	  [FE]  AssertionError  	8	1	add
237	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev;  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  DEV;  [CE]  cannot  find  symbol  DEV  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev;  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  DEV;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    dev;    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  DEV;	  	non-compiled	[CE]  cannot  find  symbol  DEV	8	None	add
238	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev;  var  =  (accum  -  (accum2  *  accum2  /  totalWts))  /  dev;  [CE]  cannot  find  symbol  totalWts  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev;  var  =  (accum  -  (accum2  *  accum2  /  totalWts))  /  dev;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    dev;    var  =  (accum  -  (accum2  *  accum2  /  totalWts))  /  dev;	  	non-compiled	[CE]  cannot  find  symbol  totalWts	8	None	add
239	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  /=  accum2  *  dev;  accum  /=  accum2  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum    /=    accum2    *    dev;    accum  /=  accum2  *  dev;	  	compilable	  [FE]  AssertionError  	87	3	add
240	[BUG]  [BUGGY]  accum  /=  accum2  *  dev;  accum  /=  accum2  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  /=  accum2  *  dev;  accum  /=  accum2  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum    /=    accum2    *    dev;    accum  /=  accum2  *  dev;	  	compilable	  [FE]  AssertionError  	87	3	add
241	[BUG]  [BUGGY]  accum  /=  accum2  *  dev;  accum  /=  accum2  *  DEV;  [CE]  cannot  find  symbol  DEV  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  /=  accum2  *  dev;  accum  /=  accum2  *  DEV;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum    /=    accum2    *    dev;    accum  /=  accum2  *  DEV;	  	non-compiled	[CE]  cannot  find  symbol  DEV	87	None	add
242	[BUG]  [BUGGY]  accum  /=  accum2  *  dev;  accum  /=  accum2  *  desv;  [CE]  cannot  find  symbol  desv  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  /=  accum2  *  dev;  accum  /=  accum2  *  desv;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum    /=    accum2    *    dev;    accum  /=  accum2  *  desv;	  	non-compiled	[CE]  cannot  find  symbol  desv	87	None	add
243	[BUG]  [BUGGY]  accum  /=  accum2  *  dev;  Accum  /=  accum2  *  dev;  [CE]  cannot  find  symbol  Accum  [FE]          AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  /=  accum2  *  dev;  Accum  /=  accum2  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum    /=    accum2    *    dev;    Accum  /=  accum2  *  dev;	  	non-compiled	[CE]  cannot  find  symbol  Accum	87	None	add
244	[BUG]  [BUGGY]  accum  +=  dev  *  weights[i]  /  weights[i];  [CE]  cannot  find  symbol  i  [FE]                AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  weights[i]  /  weights[i];  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  weights[i]  /  weights[i];	  accum    +=    dev    *    weights[i]    *    weights[i];    	non-compiled	[CE]  cannot  find  symbol  i	46	None	replace
245	[BUG]  [BUGGY]  accum  +=  dev  *  weights[i]  *  (dev  *  weights[i]);  [CE]  cannot  find  symbol  i  [FE]                  AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  weights[i]  *  (dev  *  weights[i]);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  weights[i]  *  (dev  *  weights[i]);	  accum    +=    dev    *    weights[i]    *    weights[i];    	non-compiled	[CE]  cannot  find  symbol  i	46	None	replace
246	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))/(maximumWts  *  2.0);  [CE]  cannot  find  symbol  maximumWts  [FE]          AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))/(maximumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  mean))/(maximumWts  *  2.0);	  var    =    (accum    -    (accum2    *    accum2    /    totalWts))    /(sumWts    *    2.0);    	non-compiled	[CE]  cannot  find  symbol  maximumWts	67	None	replace
247	[BUG]  [BUGGY]  var  =  (accum  -  (weights[i]  *  accum2  /  mean))/(sumWts  -  1.0);  [CE]  cannot  find  symbol  i  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (weights[i]  *  accum2  /  mean))/(sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (weights[i]  *  accum2  /  mean))/(sumWts  -  1.0);	  var    =    (accum    -    (weights[i]    *    accum2    /    sumWts))    /    (sumWts    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  i	2	None	replace
248	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))/  sumWts  *  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  accum2  /  mean))/  sumWts  *  1.0;	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    totalWts    *    1.0;    	compilable	  [FE]  AssertionError  	162	3	replace
249	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))/  sumWts  *  1.0;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))/  sumWts  *  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  mean))/  sumWts  *  1.0;	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    totalWts    *    1.0;    	compilable	  [FE]  AssertionError  	162	3	replace
250	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))/  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  accum2  /  mean))/  1.0;	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    totalWts    *    1.0;    	compilable	  [FE]  AssertionError  	162	2	replace
251	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))/  1.0;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))/  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  mean))/  1.0;	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    totalWts    *    1.0;    	compilable	  [FE]  AssertionError  	162	2	replace
252	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  dev))/  sumWts  *  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  accum2  /  dev))/  sumWts  *  1.0;	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    totalWts    *    1.0;    	compilable	  [FE]  AssertionError  	162	3	replace
253	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  dev))/  sumWts  *  1.0;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  dev))/  sumWts  *  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  dev))/  sumWts  *  1.0;	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    totalWts    *    1.0;    	compilable	  [FE]  AssertionError  	162	3	replace
254	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  totalWts))/  sumWts  *  1.0;  [CE]  cannot  find  symbol  totalWts  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  totalWts))/  sumWts  *  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  totalWts))/  sumWts  *  1.0;	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    totalWts    *    1.0;    	non-compiled	[CE]  cannot  find  symbol  totalWts	162	None	replace
255	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  /(sumWts  -  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  /(sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    dev    /(sumWts    -    1.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  /(sumWts  -  1.0);	  	compilable	  [FE]  AssertionError  	29	1	add
256	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  /(sumWts  -  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  /(sumWts  -  1.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  /(sumWts  -  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  /(sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    dev    /(sumWts    -    1.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  /(sumWts  -  1.0);	  	compilable	  [FE]  AssertionError  	29	1	add
257	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  /(sumWts  -  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  DEV  /(sumWts  -  1.0);  [CE]  cannot  find  symbol  DEV  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  /(sumWts  -  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  DEV  /(sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    dev    /(sumWts    -    1.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  DEV  /(sumWts  -  1.0);	  	non-compiled	[CE]  cannot  find  symbol  DEV	29	None	add
258	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  /(sumWts  -  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  desv  /(sumWts  -  1.0);  [CE]  cannot  find  symbol  desv  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  /(sumWts  -  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  desv  /(sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    dev    /(sumWts    -    1.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  desv  /(sumWts  -  1.0);	  	non-compiled	[CE]  cannot  find  symbol  desv	29	None	add
259	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  1.0;  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts    *    1.0;    var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  1.0;	  	compilable	  [FE]  AssertionError  	99	1	add
260	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  1.0;  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  1.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  1.0;  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts    *    1.0;    var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  1.0;	  	compilable	  [FE]  AssertionError  	99	1	add
261	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  1.0;  var  =  (accum  -  (dev  *  accum2  /  sumWtes))  /  sumWts  *  1.0;  [CE]  cannot  find  symbol  sumWtes  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  1.0;  var  =  (accum  -  (dev  *  accum2  /  sumWtes))  /  sumWts  *  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts    *    1.0;    var  =  (accum  -  (dev  *  accum2  /  sumWtes))  /  sumWts  *  1.0;	  	non-compiled	[CE]  cannot  find  symbol  sumWtes	99	None	add
262	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  1.0;  var  =  (accum  -  (dev  *  Accum2  /  sumWts))  /  sumWts  *  1.0;  [CE]  cannot  find  symbol  Accum2  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  1.0;  var  =  (accum  -  (dev  *  Accum2  /  sumWts))  /  sumWts  *  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts    *    1.0;    var  =  (accum  -  (dev  *  Accum2  /  sumWts))  /  sumWts  *  1.0;	  	non-compiled	[CE]  cannot  find  symbol  Accum2	99	None	add
263	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))/  dev  /(sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (dev  *  accum2  /  sumWts))/  dev  /(sumWts  -  1.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    dev    /(sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	30	3	replace
264	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))/  dev  /(sumWts  -  1.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))/  dev  /(sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (dev  *  accum2  /  sumWts))/  dev  /(sumWts  -  1.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    dev    /(sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	30	3	replace
265	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/  dev  /(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  accum2  /  sumWts))/  dev  /(sumWts  *  1.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    dev    /(sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	30	3	replace
266	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/  dev  /(sumWts  *  1.0);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/  dev  /(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  sumWts))/  dev  /(sumWts  *  1.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    dev    /(sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	30	3	replace
267	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))/  dev  /(sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  accum2  /  mean))/  dev  /(sumWts  -  1.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    dev    /(sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	30	3	replace
268	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))/  dev  /(sumWts  -  1.0);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))/  dev  /(sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  mean))/  dev  /(sumWts  -  1.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    dev    /(sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	30	3	replace
269	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  totalWts))/  dev  /(sumWts  *  1.0);  [CE]  cannot  find  symbol  totalWts  [FE]          AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  totalWts))/  dev  /(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  totalWts))/  dev  /(sumWts  *  1.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    dev    /(sumWts    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  totalWts	30	None	replace
270	[BUG]  [BUGGY]  var  =  (accum  -  (sumWts  *  accum2  /  values))/  sumWts;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (sumWts  *  accum2  /  values))/  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (sumWts  *  accum2  /  values))/  sumWts;	  var    =    (accum    -    (values    *    accum2    /    sumWts))    /    sumWts;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	89	None	replace
271	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (sumWts  *  accum2  /  values.length))/  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (sumWts  *  accum2  /  values.length))/  sumWts;	  var    =    (accum    -    (values    *    accum2    /    sumWts))    /    sumWts;    	compilable	  [FE]  AssertionError  	89	3	replace
272	[BUG]  [BUGGY]  var  =  (accum  -  (sumWts  *  accum2  /  values.length))/  sumWts;  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (sumWts  *  accum2  /  values.length))/  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (sumWts  *  accum2  /  values.length))/  sumWts;	  var    =    (accum    -    (values    *    accum2    /    sumWts))    /    sumWts;    	compilable	  [FE]  AssertionError  	89	3	replace
273	[BUG]  [BUGGY]  double  accum2  =  Math.abs(sumWts  /  1.0);  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                        AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  double  accum2  =  Math.abs(sumWts  /  1.0);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	double  accum2  =  Math.abs(sumWts  /  1.0);	  double    accum2    =    Math.abs(sumWts    -    1.0);    	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	54	None	replace
274	[BUG]  [BUGGY]  double  accum2  =  Math.abs(sumWts  -  1.0)/  dev;  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                          AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  double  accum2  =  Math.abs(sumWts  -  1.0)/  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	double  accum2  =  Math.abs(sumWts  -  1.0)/  dev;	  double    accum2    =    Math.abs(sumWts    -    1.0);    	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	54	None	replace
275	[BUG]  [BUGGY]  double  accum2  =  Math.abs(sumWts  -  1.0)/  sumWts;  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  double  accum2  =  Math.abs(sumWts  -  1.0)/  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	double  accum2  =  Math.abs(sumWts  -  1.0)/  sumWts;	  double    accum2    =    Math.abs(sumWts    -    1.0);    	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	54	None	replace
276	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var    =    (accum    -    (accum2    *    accum2    /    mean))    /(sumWts    *    1.0);    var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  1.0);	  	compilable	  [FE]  AssertionError  	76	1	add
277	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  1.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    mean))    /(sumWts    *    1.0);    var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  1.0);	  	compilable	  [FE]  AssertionError  	76	1	add
278	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2)  /  mean))  /(sumWts  *  1.0);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2)  /  mean))  /(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    mean))    /(sumWts    *    1.0);    var  =  (accum  -  (accum2  *  accum2)  /  mean))  /(sumWts  *  1.0);	  	non-compiled	[CE]  ';'  expected	76	None	add
279	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  1.0;  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    mean))    /(sumWts    *    1.0);    var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  1.0;	  	non-compiled	[CE]  ')'  expected	76	None	add
280	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  dev))/(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (dev  *  accum2  /  dev))/(sumWts  *  2.0);	  var    =    (accum    -    (accum2    *    accum2    /    dev))    /(sumWts    *    2.0);    	compilable	  [FE]  AssertionError  	40	3	replace
281	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  dev))/(sumWts  *  2.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  dev))/(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (dev  *  accum2  /  dev))/(sumWts  *  2.0);	  var    =    (accum    -    (accum2    *    accum2    /    dev))    /(sumWts    *    2.0);    	compilable	  [FE]  AssertionError  	40	3	replace
282	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum2  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum2  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum    +=    dev    *    (dev    *    sumWts);    accum2    +=    dev    *    sumWts;    	compilable	  [FE]  AssertionError  	62	2	replace
283	[BUG]  [BUGGY]  accum2  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum2  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum2  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum    +=    dev    *    (dev    *    sumWts);    accum2    +=    dev    *    sumWts;    	compilable	  [FE]  AssertionError  	62	2	replace
284	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))/(sumWts  /  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  accum2  /  mean))/(sumWts  /  2.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /(sumWts    /    2.0);    	compilable	  [FE]  AssertionError  	155	3	replace
285	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))/(sumWts  /  2.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))/(sumWts  /  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  mean))/(sumWts  /  2.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /(sumWts    /    2.0);    	compilable	  [FE]  AssertionError  	155	3	replace
286	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  dev))/(sumWts  /  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  accum2  /  dev))/(sumWts  /  2.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /(sumWts    /    2.0);    	compilable	  [FE]  AssertionError  	155	3	replace
287	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  dev))/(sumWts  /  2.0);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  dev))/(sumWts  /  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  dev))/(sumWts  /  2.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /(sumWts    /    2.0);    	compilable	  [FE]  AssertionError  	155	3	replace
288	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  mean;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  mean;	  accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    amount;    	compilable	  [FE]  AssertionError  	50	2	replace
289	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  mean;  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  mean;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  mean;	  accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    amount;    	compilable	  [FE]  AssertionError  	50	2	replace
290	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  dev  /  sumWts))/  sumWts  *  2.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (dev  *  dev  /  sumWts))/  sumWts  *  2.0;	  var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts    *    2.0;    	compilable	  [FE]  AssertionError  	93	3	replace
291	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  dev  /  sumWts))/  sumWts  *  2.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  dev  /  sumWts))/  sumWts  *  2.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (dev  *  dev  /  sumWts))/  sumWts  *  2.0;	  var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts    *    2.0;    	compilable	  [FE]  AssertionError  	93	3	replace
292	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/  dev  *  2.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  accum2  /  sumWts))/  dev  *  2.0;	  var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts    *    2.0;    	compilable	  [FE]  AssertionError  	93	2	replace
293	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/  dev  *  2.0;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/  dev  *  2.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  sumWts))/  dev  *  2.0;	  var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts    *    2.0;    	compilable	  [FE]  AssertionError  	93	2	replace
294	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  sumWts  *  2.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (mean  *  accum2  /  sumWts))/  sumWts  *  2.0;	  var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts    *    2.0;    	compilable	  [FE]  AssertionError  	93	3	replace
295	[BUG]  [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  sumWts  *  2.0;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  sumWts  *  2.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (mean  *  accum2  /  sumWts))/  sumWts  *  2.0;	  var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts    *    2.0;    	compilable	  [FE]  AssertionError  	93	3	replace
296	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  dev))  /  (sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (dev  *  dev))  /  (sumWts  -  1.0);	  var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	56	3	replace
297	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  dev))  /  (sumWts  -  1.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  dev))  /  (sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (dev  *  dev))  /  (sumWts  -  1.0);	  var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	56	3	replace
298	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  dev  /  sumWts))  /  (sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (dev  *  dev  /  sumWts))  /  (sumWts  -  1.0);	  var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	56	3	replace
299	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  dev  /  sumWts))  /  (sumWts  -  1.0);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  dev  /  sumWts))  /  (sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (dev  *  dev  /  sumWts))  /  (sumWts  -  1.0);	  var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	56	3	replace
300	[BUG]  [BUGGY]  var  =  (accum  -  (sumWts  *  accum2  /  values))/(sumWts  *  1.0);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]          AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (sumWts  *  accum2  /  values))/(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (sumWts  *  accum2  /  values))/(sumWts  *  1.0);	  var    =    (accum    -    (values    *    accum2    /    sumWts))    /(sumWts    *    1.0);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	101	None	replace
301	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  totalWts;  [CE]  cannot  find  symbol  totalWts  [FE]                      AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  totalWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  totalWts;	  accum    +=    dev    *    (dev    *    sumWts);    accum2    +=    dev    *    totalWts;    	non-compiled	[CE]  cannot  find  symbol  totalWts	111	None	replace
302	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var        =        (accum        -        (dev        *        accum2        /        sumWts))/        (sumWts        -        1.0);        var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);	  	compilable	  [FE]  AssertionError  	55	1	add
303	[BUG]  [BUGGY]  var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var        =        (accum        -        (dev        *        accum2        /        sumWts))/        (sumWts        -        1.0);        var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);	  	compilable	  [FE]  AssertionError  	55	1	add
304	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var        =        (accum        -        (dev        *        accum2        /        sumWts))/        (sumWts        -        1.0);        var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);	  	compilable	  [FE]  AssertionError  	55	1	add
305	[BUG]  [BUGGY]  var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var        =        (accum        -        (dev        *        accum2        /        sumWts))/        (sumWts        -        1.0);        var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);	  	compilable	  [FE]  AssertionError  	55	1	add
306	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var        =        (accum        -        (accum2        *        accum2        /        sumWts))/(sumWts        *        2.0);        var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);	  	compilable	  [FE]  AssertionError  	35	1	add
307	[BUG]  [BUGGY]  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var        =        (accum        -        (accum2        *        accum2        /        sumWts))/(sumWts        *        2.0);        var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);	  	compilable	  [FE]  AssertionError  	35	1	add
308	[BUG]  [BUGGY]  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var        =        (accum        -        (accum2        *        accum2        /        sumWts))/(sumWts        *        2.0);        var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0	  	non-compiled	[CE]  ')'  expected	35	None	add
309	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var        =        (accum        -        (mean        *        accum2        /        sumWts))/        (sumWts        -        1.0);        var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);	  	compilable	  [FE]  AssertionError  	26	1	add
310	[BUG]  [BUGGY]  var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var        =        (accum        -        (mean        *        accum2        /        sumWts))/        (sumWts        -        1.0);        var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);	  	compilable	  [FE]  AssertionError  	26	1	add
311	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var        =        (accum        -        (mean        *        accum2        /        sumWts))/        (sumWts        -        1.0);        var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);	  	compilable	  [FE]  AssertionError  	26	1	add
312	[BUG]  [BUGGY]  var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var        =        (accum        -        (mean        *        accum2        /        sumWts))/        (sumWts        -        1.0);        var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);	  	compilable	  [FE]  AssertionError  	26	1	add
313	[BUG]  [BUGGY]  var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var        =        (accum        -        (mean        *        accum2        /        sumWts))/        (sumWts        -        1.0);        var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0	  	non-compiled	[CE]  ')'  expected	26	None	add
314	[BUG]  [BUGGY]  var  =  (accum  -  (values[accum2  *  accum2  /  mean))/(sumWts  *  1.0);  [CE]  ']'  expected  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values[accum2  *  accum2  /  mean))/(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[accum2  *  accum2  /  mean))/(sumWts  *  1.0);	  var    =    (accum    -    (values[accum2    *    accum2    /    sumWts))    /(sumWts    *    1.0);    	non-compiled	[CE]  ']'  expected	103	None	replace
315	[BUG]  [BUGGY]  var  =  (accum  -  (values[accum2  *  accum2  /  dev))/(sumWts  *  1.0);  [CE]  ']'  expected  [FE]                AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values[accum2  *  accum2  /  dev))/(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[accum2  *  accum2  /  dev))/(sumWts  *  1.0);	  var    =    (accum    -    (values[accum2    *    accum2    /    sumWts))    /(sumWts    *    1.0);    	non-compiled	[CE]  ']'  expected	103	None	replace
316	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	58	3	add
317	[BUG]  [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	58	3	add
318	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	58	3	add
319	[BUG]  [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum2  +=  dev  *  sumWts;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	58	3	add
320	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *(dev  *  dev);  accum2  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *(dev  *  dev);  accum2  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	58	3	add
321	[BUG]  [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *(dev  *  dev);  accum2  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *(dev  *  dev);  accum2  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *(dev  *  dev);  accum2  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	58	3	add
322	[BUG]  [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum2  +=  dev  *  totalWts;  [CE]  cannot  find  symbol  totalWts  [FE]          AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum2  +=  dev  *  totalWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum2  +=  dev  *  totalWts;	  	non-compiled	[CE]  cannot  find  symbol  totalWts	58	None	add
323	[BUG]  [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum2  +=  dev  *  [CE]  unexpected  type  [FE]            AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum2  +=  dev  *  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum2  +=  dev  *	  	non-compiled	[CE]  unexpected  type	58	None	add
324	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  0,  sumWts  -  1.0;  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  0,  sumWts  -  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  0,  sumWts  -  1.0;	  var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var    =    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	non-compiled	[CE]  ';'  expected	28	None	replace
325	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  *  accum2  /  sumWts)/  (sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  *  accum2  /  sumWts)/  (sumWts  -  1.0);	  var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var    =    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	28	3	replace
326	[BUG]  [BUGGY]  var  =  (accum  *  accum2  /  sumWts)/  (sumWts  -  1.0);  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  *  accum2  /  sumWts)/  (sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  *  accum2  /  sumWts)/  (sumWts  -  1.0);	  var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var    =    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	28	3	replace
327	[BUG]  [BUGGY]  double  accum2  =  Math.abs(sumWts  *  2.0);  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  double  accum2  =  Math.abs(sumWts  *  2.0);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	double  accum2  =  Math.abs(sumWts  *  2.0);	  double    accum2    =    Math.abs(sumWts    /    2.0);    	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	121	None	replace
328	[BUG]  [BUGGY]  double  accum2  =  Math.abs(sumWts  /  2.0)/  2.0;  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                    AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  double  accum2  =  Math.abs(sumWts  /  2.0)/  2.0;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	double  accum2  =  Math.abs(sumWts  /  2.0)/  2.0;	  double    accum2    =    Math.abs(sumWts    /    2.0);    	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	121	None	replace
329	[BUG]  [BUGGY]  double  accum2  =  Math.abs(sumWts  /  2.0f);  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                      AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  double  accum2  =  Math.abs(sumWts  /  2.0f);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	double  accum2  =  Math.abs(sumWts  /  2.0f);	  double    accum2    =    Math.abs(sumWts    /    2.0);    	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	121	None	replace
330	[BUG]  [BUGGY]  double  accum2  =  Math.abs(dev  /  sumWts);  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                    AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  double  accum2  =  Math.abs(dev  /  sumWts);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	double  accum2  =  Math.abs(dev  /  sumWts);	  double    accum2    =    Math.abs(sumWts    /    dev);    	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	52	None	replace
331	[BUG]  [BUGGY]  double  accum2  =  Math.abs(dev  *  sumWts);  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                      AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  double  accum2  =  Math.abs(dev  *  sumWts);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	double  accum2  =  Math.abs(dev  *  sumWts);	  double    accum2    =    Math.abs(sumWts    /    dev);    	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	52	None	replace
332	[BUG]  [BUGGY]  double  accum2  =  Math.abs(sumWts  *  dev);  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                        AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  double  accum2  =  Math.abs(sumWts  *  dev);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	double  accum2  =  Math.abs(sumWts  *  dev);	  double    accum2    =    Math.abs(sumWts    /    dev);    	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	52	None	replace
333	[BUG]  [BUGGY]  double  accum2  =  Math.abs(dev  /  dev);  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                          AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  double  accum2  =  Math.abs(dev  /  dev);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	double  accum2  =  Math.abs(dev  /  dev);	  double    accum2    =    Math.abs(sumWts    /    dev);    	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	52	None	replace
334	[BUG]  [BUGGY]  var  =  (accum  -  (accum1  *  accum2  /  sumWts))  /(sumWts  *  1.0);  [CE]  cannot  find  symbol  accum1  [FE]        AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum1  *  accum2  /  sumWts))  /(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum1  *  accum2  /  sumWts))  /(sumWts  *  1.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var    =    (accum    -    (accum1    *    accum2    /    sumWts))/(sumWts    *    1.0);    	non-compiled	[CE]  cannot  find  symbol  accum1	96	None	replace
335	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  /=  dev  *  accum2;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum  /=  dev  *  accum2;	  accum    /=    accum2    *    dev;    	compilable	  [FE]  AssertionError  	88	2	replace
336	[BUG]  [BUGGY]  accum  /=  dev  *  accum2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  /=  dev  *  accum2;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  /=  dev  *  accum2;	  accum    /=    accum2    *    dev;    	compilable	  [FE]  AssertionError  	88	2	replace
337	[BUG]  [BUGGY]  accum  /=  weights[i]  *  dev;  [CE]  cannot  find  symbol  i  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  /=  weights[i]  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  /=  weights[i]  *  dev;	  accum    /=    accum2    *    dev;    	non-compiled	[CE]  cannot  find  symbol  i	88	None	replace
338	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum2  /=  dev  *  accum2;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum2  /=  dev  *  accum2;	  accum    /=    accum2    *    dev;    	compilable	  [FE]  AssertionError  	88	2	replace
339	[BUG]  [BUGGY]  accum2  /=  dev  *  accum2;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum2  /=  dev  *  accum2;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum2  /=  dev  *  accum2;	  accum    /=    accum2    *    dev;    	compilable	  [FE]  AssertionError  	88	2	replace
340	[BUG]  [BUGGY]  accum2  +=  dev  *  weights[i]  *  weights[i];  [CE]  cannot  find  symbol  i  [FE]                  AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum2  +=  dev  *  weights[i]  *  weights[i];  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum2  +=  dev  *  weights[i]  *  weights[i];	  Accum    +=    dev    *    weights[i]    *    dev;    accum2    +=    dev    *    weights[i]    *    weights[i];    	non-compiled	[CE]  cannot  find  symbol  i	134	None	replace
341	[BUG]  [BUGGY]  accum2  +=  weights[i]  *  weights[i];  [CE]  cannot  find  symbol  i  [FE]                    AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum2  +=  weights[i]  *  weights[i];  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum2  +=  weights[i]  *  weights[i];	  accum    +=    weights[i]    *    dev;    accum2    +=    weights[i]    *    weights[i];    	non-compiled	[CE]  cannot  find  symbol  i	48	None	replace
342	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    sumWts;    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;	  	compilable	  [FE]  AssertionError  	4	1	add
343	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    sumWts;    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;	  	compilable	  [FE]  AssertionError  	4	1	add
344	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  amountWts;  [CE]  cannot  find  symbol  amountWts  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  amountWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    sumWts;    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  amountWts;	  	non-compiled	[CE]  cannot  find  symbol  amountWts	4	None	add
345	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  totalWts;  [CE]  cannot  find  symbol  totalWts  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  totalWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    sumWts;    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  totalWts;	  	non-compiled	[CE]  cannot  find  symbol  totalWts	4	None	add
346	[BUG]  [BUGGY]  var  =  (accum  -  (sumWts[i]  *  accum2  /  mean))/  sumWts;  [CE]  cannot  find  symbol  i  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (sumWts[i]  *  accum2  /  mean))/  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (sumWts[i]  *  accum2  /  mean))/  sumWts;	  var    =    (accum    -    (sumWts[i]    *    accum2    /    sumWts))    /    sumWts;    	non-compiled	[CE]  cannot  find  symbol  i	156	None	replace
347	[BUG]  [BUGGY]  var  =  (accum  -  (sumWts[i]  *  mean  /  sumWts))/  sumWts;  [CE]  cannot  find  symbol  i  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (sumWts[i]  *  mean  /  sumWts))/  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (sumWts[i]  *  mean  /  sumWts))/  sumWts;	  var    =    (accum    -    (sumWts[i]    *    accum2    /    sumWts))    /    sumWts;    	non-compiled	[CE]  cannot  find  symbol  i	156	None	replace
348	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  dev))/(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (dev  *  accum2  /  dev))/(sumWts  *  1.0);	  var    =    (accum    -    (accum2    *    accum2    /    dev))    /(sumWts    *    1.0);    	compilable	  [FE]  AssertionError  	79	3	replace
349	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  dev))/(sumWts  *  1.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  dev))/(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (dev  *  accum2  /  dev))/(sumWts  *  1.0);	  var    =    (accum    -    (accum2    *    accum2    /    dev))    /(sumWts    *    1.0);    	compilable	  [FE]  AssertionError  	79	3	replace
350	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  dev;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (mean  *  accum2  /  sumWts))/  dev;	  var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    dev;    	compilable	  [FE]  AssertionError  	129	3	replace
351	[BUG]  [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  dev;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (mean  *  accum2  /  sumWts))/  dev;	  var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    dev;    	compilable	  [FE]  AssertionError  	129	3	replace
352	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))/  mean;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (dev  *  accum2  /  sumWts))/  mean;	  var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    dev;    	compilable	  [FE]  AssertionError  	129	3	replace
353	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))/  mean;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))/  mean;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (dev  *  accum2  /  sumWts))/  mean;	  var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    dev;    	compilable	  [FE]  AssertionError  	129	3	replace
354	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  dev  /  sumWts))/  dev;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (dev  *  dev  /  sumWts))/  dev;	  var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    dev;    	compilable	  [FE]  AssertionError  	129	3	replace
355	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  dev  /  sumWts))/  dev;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  dev  /  sumWts))/  dev;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (dev  *  dev  /  sumWts))/  dev;	  var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    dev;    	compilable	  [FE]  AssertionError  	129	3	replace
356	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  2.0;  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  2.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts    *    2.0;    var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  2.0;	  	compilable	  [FE]  AssertionError  	92	1	add
357	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  2.0;  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  2.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  2.0;  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  2.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts    *    2.0;    var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  2.0;	  	compilable	  [FE]  AssertionError  	92	1	add
358	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  2.0;  var  =  (accum  -  (dev  *  accum2  /  sumWtes))  /  sumWts  *  2.0;  [CE]  cannot  find  symbol  sumWtes  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  2.0;  var  =  (accum  -  (dev  *  accum2  /  sumWtes))  /  sumWts  *  2.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts    *    2.0;    var  =  (accum  -  (dev  *  accum2  /  sumWtes))  /  sumWts  *  2.0;	  	non-compiled	[CE]  cannot  find  symbol  sumWtes	92	None	add
359	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  2.0;  var  =  (accum  -  (dev  *  Accum2  /  sumWts))  /  sumWts  *  2.0;  [CE]  cannot  find  symbol  Accum2  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  2.0;  var  =  (accum  -  (dev  *  Accum2  /  sumWts))  /  sumWts  *  2.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts    *    2.0;    var  =  (accum  -  (dev  *  Accum2  /  sumWts))  /  sumWts  *  2.0;	  	non-compiled	[CE]  cannot  find  symbol  Accum2	92	None	add
360	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  /  dev);  accum2  +=  dev  *  dev;  accum  +=  dev  *  (dev  /  dev);  accum2  +=  dev  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum    +=    dev    *    (dev    /    dev);    accum2    +=    dev    *    dev;    accum  +=  dev  *  (dev  /  dev);  accum2  +=  dev  *  dev;	  	compilable	  [FE]  AssertionError  	158	3	add
361	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  /  dev);  accum2  +=  dev  *  dev;  accum  +=  dev  *  (dev  /  dev);  accum2  +=  dev  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  /  dev);  accum2  +=  dev  *  dev;  accum  +=  dev  *  (dev  /  dev);  accum2  +=  dev  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum    +=    dev    *    (dev    /    dev);    accum2    +=    dev    *    dev;    accum  +=  dev  *  (dev  /  dev);  accum2  +=  dev  *  dev;	  	compilable	  [FE]  AssertionError  	158	3	add
362	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  /  dev);  accum2  +=  dev  *  dev;  accum  +=  dev  *  (dev  /  dev);  accum2  +=  dev  *  DEV;  [CE]  cannot  find  symbol  DEV  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  /  dev);  accum2  +=  dev  *  dev;  accum  +=  dev  *  (dev  /  dev);  accum2  +=  dev  *  DEV;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum    +=    dev    *    (dev    /    dev);    accum2    +=    dev    *    dev;    accum  +=  dev  *  (dev  /  dev);  accum2  +=  dev  *  DEV;	  	non-compiled	[CE]  cannot  find  symbol  DEV	158	None	add
363	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  /  dev);  accum2  +=  dev  *  dev;  Accum  +=  dev  *  (dev  /  dev);  accum2  +=  dev  *  dev;  [CE]  cannot  find  symbol  Accum  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  /  dev);  accum2  +=  dev  *  dev;  Accum  +=  dev  *  (dev  /  dev);  accum2  +=  dev  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum    +=    dev    *    (dev    /    dev);    accum2    +=    dev    *    dev;    Accum  +=  dev  *  (dev  /  dev);  accum2  +=  dev  *  dev;	  	non-compiled	[CE]  cannot  find  symbol  Accum	158	None	add
364	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    accum2    *    dev;    accum  =  accum2  *  dev;  accum  +=  accum2  *  dev;  accum  =  accum2  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	                accum        +=        accum2        *        dev;        accum    =    accum2    *    dev;    accum  +=  accum2  *  dev;  accum  =  accum2  *  dev;	  	compilable	  [FE]  AssertionError  	116	3	add
365	[BUG]  [BUGGY]          accum    +=    accum2    *    dev;    accum  =  accum2  *  dev;  accum  +=  accum2  *  dev;  accum  =  accum2  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    accum2    *    dev;    accum  =  accum2  *  dev;  accum  +=  accum2  *  dev;  accum  =  accum2  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        accum2        *        dev;        accum    =    accum2    *    dev;    accum  +=  accum2  *  dev;  accum  =  accum2  *  dev;	  	compilable	  [FE]  AssertionError  	116	3	add
366	[BUG]  [BUGGY]          accum    +=    accum2    *    dev;    accum  =  accum2  *  dev;  accum  +=  accum2  *  DEV;  accum  =  accum2  *  dev;  [CE]  cannot  find  symbol  DEV  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    accum2    *    dev;    accum  =  accum2  *  dev;  accum  +=  accum2  *  DEV;  accum  =  accum2  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        accum2        *        dev;        accum    =    accum2    *    dev;    accum  +=  accum2  *  DEV;  accum  =  accum2  *  dev;	  	non-compiled	[CE]  cannot  find  symbol  DEV	116	None	add
367	[BUG]  [BUGGY]          accum    +=    accum2    *    dev;    accum  =  accum2  *  dev;  accum  +=  accum2  *  dev;  accum  =  accum2  *  DEV;  [CE]  cannot  find  symbol  DEV  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    accum2    *    dev;    accum  =  accum2  *  dev;  accum  +=  accum2  *  dev;  accum  =  accum2  *  DEV;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        accum2        *        dev;        accum    =    accum2    *    dev;    accum  +=  accum2  *  dev;  accum  =  accum2  *  DEV;	  	non-compiled	[CE]  cannot  find  symbol  DEV	116	None	add
368	[BUG]  [BUGGY]          accum    +=    accum2    *    dev;    accum  =  accum2  *  dev;  Accum  +=  accum2  *  dev;  accum  =  accum2  *  dev;  [CE]  cannot  find  symbol  Accum  [FE]          AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    accum2    *    dev;    accum  =  accum2  *  dev;  Accum  +=  accum2  *  dev;  accum  =  accum2  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        accum2        *        dev;        accum    =    accum2    *    dev;    Accum  +=  accum2  *  dev;  accum  =  accum2  *  dev;	  	non-compiled	[CE]  cannot  find  symbol  Accum	116	None	add
369	[BUG]  [BUGGY]  accum  +=  weights[i]  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  [CE]  cannot  find  symbol  i  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  weights[i]  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  weights[i]  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;	  accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    	non-compiled	[CE]  cannot  find  symbol  i	20	None	replace
370	[BUG]  [BUGGY]  accum  +=  weights[i]  *  (dev  *  sumWts);  [CE]  cannot  find  symbol  i  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  weights[i]  *  (dev  *  sumWts);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  weights[i]  *  (dev  *  sumWts);	  accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    	non-compiled	[CE]  cannot  find  symbol  i	20	None	replace
371	[BUG]  [BUGGY]  accum  +=  weights[i]  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  [CE]  cannot  find  symbol  i  [FE]                AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  weights[i]  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  weights[i]  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;	  accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    	non-compiled	[CE]  cannot  find  symbol  i	20	None	replace
372	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	152	3	add
373	[BUG]  [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	152	3	add
374	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  dev;	  	compilable	  [FE]  AssertionError  	152	3	add
375	[BUG]  [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  dev;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  dev;	  	compilable	  [FE]  AssertionError  	152	3	add
376	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	152	3	add
377	[BUG]  [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	152	3	add
378	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum2  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum2  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	152	3	add
379	[BUG]  [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum2  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum2  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum2  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	152	3	add
380	[BUG]  [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  dese;  accum2  +=  dev  *  sumWts;  [CE]  cannot  find  symbol  dese  [FE]            AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  dese;  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  dese;  accum2  +=  dev  *  sumWts;	  	non-compiled	[CE]  cannot  find  symbol  dese	152	None	add
381	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    accum2    *    dev;    accum  +=  accum2  *  dev;  accum  +=  accum2  *  dev;  accum  +=  accum2  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	                accum        +=        accum2        *        dev;        accum    +=    accum2    *    dev;    accum  +=  accum2  *  dev;  accum  +=  accum2  *  dev;	  	compilable	  [FE]  AssertionError  	21	1	add
382	[BUG]  [BUGGY]          accum    +=    accum2    *    dev;    accum  +=  accum2  *  dev;  accum  +=  accum2  *  dev;  accum  +=  accum2  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    accum2    *    dev;    accum  +=  accum2  *  dev;  accum  +=  accum2  *  dev;  accum  +=  accum2  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        accum2        *        dev;        accum    +=    accum2    *    dev;    accum  +=  accum2  *  dev;  accum  +=  accum2  *  dev;	  	compilable	  [FE]  AssertionError  	21	1	add
383	[BUG]  [BUGGY]          accum    +=    accum2    *    dev;    accum  +=  accum2  *  dev;  accum  +=  accum2  *  DEV;  accum  +=  accum2  *  dev;  [CE]  cannot  find  symbol  DEV  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    accum2    *    dev;    accum  +=  accum2  *  dev;  accum  +=  accum2  *  DEV;  accum  +=  accum2  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        accum2        *        dev;        accum    +=    accum2    *    dev;    accum  +=  accum2  *  DEV;  accum  +=  accum2  *  dev;	  	non-compiled	[CE]  cannot  find  symbol  DEV	21	None	add
384	[BUG]  [BUGGY]          accum    +=    accum2    *    dev;    accum  +=  accum2  *  dev;  accum  +=  accum2  *  dev;  accum  +=  accum2  *  DEV;  [CE]  cannot  find  symbol  DEV  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    accum2    *    dev;    accum  +=  accum2  *  dev;  accum  +=  accum2  *  dev;  accum  +=  accum2  *  DEV;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        accum2        *        dev;        accum    +=    accum2    *    dev;    accum  +=  accum2  *  dev;  accum  +=  accum2  *  DEV;	  	non-compiled	[CE]  cannot  find  symbol  DEV	21	None	add
385	[BUG]  [BUGGY]          accum    +=    accum2    *    dev;    accum  +=  accum2  *  dev;  Accum  +=  accum2  *  dev;  accum  +=  accum2  *  dev;  [CE]  cannot  find  symbol  Accum  [FE]          AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    accum2    *    dev;    accum  +=  accum2  *  dev;  Accum  +=  accum2  *  dev;  accum  +=  accum2  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        accum2        *        dev;        accum    +=    accum2    *    dev;    Accum  +=  accum2  *  dev;  accum  +=  accum2  *  dev;	  	non-compiled	[CE]  cannot  find  symbol  Accum	21	None	add
386	[BUG]  [BUGGY]  var  =  (accum  -  (sumWts  *  accum2  /  values))/  (sumWts  *  2.0);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                  AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (sumWts  *  accum2  /  values))/  (sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (sumWts  *  accum2  /  values))/  (sumWts  *  2.0);	  var    =    (accum    -    (values    *    accum2    /    sumWts))    /    (sumWts    *    2.0);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	84	None	replace
387	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var        =        (accum        -        (accum2        *        accum2        /        sumWts))/(sumWts        *        1.0);        var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);	  	compilable	  [FE]  AssertionError  	10	1	add
388	[BUG]  [BUGGY]  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var        =        (accum        -        (accum2        *        accum2        /        sumWts))/(sumWts        *        1.0);        var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);	  	compilable	  [FE]  AssertionError  	10	1	add
389	[BUG]  [BUGGY]  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var        =        (accum        -        (accum2        *        accum2        /        sumWts))/(sumWts        *        1.0);        var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0	  	non-compiled	[CE]  ')'  expected	10	None	add
390	[BUG]  [BUGGY]  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum1  *  accum2  /  sumWts))/(sumWts  *  2.0);  [CE]  cannot  find  symbol  accum1  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum1  *  accum2  /  sumWts))/(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var        =        (accum        -        (accum2        *        accum2        /        sumWts))/(sumWts        *        2.0);        var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum1  *  accum2  /  sumWts))/(sumWts  *  2.0);	  	non-compiled	[CE]  cannot  find  symbol  accum1	35	None	add
391	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))/(sumWts  /  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (dev  *  accum2  /  sumWts))/(sumWts  /  2.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /(sumWts    /    2.0);    	compilable	  [FE]  AssertionError  	155	3	replace
392	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))/(sumWts  /  2.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))/(sumWts  /  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (dev  *  accum2  /  sumWts))/(sumWts  /  2.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /(sumWts    /    2.0);    	compilable	  [FE]  AssertionError  	155	3	replace
393	[BUG]  [BUGGY]  var  =  (accum  -  (values[i]  *  accum2  /  sumWts))/(sumWts  /  2.0);  [CE]  cannot  find  symbol  i  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values[i]  *  accum2  /  sumWts))/(sumWts  /  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[i]  *  accum2  /  sumWts))/(sumWts  /  2.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /(sumWts    /    2.0);    	non-compiled	[CE]  cannot  find  symbol  i	155	None	replace
394	[BUG]  [BUGGY]  var  =  (accum  -  (values[accum2  *  accum2  /  sumWts))/(sumWts  /  2.0);  [CE]  ']'  expected  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values[accum2  *  accum2  /  sumWts))/(sumWts  /  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[accum2  *  accum2  /  sumWts))/(sumWts  /  2.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /(sumWts    /    2.0);    	non-compiled	[CE]  ']'  expected	155	None	replace
395	[BUG]  [BUGGY]  var  =  (accum  -  (values.length  *  accum2  /  sumWts))  /(sumWts  -  1.0);  var  =  (accum  -  (values.length  *  accum2  /  totalWts))  /(sumWts  -  1.0);  [CE]  cannot  find  symbol  totalWts  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values.length  *  accum2  /  sumWts))  /(sumWts  -  1.0);  var  =  (accum  -  (values.length  *  accum2  /  totalWts))  /(sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (values.length    *    accum2    /    sumWts))    /(sumWts    -    1.0);    var  =  (accum  -  (values.length  *  accum2  /  totalWts))  /(sumWts  -  1.0);	  	non-compiled	[CE]  cannot  find  symbol  totalWts	146	None	add
396	[BUG]  [BUGGY]  var  =  (accum  -  (values.length  *  accum2  /  sumWts))  /(sumWts  -  1.0);  var  =  (accum  -  (values.length  *  accum2)  /  sumWts))  /(sumWts  -  1.0);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values.length  *  accum2  /  sumWts))  /(sumWts  -  1.0);  var  =  (accum  -  (values.length  *  accum2)  /  sumWts))  /(sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (values.length    *    accum2    /    sumWts))    /(sumWts    -    1.0);    var  =  (accum  -  (values.length  *  accum2)  /  sumWts))  /(sumWts  -  1.0);	  	non-compiled	[CE]  ';'  expected	146	None	add
397	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (dev  *  accum2  /  sumWts))  /(sumWts  *  2.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    	compilable	  [FE]  AssertionError  	36	3	replace
398	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /(sumWts  *  2.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (dev  *  accum2  /  sumWts))  /(sumWts  *  2.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    	compilable	  [FE]  AssertionError  	36	3	replace
399	[BUG]  [BUGGY]  var  =  (accum  -  (base  *  accum2  /  sumWts))  /(sumWts  *  2.0);  [CE]  cannot  find  symbol  base  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (base  *  accum2  /  sumWts))  /(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (base  *  accum2  /  sumWts))  /(sumWts  *  2.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    	non-compiled	[CE]  cannot  find  symbol  base	36	None	replace
400	[BUG]  [BUGGY]  var  =  (accum  -  (met  *  accum2  /  sumWts))  /(sumWts  *  2.0);  [CE]  cannot  find  symbol  met  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (met  *  accum2  /  sumWts))  /(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (met  *  accum2  /  sumWts))  /(sumWts  *  2.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    	non-compiled	[CE]  cannot  find  symbol  met	36	None	replace
401	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /(sumWts  *  1.0);  var  =  (accum  -  (dev  *  accum2  /  totalWts))  /(sumWts  *  1.0);  [CE]  cannot  find  symbol  totalWts  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /(sumWts  *  1.0);  var  =  (accum  -  (dev  *  accum2  /  totalWts))  /(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (dev    *    accum2    /    sumWts))    /(sumWts    *    1.0);    var  =  (accum  -  (dev  *  accum2  /  totalWts))  /(sumWts  *  1.0);	  	non-compiled	[CE]  cannot  find  symbol  totalWts	65	None	add
402	[BUG]  [BUGGY]  accum  +=  dev  *  weights[i]  *  values[i];  [CE]  cannot  find  symbol  i  [FE]                AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  weights[i]  *  values[i];  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  weights[i]  *  values[i];	  accum    +=    dev    *    weights[i]    *    weights[i];    	non-compiled	[CE]  cannot  find  symbol  i	46	None	replace
403	[BUG]  [BUGGY]  accum  +=  dev  *  weights[i]  *  amount;  [CE]  cannot  find  symbol  i  [FE]                  AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  weights[i]  *  amount;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  weights[i]  *  amount;	  accum    +=    dev    *    weights[i]    *    weights[i];    	non-compiled	[CE]  cannot  find  symbol  i	46	None	replace
404	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    sumWts;    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev;	  	compilable	  [FE]  AssertionError  	4	1	add
405	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    sumWts;    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev;	  	compilable	  [FE]  AssertionError  	4	1	add
406	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  mean;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    sumWts;    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  mean;	  	compilable	  [FE]  AssertionError  	4	1	add
407	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  mean;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  mean;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    sumWts;    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  mean;	  	compilable	  [FE]  AssertionError  	4	1	add
408	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  /(sumWts  -  1.0);  var  =  (accum  -  (accum1  *  accum2  /  sumWts))  /  dev  /(sumWts  -  1.0);  [CE]  cannot  find  symbol  accum1  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  /(sumWts  -  1.0);  var  =  (accum  -  (accum1  *  accum2  /  sumWts))  /  dev  /(sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    dev    /(sumWts    -    1.0);    var  =  (accum  -  (accum1  *  accum2  /  sumWts))  /  dev  /(sumWts  -  1.0);	  	non-compiled	[CE]  cannot  find  symbol  accum1	29	None	add
409	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  /(sumWts  -  1.0);  var  =  (accum  -  (accum2  *  accum2  /  totalWts))  /  dev  /(sumWts  -  1.0);  [CE]  cannot  find  symbol  totalWts  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  /(sumWts  -  1.0);  var  =  (accum  -  (accum2  *  accum2  /  totalWts))  /  dev  /(sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    dev    /(sumWts    -    1.0);    var  =  (accum  -  (accum2  *  accum2  /  totalWts))  /  dev  /(sumWts  -  1.0);	  	non-compiled	[CE]  cannot  find  symbol  totalWts	29	None	add
410	[BUG]  [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  totalWts;  [CE]  cannot  find  symbol  totalWts  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  totalWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  totalWts;	  	non-compiled	[CE]  cannot  find  symbol  totalWts	58	None	add
411	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *(dev  *  dev);  accum2  +=  dev  *  (dev  *  dev);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *(dev  *  dev);  accum2  +=  dev  *  (dev  *  dev);	  	compilable	  [FE]  AssertionError  	58	3	add
412	[BUG]  [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *(dev  *  dev);  accum2  +=  dev  *  (dev  *  dev);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *(dev  *  dev);  accum2  +=  dev  *  (dev  *  dev);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *(dev  *  dev);  accum2  +=  dev  *  (dev  *  dev);	  	compilable	  [FE]  AssertionError  	58	3	add
413	[BUG]  [BUGGY]  var  =  (accum  -  (sumWts[i]  *  accum2  /  totalWts))/  values;  [CE]  cannot  find  symbol  i  [FE]                AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (sumWts[i]  *  accum2  /  totalWts))/  values;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (sumWts[i]  *  accum2  /  totalWts))/  values;	  var    =    (accum    -    (values[i]    *    accum2    /    totalWts))    /    sumWts;    	non-compiled	[CE]  cannot  find  symbol  i	140	None	replace
414	[BUG]  [BUGGY]  var  =  (accum  -  (sumWts  *  accum2  /  valueWts))/  values;  [CE]  cannot  find  symbol  valueWts  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (sumWts  *  accum2  /  valueWts))/  values;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (sumWts  *  accum2  /  valueWts))/  values;	  var    =    (accum    -    (values    *    accum2    /    sumWts))    /    sumWts;    	non-compiled	[CE]  cannot  find  symbol  valueWts	89	None	replace
415	[BUG]  [BUGGY]  var  =  (accum  -  (values  *  sumWts  /  accum2))/  sumWts;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values  *  sumWts  /  accum2))/  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values  *  sumWts  /  accum2))/  sumWts;	  var    =    (accum    -    (values    *    accum2    /    sumWts))    /    sumWts;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	89	None	replace
416	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  1.0;  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  totalWts  *  1.0;  [CE]  cannot  find  symbol  totalWts  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  1.0;  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  totalWts  *  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts    *    1.0;    var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  totalWts  *  1.0;	  	non-compiled	[CE]  cannot  find  symbol  totalWts	99	None	add
417	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  1.0;  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  amountWts  *  1.0;  [CE]  cannot  find  symbol  amountWts  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  1.0;  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  amountWts  *  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts    *    1.0;    var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  amountWts  *  1.0;	  	non-compiled	[CE]  cannot  find  symbol  amountWts	99	None	add
418	[BUG]  [BUGGY]  var  =  (accum  -  (sumWts[i]  *  accum2  /  sumWts))/  values;  [CE]  cannot  find  symbol  i  [FE]                  AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (sumWts[i]  *  accum2  /  sumWts))/  values;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (sumWts[i]  *  accum2  /  sumWts))/  values;	  var    =    (accum    -    (values[i]    *    accum2    /    sumWts))    /    totalWts;    	non-compiled	[CE]  cannot  find  symbol  i	141	None	replace
419	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts  *  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts  *  1.0;	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var    =    (accum    -    (accum2    *    accum2    /    sumWts))(sumWts    *    1.0);    	compilable	  [FE]  AssertionError  	12	3	replace
420	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts  *  1.0;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts  *  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts  *  1.0;	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var    =    (accum    -    (accum2    *    accum2    /    sumWts))(sumWts    *    1.0);    	compilable	  [FE]  AssertionError  	12	3	replace
421	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  sumWts))  /  sumWts  *  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (mean  *  accum2  /  sumWts))  /  sumWts  *  1.0;	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var    =    (accum    -    (accum2    *    accum2    /    sumWts))(sumWts    *    1.0);    	compilable	  [FE]  AssertionError  	12	3	replace
422	[BUG]  [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  sumWts))  /  sumWts  *  1.0;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  sumWts))  /  sumWts  *  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (mean  *  accum2  /  sumWts))  /  sumWts  *  1.0;	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var    =    (accum    -    (accum2    *    accum2    /    sumWts))(sumWts    *    1.0);    	compilable	  [FE]  AssertionError  	12	3	replace
423	[BUG]  [BUGGY]  var  =  (accum  -  (m2  *  accum2  /  sumWts))  /  sumWts  *  1.0;  [CE]  cannot  find  symbol  m2  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (m2  *  accum2  /  sumWts))  /  sumWts  *  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (m2  *  accum2  /  sumWts))  /  sumWts  *  1.0;	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var    =    (accum    -    (accum2    *    accum2    /    sumWts))(sumWts    *    1.0);    	non-compiled	[CE]  cannot  find  symbol  m2	12	None	replace
424	[BUG]  [BUGGY]  var  =  (accum  -  (b  *  accum2  /  sumWts))  /  sumWts  *  1.0;  [CE]  cannot  find  symbol  b  [FE]                AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (b  *  accum2  /  sumWts))  /  sumWts  *  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (b  *  accum2  /  sumWts))  /  sumWts  *  1.0;	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var    =    (accum    -    (accum2    *    accum2    /    sumWts))(sumWts    *    1.0);    	non-compiled	[CE]  cannot  find  symbol  b	12	None	replace
425	[BUG]  [BUGGY]  var  =  (isBiasCorrected  -  (accum1  *  accum2  /  sumWts))/  sumWts;  [CE]  cannot  find  symbol  accum1  [FE]                  AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (isBiasCorrected  -  (accum1  *  accum2  /  sumWts))/  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (isBiasCorrected  -  (accum1  *  accum2  /  sumWts))/  sumWts;	  var    =    (accum    -    (accum1    *    accum2    /    sumWts))    /(sumWts    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  accum1	45	None	replace
426	[BUG]  [BUGGY]  accum  /=  dev  *  accum2.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  /=  dev  *  accum2.doubleValue();  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  /=  dev  *  accum2.doubleValue();	  accum    /=    accum2    *    dev;    	non-compiled	[CE]  double  cannot  be  dereferenced	88	None	replace
427	[BUG]  [BUGGY]  accum  /=  amount  *  dev;  [CE]  cannot  find  symbol  amount  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  /=  amount  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  /=  amount  *  dev;	  accum    /=    accum2    *    dev;    	non-compiled	[CE]  cannot  find  symbol  amount	88	None	replace
428	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  accum  -=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum    +=    dev    *    (dev    *    sumWts);    accum2    +=    dev    *    sumWts;    accum  -=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	109	3	add
429	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  accum  -=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  accum  -=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum    +=    dev    *    (dev    *    sumWts);    accum2    +=    dev    *    sumWts;    accum  -=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	109	3	add
430	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  accum  +=  mean  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum    +=    dev    *    (dev    *    sumWts);    accum2    +=    dev    *    sumWts;    accum  +=  mean  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	109	3	add
431	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  accum  +=  mean  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  accum  +=  mean  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum    +=    dev    *    (dev    *    sumWts);    accum2    +=    dev    *    sumWts;    accum  +=  mean  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	109	3	add
432	[BUG]  [BUGGY]  accum  -=  dev  *  accum2;  accum  -=  dev  *  accum2,;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  -=  dev  *  accum2;  accum  -=  dev  *  accum2,;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum    -=    dev    *    accum2;    accum  -=  dev  *  accum2,;	  	non-compiled	[CE]  ';'  expected	143	None	add
433	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  if(incMoment)  {  accum2  +=  weights[0]  *  (dev  *  dev);  accum2  +=  weights[0]  *  dev;  }  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	if(incMoment)  {  accum2  +=  weights[0]  *  (dev  *  dev);  accum2  +=  weights[0]  *  dev;  }	  if(incMoment)    {    accum2    +=    weights[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    dev;    }    	compilable	  [FE]  AssertionError  	125	2	replace
434	[BUG]  [BUGGY]  if(incMoment)  {  accum2  +=  weights[0]  *  (dev  *  dev);  accum2  +=  weights[0]  *  dev;  }  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  if(incMoment)  {  accum2  +=  weights[0]  *  (dev  *  dev);  accum2  +=  weights[0]  *  dev;  }  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	if(incMoment)  {  accum2  +=  weights[0]  *  (dev  *  dev);  accum2  +=  weights[0]  *  dev;  }	  if(incMoment)    {    accum2    +=    weights[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    dev;    }    	compilable	  [FE]  AssertionError  	125	2	replace
435	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  sumWts);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum  +=  dev  *  (dev  *  sumWts);	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum    +=    dev    *    (dev    *    sumWts);    accum2    +=    dev    *    sumWts;    	compilable	  [FE]  AssertionError  	62	2	replace
436	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  sumWts);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  sumWts);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  (dev  *  sumWts);	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum    +=    dev    *    (dev    *    sumWts);    accum2    +=    dev    *    sumWts;    	compilable	  [FE]  AssertionError  	62	2	replace
437	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  if(isBiasCorrected)  {  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  }  else  {  accum2  +=  dev  *  sumWts;  }  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	if(isBiasCorrected)  {  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  }  else  {  accum2  +=  dev  *  sumWts;  }	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum    +=    dev    *    (dev    *    sumWts);    accum2    +=    dev    *    sumWts;    	compilable	  [FE]  AssertionError  	62	2	replace
438	[BUG]  [BUGGY]  if(isBiasCorrected)  {  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  }  else  {  accum2  +=  dev  *  sumWts;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  if(isBiasCorrected)  {  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  }  else  {  accum2  +=  dev  *  sumWts;  }  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	if(isBiasCorrected)  {  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  }  else  {  accum2  +=  dev  *  sumWts;  }	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum    +=    dev    *    (dev    *    sumWts);    accum2    +=    dev    *    sumWts;    	compilable	  [FE]  AssertionError  	62	2	replace
439	[BUG]  [BUGGY]  double  accum2  =  Math.abs(sumWts  /  2.0)+  1.0;  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  double  accum2  =  Math.abs(sumWts  /  2.0)+  1.0;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	double  accum2  =  Math.abs(sumWts  /  2.0)+  1.0;	  double    accum2    =    Math.abs(sumWts    /    2.0);    	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	121	None	replace
440	[BUG]  [BUGGY]  double  accum2  =  Math.abs(sumWts  /  2.0)-  1.0;  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                    AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  double  accum2  =  Math.abs(sumWts  /  2.0)-  1.0;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	double  accum2  =  Math.abs(sumWts  /  2.0)-  1.0;	  double    accum2    =    Math.abs(sumWts    /    2.0);    	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	121	None	replace
441	[BUG]  [BUGGY]  var  =  (accum  -  (values[1  *  accum2  /  sumWts))/(sumWts  -  1.0);  [CE]  ']'  expected  [FE]                AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values[1  *  accum2  /  sumWts))/(sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[1  *  accum2  /  sumWts))/(sumWts  -  1.0);	  var    =    (accum    -    (values[accum2    *    accum2    /    sumWts))    /    (sumWts    -    1.0);    	non-compiled	[CE]  ']'  expected	83	None	replace
442	[BUG]  [BUGGY]  var  =  (accum  -  (weights[i]  *  dev  /  sumWts))/  sumWts;  [CE]  cannot  find  symbol  i  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (weights[i]  *  dev  /  sumWts))/  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (weights[i]  *  dev  /  sumWts))/  sumWts;	  var    =    (accum    -    (weights[i]    *    accum2    /    sumWts))    /    sumWts;    	non-compiled	[CE]  cannot  find  symbol  i	139	None	replace
443	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (sumWts  *  accum2  /  weights.length))/  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (sumWts  *  accum2  /  weights.length))/  sumWts;	  var    =    (accum    -    (weights[i]    *    accum2    /    sumWts))    /    sumWts;    	compilable	  [FE]  AssertionError  	139	3	replace
444	[BUG]  [BUGGY]  var  =  (accum  -  (sumWts  *  accum2  /  weights.length))/  sumWts;  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (sumWts  *  accum2  /  weights.length))/  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (sumWts  *  accum2  /  weights.length))/  sumWts;	  var    =    (accum    -    (weights[i]    *    accum2    /    sumWts))    /    sumWts;    	compilable	  [FE]  AssertionError  	139	3	replace
445	[BUG]  [BUGGY]  accum  +=  dev  *  accum2;  Accum  +=  accum2  *  dev;  [CE]  cannot  find  symbol  Accum  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  accum2;  Accum  +=  accum2  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  accum2;  Accum  +=  accum2  *  dev;	          accum    +=    accum2    *    dev;    Accum    +=    accum2    *    dev;    	non-compiled	[CE]  cannot  find  symbol  Accum	25	None	replace
446	[BUG]  [BUGGY]  accum  +=  weights[i]  *  dev;  accum  =  accum2  *  dev;  [CE]  cannot  find  symbol  i  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  weights[i]  *  dev;  accum  =  accum2  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  weights[i]  *  dev;  accum  =  accum2  *  dev;	          accum    +=    accum2    *    dev;    accum    =    accum2    *    dev;    	non-compiled	[CE]  cannot  find  symbol  i	117	None	replace
447	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  accum2;  accum  =  accum2  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum  +=  dev  *  accum2;  accum  =  accum2  *  dev;	          accum    +=    accum2    *    dev;    accum    =    accum2    *    dev;    	compilable	  [FE]  AssertionError  	117	2	replace
448	[BUG]  [BUGGY]  accum  +=  dev  *  accum2;  accum  =  accum2  *  dev;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  accum2;  accum  =  accum2  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  accum2;  accum  =  accum2  *  dev;	          accum    +=    accum2    *    dev;    accum    =    accum2    *    dev;    	compilable	  [FE]  AssertionError  	117	2	replace
449	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  2.0;  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  totalWts  *  2.0;  [CE]  cannot  find  symbol  totalWts  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  2.0;  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  totalWts  *  2.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts    *    2.0;    var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  totalWts  *  2.0;	  	non-compiled	[CE]  cannot  find  symbol  totalWts	92	None	add
450	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  2.0;  var  =  (accum  -  (dev  *  accum2  /  totalWts))  /  sumWts  *  2.0;  [CE]  cannot  find  symbol  totalWts  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  *  2.0;  var  =  (accum  -  (dev  *  accum2  /  totalWts))  /  sumWts  *  2.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts    *    2.0;    var  =  (accum  -  (dev  *  accum2  /  totalWts))  /  sumWts  *  2.0;	  	non-compiled	[CE]  cannot  find  symbol  totalWts	92	None	add
451	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  mean);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum  +=  dev  *  (dev  *  mean);	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    	compilable	  [FE]  AssertionError  	153	2	replace
452	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  mean);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  mean);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  (dev  *  mean);	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    	compilable	  [FE]  AssertionError  	153	2	replace
453	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  -  1.0;  var  =  (accum  -  (dev  *  accum2  /  totalWts))  /  sumWts  -  1.0;  [CE]  cannot  find  symbol  totalWts  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts  -  1.0;  var  =  (accum  -  (dev  *  accum2  /  totalWts))  /  sumWts  -  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts    -    1.0;    var  =  (accum  -  (dev  *  accum2  /  totalWts))  /  sumWts  -  1.0;	  	non-compiled	[CE]  cannot  find  symbol  totalWts	106	None	add
454	[BUG]  [BUGGY]  var  =  (accum  -  (prev  *  accum2  /  sumWts))  /(sumWts  *  1.0);  [CE]  cannot  find  symbol  prev  [FE]        AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (prev  *  accum2  /  sumWts))  /(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (prev  *  accum2  /  sumWts))  /(sumWts  *  1.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var    =    (accum    -    (accum1    *    accum2    /    sumWts))/(sumWts    *    1.0);    	non-compiled	[CE]  cannot  find  symbol  prev	96	None	replace
455	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  begin);  accum2  +=  dev  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum  +=  dev  *  (dev  *  begin);  accum2  +=  dev  *  dev;	  accum    +=    dev    *    (dev    *    amount);    accum2    +=    dev    *    dev;    	compilable	  [FE]  AssertionError  	118	2	replace
456	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  begin);  accum2  +=  dev  *  dev;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  begin);  accum2  +=  dev  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  (dev  *  begin);  accum2  +=  dev  *  dev;	  accum    +=    dev    *    (dev    *    amount);    accum2    +=    dev    *    dev;    	compilable	  [FE]  AssertionError  	118	2	replace
457	[BUG]  [BUGGY]  accum  +=  weights[i]  *  dev;  accum2  +=  dev  *  weights[i]  *  weights[i];  [CE]  cannot  find  symbol  i  [FE]                AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  weights[i]  *  dev;  accum2  +=  dev  *  weights[i]  *  weights[i];  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  weights[i]  *  dev;  accum2  +=  dev  *  weights[i]  *  weights[i];	  accum    +=    dev    *    weights[i]    *    dev;    accum2    +=    dev    *    weights[i]    *    weights[i];    }    	non-compiled	[CE]  cannot  find  symbol  i	151	None	replace
458	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  mean  /  sumWts))  /(sumWts  -  1.0);  var  =  (accum  -  (accum1  *  mean  /  sumWts))  /(sumWts  -  1.0);  [CE]  cannot  find  symbol  accum1  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  mean  /  sumWts))  /(sumWts  -  1.0);  var  =  (accum  -  (accum1  *  mean  /  sumWts))  /(sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    mean    /    sumWts))    /(sumWts    -    1.0);    var  =  (accum  -  (accum1  *  mean  /  sumWts))  /(sumWts  -  1.0);	  	non-compiled	[CE]  cannot  find  symbol  accum1	43	None	add
459	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  if(isBiasCorrected)  {  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  }  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	if(isBiasCorrected)  {  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  }	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    	compilable	  [FE]  AssertionError  	72	2	replace
460	[BUG]  [BUGGY]  if(isBiasCorrected)  {  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  if(isBiasCorrected)  {  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  }  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	if(isBiasCorrected)  {  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  }	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    	compilable	  [FE]  AssertionError  	72	2	replace
461	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  if(isBiasCorrected)  {  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  }  else  {  accum2  +=  dev  *  dev;  }  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	if(isBiasCorrected)  {  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  }  else  {  accum2  +=  dev  *  dev;  }	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    	compilable	  [FE]  AssertionError  	72	2	replace
462	[BUG]  [BUGGY]  if(isBiasCorrected)  {  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  }  else  {  accum2  +=  dev  *  dev;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  if(isBiasCorrected)  {  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  }  else  {  accum2  +=  dev  *  dev;  }  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	if(isBiasCorrected)  {  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  }  else  {  accum2  +=  dev  *  dev;  }	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    	compilable	  [FE]  AssertionError  	72	2	replace
463	[BUG]  [BUGGY]  var  =  (accum  -  (sumWts[i]  *  dev  /  sumWts))/  sumWts;  [CE]  cannot  find  symbol  i  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (sumWts[i]  *  dev  /  sumWts))/  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (sumWts[i]  *  dev  /  sumWts))/  sumWts;	  var    =    (accum    -    (sumWts[i]    *    accum2    /    sumWts))    /    sumWts;    	non-compiled	[CE]  cannot  find  symbol  i	156	None	replace
464	[BUG]  [BUGGY]  if(isBiasCorrected)  {  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  weights[i];  accum2  +=  dev  *  sumWts;  }  [CE]  cannot  find  symbol  i  [FE]          AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  if(isBiasCorrected)  {  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  weights[i];  accum2  +=  dev  *  sumWts;  }  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	if(isBiasCorrected)  {  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  weights[i];  accum2  +=  dev  *  sumWts;  }	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum    +=    dev    *    (dev    *    weights[i]);    accum2    +=    dev    *    sumWts;    	non-compiled	[CE]  cannot  find  symbol  i	60	None	replace
465	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  (dev  *  weights[i]);  [CE]  cannot  find  symbol  i  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  (dev  *  weights[i]);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  (dev  *  weights[i]);	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum    +=    dev    *    (dev    *    weights[i]);    accum2    +=    dev    *    sumWts;    	non-compiled	[CE]  cannot  find  symbol  i	60	None	replace
466	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  1.0);  var  =  (accum  -  (accum1  *  accum2  /  dev))  /(sumWts  *  1.0);  [CE]  cannot  find  symbol  accum1  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  dev))  /(sumWts  *  1.0);  var  =  (accum  -  (accum1  *  accum2  /  dev))  /(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    dev))    /(sumWts    *    1.0);    var  =  (accum  -  (accum1  *  accum2  /  dev))  /(sumWts  *  1.0);	  	non-compiled	[CE]  cannot  find  symbol  accum1	78	None	add
467	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values.length  *  accum2  /  sumWts))/  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (values.length  *  accum2  /  sumWts))/  sumWts;	  var    =    (accum    -    (m2    *    accum2    /    sumWts))    /    sumWts;    	compilable	  [FE]  AssertionError  	130	3	replace
468	[BUG]  [BUGGY]  var  =  (accum  -  (values.length  *  accum2  /  sumWts))/  sumWts;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values.length  *  accum2  /  sumWts))/  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values.length  *  accum2  /  sumWts))/  sumWts;	  var    =    (accum    -    (m2    *    accum2    /    sumWts))    /    sumWts;    	compilable	  [FE]  AssertionError  	130	3	replace
469	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (sumWts  *  accum2  /  sumWts))/  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (sumWts  *  accum2  /  sumWts))/  sumWts;	  var    =    (accum    -    (m2    *    accum2    /    sumWts))    /    sumWts;    	compilable	  [FE]  AssertionError  	130	3	replace
470	[BUG]  [BUGGY]  var  =  (accum  -  (sumWts  *  accum2  /  sumWts))/  sumWts;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (sumWts  *  accum2  /  sumWts))/  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (sumWts  *  accum2  /  sumWts))/  sumWts;	  var    =    (accum    -    (m2    *    accum2    /    sumWts))    /    sumWts;    	compilable	  [FE]  AssertionError  	130	3	replace
471	[BUG]  [BUGGY]  accum  -=  weights[i]  *  (dev  *  sumWts);  [CE]  cannot  find  symbol  i  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  -=  weights[i]  *  (dev  *  sumWts);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  -=  weights[i]  *  (dev  *  sumWts);	  accum    -=    weights[i]    *    (dev    *    dev);    	non-compiled	[CE]  cannot  find  symbol  i	148	None	replace
472	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  2.0);  var  =  (accum  -  (accum1  *  accum2  /  mean))  /(sumWts  *  2.0);  [CE]  cannot  find  symbol  accum1  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  2.0);  var  =  (accum  -  (accum1  *  accum2  /  mean))  /(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    mean))    /(sumWts    *    2.0);    var  =  (accum  -  (accum1  *  accum2  /  mean))  /(sumWts  *  2.0);	  	non-compiled	[CE]  cannot  find  symbol  accum1	41	None	add
473	[BUG]  [BUGGY]  accum  +=  weights[i]  *  (dev  *  sumWts);  accum2  +=  dev  *  dev;  [CE]  cannot  find  symbol  i  [FE]        AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  weights[i]  *  (dev  *  sumWts);  accum2  +=  dev  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  weights[i]  *  (dev  *  sumWts);  accum2  +=  dev  *  dev;	  accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    dev    *    dev;    	non-compiled	[CE]  cannot  find  symbol  i	49	None	replace
474	[BUG]  [BUGGY]  accum  -=  weights[i]  *  (dev  *  sumWts);  accum2  +=  weights[i]  *  dev;  [CE]  cannot  find  symbol  i  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  -=  weights[i]  *  (dev  *  sumWts);  accum2  +=  weights[i]  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  -=  weights[i]  *  (dev  *  sumWts);  accum2  +=  weights[i]  *  dev;	  accum    -=    weights[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    dev;    	non-compiled	[CE]  cannot  find  symbol  i	31	None	replace
475	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  dev))  /  (sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (mean  *  accum2  /  dev))  /  (sumWts  -  1.0);	  var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var    =    (accum    -    (mean    *    accum2    /    sumWtes))/    (sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	115	1	replace
476	[BUG]  [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  dev))  /  (sumWts  -  1.0);  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  dev))  /  (sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (mean  *  accum2  /  dev))  /  (sumWts  -  1.0);	  var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var    =    (accum    -    (mean    *    accum2    /    sumWtes))/    (sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	115	1	replace
477	[BUG]  [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  totalWts))  /  (sumWts  -  1.0);  [CE]  cannot  find  symbol  totalWts  [FE]          AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  totalWts))  /  (sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (mean  *  accum2  /  totalWts))  /  (sumWts  -  1.0);	  var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var    =    (accum    -    (mean    *    accum2    /    sumWtes))/    (sumWts    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  totalWts	115	None	replace
478	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  dev  /  sumWts))  /  sumWts  -  1.0;  var  =  (accum  -  (dev  *  dev  /  sumWts))  /  amountWts  -  1.0;  [CE]  cannot  find  symbol  amountWts  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  dev  /  sumWts))  /  sumWts  -  1.0;  var  =  (accum  -  (dev  *  dev  /  sumWts))  /  amountWts  -  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (dev    *    dev    /    sumWts))    /    sumWts    -    1.0;    var  =  (accum  -  (dev  *  dev  /  sumWts))  /  amountWts  -  1.0;	  	non-compiled	[CE]  cannot  find  symbol  amountWts	126	None	add
479	[BUG]  [BUGGY]  Acum  +=  dev  *  weights[i]  *  dev;  accum2  +=  dev  *  weights[i]  *  weights[i];  [CE]  cannot  find  symbol  Acum  [FE]                  AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  Acum  +=  dev  *  weights[i]  *  dev;  accum2  +=  dev  *  weights[i]  *  weights[i];  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	Acum  +=  dev  *  weights[i]  *  dev;  accum2  +=  dev  *  weights[i]  *  weights[i];	  Accum    +=    dev    *    weights[i]    *    dev;    accum2    +=    dev    *    weights[i]    *    weights[i];    	non-compiled	[CE]  cannot  find  symbol  Acum	134	None	replace
480	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  1.0);  var  =  (accum  -  (accum1  *  accum2  /  mean))  /(sumWts  *  1.0);  [CE]  cannot  find  symbol  accum1  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  1.0);  var  =  (accum  -  (accum1  *  accum2  /  mean))  /(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    mean))    /(sumWts    *    1.0);    var  =  (accum  -  (accum1  *  accum2  /  mean))  /(sumWts  *  1.0);	  	non-compiled	[CE]  cannot  find  symbol  accum1	76	None	add
481	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  if(isBiasCorrected)  {  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  accum2  +=  dev  *  sumWts;  }  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	if(isBiasCorrected)  {  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  accum2  +=  dev  *  sumWts;  }	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    	compilable	  [FE]  AssertionError  	59	2	replace
482	[BUG]  [BUGGY]  if(isBiasCorrected)  {  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  accum2  +=  dev  *  sumWts;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  if(isBiasCorrected)  {  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  accum2  +=  dev  *  sumWts;  }  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	if(isBiasCorrected)  {  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  accum2  +=  dev  *  sumWts;  }	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    	compilable	  [FE]  AssertionError  	59	2	replace
483	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  amount;  [CE]  cannot  find  symbol  amount  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  amount;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  amount;	  accum    +=    dev    *    (dev    *    sumWts);    accum2    +=    dev    *    dev;    	non-compiled	[CE]  cannot  find  symbol  amount	17	None	replace
484	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  (dev  *  dev);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        dev;        accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  (dev  *  dev);	  	compilable	  [FE]  AssertionError  	71	3	add
485	[BUG]  [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  (dev  *  dev);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  (dev  *  dev);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        dev;        accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    dev;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  (dev  *  dev);	  	compilable	  [FE]  AssertionError  	71	3	add
486	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  dev;  Accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  dev;  [CE]  cannot  find  symbol  Accum  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  dev;  Accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum    +=    dev    *    (dev    *    sumWts);    accum2    +=    dev    *    dev;    Accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  dev;	  	non-compiled	[CE]  cannot  find  symbol  Accum	16	None	add
487	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    accum2    *    dev;    accum  +=  accum2  *  dev;  accum  =  accum2  *  dev;  accum  +=  accum2  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	                accum        +=        accum2        *        dev;        accum    +=    accum2    *    dev;    accum  =  accum2  *  dev;  accum  +=  accum2  *  dev;	  	compilable	  [FE]  AssertionError  	21	3	add
488	[BUG]  [BUGGY]          accum    +=    accum2    *    dev;    accum  +=  accum2  *  dev;  accum  =  accum2  *  dev;  accum  +=  accum2  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    accum2    *    dev;    accum  +=  accum2  *  dev;  accum  =  accum2  *  dev;  accum  +=  accum2  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        accum2        *        dev;        accum    +=    accum2    *    dev;    accum  =  accum2  *  dev;  accum  +=  accum2  *  dev;	  	compilable	  [FE]  AssertionError  	21	3	add
489	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  mean))/(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (dev  *  accum2  /  mean))/(sumWts  *  2.0);	  var    =    (accum    -    (accum2    *    accum2    /    mean))    /(sumWts    *    2.0);    	compilable	  [FE]  AssertionError  	42	3	replace
490	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  mean))/(sumWts  *  2.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  mean))/(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (dev  *  accum2  /  mean))/(sumWts  *  2.0);	  var    =    (accum    -    (accum2    *    accum2    /    mean))    /(sumWts    *    2.0);    	compilable	  [FE]  AssertionError  	42	3	replace
491	[BUG]  [BUGGY]  var  =  (accum  -  (m2  *  accum2  /  mean))/(sumWts  *  2.0);  [CE]  cannot  find  symbol  m2  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (m2  *  accum2  /  mean))/(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (m2  *  accum2  /  mean))/(sumWts  *  2.0);	  var    =    (accum    -    (accum2    *    accum2    /    mean))    /(sumWts    *    2.0);    	non-compiled	[CE]  cannot  find  symbol  m2	42	None	replace
492	[BUG]  [BUGGY]  var  =  (accum  -  (values[1  *  accum2  /  sumWts))/(sumWts  *  2.0);  [CE]  ']'  expected  [FE]          AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values[1  *  accum2  /  sumWts))/(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[1  *  accum2  /  sumWts))/(sumWts  *  2.0);	  var    =    (accum    -    (values[accum2    *    accum2    /    sumWts))    /(sumWts    *    2.0);    	non-compiled	[CE]  ']'  expected	94	None	replace
493	[BUG]  [BUGGY]  var  =  (accum  -  (values[i  *  accum2  /  sumWts))/(sumWts  *  2.0);  [CE]  ']'  expected  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values[i  *  accum2  /  sumWts))/(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[i  *  accum2  /  sumWts))/(sumWts  *  2.0);	  var    =    (accum    -    (values[accum2    *    accum2    /    sumWts))    /(sumWts    *    2.0);    	non-compiled	[CE]  ']'  expected	94	None	replace
494	[BUG]  [BUGGY]  var  =  (accum  -  (values[0  *  accum2  /  sumWts))/(sumWts  *  2.0);  [CE]  ']'  expected  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values[0  *  accum2  /  sumWts))/(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[0  *  accum2  /  sumWts))/(sumWts  *  2.0);	  var    =    (accum    -    (values[accum2    *    accum2    /    sumWts))    /(sumWts    *    2.0);    	non-compiled	[CE]  ']'  expected	94	None	replace
495	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	152	3	add
496	[BUG]  [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	152	3	add
497	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  mean;  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  mean;  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	152	3	add
498	[BUG]  [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  mean;  accum2  +=  dev  *  sumWts;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  mean;  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  mean;  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	152	3	add
499	[BUG]  [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  totalWts;  [CE]  cannot  find  symbol  totalWts  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  totalWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  totalWts;	  	non-compiled	[CE]  cannot  find  symbol  totalWts	152	None	add
500	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  dev  /  totalWts))/  dev;  [CE]  cannot  find  symbol  totalWts  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  dev  /  totalWts))/  dev;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (dev  *  dev  /  totalWts))/  dev;	  var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    dev;    	non-compiled	[CE]  cannot  find  symbol  totalWts	129	None	replace
501	[BUG]  [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  DEV);  accum2  +=  dev  *  sumWts;  [CE]  cannot  find  symbol  DEV  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  DEV);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    sumWts);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  DEV);  accum2  +=  dev  *  sumWts;	  	non-compiled	[CE]  cannot  find  symbol  DEV	61	None	add
502	[BUG]  [BUGGY]  var  =  (accum  -  (values[1  *  accum2  /  sumWts))/(sumWts  *  1.0);  [CE]  ']'  expected  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values[1  *  accum2  /  sumWts))/(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[1  *  accum2  /  sumWts))/(sumWts  *  1.0);	  var    =    (accum    -    (values[accum2    *    accum2    /    sumWts))    /(sumWts    *    1.0);    	non-compiled	[CE]  ']'  expected	103	None	replace
503	[BUG]  [BUGGY]  var  =  (accum  -  (values[0  *  accum2  /  sumWts))/(sumWts  *  1.0);  [CE]  ']'  expected  [FE]                AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values[0  *  accum2  /  sumWts))/(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[0  *  accum2  /  sumWts))/(sumWts  *  1.0);	  var    =    (accum    -    (values[accum2    *    accum2    /    sumWts))    /(sumWts    *    1.0);    	non-compiled	[CE]  ']'  expected	103	None	replace
504	[BUG]  [BUGGY]  var  =  (accum  -  (values[i  *  accum2  /  sumWts))/(sumWts  *  1.0);  [CE]  ']'  expected  [FE]                  AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values[i  *  accum2  /  sumWts))/(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[i  *  accum2  /  sumWts))/(sumWts  *  1.0);	  var    =    (accum    -    (values[accum2    *    accum2    /    sumWts))    /(sumWts    *    1.0);    	non-compiled	[CE]  ']'  expected	103	None	replace
505	[BUG]  [BUGGY]  var  =  (accum  -  (values[5  *  accum2  /  sumWts))/(sumWts  *  1.0);  [CE]  ']'  expected  [FE]                    AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values[5  *  accum2  /  sumWts))/(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[5  *  accum2  /  sumWts))/(sumWts  *  1.0);	  var    =    (accum    -    (values[accum2    *    accum2    /    sumWts))    /(sumWts    *    1.0);    	non-compiled	[CE]  ']'  expected	103	None	replace
506	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  accum2  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum  +=  accum2  *  sumWts;	          accum    +=    accum2    *    dev;    accum    +=    accum2    *    desv;    	compilable	  [FE]  AssertionError  	24	2	replace
507	[BUG]  [BUGGY]  accum  +=  accum2  *  sumWts;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  accum2  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  accum2  *  sumWts;	          accum    +=    accum2    *    dev;    accum    +=    accum2    *    desv;    	compilable	  [FE]  AssertionError  	24	2	replace
508	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  dev  /  sumWts))/(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (dev  *  dev  /  sumWts))/(sumWts  *  1.0);	  var    =    (accum    -    (dev    *    accum2    /    sumWts))    /(sumWts    *    1.0);    	compilable	  [FE]  AssertionError  	66	3	replace
509	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  dev  /  sumWts))/(sumWts  *  1.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  dev  /  sumWts))/(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (dev  *  dev  /  sumWts))/(sumWts  *  1.0);	  var    =    (accum    -    (dev    *    accum2    /    sumWts))    /(sumWts    *    1.0);    	compilable	  [FE]  AssertionError  	66	3	replace
510	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  mean))/(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (dev  *  accum2  /  mean))/(sumWts  *  1.0);	  var    =    (accum    -    (accum2    *    accum2    /    mean))    /(sumWts    *    1.0);    	compilable	  [FE]  AssertionError  	77	3	replace
511	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  mean))/(sumWts  *  1.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  mean))/(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (dev  *  accum2  /  mean))/(sumWts  *  1.0);	  var    =    (accum    -    (accum2    *    accum2    /    mean))    /(sumWts    *    1.0);    	compilable	  [FE]  AssertionError  	77	3	replace
512	[BUG]  [BUGGY]  var  =  (accum  -  (m2  *  accum2  /  mean))/(sumWts  *  1.0);  [CE]  cannot  find  symbol  m2  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (m2  *  accum2  /  mean))/(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (m2  *  accum2  /  mean))/(sumWts  *  1.0);	  var    =    (accum    -    (accum2    *    accum2    /    mean))    /(sumWts    *    1.0);    	non-compiled	[CE]  cannot  find  symbol  m2	77	None	replace
513	[BUG]  [BUGGY]  var  =  (accum  -  (values  *  accum2  /  mean))/(sumWts  *  1.0);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values  *  accum2  /  mean))/(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values  *  accum2  /  mean))/(sumWts  *  1.0);	  var    =    (accum    -    (accum2    *    accum2    /    mean))    /(sumWts    *    1.0);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	77	None	replace
514	[BUG]  [BUGGY]  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum1  *  accum2  /  sumWts))/(sumWts  *  2.0);  [CE]  cannot  find  symbol  accum1  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum1  *  accum2  /  sumWts))/(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var        =        (accum        -        (accum2        *        accum2        /        sumWts))/(sumWts        *        1.0);        var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum1  *  accum2  /  sumWts))/(sumWts  *  2.0);	  	non-compiled	[CE]  cannot  find  symbol  accum1	97	None	add
515	[BUG]  [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  totalWts))  /  sumWts;  [CE]  cannot  find  symbol  totalWts  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  totalWts))  /  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (mean  *  accum2  /  totalWts))  /  sumWts;	  var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  totalWts	27	None	replace
516	[BUG]  [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  sumWts))  /  totalWts;  [CE]  cannot  find  symbol  totalWts  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  sumWts))  /  totalWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (mean  *  accum2  /  sumWts))  /  totalWts;	  var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  totalWts	27	None	replace
517	[BUG]  [BUGGY]  var  =  (accum  -  (met  *  accum2  /  sumWts))  /  sumWts;  [CE]  cannot  find  symbol  met  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (met  *  accum2  /  sumWts))  /  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (met  *  accum2  /  sumWts))  /  sumWts;	  var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var    =    (accum    -    (mean    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  met	27	None	replace
518	[BUG]  [BUGGY]  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum1  *  accum2  /  sumWts))/(sumWts  *  1.0);  [CE]  cannot  find  symbol  accum1  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum1  *  accum2  /  sumWts))/(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var        =        (accum        -        (accum2        *        accum2        /        sumWts))/(sumWts        *        1.0);        var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum1  *  accum2  /  sumWts))/(sumWts  *  1.0);	  	non-compiled	[CE]  cannot  find  symbol  accum1	10	None	add
519	[BUG]  [BUGGY]  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum1  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  [CE]  cannot  find  symbol  accum1  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum1  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var        =        (accum        -        (accum2        *        accum2        /        sumWts))/(sumWts        *        1.0);        var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var  =  (accum  -  (accum1  *  accum2  /  sumWts))/(sumWts  *  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);	  	non-compiled	[CE]  cannot  find  symbol  accum1	10	None	add
520	[BUG]  [BUGGY]  var  =  (accum  -  (m2  *  accum2  /  mean))/(1.0);  [CE]  cannot  find  symbol  m2  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (m2  *  accum2  /  mean))/(1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (m2  *  accum2  /  mean))/(1.0);	  var    =    (accum    -    (accum2    *    accum2    /    mean))    /(1.0);    	non-compiled	[CE]  cannot  find  symbol  m2	81	None	replace
521	[BUG]  [BUGGY]  var  =  (accum  -  (values[i]  *  accum2  /  mean))/(1.0);  [CE]  cannot  find  symbol  i  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values[i]  *  accum2  /  mean))/(1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[i]  *  accum2  /  mean))/(1.0);	  var    =    (accum    -    (accum2    *    accum2    /    mean))    /(1.0);    	non-compiled	[CE]  cannot  find  symbol  i	81	None	replace
522	[BUG]  [BUGGY]  var  =  (accum  -  (sumWts  *  accum2  /  valueWts))/  (sumWts  *  2.0);  [CE]  cannot  find  symbol  valueWts  [FE]                  AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (sumWts  *  accum2  /  valueWts))/  (sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (sumWts  *  accum2  /  valueWts))/  (sumWts  *  2.0);	  var    =    (accum    -    (values    *    accum2    /    sumWts))    /    (sumWts    *    2.0);    	non-compiled	[CE]  cannot  find  symbol  valueWts	84	None	replace
523	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  begin);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum  +=  dev  *  (dev  *  begin);  accum2  +=  dev  *  sumWts;	  accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    	compilable	  [FE]  AssertionError  	19	2	replace
524	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  begin);  accum2  +=  dev  *  sumWts;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  begin);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  (dev  *  begin);  accum2  +=  dev  *  sumWts;	  accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    	compilable	  [FE]  AssertionError  	19	2	replace
525	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (mean  *  dev);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum  +=  dev  *  (mean  *  dev);  accum2  +=  dev  *  sumWts;	  accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    	compilable	  [FE]  AssertionError  	19	2	replace
526	[BUG]  [BUGGY]  accum  +=  dev  *  (mean  *  dev);  accum2  +=  dev  *  sumWts;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (mean  *  dev);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  (mean  *  dev);  accum2  +=  dev  *  sumWts;	  accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    	compilable	  [FE]  AssertionError  	19	2	replace
527	[BUG]  [BUGGY]  Acum  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  [CE]  cannot  find  symbol  Acum  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  Acum  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	Acum  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;	  Accum    +=    weights[i]    *    dev;    accum2    +=    weights[i]    *    dev;    	non-compiled	[CE]  cannot  find  symbol  Acum	113	None	replace
528	[BUG]  [BUGGY]  var  =  (accum  -  (sumWts  *  accum2  /  valueWts))/(sumWts  *  1.0);  [CE]  cannot  find  symbol  valueWts  [FE]          AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (sumWts  *  accum2  /  valueWts))/(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (sumWts  *  accum2  /  valueWts))/(sumWts  *  1.0);	  var    =    (accum    -    (values    *    accum2    /    sumWts))    /(sumWts    *    1.0);    	non-compiled	[CE]  cannot  find  symbol  valueWts	101	None	replace
529	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  *  1.0;  var  =  (accum  -  (accum1  *  accum2  /  sumWts))  /  dev  *  1.0;  [CE]  cannot  find  symbol  accum1  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  *  1.0;  var  =  (accum  -  (accum1  *  accum2  /  sumWts))  /  dev  *  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    dev    *    1.0;    var  =  (accum  -  (accum1  *  accum2  /  sumWts))  /  dev  *  1.0;	  	non-compiled	[CE]  cannot  find  symbol  accum1	68	None	add
530	[BUG]  [BUGGY]  var  =  (accum  -  (m2  *  accum2  /  sumWts))  /  sumWts  *  2.0;  [CE]  cannot  find  symbol  m2  [FE]          AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (m2  *  accum2  /  sumWts))  /  sumWts  *  2.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (m2  *  accum2  /  sumWts))  /  sumWts  *  2.0;	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    var    =    (accum    -    (accum2    *    accum2    /    sumWts))(sumWts    *    2.0);    	non-compiled	[CE]  cannot  find  symbol  m2	37	None	replace
531	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts  *  2.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts  *  2.0;	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    var    =    (accum    -    (accum2    *    accum2    /    sumWts))(sumWts    *    2.0);    	compilable	  [FE]  AssertionError  	37	3	replace
532	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts  *  2.0;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts  *  2.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts  *  2.0;	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    var    =    (accum    -    (accum2    *    accum2    /    sumWts))(sumWts    *    2.0);    	compilable	  [FE]  AssertionError  	37	3	replace
533	[BUG]  [BUGGY]  var  =  (isBiasCorrected  -  (accum2  *  accum2  /  sumWts))/  dev;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (isBiasCorrected  -  (accum2  *  accum2  /  sumWts))/  dev;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (isBiasCorrected  -  (accum2  *  accum2  /  sumWts))/  dev;	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    dev;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	9	None	replace
534	[BUG]  [BUGGY]  var  =  (accum  -  (base  *  accum2  /  sumWts))  /(sumWts  *  1.0);  [CE]  cannot  find  symbol  base  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (base  *  accum2  /  sumWts))  /(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (base  *  accum2  /  sumWts))  /(sumWts  *  1.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    1.0);    	non-compiled	[CE]  cannot  find  symbol  base	11	None	replace
535	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum  +=  dev  *  sumWts;	  accum    +=    dev    *    accum2;    	compilable	  [FE]  AssertionError  	86	2	replace
536	[BUG]  [BUGGY]  accum  +=  dev  *  sumWts;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  sumWts;	  accum    +=    dev    *    accum2;    	compilable	  [FE]  AssertionError  	86	2	replace
537	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  accum2;  accum  -=  dev  *  accum2;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum    +=    dev    *    accum2;    accum  -=  dev  *  accum2;	  	compilable	  [FE]  AssertionError  	85	1	add
538	[BUG]  [BUGGY]  accum  +=  dev  *  accum2;  accum  -=  dev  *  accum2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  accum2;  accum  -=  dev  *  accum2;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum    +=    dev    *    accum2;    accum  -=  dev  *  accum2;	  	compilable	  [FE]  AssertionError  	85	1	add
539	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(1.0);  var  =  (accum  -  (accum1  *  accum2  /  mean))  /(1.0);  [CE]  cannot  find  symbol  accum1  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(1.0);  var  =  (accum  -  (accum1  *  accum2  /  mean))  /(1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    mean))    /(1.0);    var  =  (accum  -  (accum1  *  accum2  /  mean))  /(1.0);	  	non-compiled	[CE]  cannot  find  symbol  accum1	80	None	add
540	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    accum2    *    dev;    accum  =  accum2  *  dev;  accum  =  accum2  *  dev;  accum  =  accum2  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	                accum        +=        accum2        *        dev;        accum    =    accum2    *    dev;    accum  =  accum2  *  dev;  accum  =  accum2  *  dev;	  	compilable	  [FE]  AssertionError  	116	3	add
541	[BUG]  [BUGGY]          accum    +=    accum2    *    dev;    accum  =  accum2  *  dev;  accum  =  accum2  *  dev;  accum  =  accum2  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    accum2    *    dev;    accum  =  accum2  *  dev;  accum  =  accum2  *  dev;  accum  =  accum2  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        accum2        *        dev;        accum    =    accum2    *    dev;    accum  =  accum2  *  dev;  accum  =  accum2  *  dev;	  	compilable	  [FE]  AssertionError  	116	3	add
542	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  -=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    accum  -=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	18	3	add
543	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  -=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  -=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    accum  -=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	18	3	add
544	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  mean  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    accum  +=  mean  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	18	3	add
545	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  mean  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  mean  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    accum  +=  mean  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	18	3	add
546	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /(sumWts  /  2.0);  var  =  (accum  -  (accum2  *  accum2  /  totalWts))  /(sumWts  /  2.0);  [CE]  cannot  find  symbol  totalWts  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /(sumWts  /  2.0);  var  =  (accum  -  (accum2  *  accum2  /  totalWts))  /(sumWts  /  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /(sumWts    /    2.0);    var  =  (accum  -  (accum2  *  accum2  /  totalWts))  /(sumWts  /  2.0);	  	non-compiled	[CE]  cannot  find  symbol  totalWts	154	None	add
547	[BUG]  [BUGGY]  accum  +=  accum1  *  dev;  [CE]  cannot  find  symbol  accum1  [FE]        AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  accum1  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  accum1  *  dev;	          accum    +=    accum2    *    dev;    accum    accum    +=    accum2    *    dev;    	non-compiled	[CE]  cannot  find  symbol  accum1	150	None	replace
548	[BUG]  [BUGGY]  var  =  (accum  -  (values[i]  *  dev  /  accum2))/  (sumWts  -  1.0);  [CE]  cannot  find  symbol  i  [FE]                AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values[i]  *  dev  /  accum2))/  (sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[i]  *  dev  /  accum2))/  (sumWts  -  1.0);	  var    =    (accum    -    (values[i]    *    accum2    /    dev))    /    (sumWts    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  i	3	None	replace
549	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  if(incMoment)  {  accum  +=  dev  *  weights[0]  *  dev;  accum2  +=  dev  *  weights[0]  *  weights[0];  }  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	if(incMoment)  {  accum  +=  dev  *  weights[0]  *  dev;  accum2  +=  dev  *  weights[0]  *  weights[0];  }	  if(incMoment)    {    accum    +=    dev    *    weights[i]    *    dev;    accum2    +=    dev    *    weights[i]    *    weights[i];    }    	compilable	  [FE]  AssertionError  	133	2	replace
550	[BUG]  [BUGGY]  if(incMoment)  {  accum  +=  dev  *  weights[0]  *  dev;  accum2  +=  dev  *  weights[0]  *  weights[0];  }  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  if(incMoment)  {  accum  +=  dev  *  weights[0]  *  dev;  accum2  +=  dev  *  weights[0]  *  weights[0];  }  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	if(incMoment)  {  accum  +=  dev  *  weights[0]  *  dev;  accum2  +=  dev  *  weights[0]  *  weights[0];  }	  if(incMoment)    {    accum    +=    dev    *    weights[i]    *    dev;    accum2    +=    dev    *    weights[i]    *    weights[i];    }    	compilable	  [FE]  AssertionError  	133	2	replace
551	[BUG]  [BUGGY]  var  =  (accum  -  (weights[i]  *  accum2  /  totalWts))/  (sumWts  -  1.0);  [CE]  cannot  find  symbol  i  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (weights[i]  *  accum2  /  totalWts))/  (sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (weights[i]  *  accum2  /  totalWts))/  (sumWts  -  1.0);	  var    =    (accum    -    (weights[i]    *    accum2    /    sumWts))    /    (sumWts    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  i	2	None	replace
552	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts;  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  dev;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts;    var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  dev;	  	compilable	  [FE]  AssertionError  	104	1	add
553	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts;  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  sumWts;  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  dev;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (dev    *    accum2    /    sumWts))    /    sumWts;    var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  dev;	  	compilable	  [FE]  AssertionError  	104	1	add
554	[BUG]  [BUGGY]  var  =  (accum  -  (values[i]  *  accum2  /  sumWts))/(sumWts  *  2.0);  [CE]  cannot  find  symbol  i  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values[i]  *  accum2  /  sumWts))/(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[i]  *  accum2  /  sumWts))/(sumWts  *  2.0);	  var    =    (accum    -    (m2    *    accum2    /    sumWts))    /(sumWts    *    2.0);    	non-compiled	[CE]  cannot  find  symbol  i	95	None	replace
555	[BUG]  [BUGGY]  accum  +=  weights[i]  *  (dev  *  sumWts);  accum2  +=  weights[i]  *  dev;  [CE]  cannot  find  symbol  i  [FE]                        AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  weights[i]  *  (dev  *  sumWts);  accum2  +=  weights[i]  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  weights[i]  *  (dev  *  sumWts);  accum2  +=  weights[i]  *  dev;	  accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    dev;    	non-compiled	[CE]  cannot  find  symbol  i	34	None	replace
556	[BUG]  [BUGGY]  var  =  (accum  -  (weights[i]  *  accum2  /  sumWts))/  dev;  [CE]  cannot  find  symbol  i  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (weights[i]  *  accum2  /  sumWts))/  dev;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (weights[i]  *  accum2  /  sumWts))/  dev;	  var    =    (accum    -    (weights[i]    *    accum2    /    sumWts))    /    sumWts;    	non-compiled	[CE]  cannot  find  symbol  i	139	None	replace
557	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev;  var  =  (accum  -  (accum1  *  accum2  /  sumWts))  /  dev;  [CE]  cannot  find  symbol  accum1  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev;  var  =  (accum  -  (accum1  *  accum2  /  sumWts))  /  dev;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    dev;    var  =  (accum  -  (accum1  *  accum2  /  sumWts))  /  dev;	  	non-compiled	[CE]  cannot  find  symbol  accum1	8	None	add
558	[BUG]  [BUGGY]  double  accum2  =  Math.abs(sumWts  /  2.0),  dev);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  double  accum2  =  Math.abs(sumWts  /  2.0),  dev);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	double  accum2  =  Math.abs(sumWts  /  2.0),  dev);	  double    accum2    =    Math.abs(sumWts    /    2.0);    	non-compiled	[CE]  ';'  expected	121	None	replace
559	[BUG]  [BUGGY]  double  accum2  =  Math.abs(sumWts  /  2.0)-  1;  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                    AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  double  accum2  =  Math.abs(sumWts  /  2.0)-  1;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	double  accum2  =  Math.abs(sumWts  /  2.0)-  1;	  double    accum2    =    Math.abs(sumWts    /    2.0);    	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	121	None	replace
560	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  dev  /  sumWts))/  dev  /(sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  dev  /  sumWts))/  dev  /(sumWts  -  1.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    dev    /(sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	30	3	replace
561	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  dev  /  sumWts))/  dev  /(sumWts  -  1.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  dev  /  sumWts))/  dev  /(sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  dev  /  sumWts))/  dev  /(sumWts  -  1.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    dev    /(sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	30	3	replace
562	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  dev))/  dev  /(sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  accum2  /  dev))/  dev  /(sumWts  -  1.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    dev    /(sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	30	3	replace
563	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  dev))/  dev  /(sumWts  -  1.0);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  dev))/  dev  /(sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  dev))/  dev  /(sumWts  -  1.0);	  var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    dev    /(sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	30	3	replace
564	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var        =        (accum        -        (accum2        *        accum2        /        sumWts))/(sumWts        *        2.0);        var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /(sumWts  *  2.0);	  	compilable	  [FE]  AssertionError  	35	1	add
565	[BUG]  [BUGGY]  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /(sumWts  *  2.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var        =        (accum        -        (accum2        *        accum2        /        sumWts))/(sumWts        *        2.0);        var    =    (accum    -    (accum2    *    accum2    /    sumWts))/(sumWts    *    2.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /(sumWts  *  2.0);	  	compilable	  [FE]  AssertionError  	35	1	add
566	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  (values  -  1.0);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]        AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  (values  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (dev  *  accum2  /  sumWts))  /  (values  -  1.0);	  var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var    =    (accum    -    (dev    *    accum2    /    totalWts))/    (sumWts    -    1.0);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	108	None	replace
567	[BUG]  [BUGGY]  accum  +=  dev  *  weights[i]  *  dev;  [CE]  cannot  find  symbol  i  [FE]                AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  weights[i]  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  weights[i]  *  dev;	  accum    +=    dev    *    weights[i]    *    dev;    accum2    +=    dev    *    weights[i]    *    weights[i];    }    	non-compiled	[CE]  cannot  find  symbol  i	151	None	replace
568	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  (dev  *  dev);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  (dev  *  dev);	  	compilable	  [FE]  AssertionError  	152	3	add
569	[BUG]  [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  (dev  *  dev);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  (dev  *  dev);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  (dev  *  dev);	  	compilable	  [FE]  AssertionError  	152	3	add
570	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	152	3	add
571	[BUG]  [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	152	3	add
572	[BUG]  [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  DEV  *  sumWts;  [CE]  cannot  find  symbol  DEV  [FE]        AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  DEV  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  DEV  *  sumWts;	  	non-compiled	[CE]  cannot  find  symbol  DEV	152	None	add
573	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum  *  accum2  /  sumWts))/(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum  *  accum2  /  sumWts))/(sumWts  *  1.0);	  var    =    (accum    -    (values    *    accum2    /    sumWts))    /(sumWts    *    1.0);    	compilable	  [FE]  AssertionError  	101	3	replace
574	[BUG]  [BUGGY]  var  =  (accum  -  (accum  *  accum2  /  sumWts))/(sumWts  *  1.0);  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum  *  accum2  /  sumWts))/(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum  *  accum2  /  sumWts))/(sumWts  *  1.0);	  var    =    (accum    -    (values    *    accum2    /    sumWts))    /(sumWts    *    1.0);    	compilable	  [FE]  AssertionError  	101	3	replace
575	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  dev)/  sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (dev  *  dev)/  sumWts  -  1.0);	  var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	56	3	replace
576	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  dev)/  sumWts  -  1.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  dev)/  sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (dev  *  dev)/  sumWts  -  1.0);	  var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	56	3	replace
577	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  dev)/(sumWts  -  1.0);  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  dev)/(sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (dev  *  dev)/(sumWts  -  1.0);	  var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    	non-compiled	[CE]  ')'  expected	56	None	replace
578	[BUG]  [BUGGY]  var  =  (accum  -  (values[accum1  *  accum2  /  sumWts))/(sumWts  -  1.0);  [CE]  ']'  expected  [FE]                AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values[accum1  *  accum2  /  sumWts))/(sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[accum1  *  accum2  /  sumWts))/(sumWts  -  1.0);	  var    =    (accum    -    (values[accum2    *    accum2    /    sumWts))    /    (sumWts    -    1.0);    	non-compiled	[CE]  ']'  expected	83	None	replace
579	[BUG]  [BUGGY]  var  =  (accum  -  (sumWts[accum2  *  accum2  /  sumWts))/(sumWts  -  1.0);  [CE]  ']'  expected  [FE]                  AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (sumWts[accum2  *  accum2  /  sumWts))/(sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (sumWts[accum2  *  accum2  /  sumWts))/(sumWts  -  1.0);	  var    =    (accum    -    (values[accum2    *    accum2    /    sumWts))    /    (sumWts    -    1.0);    	non-compiled	[CE]  ']'  expected	83	None	replace
580	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  /=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    accum  /=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	18	3	add
581	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  /=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  accum  /=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    sumWts;    accum  /=  dev  *  (dev  *  mean);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	18	3	add
582	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  /(sumWts  -  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWtes))  /  dev  /(sumWts  -  1.0);  [CE]  cannot  find  symbol  sumWtes  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  dev  /(sumWts  -  1.0);  var  =  (accum  -  (accum2  *  accum2  /  sumWtes))  /  dev  /(sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    sumWts))    /    dev    /(sumWts    -    1.0);    var  =  (accum  -  (accum2  *  accum2  /  sumWtes))  /  dev  /(sumWts  -  1.0);	  	non-compiled	[CE]  cannot  find  symbol  sumWtes	29	None	add
583	[BUG]  [BUGGY]  var  =  (accum  -  (values[i]  *  accum2  /  sumWts))/  dev;  [CE]  cannot  find  symbol  i  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values[i]  *  accum2  /  sumWts))/  dev;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[i]  *  accum2  /  sumWts))/  dev;	  var    =    (accum    -    (values[i]    *    accum2    /    sumWts))    /    sumWts;    	non-compiled	[CE]  cannot  find  symbol  i	138	None	replace
584	[BUG]  [BUGGY]  var  =  (accum  -  (sumWts[i]  *  accum2  /  sumWts))/  weights;  [CE]  cannot  find  symbol  i  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (sumWts[i]  *  accum2  /  sumWts))/  weights;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (sumWts[i]  *  accum2  /  sumWts))/  weights;	  var    =    (accum    -    (values[i]    *    accum2    /    sumWts))    /    sumWts;    	non-compiled	[CE]  cannot  find  symbol  i	138	None	replace
585	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  1.0);  var  =  (accum  -  (accum2.  *  accum2  /  mean))  /(sumWts  *  1.0);  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  1.0);  var  =  (accum  -  (accum2.  *  accum2  /  mean))  /(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    mean))    /(sumWts    *    1.0);    var  =  (accum  -  (accum2.  *  accum2  /  mean))  /(sumWts  *  1.0);	  	non-compiled	[CE]  <identifier>  expected	76	None	add
586	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  dev  /  sumWts))  /  sumWts.1.0;  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (dev  *  dev  /  sumWts))  /  sumWts.1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (dev  *  dev  /  sumWts))  /  sumWts.1.0;	  var    =    (accum    -    (dev    *    accum2    /    sumWts))/    (sumWts    -    1.0);    var    =    (accum    -    (dev    *    accum2    /    sumWts))(sumWts    -    1.0);    	non-compiled	[CE]  ';'  expected	57	None	replace
587	[BUG]  [BUGGY]          accum    +=    accum2    *    dev;    accum  +=  accum2  *  dev;  accum  +=  accum1  *  dev;  accum  +=  accum2  *  dev;  [CE]  cannot  find  symbol  accum1  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    accum2    *    dev;    accum  +=  accum2  *  dev;  accum  +=  accum1  *  dev;  accum  +=  accum2  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        accum2        *        dev;        accum    +=    accum2    *    dev;    accum  +=  accum1  *  dev;  accum  +=  accum2  *  dev;	  	non-compiled	[CE]  cannot  find  symbol  accum1	21	None	add
588	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  2.0);  var  =  (accum  -  (accum2.  *  accum2  /  mean))  /(sumWts  *  2.0);  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(sumWts  *  2.0);  var  =  (accum  -  (accum2.  *  accum2  /  mean))  /(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    mean))    /(sumWts    *    2.0);    var  =  (accum  -  (accum2.  *  accum2  /  mean))  /(sumWts  *  2.0);	  	non-compiled	[CE]  <identifier>  expected	41	None	add
589	[BUG]  [BUGGY]  var  =  (accum  -  (sumWts  *  accum2  /  valueWts))/  sumWts;  [CE]  cannot  find  symbol  valueWts  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (sumWts  *  accum2  /  valueWts))/  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (sumWts  *  accum2  /  valueWts))/  sumWts;	  var    =    (accum    -    (values    *    accum2    /    sumWts))    /    sumWts;    	non-compiled	[CE]  cannot  find  symbol  valueWts	89	None	replace
590	[BUG]  [BUGGY]  var  =  (accum  -  (sumWts  *  accum2  /  sumWts))/  values;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (sumWts  *  accum2  /  sumWts))/  values;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (sumWts  *  accum2  /  sumWts))/  values;	  var    =    (accum    -    (values    *    accum2    /    sumWts))    /    sumWts;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	89	None	replace
591	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/  10.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  accum2  /  sumWts))/  10.0;	  var    =    (accum    -    (accum2    *    accum2    /    mean))    /(1.0);    	compilable	  [FE]  AssertionError  	81	2	replace
592	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/  10.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/  10.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  sumWts))/  10.0;	  var    =    (accum    -    (accum2    *    accum2    /    mean))    /(1.0);    	compilable	  [FE]  AssertionError  	81	2	replace
593	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  dev;  accum  +=  accum2  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum  +=  dev  *  dev;  accum  +=  accum2  *  dev;	          accum    +=    accum2    *    dev;    accum    +=    accum2    *    desv;    	compilable	  [FE]  AssertionError  	24	2	replace
594	[BUG]  [BUGGY]  accum  +=  dev  *  dev;  accum  +=  accum2  *  dev;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  dev;  accum  +=  accum2  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  dev;  accum  +=  accum2  *  dev;	          accum    +=    accum2    *    dev;    accum    +=    accum2    *    desv;    	compilable	  [FE]  AssertionError  	24	2	replace
595	[BUG]  [BUGGY]  accum  +=  dev  *  dev;  accum  +=  accum2  *  desv;  [CE]  cannot  find  symbol  desv  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  dev;  accum  +=  accum2  *  desv;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  dev;  accum  +=  accum2  *  desv;	          accum    +=    accum2    *    dev;    accum    +=    accum2    *    desv;    	non-compiled	[CE]  cannot  find  symbol  desv	24	None	replace
596	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (sumWts  *  accum2  /  sumWts))/  (sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (sumWts  *  accum2  /  sumWts))/  (sumWts  *  2.0);	  var    =    (accum    -    (values    *    accum2    /    sumWts))    /    (sumWts    *    2.0);    	compilable	  [FE]  AssertionError  	84	3	replace
597	[BUG]  [BUGGY]  var  =  (accum  -  (sumWts  *  accum2  /  sumWts))/  (sumWts  *  2.0);  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (sumWts  *  accum2  /  sumWts))/  (sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (sumWts  *  accum2  /  sumWts))/  (sumWts  *  2.0);	  var    =    (accum    -    (values    *    accum2    /    sumWts))    /    (sumWts    *    2.0);    	compilable	  [FE]  AssertionError  	84	3	replace
598	[BUG]  [BUGGY]  var  =  (accum  -  (sumWts[i]  *  accum2  /  sumWts))/  dev;  [CE]  cannot  find  symbol  i  [FE]            AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (sumWts[i]  *  accum2  /  sumWts))/  dev;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (sumWts[i]  *  accum2  /  sumWts))/  dev;	  var    =    (accum    -    (sumWts[i]    *    accum2    /    sumWts))    /    sumWts;    	non-compiled	[CE]  cannot  find  symbol  i	156	None	replace
599	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev  *  sumWts;	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    	compilable	  [FE]  AssertionError  	59	2	replace
600	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev  *  sumWts;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev  *  sumWts;	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    	compilable	  [FE]  AssertionError  	59	2	replace
601	[BUG]  [BUGGY]  var  =  (accum  -  (values[accum1  *  accum2  /  sumWts))/(sumWts  *  1.0);  [CE]  ']'  expected  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values[accum1  *  accum2  /  sumWts))/(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[accum1  *  accum2  /  sumWts))/(sumWts  *  1.0);	  var    =    (accum    -    (values[accum2    *    accum2    /    sumWts))    /(sumWts    *    1.0);    	non-compiled	[CE]  ']'  expected	103	None	replace
602	[BUG]  [BUGGY]  accum  +=  dev[i]  *  weights[i];  [CE]  cannot  find  symbol  i  [FE]        AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev[i]  *  weights[i];  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev[i]  *  weights[i];	  accum    +=    weights[i]    *    dev;    	non-compiled	[CE]  cannot  find  symbol  i	142	None	replace
603	[BUG]  [BUGGY]  var  =  (accum  -  (weights[i]  *  accum2  /  sumWts))/(sumWts  *  1.0);  [CE]  cannot  find  symbol  i  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (weights[i]  *  accum2  /  sumWts))/(sumWts  *  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (weights[i]  *  accum2  /  sumWts))/(sumWts  *  1.0);	  var    =    (accum    -    (weights[i]    *    accum2    /    sumWts))    /    (sumWts    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  i	2	None	replace
604	[BUG]  [BUGGY]  var  =  (accum  -  (weights[i]  *  accum2  /  sumWts))/  (sumWts  /  10.0);  [CE]  cannot  find  symbol  i  [FE]                AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (weights[i]  *  accum2  /  sumWts))/  (sumWts  /  10.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (weights[i]  *  accum2  /  sumWts))/  (sumWts  /  10.0);	  var    =    (accum    -    (weights[i]    *    accum2    /    sumWts))    /    (sumWts    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  i	2	None	replace
605	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  SumWts);  accum2  +=  dev  *  sumWts;  [CE]  cannot  find  symbol  SumWts  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  SumWts);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  (dev  *  SumWts);  accum2  +=  dev  *  sumWts;	  accum    +=    dev    *    (dev    *    sumWts);    accum2    +=    dev    *    dev;    	non-compiled	[CE]  cannot  find  symbol  SumWts	17	None	replace
606	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  dev  /  dev))/(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  dev  /  dev))/(sumWts  *  2.0);	  var    =    (accum    -    (accum2    *    accum2    /    dev))    /(sumWts    *    2.0);    	compilable	  [FE]  AssertionError  	40	3	replace
607	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  dev  /  dev))/(sumWts  *  2.0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  dev  /  dev))/(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  dev  /  dev))/(sumWts  *  2.0);	  var    =    (accum    -    (accum2    *    accum2    /    dev))    /(sumWts    *    2.0);    	compilable	  [FE]  AssertionError  	40	3	replace
608	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum  *  accum2  /  sumWts))/  (sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum  *  accum2  /  sumWts))/  (sumWts  -  1.0);	  var    =    (accum    -    (sumWts    *    accum2    /    valueWts))    /    (sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	91	1	replace
609	[BUG]  [BUGGY]  var  =  (accum  -  (accum  *  accum2  /  sumWts))/  (sumWts  -  1.0);  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum  *  accum2  /  sumWts))/  (sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum  *  accum2  /  sumWts))/  (sumWts  -  1.0);	  var    =    (accum    -    (sumWts    *    accum2    /    valueWts))    /    (sumWts    -    1.0);    	compilable	  [FE]  AssertionError  	91	1	replace
610	[BUG]  [BUGGY]  Accum  accum  -=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  Accum  accum  -=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	Accum  accum  -=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;	  accum    -=    weights[i]    *    dev;    accum2    +=    weights[i]    *    dev;    	non-compiled	[CE]  ';'  expected	161	None	replace
611	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  -=  dev  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum  -=  dev  *  dev;	  accum    -=    dev    *    accum2;    	compilable	  [FE]  AssertionError  	144	2	replace
612	[BUG]  [BUGGY]  accum  -=  dev  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  -=  dev  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  -=  dev  *  dev;	  accum    -=    dev    *    accum2;    	compilable	  [FE]  AssertionError  	144	2	replace
613	[BUG]  [BUGGY]  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  weights[i];  [CE]  cannot  find  symbol  i  [FE]                    AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  weights[i];  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  weights[i];	  accum    +=    weights[i]    *    dev;    accum2    +=    weights[i]    *    weights[i];    	non-compiled	[CE]  cannot  find  symbol  i	48	None	replace
614	[BUG]  [BUGGY]  var  =  (accum  -  (accum1  *  accum2  /  sumWts))/  sumWts  -  1.0;  [CE]  cannot  find  symbol  accum1  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum1  *  accum2  /  sumWts))/  sumWts  -  1.0;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum1  *  accum2  /  sumWts))/  sumWts  -  1.0;	  var    =    (accum    -    (dev    *    dev    /    sumWts))    /    sumWts    -    1.0;    	non-compiled	[CE]  cannot  find  symbol  accum1	127	None	replace
615	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  dev;  accum  -=  dev  *  (dev  *  mean);  accum2  +=  dev  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    dev;    accum  -=  dev  *  (dev  *  mean);  accum2  +=  dev  *  dev;	  	compilable	  [FE]  AssertionError  	119	3	add
616	[BUG]  [BUGGY]  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  dev;  accum  -=  dev  *  (dev  *  mean);  accum2  +=  dev  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  (dev  *  mean);  accum2  +=  dev  *  dev;  accum  -=  dev  *  (dev  *  mean);  accum2  +=  dev  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum    +=    dev    *    (dev    *    mean);    accum2    +=    dev    *    dev;    accum  -=  dev  *  (dev  *  mean);  accum2  +=  dev  *  dev;	  	compilable	  [FE]  AssertionError  	119	3	add
617	[BUG]  [BUGGY]  accum  +=  dev  *  weights[i]  *  sumWts;  [CE]  cannot  find  symbol  i  [FE]                AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *  weights[i]  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *  weights[i]  *  sumWts;	  accum    +=    dev    *    weights[i]    *    weights[i];    	non-compiled	[CE]  cannot  find  symbol  i	46	None	replace
618	[BUG]  [BUGGY]          accum    +=    accum2    *    dev;    accum  =  accum2  *  dev;  accum  accum  +=  accum2  *  dev;  accum  =  accum2  *  dev;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    accum2    *    dev;    accum  =  accum2  *  dev;  accum  accum  +=  accum2  *  dev;  accum  =  accum2  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        accum2        *        dev;        accum    =    accum2    *    dev;    accum  accum  +=  accum2  *  dev;  accum  =  accum2  *  dev;	  	non-compiled	[CE]  ';'  expected	116	None	add
619	[BUG]  [BUGGY]  accum  +=  weights[i]  *  (dev  *  mean);  accum2  +=  dev  *  dev;  [CE]  cannot  find  symbol  i  [FE]        AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  weights[i]  *  (dev  *  mean);  accum2  +=  dev  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  weights[i]  *  (dev  *  mean);  accum2  +=  dev  *  dev;	  accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    dev    *    dev;    	non-compiled	[CE]  cannot  find  symbol  i	49	None	replace
620	[BUG]  [BUGGY]  accum  accum  +=  dev  *  dev;  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  accum  +=  dev  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  accum  +=  dev  *  dev;	          accum    +=    accum2    *    dev;    accum    accum    +=    accum2    *    dev;    	non-compiled	[CE]  ';'  expected	150	None	replace
621	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  (dev  *  sumWts);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    sumWts);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  (dev  *  sumWts);	  	compilable	  [FE]  AssertionError  	61	3	add
622	[BUG]  [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  (dev  *  sumWts);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  (dev  *  sumWts);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    sumWts);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  (dev  *  sumWts);	  	compilable	  [FE]  AssertionError  	61	3	add
623	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    sumWts);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	61	3	add
624	[BUG]  [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    sumWts);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  (dev  *  sumWts);  accum2  +=  dev  *  sumWts;	  	compilable	  [FE]  AssertionError  	61	3	add
625	[BUG]  [BUGGY]  var  =  (accum  -  (sumWts[i]  *  accum2  /  totalWts))/  sumWts;  [CE]  cannot  find  symbol  i  [FE]                AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (sumWts[i]  *  accum2  /  totalWts))/  sumWts;  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (sumWts[i]  *  accum2  /  totalWts))/  sumWts;	  var    =    (accum    -    (values[i]    *    accum2    /    totalWts))    /    sumWts;    	non-compiled	[CE]  cannot  find  symbol  i	140	None	replace
626	[BUG]  [BUGGY]  var  =  (accum  -  (sumWts[i]  *  accum2  /  dev))/  (sumWts  -  1.0);  [CE]  cannot  find  symbol  i  [FE]                AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (sumWts[i]  *  accum2  /  dev))/  (sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (sumWts[i]  *  accum2  /  dev))/  (sumWts  -  1.0);	  var    =    (accum    -    (values[i]    *    accum2    /    dev))    /    (sumWts    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  i	3	None	replace
627	[BUG]  [BUGGY]  var  =  (accum  -  (values[accum1  *  accum2  /  sumWts))/(sumWts  *  2.0);  [CE]  ']'  expected  [FE]          AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values[accum1  *  accum2  /  sumWts))/(sumWts  *  2.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[accum1  *  accum2  /  sumWts))/(sumWts  *  2.0);	  var    =    (accum    -    (values[accum2    *    accum2    /    sumWts))    /(sumWts    *    2.0);    	non-compiled	[CE]  ']'  expected	94	None	replace
628	[BUG]  [BUGGY]  var  =  (accum  -  (values.length  *  accum2  /  sumWts))  /(sumWts  -  1.0);  var  =  (accum  -  (values.length  *  accum2  /  sumWtes))  /(sumWts  -  1.0);  [CE]  cannot  find  symbol  sumWtes  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (values.length  *  accum2  /  sumWts))  /(sumWts  -  1.0);  var  =  (accum  -  (values.length  *  accum2  /  sumWtes))  /(sumWts  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (values.length    *    accum2    /    sumWts))    /(sumWts    -    1.0);    var  =  (accum  -  (values.length  *  accum2  /  sumWtes))  /(sumWts  -  1.0);	  	non-compiled	[CE]  cannot  find  symbol  sumWtes	146	None	add
629	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  -=  accum2  *  dev;  accum  =  accum2  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum  -=  accum2  *  dev;  accum  =  accum2  *  dev;	          accum    +=    accum2    *    dev;    accum    =    accum2    *    dev;    	compilable	  [FE]  AssertionError  	117	2	replace
630	[BUG]  [BUGGY]  accum  -=  accum2  *  dev;  accum  =  accum2  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  -=  accum2  *  dev;  accum  =  accum2  *  dev;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  -=  accum2  *  dev;  accum  =  accum2  *  dev;	          accum    +=    accum2    *    dev;    accum    =    accum2    *    dev;    	compilable	  [FE]  AssertionError  	117	2	replace
631	[BUG]  [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  desv  *  sumWts;  [CE]  cannot  find  symbol  desv  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  desv  *  sumWts;  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	                accum        +=        dev        *        (dev        *        dev);        accum2        +=        dev        *        sumWts;        accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  desv  *  sumWts;	  	non-compiled	[CE]  cannot  find  symbol  desv	58	None	add
632	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(values[i  -  1.0);  [CE]  ']'  expected  [FE]              AssertionError      [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(values[i  -  1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(values[i  -  1.0);	  var    =    (accum    -    (sumWts    *    accum2    /    values))    /    (sumWts    -    1.0);    	non-compiled	[CE]  ']'  expected	82	None	replace
633	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(1.0);  var  =  (accum  -  (accum2.  *  accum2  /  mean))  /(1.0);  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  mean))  /(1.0);  var  =  (accum  -  (accum2.  *  accum2  /  mean))  /(1.0);  [BUGGY]      }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var    =    (accum    -    (accum2    *    accum2    /    mean))    /(1.0);    var  =  (accum  -  (accum2.  *  accum2  /  mean))  /(1.0);	  	non-compiled	[CE]  <identifier>  expected	80	None	add
634	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *(dev  *  sumWts);  accum2  +=  dev  *  (dev  *  sumWts);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	accum  +=  dev  *(dev  *  sumWts);  accum2  +=  dev  *  (dev  *  sumWts);	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum    +=    dev    *    (dev    *    sumWts);    accum2    +=    dev    *    sumWts;    	compilable	  [FE]  AssertionError  	62	2	replace
635	[BUG]  [BUGGY]  accum  +=  dev  *(dev  *  sumWts);  accum2  +=  dev  *  (dev  *  sumWts);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {      [BUGGY]  accum  +=  dev  *(dev  *  sumWts);  accum2  +=  dev  *  (dev  *  sumWts);  [BUGGY]      var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	accum  +=  dev  *(dev  *  sumWts);  accum2  +=  dev  *  (dev  *  sumWts);	          accum    +=    dev    *    (dev    *    dev);    accum2    +=    dev    *    sumWts;    accum    +=    dev    *    (dev    *    sumWts);    accum2    +=    dev    *    sumWts;    	compilable	  [FE]  AssertionError  	62	2	replace
