bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    if(isBiasCorrected)  {  accum  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  }  [CE]  cannot  find  symbol  i  [FE]    AssertionError  [CONTEXT]  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [BUGGY]    if(isBiasCorrected)  {  accum  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  }  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	    if(isBiasCorrected)  {  accum  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  }		non-compiled	[CE]  cannot  find  symbol  i	52	None	add
2	[BUG]  [BUGGY]    if(isBiasCorrected)  {  accum2  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  }  [CE]  cannot  find  symbol  i  [FE]      AssertionError  [CONTEXT]  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [BUGGY]    if(isBiasCorrected)  {  accum2  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  }  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	    if(isBiasCorrected)  {  accum2  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  }		non-compiled	[CE]  cannot  find  symbol  i	52	None	add
3	[BUG]  [BUGGY]    accum2  +=  weights[i]  *  dev;  [CE]  cannot  find  symbol  i  [FE]        AssertionError  [CONTEXT]  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [BUGGY]    accum2  +=  weights[i]  *  dev;  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	    accum2  +=  weights[i]  *  dev;		non-compiled	[CE]  cannot  find  symbol  i	52	None	add
4	[BUG]  [BUGGY]    if(isBiasCorrected)  {  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CE]  cannot  find  symbol  i  [FE]          AssertionError  [CONTEXT]  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [BUGGY]    if(isBiasCorrected)  {  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	    if(isBiasCorrected)  {  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }		non-compiled	[CE]  cannot  find  symbol  i	52	None	add
5	[BUG]  [BUGGY]    if(isBiasCorrected)  {  accum  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  }  else  {  sumWts  -=  1.0;  }  [CE]  cannot  find  symbol  i  [FE]            AssertionError  [CONTEXT]  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [BUGGY]    if(isBiasCorrected)  {  accum  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  }  else  {  sumWts  -=  1.0;  }  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	    if(isBiasCorrected)  {  accum  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  }  else  {  sumWts  -=  1.0;  }		non-compiled	[CE]  cannot  find  symbol  i	52	None	add
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);  [BUGGY]  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);	var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  	compilable	  [FE]  AssertionError  	51	1	replace
7	[BUG]  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [BUGGY]  var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);  [BUGGY]  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (dev  *  accum2  /  sumWts))/  (sumWts  -  1.0);	var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  	compilable	  [FE]  AssertionError  	51	1	replace
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);  [BUGGY]  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);	var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  	compilable	  [FE]  AssertionError  	51	1	replace
9	[BUG]  [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [BUGGY]  var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);  [BUGGY]  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (mean  *  accum2  /  sumWts))/  (sumWts  -  1.0);	var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  	compilable	  [FE]  AssertionError  	51	1	replace
10	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  totalWts))/(sumWts  *  1.0);  [CE]  cannot  find  symbol  totalWts  [FE]        AssertionError  [CONTEXT]  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  totalWts))/(sumWts  *  1.0);  [BUGGY]  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  totalWts))/(sumWts  *  1.0);	var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  	non-compiled	[CE]  cannot  find  symbol  totalWts	51	None	replace
11	[BUG]  [BUGGY]    accum  -=  weights[i]  *  (dev  *  mean);  accum2  +=  weights[i]  *  dev;  [CE]  cannot  find  symbol  i  [FE]    AssertionError  [CONTEXT]  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [BUGGY]    accum  -=  weights[i]  *  (dev  *  mean);  accum2  +=  weights[i]  *  dev;  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	    accum  -=  weights[i]  *  (dev  *  mean);  accum2  +=  weights[i]  *  dev;		non-compiled	[CE]  cannot  find  symbol  i	52	None	add
12	[BUG]  [BUGGY]    if(isBiasCorrected)  {  accum  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  }  else  {  sumWts  =  1.0;  }  [CE]  cannot  find  symbol  i  [FE]      AssertionError  [CONTEXT]  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [BUGGY]    if(isBiasCorrected)  {  accum  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  }  else  {  sumWts  =  1.0;  }  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	    if(isBiasCorrected)  {  accum  +=  weights[i]  *  dev;  accum2  +=  weights[i]  *  dev;  }  else  {  sumWts  =  1.0;  }		non-compiled	[CE]  cannot  find  symbol  i	52	None	add
13	[BUG]  [BUGGY]    if(isBiasCorrected)  {  accum  +=  dev  *  weights[i]  *  dev;  accum2  +=  dev  *  weights[i]  *  weights[i];  }  [CE]  cannot  find  symbol  i  [FE]        AssertionError  [CONTEXT]  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [BUGGY]    if(isBiasCorrected)  {  accum  +=  dev  *  weights[i]  *  dev;  accum2  +=  dev  *  weights[i]  *  weights[i];  }  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	    if(isBiasCorrected)  {  accum  +=  dev  *  weights[i]  *  dev;  accum2  +=  dev  *  weights[i]  *  weights[i];  }		non-compiled	[CE]  cannot  find  symbol  i	52	None	add
14	[BUG]  [BUGGY]  var  =  (accum  -  (values[i]  *  accum2  /  sumWts))/  (sumWts  -  1.0);  [CE]  cannot  find  symbol  i  [FE]    AssertionError  [CONTEXT]  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [BUGGY]  var  =  (accum  -  (values[i]  *  accum2  /  sumWts))/  (sumWts  -  1.0);  [BUGGY]  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values[i]  *  accum2  /  sumWts))/  (sumWts  -  1.0);	var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  	non-compiled	[CE]  cannot  find  symbol  i	51	None	replace
15	[BUG]  [BUGGY]  var  =  (accum  -  (values  *  accum2  /  sumWts))/  (sumWts  -  1.0);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]      AssertionError  [CONTEXT]  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [BUGGY]  var  =  (accum  -  (values  *  accum2  /  sumWts))/  (sumWts  -  1.0);  [BUGGY]  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (values  *  accum2  /  sumWts))/  (sumWts  -  1.0);	var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	51	None	replace
16	[BUG]  [BUGGY]  var  =  (accum  -  (m2  *  accum2  /  sumWts))/(sumWts  -  1.0);  [CE]  cannot  find  symbol  m2  [FE]        AssertionError  [CONTEXT]  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [BUGGY]  var  =  (accum  -  (m2  *  accum2  /  sumWts))/(sumWts  -  1.0);  [BUGGY]  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (m2  *  accum2  /  sumWts))/(sumWts  -  1.0);	var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  	non-compiled	[CE]  cannot  find  symbol  m2	51	None	replace
17	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [BUGGY]    accum  +=  accum2  *  dev;  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	    accum  +=  accum2  *  dev;		compilable	  [FE]  AssertionError  	52	1	add
18	[BUG]  [BUGGY]    accum  +=  accum2  *  dev;  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [BUGGY]    accum  +=  accum2  *  dev;  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	    accum  +=  accum2  *  dev;		compilable	  [FE]  AssertionError  	52	1	add
19	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [BUGGY]    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;		compilable	  [FE]  AssertionError  	52	3	add
20	[BUG]  [BUGGY]    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [BUGGY]    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  dev;		compilable	  [FE]  AssertionError  	52	3	add
21	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [BUGGY]    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;		compilable	  [FE]  AssertionError  	52	3	add
22	[BUG]  [BUGGY]    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [BUGGY]    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  sumWts;		compilable	  [FE]  AssertionError  	52	3	add
23	[BUG]  [BUGGY]    double  accum2  =  Math.abs(sumWts);  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError  [CONTEXT]  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [BUGGY]    double  accum2  =  Math.abs(sumWts);  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	    double  accum2  =  Math.abs(sumWts);		non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	52	None	add
24	[BUG]  [BUGGY]    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  totalWts;  [CE]  cannot  find  symbol  totalWts  [FE]            AssertionError  [CONTEXT]  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [BUGGY]    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  totalWts;  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	    accum  +=  dev  *  (dev  *  dev);  accum2  +=  dev  *  totalWts;		non-compiled	[CE]  cannot  find  symbol  totalWts	52	None	add
25	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  [BUGGY]  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);	var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  	compilable	  [FE]  AssertionError  	51	3	replace
26	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);  [BUGGY]  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  1.0);	var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  	compilable	  [FE]  AssertionError  	51	3	replace
27	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  [BUGGY]  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);	var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  	compilable	  [FE]  AssertionError  	51	3	replace
28	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);  [BUGGY]  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(sumWts  *  2.0);	var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  	compilable	  [FE]  AssertionError  	51	3	replace
29	[BUG]  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(maximumWts  -  1.0);  [CE]  cannot  find  symbol  maximumWts  [FE]        AssertionError  [CONTEXT]  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [BUGGY]  var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(maximumWts  -  1.0);  [BUGGY]  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  }  return  var;  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	var  =  (accum  -  (accum2  *  accum2  /  sumWts))/(maximumWts  -  1.0);	var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  	non-compiled	[CE]  cannot  find  symbol  maximumWts	51	None	replace
