projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java328returnvar;
projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java328returnm;
projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java328returnvar.doubleValue();
projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java328elseif(length>1){returnvar;}
projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java328elseif(m>0.0){returnvar;}
projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java328
projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java328var=evaluate(values,weights,m,begin,length);
projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java328var=evaluate(values,values,m,begin,length);
projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java328incMoment=isBiasCorrected?Boolean.TRUE:Boolean.FALSE;
projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java328doublevar=evaluate(values,weights,m,begin,length);
projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java328var=evaluate(values,m,begin,length);
projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java328var=evaluate(values,values,weights,m,begin,length);
projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java328returnvar*(m+length);
projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java328returnvar+1;
