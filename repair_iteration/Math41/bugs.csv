bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] return evaluate(values, weights, 0, values.length); [FE] AssertionError [CONTEXT] public double evaluate(final double[] values, final double[] weights) { [BUGGY] return evaluate(values, weights, 0, values.length); [BUGGY] } [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights [VARIABLES] boolean incMoment isBiasCorrected double[] values weights long serialVersionUID SecondMoment m2 moment  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.7071067811865475	370	370	1	replace	
2	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public double evaluate(final double[] values, final double[] weights) { [BUGGY] [BUGGY] return evaluate(values, weights, 0, values.length); } [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights [VARIABLES] boolean incMoment isBiasCorrected double[] values weights long serialVersionUID SecondMoment m2 moment  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.7071067811865475	370	370	1	add	
3	[BUG] [BUGGY] double var = Double.NaN; [FE] AssertionError [CONTEXT] public double evaluate(final double[] values, final double[] weights, final int begin, final int length) { [BUGGY] double var = Double.NaN; [BUGGY]  if (test(values, weights,begin, length)) { clear(); if (length == 1) { var = 0.0; } else if (length > 1) { Mean mean = new Mean(); double m = mean.evaluate(values, weights, begin, length); var = evaluate(values, weights, m, begin, length); } [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final int begin final int length [VARIABLES] Mean mean boolean incMoment isBiasCorrected double[] values weights double m var long serialVersionUID SecondMoment m2 moment int begin length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	316	316	1	replace	
4	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public double evaluate(final double[] values, final double[] weights, final int begin, final int length) { [BUGGY] [BUGGY] double var = Double.NaN; if (test(values, weights,begin, length)) { clear(); if (length == 1) { var = 0.0; } else if (length > 1) { Mean mean = new Mean(); double m = mean.evaluate(values, weights, begin, length); var = evaluate(values, weights, m, begin, length); } [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final int begin final int length [VARIABLES] Mean mean boolean incMoment isBiasCorrected double[] values weights double m var long serialVersionUID SecondMoment m2 moment int begin length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	316	316	1	add	
5	[BUG] [BUGGY] if (test(values, weights,begin, length)) { [FE] AssertionError [CONTEXT] public double evaluate(final double[] values, final double[] weights, final int begin, final int length) { double var = Double.NaN; [BUGGY] if (test(values, weights,begin, length)) { [BUGGY] clear(); if (length == 1) { var = 0.0; } else if (length > 1) { Mean mean = new Mean(); double m = mean.evaluate(values, weights, begin, length); var = evaluate(values, weights, m, begin, length); } } return var; [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final int begin final int length [VARIABLES] Mean mean boolean incMoment isBiasCorrected double[] values weights double m var long serialVersionUID SecondMoment m2 moment int begin length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	318	318	1	replace	
6	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public double evaluate(final double[] values, final double[] weights, final int begin, final int length) { double var = Double.NaN; [BUGGY] [BUGGY] if (test(values, weights,begin, length)) { clear(); if (length == 1) { var = 0.0; } else if (length > 1) { Mean mean = new Mean(); double m = mean.evaluate(values, weights, begin, length); var = evaluate(values, weights, m, begin, length); } } return var; [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final int begin final int length [VARIABLES] Mean mean boolean incMoment isBiasCorrected double[] values weights double m var long serialVersionUID SecondMoment m2 moment int begin length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	318	318	1	add	
7	[BUG] [BUGGY] clear(); [FE] AssertionError [CONTEXT] public double evaluate(final double[] values, final double[] weights, final int begin, final int length) { double var = Double.NaN; if (test(values, weights,begin, length)) { [BUGGY] clear(); [BUGGY] if (length == 1) { var = 0.0; } else if (length > 1) { Mean mean = new Mean(); double m = mean.evaluate(values, weights, begin, length); var = evaluate(values, weights, m, begin, length); } } return var; } [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final int begin final int length [VARIABLES] Mean mean boolean incMoment isBiasCorrected double[] values weights double m var long serialVersionUID SecondMoment m2 moment int begin length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	319	319	1	replace	
8	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public double evaluate(final double[] values, final double[] weights, final int begin, final int length) { double var = Double.NaN; if (test(values, weights,begin, length)) { [BUGGY] [BUGGY] clear(); if (length == 1) { var = 0.0; } else if (length > 1) { Mean mean = new Mean(); double m = mean.evaluate(values, weights, begin, length); var = evaluate(values, weights, m, begin, length); } } return var; } [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final int begin final int length [VARIABLES] Mean mean boolean incMoment isBiasCorrected double[] values weights double m var long serialVersionUID SecondMoment m2 moment int begin length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	319	319	1	add	
9	[BUG] [BUGGY] if (length == 1) { [FE] AssertionError [CONTEXT] public double evaluate(final double[] values, final double[] weights, final int begin, final int length) { double var = Double.NaN; if (test(values, weights,begin, length)) { clear(); [BUGGY] if (length == 1) { [BUGGY] var = 0.0; } else if (length > 1) { Mean mean = new Mean(); double m = mean.evaluate(values, weights, begin, length); var = evaluate(values, weights, m, begin, length); } } return var; } [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final int begin final int length [VARIABLES] Mean mean boolean incMoment isBiasCorrected double[] values weights double m var long serialVersionUID SecondMoment m2 moment int begin length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	320	320	1	replace	
10	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public double evaluate(final double[] values, final double[] weights, final int begin, final int length) { double var = Double.NaN; if (test(values, weights,begin, length)) { clear(); [BUGGY] [BUGGY] if (length == 1) { var = 0.0; } else if (length > 1) { Mean mean = new Mean(); double m = mean.evaluate(values, weights, begin, length); var = evaluate(values, weights, m, begin, length); } } return var; } [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final int begin final int length [VARIABLES] Mean mean boolean incMoment isBiasCorrected double[] values weights double m var long serialVersionUID SecondMoment m2 moment int begin length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	320	320	1	add	
11	[BUG] [BUGGY] } else if (length > 1) { [FE] AssertionError [CONTEXT] public double evaluate(final double[] values, final double[] weights, final int begin, final int length) { double var = Double.NaN; if (test(values, weights,begin, length)) { clear(); if (length == 1) { var = 0.0; [BUGGY] } else if (length > 1) { [BUGGY] Mean mean = new Mean(); double m = mean.evaluate(values, weights, begin, length); var = evaluate(values, weights, m, begin, length); } } return var; } [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final int begin final int length [VARIABLES] Mean mean boolean incMoment isBiasCorrected double[] values weights double m var long serialVersionUID SecondMoment m2 moment int begin length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	322	322	1	replace	
12	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public double evaluate(final double[] values, final double[] weights, final int begin, final int length) { double var = Double.NaN; if (test(values, weights,begin, length)) { clear(); if (length == 1) { var = 0.0; [BUGGY] [BUGGY] } else if (length > 1) { Mean mean = new Mean(); double m = mean.evaluate(values, weights, begin, length); var = evaluate(values, weights, m, begin, length); } } return var; } [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final int begin final int length [VARIABLES] Mean mean boolean incMoment isBiasCorrected double[] values weights double m var long serialVersionUID SecondMoment m2 moment int begin length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	322	322	1	add	
13	[BUG] [BUGGY] Mean mean = new Mean(); [FE] AssertionError [CONTEXT] public double evaluate(final double[] values, final double[] weights, final int begin, final int length) { double var = Double.NaN; if (test(values, weights,begin, length)) { clear(); if (length == 1) { var = 0.0; } else if (length > 1) { [BUGGY] Mean mean = new Mean(); [BUGGY] double m = mean.evaluate(values, weights, begin, length); var = evaluate(values, weights, m, begin, length); } } return var; } [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final int begin final int length [VARIABLES] Mean mean boolean incMoment isBiasCorrected double[] values weights double m var long serialVersionUID SecondMoment m2 moment int begin length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	323	323	1	replace	
14	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public double evaluate(final double[] values, final double[] weights, final int begin, final int length) { double var = Double.NaN; if (test(values, weights,begin, length)) { clear(); if (length == 1) { var = 0.0; } else if (length > 1) { [BUGGY] [BUGGY] Mean mean = new Mean(); double m = mean.evaluate(values, weights, begin, length); var = evaluate(values, weights, m, begin, length); } } return var; } [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final int begin final int length [VARIABLES] Mean mean boolean incMoment isBiasCorrected double[] values weights double m var long serialVersionUID SecondMoment m2 moment int begin length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	323	323	1	add	
15	[BUG] [BUGGY] double m = mean.evaluate(values, weights, begin, length); [FE] AssertionError [CONTEXT] final int begin, final int length) { double var = Double.NaN; if (test(values, weights,begin, length)) { clear(); if (length == 1) { var = 0.0; } else if (length > 1) { Mean mean = new Mean(); [BUGGY] double m = mean.evaluate(values, weights, begin, length); [BUGGY] var = evaluate(values, weights, m, begin, length); } } return var; } [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final int begin final int length [VARIABLES] Mean mean boolean incMoment isBiasCorrected double[] values weights double m var long serialVersionUID SecondMoment m2 moment int begin length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	324	324	1	replace	
16	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] final int begin, final int length) { double var = Double.NaN; if (test(values, weights,begin, length)) { clear(); if (length == 1) { var = 0.0; } else if (length > 1) { Mean mean = new Mean(); [BUGGY] [BUGGY] double m = mean.evaluate(values, weights, begin, length); var = evaluate(values, weights, m, begin, length); } } return var; } [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final int begin final int length [VARIABLES] Mean mean boolean incMoment isBiasCorrected double[] values weights double m var long serialVersionUID SecondMoment m2 moment int begin length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	324	324	1	add	
17	[BUG] [BUGGY] var = evaluate(values, weights, m, begin, length); [FE] AssertionError [CONTEXT] double var = Double.NaN; if (test(values, weights,begin, length)) { clear(); if (length == 1) { var = 0.0; } else if (length > 1) { Mean mean = new Mean(); double m = mean.evaluate(values, weights, begin, length); [BUGGY] var = evaluate(values, weights, m, begin, length); [BUGGY] } } return var; } [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final int begin final int length [VARIABLES] Mean mean boolean incMoment isBiasCorrected double[] values weights double m var long serialVersionUID SecondMoment m2 moment int begin length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	325	325	1	replace	
18	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] double var = Double.NaN; if (test(values, weights,begin, length)) { clear(); if (length == 1) { var = 0.0; } else if (length > 1) { Mean mean = new Mean(); double m = mean.evaluate(values, weights, begin, length); [BUGGY] [BUGGY] var = evaluate(values, weights, m, begin, length); } } return var; } [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final int begin final int length [VARIABLES] Mean mean boolean incMoment isBiasCorrected double[] values weights double m var long serialVersionUID SecondMoment m2 moment int begin length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	325	325	1	add	
19	[BUG] [BUGGY] return var; [FE] AssertionError [CONTEXT] if (test(values, weights,begin, length)) { clear(); if (length == 1) { var = 0.0; } else if (length > 1) { Mean mean = new Mean(); double m = mean.evaluate(values, weights, begin, length); var = evaluate(values, weights, m, begin, length); } } [BUGGY] return var; [BUGGY] } [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final int begin final int length [VARIABLES] Mean mean boolean incMoment isBiasCorrected double[] values weights double m var long serialVersionUID SecondMoment m2 moment int begin length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	328	328	1	replace	
20	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] if (test(values, weights,begin, length)) { clear(); if (length == 1) { var = 0.0; } else if (length > 1) { Mean mean = new Mean(); double m = mean.evaluate(values, weights, begin, length); var = evaluate(values, weights, m, begin, length); } } [BUGGY] [BUGGY] return var; } [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final int begin final int length [VARIABLES] Mean mean boolean incMoment isBiasCorrected double[] values weights double m var long serialVersionUID SecondMoment m2 moment int begin length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	328	328	1	add	
21	[BUG] [BUGGY] double var = Double.NaN; [FE] AssertionError [CONTEXT] final double mean, final int begin, final int length) { [BUGGY] double var = Double.NaN; [BUGGY]  if (test(values, weights, begin, length)) { if (length == 1) { var = 0.0; } else if (length > 1) { double accum = 0.0; double dev = 0.0; double accum2 = 0.0; for (int i = begin; i < begin + length; i++) { dev = values[i] - mean; [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final double mean final int begin final int length [VARIABLES] boolean incMoment isBiasCorrected double[] values weights long serialVersionUID SecondMoment m2 moment double accum accum2 dev mean sumWts var int begin i length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	504	504	1	replace	
22	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] final double mean, final int begin, final int length) { [BUGGY] [BUGGY] double var = Double.NaN; if (test(values, weights, begin, length)) { if (length == 1) { var = 0.0; } else if (length > 1) { double accum = 0.0; double dev = 0.0; double accum2 = 0.0; for (int i = begin; i < begin + length; i++) { dev = values[i] - mean; [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final double mean final int begin final int length [VARIABLES] boolean incMoment isBiasCorrected double[] values weights long serialVersionUID SecondMoment m2 moment double accum accum2 dev mean sumWts var int begin i length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	504	504	1	add	
23	[BUG] [BUGGY] if (test(values, weights, begin, length)) { [FE] AssertionError [CONTEXT] final double mean, final int begin, final int length) { double var = Double.NaN; [BUGGY] if (test(values, weights, begin, length)) { [BUGGY] if (length == 1) { var = 0.0; } else if (length > 1) { double accum = 0.0; double dev = 0.0; double accum2 = 0.0; for (int i = begin; i < begin + length; i++) { dev = values[i] - mean; accum += weights[i] * (dev * dev); accum2 += weights[i] * dev; [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final double mean final int begin final int length [VARIABLES] boolean incMoment isBiasCorrected double[] values weights long serialVersionUID SecondMoment m2 moment double accum accum2 dev mean sumWts var int begin i length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	506	506	1	replace	
24	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] final double mean, final int begin, final int length) { double var = Double.NaN; [BUGGY] [BUGGY] if (test(values, weights, begin, length)) { if (length == 1) { var = 0.0; } else if (length > 1) { double accum = 0.0; double dev = 0.0; double accum2 = 0.0; for (int i = begin; i < begin + length; i++) { dev = values[i] - mean; accum += weights[i] * (dev * dev); accum2 += weights[i] * dev; [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final double mean final int begin final int length [VARIABLES] boolean incMoment isBiasCorrected double[] values weights long serialVersionUID SecondMoment m2 moment double accum accum2 dev mean sumWts var int begin i length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	506	506	1	add	
25	[BUG] [BUGGY] if (length == 1) { [FE] AssertionError [CONTEXT] final double mean, final int begin, final int length) { double var = Double.NaN; if (test(values, weights, begin, length)) { [BUGGY] if (length == 1) { [BUGGY] var = 0.0; } else if (length > 1) { double accum = 0.0; double dev = 0.0; double accum2 = 0.0; for (int i = begin; i < begin + length; i++) { dev = values[i] - mean; accum += weights[i] * (dev * dev); accum2 += weights[i] * dev; } [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final double mean final int begin final int length [VARIABLES] boolean incMoment isBiasCorrected double[] values weights long serialVersionUID SecondMoment m2 moment double accum accum2 dev mean sumWts var int begin i length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	replace	
26	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] final double mean, final int begin, final int length) { double var = Double.NaN; if (test(values, weights, begin, length)) { [BUGGY] [BUGGY] if (length == 1) { var = 0.0; } else if (length > 1) { double accum = 0.0; double dev = 0.0; double accum2 = 0.0; for (int i = begin; i < begin + length; i++) { dev = values[i] - mean; accum += weights[i] * (dev * dev); accum2 += weights[i] * dev; } [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final double mean final int begin final int length [VARIABLES] boolean incMoment isBiasCorrected double[] values weights long serialVersionUID SecondMoment m2 moment double accum accum2 dev mean sumWts var int begin i length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	507	507	1	add	
27	[BUG] [BUGGY] } else if (length > 1) { [FE] AssertionError [CONTEXT] final double mean, final int begin, final int length) { double var = Double.NaN; if (test(values, weights, begin, length)) { if (length == 1) { var = 0.0; [BUGGY] } else if (length > 1) { [BUGGY] double accum = 0.0; double dev = 0.0; double accum2 = 0.0; for (int i = begin; i < begin + length; i++) { dev = values[i] - mean; accum += weights[i] * (dev * dev); accum2 += weights[i] * dev; } double sumWts = 0; [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final double mean final int begin final int length [VARIABLES] boolean incMoment isBiasCorrected double[] values weights long serialVersionUID SecondMoment m2 moment double accum accum2 dev mean sumWts var int begin i length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	
28	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] final double mean, final int begin, final int length) { double var = Double.NaN; if (test(values, weights, begin, length)) { if (length == 1) { var = 0.0; [BUGGY] [BUGGY] } else if (length > 1) { double accum = 0.0; double dev = 0.0; double accum2 = 0.0; for (int i = begin; i < begin + length; i++) { dev = values[i] - mean; accum += weights[i] * (dev * dev); accum2 += weights[i] * dev; } double sumWts = 0; [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final double mean final int begin final int length [VARIABLES] boolean incMoment isBiasCorrected double[] values weights long serialVersionUID SecondMoment m2 moment double accum accum2 dev mean sumWts var int begin i length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	
29	[BUG] [BUGGY] double accum = 0.0; [FE] AssertionError [CONTEXT] final double mean, final int begin, final int length) { double var = Double.NaN; if (test(values, weights, begin, length)) { if (length == 1) { var = 0.0; } else if (length > 1) { [BUGGY] double accum = 0.0; [BUGGY] double dev = 0.0; double accum2 = 0.0; for (int i = begin; i < begin + length; i++) { dev = values[i] - mean; accum += weights[i] * (dev * dev); accum2 += weights[i] * dev; } double sumWts = 0; for (int i = 0; i < weights.length; i++) { [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final double mean final int begin final int length [VARIABLES] boolean incMoment isBiasCorrected double[] values weights long serialVersionUID SecondMoment m2 moment double accum accum2 dev mean sumWts var int begin i length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	510	510	1	replace	
30	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] final double mean, final int begin, final int length) { double var = Double.NaN; if (test(values, weights, begin, length)) { if (length == 1) { var = 0.0; } else if (length > 1) { [BUGGY] [BUGGY] double accum = 0.0; double dev = 0.0; double accum2 = 0.0; for (int i = begin; i < begin + length; i++) { dev = values[i] - mean; accum += weights[i] * (dev * dev); accum2 += weights[i] * dev; } double sumWts = 0; for (int i = 0; i < weights.length; i++) { [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final double mean final int begin final int length [VARIABLES] boolean incMoment isBiasCorrected double[] values weights long serialVersionUID SecondMoment m2 moment double accum accum2 dev mean sumWts var int begin i length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	510	510	1	add	
31	[BUG] [BUGGY] double dev = 0.0; [FE] AssertionError [CONTEXT] final double mean, final int begin, final int length) { double var = Double.NaN; if (test(values, weights, begin, length)) { if (length == 1) { var = 0.0; } else if (length > 1) { double accum = 0.0; [BUGGY] double dev = 0.0; [BUGGY] double accum2 = 0.0; for (int i = begin; i < begin + length; i++) { dev = values[i] - mean; accum += weights[i] * (dev * dev); accum2 += weights[i] * dev; } double sumWts = 0; for (int i = 0; i < weights.length; i++) { sumWts += weights[i]; [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final double mean final int begin final int length [VARIABLES] boolean incMoment isBiasCorrected double[] values weights long serialVersionUID SecondMoment m2 moment double accum accum2 dev mean sumWts var int begin i length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	511	511	1	replace	
32	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] final double mean, final int begin, final int length) { double var = Double.NaN; if (test(values, weights, begin, length)) { if (length == 1) { var = 0.0; } else if (length > 1) { double accum = 0.0; [BUGGY] [BUGGY] double dev = 0.0; double accum2 = 0.0; for (int i = begin; i < begin + length; i++) { dev = values[i] - mean; accum += weights[i] * (dev * dev); accum2 += weights[i] * dev; } double sumWts = 0; for (int i = 0; i < weights.length; i++) { sumWts += weights[i]; [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final double mean final int begin final int length [VARIABLES] boolean incMoment isBiasCorrected double[] values weights long serialVersionUID SecondMoment m2 moment double accum accum2 dev mean sumWts var int begin i length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	511	511	1	add	
33	[BUG] [BUGGY] double accum2 = 0.0; [FE] AssertionError [CONTEXT] final double mean, final int begin, final int length) { double var = Double.NaN; if (test(values, weights, begin, length)) { if (length == 1) { var = 0.0; } else if (length > 1) { double accum = 0.0; double dev = 0.0; [BUGGY] double accum2 = 0.0; [BUGGY] for (int i = begin; i < begin + length; i++) { dev = values[i] - mean; accum += weights[i] * (dev * dev); accum2 += weights[i] * dev; } double sumWts = 0; for (int i = 0; i < weights.length; i++) { sumWts += weights[i]; } [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final double mean final int begin final int length [VARIABLES] boolean incMoment isBiasCorrected double[] values weights long serialVersionUID SecondMoment m2 moment double accum accum2 dev mean sumWts var int begin i length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	512	512	1	replace	
34	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] final double mean, final int begin, final int length) { double var = Double.NaN; if (test(values, weights, begin, length)) { if (length == 1) { var = 0.0; } else if (length > 1) { double accum = 0.0; double dev = 0.0; [BUGGY] [BUGGY] double accum2 = 0.0; for (int i = begin; i < begin + length; i++) { dev = values[i] - mean; accum += weights[i] * (dev * dev); accum2 += weights[i] * dev; } double sumWts = 0; for (int i = 0; i < weights.length; i++) { sumWts += weights[i]; } [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final double mean final int begin final int length [VARIABLES] boolean incMoment isBiasCorrected double[] values weights long serialVersionUID SecondMoment m2 moment double accum accum2 dev mean sumWts var int begin i length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	512	512	1	add	
35	[BUG] [BUGGY] for (int i = begin; i < begin + length; i++) { [FE] AssertionError [CONTEXT] double var = Double.NaN; if (test(values, weights, begin, length)) { if (length == 1) { var = 0.0; } else if (length > 1) { double accum = 0.0; double dev = 0.0; double accum2 = 0.0; [BUGGY] for (int i = begin; i < begin + length; i++) { [BUGGY] dev = values[i] - mean; accum += weights[i] * (dev * dev); accum2 += weights[i] * dev; } double sumWts = 0; for (int i = 0; i < weights.length; i++) { sumWts += weights[i]; }  [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final double mean final int begin final int length [VARIABLES] boolean incMoment isBiasCorrected double[] values weights long serialVersionUID SecondMoment m2 moment double accum accum2 dev mean sumWts var int begin i length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	
36	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] double var = Double.NaN; if (test(values, weights, begin, length)) { if (length == 1) { var = 0.0; } else if (length > 1) { double accum = 0.0; double dev = 0.0; double accum2 = 0.0; [BUGGY] [BUGGY] for (int i = begin; i < begin + length; i++) { dev = values[i] - mean; accum += weights[i] * (dev * dev); accum2 += weights[i] * dev; } double sumWts = 0; for (int i = 0; i < weights.length; i++) { sumWts += weights[i]; }  [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final double mean final int begin final int length [VARIABLES] boolean incMoment isBiasCorrected double[] values weights long serialVersionUID SecondMoment m2 moment double accum accum2 dev mean sumWts var int begin i length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	add	
37	[BUG] [BUGGY] dev = values[i] - mean; [FE] AssertionError [CONTEXT] double var = Double.NaN; if (test(values, weights, begin, length)) { if (length == 1) { var = 0.0; } else if (length > 1) { double accum = 0.0; double dev = 0.0; double accum2 = 0.0; for (int i = begin; i < begin + length; i++) { [BUGGY] dev = values[i] - mean; [BUGGY] accum += weights[i] * (dev * dev); accum2 += weights[i] * dev; } double sumWts = 0; for (int i = 0; i < weights.length; i++) { sumWts += weights[i]; } if (isBiasCorrected) { [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final double mean final int begin final int length [VARIABLES] boolean incMoment isBiasCorrected double[] values weights long serialVersionUID SecondMoment m2 moment double accum accum2 dev mean sumWts var int begin i length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	
38	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] double var = Double.NaN; if (test(values, weights, begin, length)) { if (length == 1) { var = 0.0; } else if (length > 1) { double accum = 0.0; double dev = 0.0; double accum2 = 0.0; for (int i = begin; i < begin + length; i++) { [BUGGY] [BUGGY] dev = values[i] - mean; accum += weights[i] * (dev * dev); accum2 += weights[i] * dev; } double sumWts = 0; for (int i = 0; i < weights.length; i++) { sumWts += weights[i]; } if (isBiasCorrected) { [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final double mean final int begin final int length [VARIABLES] boolean incMoment isBiasCorrected double[] values weights long serialVersionUID SecondMoment m2 moment double accum accum2 dev mean sumWts var int begin i length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	
39	[BUG] [BUGGY] accum += weights[i] * (dev * dev); [FE] AssertionError [CONTEXT] if (test(values, weights, begin, length)) { if (length == 1) { var = 0.0; } else if (length > 1) { double accum = 0.0; double dev = 0.0; double accum2 = 0.0; for (int i = begin; i < begin + length; i++) { dev = values[i] - mean; [BUGGY] accum += weights[i] * (dev * dev); [BUGGY] accum2 += weights[i] * dev; } double sumWts = 0; for (int i = 0; i < weights.length; i++) { sumWts += weights[i]; } if (isBiasCorrected) { var = (accum - (accum2 * accum2 / sumWts)) / (sumWts - 1.0); [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final double mean final int begin final int length [VARIABLES] boolean incMoment isBiasCorrected double[] values weights long serialVersionUID SecondMoment m2 moment double accum accum2 dev mean sumWts var int begin i length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	replace	
40	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] if (test(values, weights, begin, length)) { if (length == 1) { var = 0.0; } else if (length > 1) { double accum = 0.0; double dev = 0.0; double accum2 = 0.0; for (int i = begin; i < begin + length; i++) { dev = values[i] - mean; [BUGGY] [BUGGY] accum += weights[i] * (dev * dev); accum2 += weights[i] * dev; } double sumWts = 0; for (int i = 0; i < weights.length; i++) { sumWts += weights[i]; } if (isBiasCorrected) { var = (accum - (accum2 * accum2 / sumWts)) / (sumWts - 1.0); [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final double mean final int begin final int length [VARIABLES] boolean incMoment isBiasCorrected double[] values weights long serialVersionUID SecondMoment m2 moment double accum accum2 dev mean sumWts var int begin i length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	515	515	1	add	
41	[BUG] [BUGGY] accum2 += weights[i] * dev; [FE] AssertionError [CONTEXT] if (test(values, weights, begin, length)) { if (length == 1) { var = 0.0; } else if (length > 1) { double accum = 0.0; double dev = 0.0; double accum2 = 0.0; for (int i = begin; i < begin + length; i++) { dev = values[i] - mean; accum += weights[i] * (dev * dev); [BUGGY] accum2 += weights[i] * dev; [BUGGY] } double sumWts = 0; for (int i = 0; i < weights.length; i++) { sumWts += weights[i]; } if (isBiasCorrected) { var = (accum - (accum2 * accum2 / sumWts)) / (sumWts - 1.0); } else { [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final double mean final int begin final int length [VARIABLES] boolean incMoment isBiasCorrected double[] values weights long serialVersionUID SecondMoment m2 moment double accum accum2 dev mean sumWts var int begin i length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	516	516	1	replace	
42	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] if (test(values, weights, begin, length)) { if (length == 1) { var = 0.0; } else if (length > 1) { double accum = 0.0; double dev = 0.0; double accum2 = 0.0; for (int i = begin; i < begin + length; i++) { dev = values[i] - mean; accum += weights[i] * (dev * dev); [BUGGY] [BUGGY] accum2 += weights[i] * dev; } double sumWts = 0; for (int i = 0; i < weights.length; i++) { sumWts += weights[i]; } if (isBiasCorrected) { var = (accum - (accum2 * accum2 / sumWts)) / (sumWts - 1.0); } else { [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final double mean final int begin final int length [VARIABLES] boolean incMoment isBiasCorrected double[] values weights long serialVersionUID SecondMoment m2 moment double accum accum2 dev mean sumWts var int begin i length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	516	516	1	add	
43	[BUG] [BUGGY] double sumWts = 0; [FE] AssertionError [CONTEXT] } else if (length > 1) { double accum = 0.0; double dev = 0.0; double accum2 = 0.0; for (int i = begin; i < begin + length; i++) { dev = values[i] - mean; accum += weights[i] * (dev * dev); accum2 += weights[i] * dev; } [BUGGY] double sumWts = 0; [BUGGY] for (int i = 0; i < weights.length; i++) { sumWts += weights[i]; } if (isBiasCorrected) { var = (accum - (accum2 * accum2 / sumWts)) / (sumWts - 1.0); } else { var = (accum - (accum2 * accum2 / sumWts)) / sumWts; } } [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final double mean final int begin final int length [VARIABLES] boolean incMoment isBiasCorrected double[] values weights long serialVersionUID SecondMoment m2 moment double accum accum2 dev mean sumWts var int begin i length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	
44	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] } else if (length > 1) { double accum = 0.0; double dev = 0.0; double accum2 = 0.0; for (int i = begin; i < begin + length; i++) { dev = values[i] - mean; accum += weights[i] * (dev * dev); accum2 += weights[i] * dev; } [BUGGY] [BUGGY] double sumWts = 0; for (int i = 0; i < weights.length; i++) { sumWts += weights[i]; } if (isBiasCorrected) { var = (accum - (accum2 * accum2 / sumWts)) / (sumWts - 1.0); } else { var = (accum - (accum2 * accum2 / sumWts)) / sumWts; } } [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final double mean final int begin final int length [VARIABLES] boolean incMoment isBiasCorrected double[] values weights long serialVersionUID SecondMoment m2 moment double accum accum2 dev mean sumWts var int begin i length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	
45	[BUG] [BUGGY] for (int i = 0; i < weights.length; i++) { [FE] AssertionError [CONTEXT] double accum = 0.0; double dev = 0.0; double accum2 = 0.0; for (int i = begin; i < begin + length; i++) { dev = values[i] - mean; accum += weights[i] * (dev * dev); accum2 += weights[i] * dev; } double sumWts = 0; [BUGGY] for (int i = 0; i < weights.length; i++) { [BUGGY] sumWts += weights[i]; } if (isBiasCorrected) { var = (accum - (accum2 * accum2 / sumWts)) / (sumWts - 1.0); } else { var = (accum - (accum2 * accum2 / sumWts)) / sumWts; } } } [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final double mean final int begin final int length [VARIABLES] boolean incMoment isBiasCorrected double[] values weights long serialVersionUID SecondMoment m2 moment double accum accum2 dev mean sumWts var int begin i length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	520	520	1	replace	
46	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] double accum = 0.0; double dev = 0.0; double accum2 = 0.0; for (int i = begin; i < begin + length; i++) { dev = values[i] - mean; accum += weights[i] * (dev * dev); accum2 += weights[i] * dev; } double sumWts = 0; [BUGGY] [BUGGY] for (int i = 0; i < weights.length; i++) { sumWts += weights[i]; } if (isBiasCorrected) { var = (accum - (accum2 * accum2 / sumWts)) / (sumWts - 1.0); } else { var = (accum - (accum2 * accum2 / sumWts)) / sumWts; } } } [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final double mean final int begin final int length [VARIABLES] boolean incMoment isBiasCorrected double[] values weights long serialVersionUID SecondMoment m2 moment double accum accum2 dev mean sumWts var int begin i length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	520	520	1	add	
47	[BUG] [BUGGY] sumWts += weights[i]; [FE] AssertionError [CONTEXT] double dev = 0.0; double accum2 = 0.0; for (int i = begin; i < begin + length; i++) { dev = values[i] - mean; accum += weights[i] * (dev * dev); accum2 += weights[i] * dev; } double sumWts = 0; for (int i = 0; i < weights.length; i++) { [BUGGY] sumWts += weights[i]; [BUGGY] } if (isBiasCorrected) { var = (accum - (accum2 * accum2 / sumWts)) / (sumWts - 1.0); } else { var = (accum - (accum2 * accum2 / sumWts)) / sumWts; } } } return var; [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final double mean final int begin final int length [VARIABLES] boolean incMoment isBiasCorrected double[] values weights long serialVersionUID SecondMoment m2 moment double accum accum2 dev mean sumWts var int begin i length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	521	521	1	replace	
48	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] double dev = 0.0; double accum2 = 0.0; for (int i = begin; i < begin + length; i++) { dev = values[i] - mean; accum += weights[i] * (dev * dev); accum2 += weights[i] * dev; } double sumWts = 0; for (int i = 0; i < weights.length; i++) { [BUGGY] [BUGGY] sumWts += weights[i]; } if (isBiasCorrected) { var = (accum - (accum2 * accum2 / sumWts)) / (sumWts - 1.0); } else { var = (accum - (accum2 * accum2 / sumWts)) / sumWts; } } } return var; [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final double mean final int begin final int length [VARIABLES] boolean incMoment isBiasCorrected double[] values weights long serialVersionUID SecondMoment m2 moment double accum accum2 dev mean sumWts var int begin i length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	521	521	1	add	
49	[BUG] [BUGGY] if (isBiasCorrected) { [FE] AssertionError [CONTEXT] dev = values[i] - mean; accum += weights[i] * (dev * dev); accum2 += weights[i] * dev; } double sumWts = 0; for (int i = 0; i < weights.length; i++) { sumWts += weights[i]; } [BUGGY] if (isBiasCorrected) { [BUGGY] var = (accum - (accum2 * accum2 / sumWts)) / (sumWts - 1.0); } else { var = (accum - (accum2 * accum2 / sumWts)) / sumWts; } } } return var; } [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final double mean final int begin final int length [VARIABLES] boolean incMoment isBiasCorrected double[] values weights long serialVersionUID SecondMoment m2 moment double accum accum2 dev mean sumWts var int begin i length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	524	524	1	replace	
50	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] dev = values[i] - mean; accum += weights[i] * (dev * dev); accum2 += weights[i] * dev; } double sumWts = 0; for (int i = 0; i < weights.length; i++) { sumWts += weights[i]; } [BUGGY] [BUGGY] if (isBiasCorrected) { var = (accum - (accum2 * accum2 / sumWts)) / (sumWts - 1.0); } else { var = (accum - (accum2 * accum2 / sumWts)) / sumWts; } } } return var; } [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final double mean final int begin final int length [VARIABLES] boolean incMoment isBiasCorrected double[] values weights long serialVersionUID SecondMoment m2 moment double accum accum2 dev mean sumWts var int begin i length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	524	524	1	add	
51	[BUG] [BUGGY] var = (accum - (accum2 * accum2 / sumWts)) / (sumWts - 1.0); [FE] AssertionError [CONTEXT] accum += weights[i] * (dev * dev); accum2 += weights[i] * dev; } double sumWts = 0; for (int i = 0; i < weights.length; i++) { sumWts += weights[i]; } if (isBiasCorrected) { [BUGGY] var = (accum - (accum2 * accum2 / sumWts)) / (sumWts - 1.0); [BUGGY] } else { var = (accum - (accum2 * accum2 / sumWts)) / sumWts; } } } return var; } [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final double mean final int begin final int length [VARIABLES] boolean incMoment isBiasCorrected double[] values weights long serialVersionUID SecondMoment m2 moment double accum accum2 dev mean sumWts var int begin i length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	replace	
52	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] accum += weights[i] * (dev * dev); accum2 += weights[i] * dev; } double sumWts = 0; for (int i = 0; i < weights.length; i++) { sumWts += weights[i]; } if (isBiasCorrected) { [BUGGY] [BUGGY] var = (accum - (accum2 * accum2 / sumWts)) / (sumWts - 1.0); } else { var = (accum - (accum2 * accum2 / sumWts)) / sumWts; } } } return var; } [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final double mean final int begin final int length [VARIABLES] boolean incMoment isBiasCorrected double[] values weights long serialVersionUID SecondMoment m2 moment double accum accum2 dev mean sumWts var int begin i length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	525	525	1	add	
53	[BUG] [BUGGY] return var; [FE] AssertionError [CONTEXT] sumWts += weights[i]; } if (isBiasCorrected) { var = (accum - (accum2 * accum2 / sumWts)) / (sumWts - 1.0); } else { var = (accum - (accum2 * accum2 / sumWts)) / sumWts; } } } [BUGGY] return var; [BUGGY] } [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final double mean final int begin final int length [VARIABLES] boolean incMoment isBiasCorrected double[] values weights long serialVersionUID SecondMoment m2 moment double accum accum2 dev mean sumWts var int begin i length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	531	531	1	replace	
54	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] sumWts += weights[i]; } if (isBiasCorrected) { var = (accum - (accum2 * accum2 / sumWts)) / (sumWts - 1.0); } else { var = (accum - (accum2 * accum2 / sumWts)) / sumWts; } } } [BUGGY] [BUGGY] return var; } [CLASS] Variance [METHOD] evaluate [RETURN_TYPE] double  final double[] values final double[] weights final double mean final int begin final int length [VARIABLES] boolean incMoment isBiasCorrected double[] values weights long serialVersionUID SecondMoment m2 moment double accum accum2 dev mean sumWts var int begin i length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	531	531	1	add	
55	[BUG] [BUGGY] if (incMoment) { [FE] AssertionError [CONTEXT] public void clear() { [BUGGY] if (incMoment) { [BUGGY] moment.clear(); } } [CLASS] Variance [METHOD] clear [RETURN_TYPE] void  [VARIABLES] boolean incMoment isBiasCorrected long serialVersionUID SecondMoment m2 moment  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.30151134457776363	204	204	1	replace	
56	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public void clear() { [BUGGY] [BUGGY] if (incMoment) { moment.clear(); } } [CLASS] Variance [METHOD] clear [RETURN_TYPE] void  [VARIABLES] boolean incMoment isBiasCorrected long serialVersionUID SecondMoment m2 moment  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.30151134457776363	204	204	1	add	
57	[BUG] [BUGGY] moment.clear(); [FE] AssertionError [CONTEXT] public void clear() { if (incMoment) { [BUGGY] moment.clear(); [BUGGY] } } [CLASS] Variance [METHOD] clear [RETURN_TYPE] void  [VARIABLES] boolean incMoment isBiasCorrected long serialVersionUID SecondMoment m2 moment  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.30151134457776363	205	205	1	replace	
58	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public void clear() { if (incMoment) { [BUGGY] [BUGGY] moment.clear(); } } [CLASS] Variance [METHOD] clear [RETURN_TYPE] void  [VARIABLES] boolean incMoment isBiasCorrected long serialVersionUID SecondMoment m2 moment  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.30151134457776363	205	205	1	add	
59	[BUG] [BUGGY] } [FE] AssertionError [CONTEXT] public void clear() { if (incMoment) { moment.clear(); } [BUGGY] } [BUGGY]  [CLASS] Variance [METHOD] clear [RETURN_TYPE] void  [VARIABLES] boolean incMoment isBiasCorrected long serialVersionUID SecondMoment m2 moment  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.30151134457776363	207	207	1	replace	
60	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public void clear() { if (incMoment) { moment.clear(); } [BUGGY] [BUGGY] } [CLASS] Variance [METHOD] clear [RETURN_TYPE] void  [VARIABLES] boolean incMoment isBiasCorrected long serialVersionUID SecondMoment m2 moment  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.30151134457776363	207	207	1	add	
61	[BUG] [BUGGY] public Variance() { [FE] AssertionError [CONTEXT] [BUGGY] public Variance() { [BUGGY] moment = new SecondMoment(); } [CLASS] Variance [METHOD] <init> [RETURN_TYPE] Variance()  [VARIABLES] boolean incMoment isBiasCorrected long serialVersionUID SecondMoment moment  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.2581988897471611	97	97	1	replace	
62	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] [BUGGY] [BUGGY] public Variance() { moment = new SecondMoment(); } [CLASS] Variance [METHOD] <init> [RETURN_TYPE] Variance()  [VARIABLES] boolean incMoment isBiasCorrected long serialVersionUID SecondMoment moment  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.2581988897471611	97	97	1	add	
63	[BUG] [BUGGY] protected SecondMoment moment = null; [FE] AssertionError [CONTEXT] [BUGGY] protected SecondMoment moment = null; [BUGGY]  [CLASS] Variance  [VARIABLES] 	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.2581988897471611	75	75	1	replace	
64	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] [BUGGY] [BUGGY] protected SecondMoment moment = null; [CLASS] Variance  [VARIABLES] 	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.2581988897471611	75	75	1	add	
65	[BUG] [BUGGY] protected boolean incMoment = true; [FE] AssertionError [CONTEXT] [BUGGY] protected boolean incMoment = true; [BUGGY]  [CLASS] Variance  [VARIABLES] 	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.2581988897471611	84	84	1	replace	
66	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] [BUGGY] [BUGGY] protected boolean incMoment = true; [CLASS] Variance  [VARIABLES] 	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.2581988897471611	84	84	1	add	
67	[BUG] [BUGGY] private boolean isBiasCorrected = true; [FE] AssertionError [CONTEXT] [BUGGY] private boolean isBiasCorrected = true; [BUGGY]  [CLASS] Variance  [VARIABLES] 	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.2581988897471611	91	91	1	replace	
68	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] [BUGGY] [BUGGY] private boolean isBiasCorrected = true; [CLASS] Variance  [VARIABLES] 	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.2581988897471611	91	91	1	add	
69	[BUG] [BUGGY] moment = new SecondMoment(); [FE] AssertionError [CONTEXT] public Variance() { [BUGGY] moment = new SecondMoment(); [BUGGY] } [CLASS] Variance [METHOD] <init> [RETURN_TYPE] Variance()  [VARIABLES] boolean incMoment isBiasCorrected long serialVersionUID SecondMoment moment  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.2581988897471611	98	98	1	replace	
70	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public Variance() { [BUGGY] [BUGGY] moment = new SecondMoment(); } [CLASS] Variance [METHOD] <init> [RETURN_TYPE] Variance()  [VARIABLES] boolean incMoment isBiasCorrected long serialVersionUID SecondMoment moment  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.2581988897471611	98	98	1	add	
71	[BUG] [BUGGY] } [FE] AssertionError [CONTEXT] public Variance() { moment = new SecondMoment(); [BUGGY] } [BUGGY]  [CLASS] Variance [METHOD] <init> [RETURN_TYPE] Variance()  [VARIABLES] boolean incMoment isBiasCorrected long serialVersionUID SecondMoment moment  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.2581988897471611	99	99	1	replace	
72	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public Variance() { moment = new SecondMoment(); [BUGGY] [BUGGY] } [CLASS] Variance [METHOD] <init> [RETURN_TYPE] Variance()  [VARIABLES] boolean incMoment isBiasCorrected long serialVersionUID SecondMoment moment  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.2581988897471611	99	99	1	add	
