bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  dev  =  values[i]  -  accum;  accum2  +=  values[i]  *  (dev  *  dev);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i]  -  accum;  accum2  +=  values[i]  *  (dev  *  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i]  -  accum;  accum2  +=  values[i]  *  (dev  *  dev);	  double    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    (dev    *    dev);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	132	None	replace
2	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  +=  values[i]  *  (dev  *  var);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum2  +=  values[i]  *  (dev  *  var);	  double    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    (dev    *    dev);    	compilable	  [FE]  AssertionError  	132	2	replace
3	[BUG]  [BUGGY]  accum2  +=  values[i]  *  (dev  *  var);  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  +=  values[i]  *  (dev  *  var);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  +=  values[i]  *  (dev  *  var);	  double    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    (dev    *    dev);    	compilable	  [FE]  AssertionError  	132	2	replace
4	[BUG]  [BUGGY]  double  dev  =  values[i]  -  accum;  accum  +=  values[i]  *  (dev  *  dev);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i]  -  accum;  accum  +=  values[i]  *  (dev  *  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i]  -  accum;  accum  +=  values[i]  *  (dev  *  dev);	  double    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    (dev    *    dev);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	132	None	replace
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  dev  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  values[i]  /  dev  +  1;	  dev    =    values[i]    /    mean    +    1;    	compilable	  [FE]  AssertionError  	91	2	replace
6	[BUG]  [BUGGY]  dev  =  values[i]  /  dev  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  dev  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  /  dev  +  1;	  dev    =    values[i]    /    mean    +    1;    	compilable	  [FE]  AssertionError  	91	2	replace
7	[BUG]  [BUGGY]  dev  =  values[i]  /  dev2  +  1;  [CE]  cannot  find  symbol  dev2  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  dev2  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  /  dev2  +  1;	  dev    =    values[i]    /    mean    +    1;    	non-compiled	[CE]  cannot  find  symbol  dev2	91	None	replace
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  /  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  accum2  /  mean  +  1;	  dev    =    values[i]    /    mean    +    1;    	compilable	  [FE]  AssertionError  	91	3	replace
9	[BUG]  [BUGGY]  dev  =  accum2  /  mean  +  1;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  /  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  accum2  /  mean  +  1;	  dev    =    values[i]    /    mean    +    1;    	compilable	  [FE]  AssertionError  	91	3	replace
10	[BUG]  [BUGGY]  double  dev  =  Math.abs(values[i]  /  accum2);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  Math.abs(values[i]  /  accum2);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  Math.abs(values[i]  /  accum2);	  double    dev    =    Math.abs(values[i]    /    begin);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	63	None	replace
11	[BUG]  [BUGGY]  double  dev  =  Math.abs(values[i]  /  accum);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  Math.abs(values[i]  /  accum);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  Math.abs(values[i]  /  accum);	  double    dev    =    Math.abs(values[i]    /    begin);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	63	None	replace
12	[BUG]  [BUGGY]  double  dev  =  Math.abs(values[i]  *  begin);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  Math.abs(values[i]  *  begin);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  Math.abs(values[i]  *  begin);	  double    dev    =    Math.abs(values[i]    /    begin);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	63	None	replace
13	[BUG]  [BUGGY]  int  dev  =  values[i]  -  accum2;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  int  dev  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	int  dev  =  values[i]  -  accum2;	  dev    =    values[i]    -    accum2;    int    dev    =    values[i]    -    accum2;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	40	None	replace
14	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum2  =  values[i]  -  accum2;	  dev    =    values[i]    -    accum2;    int    dev    =    values[i]    -    accum2;    	compilable	  [FE]  AssertionError  	40	3	replace
15	[BUG]  [BUGGY]  accum2  =  values[i]  -  accum2;  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  =  values[i]  -  accum2;	  dev    =    values[i]    -    accum2;    int    dev    =    values[i]    -    accum2;    	compilable	  [FE]  AssertionError  	40	3	replace
16	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  *  mean;  accum  +=  weights[i]  *  (dev  *  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum2  =  values[i]  *  mean;  accum  +=  weights[i]  *  (dev  *  dev);	  accum2    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    	compilable	  [FE]  AssertionError  	18	3	replace
17	[BUG]  [BUGGY]  accum2  =  values[i]  *  mean;  accum  +=  weights[i]  *  (dev  *  dev);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  *  mean;  accum  +=  weights[i]  *  (dev  *  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  =  values[i]  *  mean;  accum  +=  weights[i]  *  (dev  *  dev);	  accum2    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    	compilable	  [FE]  AssertionError  	18	3	replace
18	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  mean  +  1;  dev  =  values[i]  *  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev    =    values[i]    *    mean    +    1;    dev  =  values[i]  *  mean  +  1;	  	compilable	  [FE]  AssertionError  	92	1	add
19	[BUG]  [BUGGY]  dev  =  values[i]  *  mean  +  1;  dev  =  values[i]  *  mean  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  mean  +  1;  dev  =  values[i]  *  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    *    mean    +    1;    dev  =  values[i]  *  mean  +  1;	  	compilable	  [FE]  AssertionError  	92	1	add
20	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  mean  +  1;  accum  =  values[i]  *  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev    =    values[i]    *    mean    +    1;    accum  =  values[i]  *  mean  +  1;	  	compilable	  [FE]  AssertionError  	92	3	add
21	[BUG]  [BUGGY]  dev  =  values[i]  *  mean  +  1;  accum  =  values[i]  *  mean  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  mean  +  1;  accum  =  values[i]  *  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    *    mean    +    1;    accum  =  values[i]  *  mean  +  1;	  	compilable	  [FE]  AssertionError  	92	3	add
22	[BUG]  [BUGGY]  dev  =  values[i]  *  mean  +  1;  Dev  =  values[i]  *  mean  +  1;  [CE]  cannot  find  symbol  Dev  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  mean  +  1;  Dev  =  values[i]  *  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    *    mean    +    1;    Dev  =  values[i]  *  mean  +  1;	  	non-compiled	[CE]  cannot  find  symbol  Dev	92	None	add
23	[BUG]  [BUGGY]  dev  =  values[i]  *  mean  +  1;  int  dev  =  values[i]  *  mean  +  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  mean  +  1;  int  dev  =  values[i]  *  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    *    mean    +    1;    int  dev  =  values[i]  *  mean  +  1;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	92	None	add
24	[BUG]  [BUGGY]  dev  =  values[i]  *  mean  +  1;  double  dev  =  values[i]  *  mean  +  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  mean  +  1;  double  dev  =  values[i]  *  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    *    mean    +    1;    double  dev  =  values[i]  *  mean  +  1;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	92	None	add
25	[BUG]  [BUGGY]  double  dev  =  Double.POSITIVE_INFINITY;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  Double.POSITIVE_INFINITY;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  Double.POSITIVE_INFINITY;	  double    dev    =    Double.NaN;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	53	None	replace
26	[BUG]  [BUGGY]  double  dev  =  1.0;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  1.0;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  1.0;	  double    dev    =    Double.NaN;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	53	None	replace
27	[BUG]  [BUGGY]  double  dev  =  0.0;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  0.0;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  0.0;	  double    dev    =    Double.NaN;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	53	None	replace
28	[BUG]  [BUGGY]  double  dev  =  values[i].doubleValue()  /  accum2;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i].doubleValue()  /  accum2;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i].doubleValue()  /  accum2;	  double    dev    =    values[i].doubleValue()    +    accum2;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	89	None	replace
29	[BUG]  [BUGGY]  double  dev  =  values[i].doubleValue()  *  accum2;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i].doubleValue()  *  accum2;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i].doubleValue()  *  accum2;	  double    dev    =    values[i].doubleValue()    +    accum2;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	89	None	replace
30	[BUG]  [BUGGY]  double  dev  =  values[i].doubleValue()  +  accum;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i].doubleValue()  +  accum;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i].doubleValue()  +  accum;	  double    dev    =    values[i].doubleValue()    +    accum2;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	89	None	replace
31	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  -  values[i];  dev  =  accum2  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev    =    accum2    -    values[i];    dev  =  accum2  -  values[i];	  	compilable	  [FE]  AssertionError  	3	1	add
32	[BUG]  [BUGGY]  dev  =  accum2  -  values[i];  dev  =  accum2  -  values[i];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  -  values[i];  dev  =  accum2  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    accum2    -    values[i];    dev  =  accum2  -  values[i];	  	compilable	  [FE]  AssertionError  	3	1	add
33	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  -  values[i];  accum2  =  accum2  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev    =    accum2    -    values[i];    accum2  =  accum2  -  values[i];	  	compilable	  [FE]  AssertionError  	3	3	add
34	[BUG]  [BUGGY]  dev  =  accum2  -  values[i];  accum2  =  accum2  -  values[i];  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  -  values[i];  accum2  =  accum2  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    accum2    -    values[i];    accum2  =  accum2  -  values[i];	  	compilable	  [FE]  AssertionError  	3	3	add
35	[BUG]  [BUGGY]  dev  =  accum2  -  values[i];  Dev  =  accum2  -  values[i];  [CE]  cannot  find  symbol  Dev  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  -  values[i];  Dev  =  accum2  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    accum2    -    values[i];    Dev  =  accum2  -  values[i];	  	non-compiled	[CE]  cannot  find  symbol  Dev	3	None	add
36	[BUG]  [BUGGY]  dev  =  accum2  -  values[i];  int  dev  =  accum2  -  values[i];  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  -  values[i];  int  dev  =  accum2  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    accum2    -    values[i];    int  dev  =  accum2  -  values[i];	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	3	None	add
37	[BUG]  [BUGGY]  dev  =  accum2  -  values[i];  double  dev  =  accum2  -  values[i];  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  -  values[i];  double  dev  =  accum2  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    accum2    -    values[i];    double  dev  =  accum2  -  values[i];	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	3	None	add
38	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  +=  weights[i]  *  (dev  *  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum2  +=  weights[i]  *  (dev  *  dev);	  accum2    +=    values[i]    *    dev;    	compilable	  [FE]  AssertionError  	8	2	replace
39	[BUG]  [BUGGY]  accum2  +=  weights[i]  *  (dev  *  dev);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  +=  weights[i]  *  (dev  *  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  +=  weights[i]  *  (dev  *  dev);	  accum2    +=    values[i]    *    dev;    	compilable	  [FE]  AssertionError  	8	2	replace
40	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  /  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  accum2  /  values[i];	  dev    =    accum2    -    values[i];    	compilable	  [FE]  AssertionError  	4	2	replace
41	[BUG]  [BUGGY]  dev  =  accum2  /  values[i];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  /  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  accum2  /  values[i];	  dev    =    accum2    -    values[i];    	compilable	  [FE]  AssertionError  	4	2	replace
42	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  -  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  accum2  -  values[i]  *  dev;	  dev    =    accum2    -    values[i];    	compilable	  [FE]  AssertionError  	4	2	replace
43	[BUG]  [BUGGY]  dev  =  accum2  -  values[i]  *  dev;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  -  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  accum2  -  values[i]  *  dev;	  dev    =    accum2    -    values[i];    	compilable	  [FE]  AssertionError  	4	2	replace
44	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  -  weights[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  accum2  -  weights[i];	  dev    =    accum2    -    values[i];    	compilable	  [FE]  AssertionError  	4	3	replace
45	[BUG]  [BUGGY]  dev  =  accum2  -  weights[i];  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  -  weights[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  accum2  -  weights[i];	  dev    =    accum2    -    values[i];    	compilable	  [FE]  AssertionError  	4	3	replace
46	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  +=  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum2  +=  values[i]  *  mean;	  dev    =    values[i]    *    mean;    accum    +=    values[i]    *    mean;    	compilable	  [FE]  AssertionError  	122	3	replace
47	[BUG]  [BUGGY]  accum2  +=  values[i]  *  mean;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  +=  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  +=  values[i]  *  mean;	  dev    =    values[i]    *    mean;    accum    +=    values[i]    *    mean;    	compilable	  [FE]  AssertionError  	122	3	replace
48	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum  =  values[i]  *  mean;	  dev    =    values[i]    *    mean;    accum    +=    values[i]    *    mean;    	compilable	  [FE]  AssertionError  	122	3	replace
49	[BUG]  [BUGGY]  accum  =  values[i]  *  mean;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  =  values[i]  *  mean;	  dev    =    values[i]    *    mean;    accum    +=    values[i]    *    mean;    	compilable	  [FE]  AssertionError  	122	3	replace
50	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  +=  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum  +=  values[i]  *  mean;	  dev    =    values[i]    *    mean;    accum    +=    values[i]    *    mean;    	compilable	  [FE]  AssertionError  	122	3	replace
51	[BUG]  [BUGGY]  accum  +=  values[i]  *  mean;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  +=  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  +=  values[i]  *  mean;	  dev    =    values[i]    *    mean;    accum    +=    values[i]    *    mean;    	compilable	  [FE]  AssertionError  	122	3	replace
52	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  +=  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum  +=  values[i]  *  dev;	  dev    =    values[i]    *    mean;    accum    +=    values[i]    *    mean;    	compilable	  [FE]  AssertionError  	122	2	replace
53	[BUG]  [BUGGY]  accum  +=  values[i]  *  dev;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  +=  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  +=  values[i]  *  dev;	  dev    =    values[i]    *    mean;    accum    +=    values[i]    *    mean;    	compilable	  [FE]  AssertionError  	122	2	replace
54	[BUG]  [BUGGY]  double  dev  =  values[i]  /  accum2;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i]  /  accum2;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i]  /  accum2;	  double    dev    =    values[i]    -    accum2;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	77	None	replace
55	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  +=  values[i]  *  (dev  /  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum2  +=  values[i]  *  (dev  /  dev);	  accum2    +=    values[i]    *    (dev    *    dev);    	compilable	  [FE]  AssertionError  	16	2	replace
56	[BUG]  [BUGGY]  accum2  +=  values[i]  *  (dev  /  dev);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  +=  values[i]  *  (dev  /  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  +=  values[i]  *  (dev  /  dev);	  accum2    +=    values[i]    *    (dev    *    dev);    	compilable	  [FE]  AssertionError  	16	2	replace
57	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    mean    -    values[i];    dev  =  mean  -  values[i];  dev  =  mean  -  values[i];  dev  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev        =        mean        -        values[i];        dev    =    mean    -    values[i];    dev  =  mean  -  values[i];  dev  =  mean  -  values[i];	  	compilable	  [FE]  AssertionError  	94	1	add
58	[BUG]  [BUGGY]  dev    =    mean    -    values[i];    dev  =  mean  -  values[i];  dev  =  mean  -  values[i];  dev  =  mean  -  values[i];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    mean    -    values[i];    dev  =  mean  -  values[i];  dev  =  mean  -  values[i];  dev  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        mean        -        values[i];        dev    =    mean    -    values[i];    dev  =  mean  -  values[i];  dev  =  mean  -  values[i];	  	compilable	  [FE]  AssertionError  	94	1	add
59	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    mean    -    values[i];    dev  =  mean  -  values[i];  accum  =  mean  -  values[i];  dev  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev        =        mean        -        values[i];        dev    =    mean    -    values[i];    accum  =  mean  -  values[i];  dev  =  mean  -  values[i];	  	compilable	  [FE]  AssertionError  	94	3	add
60	[BUG]  [BUGGY]  dev    =    mean    -    values[i];    dev  =  mean  -  values[i];  accum  =  mean  -  values[i];  dev  =  mean  -  values[i];  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    mean    -    values[i];    dev  =  mean  -  values[i];  accum  =  mean  -  values[i];  dev  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        mean        -        values[i];        dev    =    mean    -    values[i];    accum  =  mean  -  values[i];  dev  =  mean  -  values[i];	  	compilable	  [FE]  AssertionError  	94	3	add
61	[BUG]  [BUGGY]  dev    =    mean    -    values[i];    dev  =  mean  -  values[i];  double  dev  =  mean  -  values[i];  dev  =  mean  -  values[i];  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    mean    -    values[i];    dev  =  mean  -  values[i];  double  dev  =  mean  -  values[i];  dev  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        mean        -        values[i];        dev    =    mean    -    values[i];    double  dev  =  mean  -  values[i];  dev  =  mean  -  values[i];	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	94	None	add
62	[BUG]  [BUGGY]  dev    =    mean    -    values[i];    dev  =  mean  -  values[i];  Dev  =  mean  -  values[i];  dev  =  mean  -  values[i];  [CE]  cannot  find  symbol  Dev  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    mean    -    values[i];    dev  =  mean  -  values[i];  Dev  =  mean  -  values[i];  dev  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        mean        -        values[i];        dev    =    mean    -    values[i];    Dev  =  mean  -  values[i];  dev  =  mean  -  values[i];	  	non-compiled	[CE]  cannot  find  symbol  Dev	94	None	add
63	[BUG]  [BUGGY]  dev    =    mean    -    values[i];    dev  =  mean  -  values[i];  int  dev  =  mean  -  values[i];  dev  =  mean  -  values[i];  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    mean    -    values[i];    dev  =  mean  -  values[i];  int  dev  =  mean  -  values[i];  dev  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        mean        -        values[i];        dev    =    mean    -    values[i];    int  dev  =  mean  -  values[i];  dev  =  mean  -  values[i];	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	94	None	add
64	[BUG]  [BUGGY]  double  dev  =  weights[i]  /  accum2;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  weights[i]  /  accum2;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  weights[i]  /  accum2;	  double    dev    =    weights[i]    -    accum2;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	80	None	replace
65	[BUG]  [BUGGY]  double  dev  =  accum2  -  weights[i];  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  accum2  -  weights[i];  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  accum2  -  weights[i];	  double    dev    =    weights[i]    -    accum2;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	80	None	replace
66	[BUG]  [BUGGY]  double  dev  =  weights[i]  -  accum;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  weights[i]  -  accum;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  weights[i]  -  accum;	  double    dev    =    weights[i]    -    accum2;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	80	None	replace
67	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    /    mean;    accum  =  values[i]  /  mean;  dev  =  values[i]  /  mean;  accum  =  values[i]  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev        =        values[i]        /        mean;        accum    =    values[i]    /    mean;    dev  =  values[i]  /  mean;  accum  =  values[i]  /  mean;	  	compilable	  [FE]  AssertionError  	44	3	add
68	[BUG]  [BUGGY]  dev    =    values[i]    /    mean;    accum  =  values[i]  /  mean;  dev  =  values[i]  /  mean;  accum  =  values[i]  /  mean;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    /    mean;    accum  =  values[i]  /  mean;  dev  =  values[i]  /  mean;  accum  =  values[i]  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        /        mean;        accum    =    values[i]    /    mean;    dev  =  values[i]  /  mean;  accum  =  values[i]  /  mean;	  	compilable	  [FE]  AssertionError  	44	3	add
69	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    /    mean;    accum  =  values[i]  /  mean;  accum  =  values[i]  /  mean;  accum  =  values[i]  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev        =        values[i]        /        mean;        accum    =    values[i]    /    mean;    accum  =  values[i]  /  mean;  accum  =  values[i]  /  mean;	  	compilable	  [FE]  AssertionError  	44	3	add
70	[BUG]  [BUGGY]  dev    =    values[i]    /    mean;    accum  =  values[i]  /  mean;  accum  =  values[i]  /  mean;  accum  =  values[i]  /  mean;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    /    mean;    accum  =  values[i]  /  mean;  accum  =  values[i]  /  mean;  accum  =  values[i]  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        /        mean;        accum    =    values[i]    /    mean;    accum  =  values[i]  /  mean;  accum  =  values[i]  /  mean;	  	compilable	  [FE]  AssertionError  	44	3	add
71	[BUG]  [BUGGY]  dev    =    values[i]    /    mean;    accum  =  values[i]  /  mean;  Dev  =  values[i]  /  mean;  accum  =  values[i]  /  mean;  [CE]  cannot  find  symbol  Dev  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    /    mean;    accum  =  values[i]  /  mean;  Dev  =  values[i]  /  mean;  accum  =  values[i]  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        /        mean;        accum    =    values[i]    /    mean;    Dev  =  values[i]  /  mean;  accum  =  values[i]  /  mean;	  	non-compiled	[CE]  cannot  find  symbol  Dev	44	None	add
72	[BUG]  [BUGGY]  dev    =    values[i]    /    mean;    accum  =  values[i]  /  mean;  int  dev  =  values[i]  /  mean;  accum  =  values[i]  /  mean;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    /    mean;    accum  =  values[i]  /  mean;  int  dev  =  values[i]  /  mean;  accum  =  values[i]  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        /        mean;        accum    =    values[i]    /    mean;    int  dev  =  values[i]  /  mean;  accum  =  values[i]  /  mean;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	44	None	add
73	[BUG]  [BUGGY]  dev    =    values[i]    /    mean;    accum  =  values[i]  /  mean;  double  dev  =  values[i]  /  mean;  accum  =  values[i]  /  mean;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    /    mean;    accum  =  values[i]  /  mean;  double  dev  =  values[i]  /  mean;  accum  =  values[i]  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        /        mean;        accum    =    values[i]    /    mean;    double  dev  =  values[i]  /  mean;  accum  =  values[i]  /  mean;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	44	None	add
74	[BUG]  [BUGGY]  Dev  =  values[i]  -  accum2;  [CE]  cannot  find  symbol  Dev  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  Dev  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	Dev  =  values[i]  -  accum2;	  dev    =    values[i]    -    accum;    Dev    =    values[i]    -    accum;    	non-compiled	[CE]  cannot  find  symbol  Dev	60	None	replace
75	[BUG]  [BUGGY]  dev  =  values[i]  -  accum;  Dev  =  values[i]  -  accum2;  [CE]  cannot  find  symbol  Dev  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  accum;  Dev  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  -  accum;  Dev  =  values[i]  -  accum2;	  dev    =    values[i]    -    accum;    Dev    =    values[i]    -    accum;    	non-compiled	[CE]  cannot  find  symbol  Dev	60	None	replace
76	[BUG]  [BUGGY]  dev  =  values[i]  -  accum2;  Dev  =  values[i]  -  accum;  [CE]  cannot  find  symbol  Dev  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  accum2;  Dev  =  values[i]  -  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  -  accum2;  Dev  =  values[i]  -  accum;	  dev    =    values[i]    -    accum;    Dev    =    values[i]    -    accum;    	non-compiled	[CE]  cannot  find  symbol  Dev	60	None	replace
77	[BUG]  [BUGGY]  double  dev  =  value(values[i],  begin  +  length,  accum2);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  value(values[i],  begin  +  length,  accum2);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  value(values[i],  begin  +  length,  accum2);	          double    dev    =    value(values[i],    begin    +    length);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	108	None	replace
78	[BUG]  [BUGGY]  double  dev  =  value(values[i],  begin  +  length,  weights[i]);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  value(values[i],  begin  +  length,  weights[i]);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  value(values[i],  begin  +  length,  weights[i]);	          double    dev    =    value(values[i],    begin    +    length);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	108	None	replace
79	[BUG]  [BUGGY]  double  dev  =  value(values[i],  begin  +  length,  accum);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  value(values[i],  begin  +  length,  accum);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  value(values[i],  begin  +  length,  accum);	          double    dev    =    value(values[i],    begin    +    length);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	108	None	replace
80	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  /  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum  =  values[i]  /  dev;	  dev    =    values[i]    /    mean;    accum    =    values[i]    /    mean;    	compilable	  [FE]  AssertionError  	45	2	replace
81	[BUG]  [BUGGY]  accum  =  values[i]  /  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  /  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  =  values[i]  /  dev;	  dev    =    values[i]    /    mean;    accum    =    values[i]    /    mean;    	compilable	  [FE]  AssertionError  	45	2	replace
82	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  dev;  accum  =  values[i]  /  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  values[i]  /  dev;  accum  =  values[i]  /  dev;	  dev    =    values[i]    /    mean;    accum    =    values[i]    /    mean;    	compilable	  [FE]  AssertionError  	45	2	replace
83	[BUG]  [BUGGY]  dev  =  values[i]  /  dev;  accum  =  values[i]  /  dev;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  dev;  accum  =  values[i]  /  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  /  dev;  accum  =  values[i]  /  dev;	  dev    =    values[i]    /    mean;    accum    =    values[i]    /    mean;    	compilable	  [FE]  AssertionError  	45	2	replace
84	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum  =  values[i]  /  mean;	  dev    =    values[i]    /    mean;    accum    =    values[i]    /    mean;    	compilable	  [FE]  AssertionError  	45	3	replace
85	[BUG]  [BUGGY]  accum  =  values[i]  /  mean;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  =  values[i]  /  mean;	  dev    =    values[i]    /    mean;    accum    =    values[i]    /    mean;    	compilable	  [FE]  AssertionError  	45	3	replace
86	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  dev;  accum2  =  values[i]  /  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  values[i]  /  dev;  accum2  =  values[i]  /  dev;	  dev    =    values[i]    /    mean;    accum    =    values[i]    /    mean;    	compilable	  [FE]  AssertionError  	45	2	replace
87	[BUG]  [BUGGY]  dev  =  values[i]  /  dev;  accum2  =  values[i]  /  dev;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  dev;  accum2  =  values[i]  /  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  /  dev;  accum2  =  values[i]  /  dev;	  dev    =    values[i]    /    mean;    accum    =    values[i]    /    mean;    	compilable	  [FE]  AssertionError  	45	2	replace
88	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum  =  values[i]  *  dev;	  dev    =    values[i]    *    mean;    accum    =    values[i]    *    mean;    	compilable	  [FE]  AssertionError  	68	2	replace
89	[BUG]  [BUGGY]  accum  =  values[i]  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  =  values[i]  *  dev;	  dev    =    values[i]    *    mean;    accum    =    values[i]    *    mean;    	compilable	  [FE]  AssertionError  	68	2	replace
90	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  mean;  accum  =  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  values[i]  *  mean;  accum  =  values[i]  *  dev;	  dev    =    values[i]    *    mean;    accum    =    values[i]    *    mean;    	compilable	  [FE]  AssertionError  	68	3	replace
91	[BUG]  [BUGGY]  dev  =  values[i]  *  mean;  accum  =  values[i]  *  dev;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  mean;  accum  =  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  *  mean;  accum  =  values[i]  *  dev;	  dev    =    values[i]    *    mean;    accum    =    values[i]    *    mean;    	compilable	  [FE]  AssertionError  	68	3	replace
92	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  dev;  accum  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  values[i]  *  dev;  accum  =  values[i]  *  mean;	  dev    =    values[i]    *    mean;    accum    =    values[i]    *    mean;    	compilable	  [FE]  AssertionError  	68	3	replace
93	[BUG]  [BUGGY]  dev  =  values[i]  *  dev;  accum  =  values[i]  *  mean;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  dev;  accum  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  *  dev;  accum  =  values[i]  *  mean;	  dev    =    values[i]    *    mean;    accum    =    values[i]    *    mean;    	compilable	  [FE]  AssertionError  	68	3	replace
94	[BUG]  [BUGGY]  double  mean  =  weights[i].doubleValue()  +  1;  [CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  mean  =  weights[i].doubleValue()  +  1;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  mean  =  weights[i].doubleValue()  +  1;	  double    mean    =    weights[i].doubleValue();    	non-compiled	[CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	83	None	replace
95	[BUG]  [BUGGY]  double  mean  =  weights[i].doubleValue()  /  2;  [CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  mean  =  weights[i].doubleValue()  /  2;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  mean  =  weights[i].doubleValue()  /  2;	  double    mean    =    weights[i].doubleValue();    	non-compiled	[CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	83	None	replace
96	[BUG]  [BUGGY]  accum2  =  values[i]  -  accum;  double  dev  =  values[i]  -  accum2;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  -  accum;  double  dev  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  =  values[i]  -  accum;  double  dev  =  values[i]  -  accum2;	  dev    =    values[i]    -    accum;    double    dev    =    values[i]    -    accum;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	111	None	replace
97	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  -  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum2  =  values[i]  -  accum;	  dev    =    values[i]    -    accum;    double    dev    =    values[i]    -    accum;    	compilable	  [FE]  AssertionError  	111	3	replace
98	[BUG]  [BUGGY]  accum2  =  values[i]  -  accum;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  -  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  =  values[i]  -  accum;	  dev    =    values[i]    -    accum;    double    dev    =    values[i]    -    accum;    	compilable	  [FE]  AssertionError  	111	3	replace
99	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  +=  values[i]  *  dev;  accum2  +=  values[i]  *  dev;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum2    +=    values[i]    *    dev;    accum2  +=  values[i]  *  dev;	  	compilable	  [FE]  AssertionError  	7	3	add
100	[BUG]  [BUGGY]  accum2  +=  values[i]  *  dev;  accum2  +=  values[i]  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  +=  values[i]  *  dev;  accum2  +=  values[i]  *  dev;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2    +=    values[i]    *    dev;    accum2  +=  values[i]  *  dev;	  	compilable	  [FE]  AssertionError  	7	3	add
101	[BUG]  [BUGGY]  accum2  +=  values[i]  *  dev;  double  accum2  +=  values[i]  *  dev;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  +=  values[i]  *  dev;  double  accum2  +=  values[i]  *  dev;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2    +=    values[i]    *    dev;    double  accum2  +=  values[i]  *  dev;	  	non-compiled	[CE]  ';'  expected	7	None	add
102	[BUG]  [BUGGY]  accum2  +=  values[i]  *  dev;  int  accum2  +=  values[i]  *  dev;  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  +=  values[i]  *  dev;  int  accum2  +=  values[i]  *  dev;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2    +=    values[i]    *    dev;    int  accum2  +=  values[i]  *  dev;	  	non-compiled	[CE]  ';'  expected	7	None	add
103	[BUG]  [BUGGY]  double  mean  =  values[i]  /  accum;  [CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  mean  =  values[i]  /  accum;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  mean  =  values[i]  /  accum;	  double    mean    =    values[i]    -    accum;    	non-compiled	[CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	51	None	replace
104	[BUG]  [BUGGY]  double  mean  =  weights[i]  -  accum2;  [CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  mean  =  weights[i]  -  accum2;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  mean  =  weights[i]  -  accum2;	  double    mean    =    values[i]    -    accum;    	non-compiled	[CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	51	None	replace
105	[BUG]  [BUGGY]  double  mean  =  weights[i]  /  accum;  [CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  mean  =  weights[i]  /  accum;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  mean  =  weights[i]  /  accum;	  double    mean    =    values[i]    -    accum;    	non-compiled	[CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	51	None	replace
106	[BUG]  [BUGGY]  double  dev  =  values[i].doubleValue()  /  accum;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i].doubleValue()  /  accum;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i].doubleValue()  /  accum;	  double    dev    =    values[i].doubleValue()    -    accum;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	130	None	replace
107	[BUG]  [BUGGY]  double  dev  =  values[i].doubleValue()  -  accum2;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i].doubleValue()  -  accum2;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i].doubleValue()  -  accum2;	  double    dev    =    values[i].doubleValue()    -    accum;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	130	None	replace
108	[BUG]  [BUGGY]  double  dev  =  values[i].doubleValue()  *  accum;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i].doubleValue()  *  accum;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i].doubleValue()  *  accum;	  double    dev    =    values[i].doubleValue()    -    accum;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	130	None	replace
109	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum  -  values[i];  dev  =  accum  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev    =    accum    -    values[i];    dev  =  accum  -  values[i];	  	compilable	  [FE]  AssertionError  	126	1	add
110	[BUG]  [BUGGY]  dev  =  accum  -  values[i];  dev  =  accum  -  values[i];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum  -  values[i];  dev  =  accum  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    accum    -    values[i];    dev  =  accum  -  values[i];	  	compilable	  [FE]  AssertionError  	126	1	add
111	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum  -  values[i];  accum  =  accum  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev    =    accum    -    values[i];    accum  =  accum  -  values[i];	  	compilable	  [FE]  AssertionError  	126	3	add
112	[BUG]  [BUGGY]  dev  =  accum  -  values[i];  accum  =  accum  -  values[i];  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum  -  values[i];  accum  =  accum  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    accum    -    values[i];    accum  =  accum  -  values[i];	  	compilable	  [FE]  AssertionError  	126	3	add
113	[BUG]  [BUGGY]  dev  =  accum  -  values[i];  Dev  =  accum  -  values[i];  [CE]  cannot  find  symbol  Dev  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum  -  values[i];  Dev  =  accum  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    accum    -    values[i];    Dev  =  accum  -  values[i];	  	non-compiled	[CE]  cannot  find  symbol  Dev	126	None	add
114	[BUG]  [BUGGY]  dev  =  accum  -  values[i];  int  dev  =  accum  -  values[i];  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum  -  values[i];  int  dev  =  accum  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    accum    -    values[i];    int  dev  =  accum  -  values[i];	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	126	None	add
115	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  accum  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  values[i]  /  accum  +  1;	  dev    =    values[i]    -    accum    +    1;    	compilable	  [FE]  AssertionError  	110	2	replace
116	[BUG]  [BUGGY]  dev  =  values[i]  /  accum  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  accum  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  /  accum  +  1;	  dev    =    values[i]    -    accum    +    1;    	compilable	  [FE]  AssertionError  	110	2	replace
117	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  accum  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  values[i]  *  accum  +  1;	  dev    =    values[i]    -    accum    +    1;    	compilable	  [FE]  AssertionError  	110	3	replace
118	[BUG]  [BUGGY]  dev  =  values[i]  *  accum  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  accum  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  *  accum  +  1;	  dev    =    values[i]    -    accum    +    1;    	compilable	  [FE]  AssertionError  	110	3	replace
119	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  -  values[i]  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  accum2  -  values[i]  +  1;	  dev    =    values[i]    -    accum    +    1;    	compilable	  [FE]  AssertionError  	110	3	replace
120	[BUG]  [BUGGY]  dev  =  accum2  -  values[i]  +  1;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  -  values[i]  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  accum2  -  values[i]  +  1;	  dev    =    values[i]    -    accum    +    1;    	compilable	  [FE]  AssertionError  	110	3	replace
121	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  *  mean;  accum  +=  weights[i]  *  (dev  *  var);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum  =  values[i]  *  mean;  accum  +=  weights[i]  *  (dev  *  var);	  accum    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    var);    	compilable	  [FE]  AssertionError  	20	2	replace
122	[BUG]  [BUGGY]  accum  =  values[i]  *  mean;  accum  +=  weights[i]  *  (dev  *  var);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  *  mean;  accum  +=  weights[i]  *  (dev  *  var);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  =  values[i]  *  mean;  accum  +=  weights[i]  *  (dev  *  var);	  accum    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    var);    	compilable	  [FE]  AssertionError  	20	2	replace
123	[BUG]  [BUGGY]  double  mean  =  values[i].doubleValue().doubleValue();  [CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  mean  =  values[i].doubleValue().doubleValue();  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  mean  =  values[i].doubleValue().doubleValue();	  double    mean    =    values[i].doubleValue()    -    1;    	non-compiled	[CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	128	None	replace
124	[BUG]  [BUGGY]  double  mean  =  values[i].doubleValue()  *  1;  [CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  mean  =  values[i].doubleValue()  *  1;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  mean  =  values[i].doubleValue()  *  1;	  double    mean    =    values[i].doubleValue()    -    1;    	non-compiled	[CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	128	None	replace
125	[BUG]  [BUGGY]  double  mean  =  values[i].doubleValue()  /  accum2;  [CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  mean  =  values[i].doubleValue()  /  accum2;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  mean  =  values[i].doubleValue()  /  accum2;	  double    mean    =    values[i].doubleValue()    +    accum2;    	non-compiled	[CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	112	None	replace
126	[BUG]  [BUGGY]  double  mean  =  values[i].doubleValue()  *  accum2;  [CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  mean  =  values[i].doubleValue()  *  accum2;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  mean  =  values[i].doubleValue()  *  accum2;	  double    mean    =    values[i].doubleValue()    +    accum2;    	non-compiled	[CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	112	None	replace
127	[BUG]  [BUGGY]  double  mean  =  values[i].doubleValue()  +  accum;  [CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  mean  =  values[i].doubleValue()  +  accum;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  mean  =  values[i].doubleValue()  +  accum;	  double    mean    =    values[i].doubleValue()    +    accum2;    	non-compiled	[CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	112	None	replace
128	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  accum  +  1;  dev  =  values[i]  -  accum  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev    =    values[i]    -    accum    +    1;    dev  =  values[i]  -  accum  +  1;	  	compilable	  [FE]  AssertionError  	109	1	add
129	[BUG]  [BUGGY]  dev  =  values[i]  -  accum  +  1;  dev  =  values[i]  -  accum  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  accum  +  1;  dev  =  values[i]  -  accum  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    -    accum    +    1;    dev  =  values[i]  -  accum  +  1;	  	compilable	  [FE]  AssertionError  	109	1	add
130	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  accum  +  1;  accum  =  values[i]  -  accum  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev    =    values[i]    -    accum    +    1;    accum  =  values[i]  -  accum  +  1;	  	compilable	  [FE]  AssertionError  	109	3	add
131	[BUG]  [BUGGY]  dev  =  values[i]  -  accum  +  1;  accum  =  values[i]  -  accum  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  accum  +  1;  accum  =  values[i]  -  accum  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    -    accum    +    1;    accum  =  values[i]  -  accum  +  1;	  	compilable	  [FE]  AssertionError  	109	3	add
132	[BUG]  [BUGGY]  dev  =  values[i]  -  accum  +  1;  Dev  =  values[i]  -  accum  +  1;  [CE]  cannot  find  symbol  Dev  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  accum  +  1;  Dev  =  values[i]  -  accum  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    -    accum    +    1;    Dev  =  values[i]  -  accum  +  1;	  	non-compiled	[CE]  cannot  find  symbol  Dev	109	None	add
133	[BUG]  [BUGGY]  dev  =  values[i]  -  accum  +  1;  int  dev  =  values[i]  -  accum  +  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  accum  +  1;  int  dev  =  values[i]  -  accum  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    -    accum    +    1;    int  dev  =  values[i]  -  accum  +  1;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	109	None	add
134	[BUG]  [BUGGY]  dev  =  values[i]  -  accum  +  1;  double  dev  =  values[i]  -  accum  +  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  accum  +  1;  double  dev  =  values[i]  -  accum  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    -    accum    +    1;    double  dev  =  values[i]  -  accum  +  1;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	109	None	add
135	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  /  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  accum2  /  dev;	  dev    =    accum2    /    mean;    	compilable	  [FE]  AssertionError  	76	2	replace
136	[BUG]  [BUGGY]  dev  =  accum2  /  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  /  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  accum2  /  dev;	  dev    =    accum2    /    mean;    	compilable	  [FE]  AssertionError  	76	2	replace
137	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  accum2  *  mean;	  dev    =    accum2    /    mean;    	compilable	  [FE]  AssertionError  	76	2	replace
138	[BUG]  [BUGGY]  dev  =  accum2  *  mean;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  accum2  *  mean;	  dev    =    accum2    /    mean;    	compilable	  [FE]  AssertionError  	76	2	replace
139	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    accum;    accum  =  values[i]  -  accum;  dev  =  values[i]  -  accum;  accum  =  values[i]  -  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev        =        values[i]        -        accum;        accum    =    values[i]    -    accum;    dev  =  values[i]  -  accum;  accum  =  values[i]  -  accum;	  	compilable	  [FE]  AssertionError  	58	1	add
140	[BUG]  [BUGGY]  dev    =    values[i]    -    accum;    accum  =  values[i]  -  accum;  dev  =  values[i]  -  accum;  accum  =  values[i]  -  accum;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    accum;    accum  =  values[i]  -  accum;  dev  =  values[i]  -  accum;  accum  =  values[i]  -  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        -        accum;        accum    =    values[i]    -    accum;    dev  =  values[i]  -  accum;  accum  =  values[i]  -  accum;	  	compilable	  [FE]  AssertionError  	58	1	add
141	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    accum;    accum  =  values[i]  -  accum;  accum  =  values[i]  -  accum;  accum  =  values[i]  -  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev        =        values[i]        -        accum;        accum    =    values[i]    -    accum;    accum  =  values[i]  -  accum;  accum  =  values[i]  -  accum;	  	compilable	  [FE]  AssertionError  	58	3	add
142	[BUG]  [BUGGY]  dev    =    values[i]    -    accum;    accum  =  values[i]  -  accum;  accum  =  values[i]  -  accum;  accum  =  values[i]  -  accum;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    accum;    accum  =  values[i]  -  accum;  accum  =  values[i]  -  accum;  accum  =  values[i]  -  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        -        accum;        accum    =    values[i]    -    accum;    accum  =  values[i]  -  accum;  accum  =  values[i]  -  accum;	  	compilable	  [FE]  AssertionError  	58	3	add
143	[BUG]  [BUGGY]  dev    =    values[i]    -    accum;    accum  =  values[i]  -  accum;  Dev  =  values[i]  -  accum;  accum  =  values[i]  -  accum;  [CE]  cannot  find  symbol  Dev  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    accum;    accum  =  values[i]  -  accum;  Dev  =  values[i]  -  accum;  accum  =  values[i]  -  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        -        accum;        accum    =    values[i]    -    accum;    Dev  =  values[i]  -  accum;  accum  =  values[i]  -  accum;	  	non-compiled	[CE]  cannot  find  symbol  Dev	58	None	add
144	[BUG]  [BUGGY]  dev    =    values[i]    -    accum;    accum  =  values[i]  -  accum;  int  dev  =  values[i]  -  accum;  accum  =  values[i]  -  accum;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    accum;    accum  =  values[i]  -  accum;  int  dev  =  values[i]  -  accum;  accum  =  values[i]  -  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        -        accum;        accum    =    values[i]    -    accum;    int  dev  =  values[i]  -  accum;  accum  =  values[i]  -  accum;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	58	None	add
145	[BUG]  [BUGGY]  dev    =    values[i]    -    accum;    accum  =  values[i]  -  accum;  double  dev  =  values[i]  -  accum;  accum  =  values[i]  -  accum;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    accum;    accum  =  values[i]  -  accum;  double  dev  =  values[i]  -  accum;  accum  =  values[i]  -  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        -        accum;        accum    =    values[i]    -    accum;    double  dev  =  values[i]  -  accum;  accum  =  values[i]  -  accum;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	58	None	add
146	[BUG]  [BUGGY]  int  dev  =  values[i]  /  mean;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  int  dev  =  values[i]  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	int  dev  =  values[i]  /  mean;	  dev    =    values[i]    /    mean;    int    dev    =    values[i]    /    mean;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	47	None	replace
147	[BUG]  [BUGGY]  int  dev  =  values[i]  /  accum2;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  int  dev  =  values[i]  /  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	int  dev  =  values[i]  /  accum2;	  dev    =    values[i]    /    mean;    int    dev    =    values[i]    /    mean;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	47	None	replace
148	[BUG]  [BUGGY]  accum2  =  values[i]  /  mean;  int  dev  =  values[i]  /  dev;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  /  mean;  int  dev  =  values[i]  /  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  =  values[i]  /  mean;  int  dev  =  values[i]  /  dev;	  dev    =    values[i]    /    mean;    int    dev    =    values[i]    /    mean;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	47	None	replace
149	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  accum2;  dev  =  values[i]  *  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev    =    values[i]    *    accum2;    dev  =  values[i]  *  accum2;	  	compilable	  [FE]  AssertionError  	103	1	add
150	[BUG]  [BUGGY]  dev  =  values[i]  *  accum2;  dev  =  values[i]  *  accum2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  accum2;  dev  =  values[i]  *  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    *    accum2;    dev  =  values[i]  *  accum2;	  	compilable	  [FE]  AssertionError  	103	1	add
151	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  accum2;  accum  =  values[i]  *  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev    =    values[i]    *    accum2;    accum  =  values[i]  *  accum2;	  	compilable	  [FE]  AssertionError  	103	3	add
152	[BUG]  [BUGGY]  dev  =  values[i]  *  accum2;  accum  =  values[i]  *  accum2;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  accum2;  accum  =  values[i]  *  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    *    accum2;    accum  =  values[i]  *  accum2;	  	compilable	  [FE]  AssertionError  	103	3	add
153	[BUG]  [BUGGY]  dev  =  values[i]  *  accum2;  Dev  =  values[i]  *  accum2;  [CE]  cannot  find  symbol  Dev  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  accum2;  Dev  =  values[i]  *  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    *    accum2;    Dev  =  values[i]  *  accum2;	  	non-compiled	[CE]  cannot  find  symbol  Dev	103	None	add
154	[BUG]  [BUGGY]  dev  =  values[i]  *  accum2;  int  dev  =  values[i]  *  accum2;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  accum2;  int  dev  =  values[i]  *  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    *    accum2;    int  dev  =  values[i]  *  accum2;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	103	None	add
155	[BUG]  [BUGGY]  dev  =  values[i]  *  accum2;  double  dev  =  values[i]  *  accum2;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  accum2;  double  dev  =  values[i]  *  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    *    accum2;    double  dev  =  values[i]  *  accum2;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	103	None	add
156	[BUG]  [BUGGY]  double  dev  =  mean  -  values[i];  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  mean  -  values[i];	  dev    =    mean    -    values[i];    int    dev    =    mean    -    values[i];    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	100	None	replace
157	[BUG]  [BUGGY]  int  dev  =  mean  -  values[i];  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  int  dev  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	int  dev  =  mean  -  values[i];	  dev    =    mean    -    values[i];    int    dev    =    mean    -    values[i];    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	100	None	replace
158	[BUG]  [BUGGY]  accum2  =  mean  -  values[i];  int  dev  =  mean  -  values[i];  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  mean  -  values[i];  int  dev  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  =  mean  -  values[i];  int  dev  =  mean  -  values[i];	  dev    =    mean    -    values[i];    int    dev    =    mean    -    values[i];    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	100	None	replace
159	[BUG]  [BUGGY]  accum  =  mean  -  values[i];  int  dev  =  mean  -  values[i];  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  mean  -  values[i];  int  dev  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  =  mean  -  values[i];  int  dev  =  mean  -  values[i];	  dev    =    mean    -    values[i];    int    dev    =    mean    -    values[i];    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	100	None	replace
160	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  mean  +  1;  dev  =  values[i]  /  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev    =    values[i]    /    mean    +    1;    dev  =  values[i]  /  mean  +  1;	  	compilable	  [FE]  AssertionError  	90	1	add
161	[BUG]  [BUGGY]  dev  =  values[i]  /  mean  +  1;  dev  =  values[i]  /  mean  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  mean  +  1;  dev  =  values[i]  /  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    /    mean    +    1;    dev  =  values[i]  /  mean  +  1;	  	compilable	  [FE]  AssertionError  	90	1	add
162	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  mean  +  1;  accum  =  values[i]  /  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev    =    values[i]    /    mean    +    1;    accum  =  values[i]  /  mean  +  1;	  	compilable	  [FE]  AssertionError  	90	3	add
163	[BUG]  [BUGGY]  dev  =  values[i]  /  mean  +  1;  accum  =  values[i]  /  mean  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  mean  +  1;  accum  =  values[i]  /  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    /    mean    +    1;    accum  =  values[i]  /  mean  +  1;	  	compilable	  [FE]  AssertionError  	90	3	add
164	[BUG]  [BUGGY]  dev  =  values[i]  /  mean  +  1;  Dev  =  values[i]  /  mean  +  1;  [CE]  cannot  find  symbol  Dev  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  mean  +  1;  Dev  =  values[i]  /  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    /    mean    +    1;    Dev  =  values[i]  /  mean  +  1;	  	non-compiled	[CE]  cannot  find  symbol  Dev	90	None	add
165	[BUG]  [BUGGY]  dev  =  values[i]  /  mean  +  1;  int  dev  =  values[i]  /  mean  +  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  mean  +  1;  int  dev  =  values[i]  /  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    /    mean    +    1;    int  dev  =  values[i]  /  mean  +  1;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	90	None	add
166	[BUG]  [BUGGY]  dev  =  values[i]  /  mean  +  1;  double  dev  =  values[i]  /  mean  +  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  mean  +  1;  double  dev  =  values[i]  /  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    /    mean    +    1;    double  dev  =  values[i]  /  mean  +  1;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	90	None	add
167	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    accum2;    accum  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;  accum  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev        =        values[i]        -        accum2;        accum    =    values[i]    -    accum2;    dev  =  values[i]  -  accum2;  accum  =  values[i]  -  accum2;	  	compilable	  [FE]  AssertionError  	37	3	add
168	[BUG]  [BUGGY]  dev    =    values[i]    -    accum2;    accum  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;  accum  =  values[i]  -  accum2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    accum2;    accum  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;  accum  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        -        accum2;        accum    =    values[i]    -    accum2;    dev  =  values[i]  -  accum2;  accum  =  values[i]  -  accum2;	  	compilable	  [FE]  AssertionError  	37	3	add
169	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    accum2;    accum  =  values[i]  -  accum2;  accum  =  values[i]  -  accum2;  accum  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev        =        values[i]        -        accum2;        accum    =    values[i]    -    accum2;    accum  =  values[i]  -  accum2;  accum  =  values[i]  -  accum2;	  	compilable	  [FE]  AssertionError  	37	3	add
170	[BUG]  [BUGGY]  dev    =    values[i]    -    accum2;    accum  =  values[i]  -  accum2;  accum  =  values[i]  -  accum2;  accum  =  values[i]  -  accum2;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    accum2;    accum  =  values[i]  -  accum2;  accum  =  values[i]  -  accum2;  accum  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        -        accum2;        accum    =    values[i]    -    accum2;    accum  =  values[i]  -  accum2;  accum  =  values[i]  -  accum2;	  	compilable	  [FE]  AssertionError  	37	3	add
171	[BUG]  [BUGGY]  dev    =    values[i]    -    accum2;    accum  =  values[i]  -  accum2;  Dev  =  values[i]  -  accum2;  accum  =  values[i]  -  accum2;  [CE]  cannot  find  symbol  Dev  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    accum2;    accum  =  values[i]  -  accum2;  Dev  =  values[i]  -  accum2;  accum  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        -        accum2;        accum    =    values[i]    -    accum2;    Dev  =  values[i]  -  accum2;  accum  =  values[i]  -  accum2;	  	non-compiled	[CE]  cannot  find  symbol  Dev	37	None	add
172	[BUG]  [BUGGY]  dev    =    values[i]    -    accum2;    accum  =  values[i]  -  accum2;  int  dev  =  values[i]  -  accum2;  accum  =  values[i]  -  accum2;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    accum2;    accum  =  values[i]  -  accum2;  int  dev  =  values[i]  -  accum2;  accum  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        -        accum2;        accum    =    values[i]    -    accum2;    int  dev  =  values[i]  -  accum2;  accum  =  values[i]  -  accum2;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	37	None	add
173	[BUG]  [BUGGY]  dev    =    values[i]    -    accum2;    accum  =  values[i]  -  accum2;  double  dev  =  values[i]  -  accum2;  accum  =  values[i]  -  accum2;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    accum2;    accum  =  values[i]  -  accum2;  double  dev  =  values[i]  -  accum2;  accum  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        -        accum2;        accum    =    values[i]    -    accum2;    double  dev  =  values[i]  -  accum2;  accum  =  values[i]  -  accum2;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	37	None	add
174	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  +=  weights[i]  *  (dev  *  mean);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum2  +=  weights[i]  *  (dev  *  mean);	  double    dev    =    values[i]    *    mean;    accum    +=    weights[i]    *    (dev    *    dev);    	compilable	  [FE]  AssertionError  	117	2	replace
175	[BUG]  [BUGGY]  accum2  +=  weights[i]  *  (dev  *  mean);  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  +=  weights[i]  *  (dev  *  mean);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  +=  weights[i]  *  (dev  *  mean);	  double    dev    =    values[i]    *    mean;    accum    +=    weights[i]    *    (dev    *    dev);    	compilable	  [FE]  AssertionError  	117	2	replace
176	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  *  mean;  accum  +=  weights[i]  *  (dev  *  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum  =  values[i]  *  mean;  accum  +=  weights[i]  *  (dev  *  dev);	  double    dev    =    values[i]    *    mean;    accum    +=    weights[i]    *    (dev    *    dev);    	compilable	  [FE]  AssertionError  	117	3	replace
177	[BUG]  [BUGGY]  accum  =  values[i]  *  mean;  accum  +=  weights[i]  *  (dev  *  dev);  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  *  mean;  accum  +=  weights[i]  *  (dev  *  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  =  values[i]  *  mean;  accum  +=  weights[i]  *  (dev  *  dev);	  double    dev    =    values[i]    *    mean;    accum    +=    weights[i]    *    (dev    *    dev);    	compilable	  [FE]  AssertionError  	117	3	replace
178	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    mean    +    1;    accum  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;  accum  =  values[i]  -  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev        =        values[i]        -        mean        +        1;        accum    =    values[i]    -    mean    +    1;    dev  =  values[i]  -  mean  +  1;  accum  =  values[i]  -  mean  +  1;	  	compilable	  [FE]  AssertionError  	23	3	add
179	[BUG]  [BUGGY]  dev    =    values[i]    -    mean    +    1;    accum  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;  accum  =  values[i]  -  mean  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    mean    +    1;    accum  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;  accum  =  values[i]  -  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        -        mean        +        1;        accum    =    values[i]    -    mean    +    1;    dev  =  values[i]  -  mean  +  1;  accum  =  values[i]  -  mean  +  1;	  	compilable	  [FE]  AssertionError  	23	3	add
180	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    mean    +    1;    accum  =  values[i]  -  mean  +  1;  accum  =  values[i]  -  mean  +  1;  accum  =  values[i]  -  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev        =        values[i]        -        mean        +        1;        accum    =    values[i]    -    mean    +    1;    accum  =  values[i]  -  mean  +  1;  accum  =  values[i]  -  mean  +  1;	  	compilable	  [FE]  AssertionError  	23	3	add
181	[BUG]  [BUGGY]  dev    =    values[i]    -    mean    +    1;    accum  =  values[i]  -  mean  +  1;  accum  =  values[i]  -  mean  +  1;  accum  =  values[i]  -  mean  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    mean    +    1;    accum  =  values[i]  -  mean  +  1;  accum  =  values[i]  -  mean  +  1;  accum  =  values[i]  -  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        -        mean        +        1;        accum    =    values[i]    -    mean    +    1;    accum  =  values[i]  -  mean  +  1;  accum  =  values[i]  -  mean  +  1;	  	compilable	  [FE]  AssertionError  	23	3	add
182	[BUG]  [BUGGY]  dev    =    values[i]    -    mean    +    1;    accum  =  values[i]  -  mean  +  1;  Dev  =  values[i]  -  mean  +  1;  accum  =  values[i]  -  mean  +  1;  [CE]  cannot  find  symbol  Dev  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    mean    +    1;    accum  =  values[i]  -  mean  +  1;  Dev  =  values[i]  -  mean  +  1;  accum  =  values[i]  -  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        -        mean        +        1;        accum    =    values[i]    -    mean    +    1;    Dev  =  values[i]  -  mean  +  1;  accum  =  values[i]  -  mean  +  1;	  	non-compiled	[CE]  cannot  find  symbol  Dev	23	None	add
183	[BUG]  [BUGGY]  dev    =    values[i]    -    mean    +    1;    accum  =  values[i]  -  mean  +  1;  int  dev  =  values[i]  -  mean  +  1;  accum  =  values[i]  -  mean  +  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    mean    +    1;    accum  =  values[i]  -  mean  +  1;  int  dev  =  values[i]  -  mean  +  1;  accum  =  values[i]  -  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        -        mean        +        1;        accum    =    values[i]    -    mean    +    1;    int  dev  =  values[i]  -  mean  +  1;  accum  =  values[i]  -  mean  +  1;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	23	None	add
184	[BUG]  [BUGGY]  dev    =    values[i]    -    mean    +    1;    accum  =  values[i]  -  mean  +  1;  double  dev  =  values[i]  -  mean  +  1;  accum  =  values[i]  -  mean  +  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    mean    +    1;    accum  =  values[i]  -  mean  +  1;  double  dev  =  values[i]  -  mean  +  1;  accum  =  values[i]  -  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        -        mean        +        1;        accum    =    values[i]    -    mean    +    1;    double  dev  =  values[i]  -  mean  +  1;  accum  =  values[i]  -  mean  +  1;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	23	None	add
185	[BUG]  [BUGGY]  dev  =  mean2  -  values[i];  [CE]  cannot  find  symbol  mean2  [FE]          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  mean2  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  mean2  -  values[i];	  dev    =    value2    -    values[i];    	non-compiled	[CE]  cannot  find  symbol  mean2	115	None	replace
186	[BUG]  [BUGGY]  Double  dev  =  mean  -  values[i];  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  Double  dev  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	Double  dev  =  mean  -  values[i];	  dev    =    mean    -    values[i];    Double    dev    =    mean    -    values[i];    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	137	None	replace
187	[BUG]  [BUGGY]  accum2  =  mean  -  values[i];  Double  dev  =  mean  -  values[i];  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  mean  -  values[i];  Double  dev  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  =  mean  -  values[i];  Double  dev  =  mean  -  values[i];	  dev    =    mean    -    values[i];    Double    dev    =    mean    -    values[i];    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	137	None	replace
188	[BUG]  [BUGGY]  Double  dev  =  accum2  -  values[i];  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  Double  dev  =  accum2  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	Double  dev  =  accum2  -  values[i];	  dev    =    mean    -    values[i];    Double    dev    =    mean    -    values[i];    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	137	None	replace
189	[BUG]  [BUGGY]  double  dev  =  weights[i]  -  accum2.doubleValue();  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  weights[i]  -  accum2.doubleValue();  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  weights[i]  -  accum2.doubleValue();	  double    dev    =    weights[i]    -    mean.doubleValue();    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	129	None	replace
190	[BUG]  [BUGGY]  double  dev  =  weights[i]  -  accum.doubleValue();  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  weights[i]  -  accum.doubleValue();  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  weights[i]  -  accum.doubleValue();	  double    dev    =    weights[i]    -    mean.doubleValue();    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	129	None	replace
191	[BUG]  [BUGGY]  double  dev  =  accum2  -  mean.doubleValue();  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  accum2  -  mean.doubleValue();  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  accum2  -  mean.doubleValue();	  double    dev    =    weights[i]    -    mean.doubleValue();    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	129	None	replace
192	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);	  	compilable	  [FE]  AssertionError  	133	3	add
193	[BUG]  [BUGGY]  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);	  	compilable	  [FE]  AssertionError  	133	3	add
194	[BUG]  [BUGGY]  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  DEV);  [CE]  cannot  find  symbol  DEV  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  DEV);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  DEV);	  	non-compiled	[CE]  cannot  find  symbol  DEV	133	None	add
195	[BUG]  [BUGGY]  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  double  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  [CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  double  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    double  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);	  	non-compiled	[CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	133	None	add
196	[BUG]  [BUGGY]  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  Accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  [CE]  cannot  find  symbol  Accum  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  Accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    Accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);	  	non-compiled	[CE]  cannot  find  symbol  Accum	133	None	add
197	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    accum2;    dev  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev        =        values[i]        -        accum2;        dev    =    values[i]    -    accum2;    dev  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;	  	compilable	  [FE]  AssertionError  	35	1	add
198	[BUG]  [BUGGY]  dev    =    values[i]    -    accum2;    dev  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    accum2;    dev  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        -        accum2;        dev    =    values[i]    -    accum2;    dev  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;	  	compilable	  [FE]  AssertionError  	35	1	add
199	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    accum2;    dev  =  values[i]  -  accum2;  accum  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev        =        values[i]        -        accum2;        dev    =    values[i]    -    accum2;    accum  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;	  	compilable	  [FE]  AssertionError  	35	3	add
200	[BUG]  [BUGGY]  dev    =    values[i]    -    accum2;    dev  =  values[i]  -  accum2;  accum  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    accum2;    dev  =  values[i]  -  accum2;  accum  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        -        accum2;        dev    =    values[i]    -    accum2;    accum  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;	  	compilable	  [FE]  AssertionError  	35	3	add
201	[BUG]  [BUGGY]  dev    =    values[i]    -    accum2;    dev  =  values[i]  -  accum2;  Dev  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;  [CE]  cannot  find  symbol  Dev  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    accum2;    dev  =  values[i]  -  accum2;  Dev  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        -        accum2;        dev    =    values[i]    -    accum2;    Dev  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;	  	non-compiled	[CE]  cannot  find  symbol  Dev	35	None	add
202	[BUG]  [BUGGY]  dev    =    values[i]    -    accum2;    dev  =  values[i]  -  accum2;  int  dev  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    accum2;    dev  =  values[i]  -  accum2;  int  dev  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        -        accum2;        dev    =    values[i]    -    accum2;    int  dev  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	35	None	add
203	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    accum2;    dev  =  values[i]  -  accum2;  accum2  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev        =        values[i]        -        accum2;        dev    =    values[i]    -    accum2;    accum2  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;	  	compilable	  [FE]  AssertionError  	35	3	add
204	[BUG]  [BUGGY]  dev    =    values[i]    -    accum2;    dev  =  values[i]  -  accum2;  accum2  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    accum2;    dev  =  values[i]  -  accum2;  accum2  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        -        accum2;        dev    =    values[i]    -    accum2;    accum2  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;	  	compilable	  [FE]  AssertionError  	35	3	add
205	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    mean    +    1;    dev  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev        =        values[i]        -        mean        +        1;        dev    =    values[i]    -    mean    +    1;    dev  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;	  	compilable	  [FE]  AssertionError  	21	1	add
206	[BUG]  [BUGGY]  dev    =    values[i]    -    mean    +    1;    dev  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    mean    +    1;    dev  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        -        mean        +        1;        dev    =    values[i]    -    mean    +    1;    dev  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;	  	compilable	  [FE]  AssertionError  	21	1	add
207	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    mean    +    1;    dev  =  values[i]  -  mean  +  1;  accum  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev        =        values[i]        -        mean        +        1;        dev    =    values[i]    -    mean    +    1;    accum  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;	  	compilable	  [FE]  AssertionError  	21	3	add
208	[BUG]  [BUGGY]  dev    =    values[i]    -    mean    +    1;    dev  =  values[i]  -  mean  +  1;  accum  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    mean    +    1;    dev  =  values[i]  -  mean  +  1;  accum  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        -        mean        +        1;        dev    =    values[i]    -    mean    +    1;    accum  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;	  	compilable	  [FE]  AssertionError  	21	3	add
209	[BUG]  [BUGGY]  dev    =    values[i]    -    mean    +    1;    dev  =  values[i]  -  mean  +  1;  Dev  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;  [CE]  cannot  find  symbol  Dev  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    mean    +    1;    dev  =  values[i]  -  mean  +  1;  Dev  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        -        mean        +        1;        dev    =    values[i]    -    mean    +    1;    Dev  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;	  	non-compiled	[CE]  cannot  find  symbol  Dev	21	None	add
210	[BUG]  [BUGGY]  dev    =    values[i]    -    mean    +    1;    dev  =  values[i]  -  mean  +  1;  int  dev  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    mean    +    1;    dev  =  values[i]  -  mean  +  1;  int  dev  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        -        mean        +        1;        dev    =    values[i]    -    mean    +    1;    int  dev  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	21	None	add
211	[BUG]  [BUGGY]  dev    =    values[i]    -    mean    +    1;    dev  =  values[i]  -  mean  +  1;  double  dev  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    mean    +    1;    dev  =  values[i]  -  mean  +  1;  double  dev  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        -        mean        +        1;        dev    =    values[i]    -    mean    +    1;    double  dev  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	21	None	add
212	[BUG]  [BUGGY]  dev  =  values[i]  /  mean;  Dev  =  values[i]  /  dev;  [CE]  cannot  find  symbol  Dev  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  mean;  Dev  =  values[i]  /  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  /  mean;  Dev  =  values[i]  /  dev;	  dev    =    values[i]    /    mean;    Dev    =    values[i]    /    mean;    	non-compiled	[CE]  cannot  find  symbol  Dev	46	None	replace
213	[BUG]  [BUGGY]  dev  =  values[i]  /  dev;  Dev  =  values[i]  /  dev;  [CE]  cannot  find  symbol  Dev  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  dev;  Dev  =  values[i]  /  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  /  dev;  Dev  =  values[i]  /  dev;	  dev    =    values[i]    /    mean;    Dev    =    values[i]    /    mean;    	non-compiled	[CE]  cannot  find  symbol  Dev	46	None	replace
214	[BUG]  [BUGGY]  dev  =  values[i]  /  accum2;  Dev  =  values[i]  /  mean;  [CE]  cannot  find  symbol  Dev  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  accum2;  Dev  =  values[i]  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  /  accum2;  Dev  =  values[i]  /  mean;	  dev    =    values[i]    /    mean;    Dev    =    values[i]    /    mean;    	non-compiled	[CE]  cannot  find  symbol  Dev	46	None	replace
215	[BUG]  [BUGGY]  dev  =  values[i]  /  dev;  Dev  =  values[i]  /  mean;  [CE]  cannot  find  symbol  Dev  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  dev;  Dev  =  values[i]  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  /  dev;  Dev  =  values[i]  /  mean;	  dev    =    values[i]    /    mean;    Dev    =    values[i]    /    mean;    	non-compiled	[CE]  cannot  find  symbol  Dev	46	None	replace
216	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum  =  mean  -  values[i];	  dev    =    mean    -    values[i];    accum    =    mean    -    values[i];    	compilable	  [FE]  AssertionError  	98	3	replace
217	[BUG]  [BUGGY]  accum  =  mean  -  values[i];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  =  mean  -  values[i];	  dev    =    mean    -    values[i];    accum    =    mean    -    values[i];    	compilable	  [FE]  AssertionError  	98	3	replace
218	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  -  values[i];  accum  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  accum2  -  values[i];  accum  =  mean  -  values[i];	  dev    =    mean    -    values[i];    accum    =    mean    -    values[i];    	compilable	  [FE]  AssertionError  	98	3	replace
219	[BUG]  [BUGGY]  dev  =  accum2  -  values[i];  accum  =  mean  -  values[i];  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  -  values[i];  accum  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  accum2  -  values[i];  accum  =  mean  -  values[i];	  dev    =    mean    -    values[i];    accum    =    mean    -    values[i];    	compilable	  [FE]  AssertionError  	98	3	replace
220	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  dev  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum  =  dev  -  values[i];	  dev    =    mean    -    values[i];    accum    =    mean    -    values[i];    	compilable	  [FE]  AssertionError  	98	3	replace
221	[BUG]  [BUGGY]  accum  =  dev  -  values[i];  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  dev  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  =  dev  -  values[i];	  dev    =    mean    -    values[i];    accum    =    mean    -    values[i];    	compilable	  [FE]  AssertionError  	98	3	replace
222	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum2  =  mean  -  values[i];	  dev    =    mean    -    values[i];    accum    =    mean    -    values[i];    	compilable	  [FE]  AssertionError  	98	3	replace
223	[BUG]  [BUGGY]  accum2  =  mean  -  values[i];  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  =  mean  -  values[i];	  dev    =    mean    -    values[i];    accum    =    mean    -    values[i];    	compilable	  [FE]  AssertionError  	98	3	replace
224	[BUG]  [BUGGY]  double  dev  =  values[i].doubleValue()  *  2;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i].doubleValue()  *  2;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i].doubleValue()  *  2;	  double    dev    =    values[i].doubleValue()    /    2;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	88	None	replace
225	[BUG]  [BUGGY]  double  dev  =  values[i].doubleValue().doubleValue();  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i].doubleValue().doubleValue();  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i].doubleValue().doubleValue();	  double    dev    =    values[i].doubleValue()    /    2;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	88	None	replace
226	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  var);  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  var);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    var);    accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  var);	  	compilable	  [FE]  AssertionError  	19	2	add
227	[BUG]  [BUGGY]  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  var);  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  var);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  var);  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  var);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    var);    accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  var);	  	compilable	  [FE]  AssertionError  	19	2	add
228	[BUG]  [BUGGY]  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  var);  double  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  var);  [CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  var);  double  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  var);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    var);    double  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  var);	  	non-compiled	[CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	19	None	add
229	[BUG]  [BUGGY]  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  var);  Accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  var);  [CE]  cannot  find  symbol  Accum  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  var);  Accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  var);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    var);    Accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  var);	  	non-compiled	[CE]  cannot  find  symbol  Accum	19	None	add
230	[BUG]  [BUGGY]  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  var);  accum  =  values[i]  -  mean;  accum  +=  poids[i]  *  (dev  *  var);  [CE]  cannot  find  symbol  poids  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  var);  accum  =  values[i]  -  mean;  accum  +=  poids[i]  *  (dev  *  var);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    var);    accum  =  values[i]  -  mean;  accum  +=  poids[i]  *  (dev  *  var);	  	non-compiled	[CE]  cannot  find  symbol  poids	19	None	add
231	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  +=  weights[i]  *  dev;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum2  +=  weights[i]  *  dev;	  double    dev    =    values[i]    -    mean;    accum2    +=    weights[i]    *    dev;    	compilable	  [FE]  AssertionError  	9	2	replace
232	[BUG]  [BUGGY]  accum2  +=  weights[i]  *  dev;  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  +=  weights[i]  *  dev;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  +=  weights[i]  *  dev;	  double    dev    =    values[i]    -    mean;    accum2    +=    weights[i]    *    dev;    	compilable	  [FE]  AssertionError  	9	2	replace
233	[BUG]  [BUGGY]  double  dev  =  values[i]  -  accum;  accum2  +=  weights[i]  *  (dev  *  dev);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i]  -  accum;  accum2  +=  weights[i]  *  (dev  *  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i]  -  accum;  accum2  +=  weights[i]  *  (dev  *  dev);	  double    dev    =    values[i]    -    mean;    accum2    +=    weights[i]    *    dev;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	9	None	replace
234	[BUG]  [BUGGY]  double  dev  =  values[i]  -  accum2.doubleValue()  +  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i]  -  accum2.doubleValue()  +  1;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i]  -  accum2.doubleValue()  +  1;	  double    dev    =    values[i]    -    accum2.doubleValue();    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	34	None	replace
235	[BUG]  [BUGGY]  double  dev  =  values[i]  /  accum2.doubleValue();  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i]  /  accum2.doubleValue();  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i]  /  accum2.doubleValue();	  double    dev    =    values[i]    -    accum2.doubleValue();    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	34	None	replace
236	[BUG]  [BUGGY]  double  dev  =  accum2  -  values[i].doubleValue();  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  accum2  -  values[i].doubleValue();  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  accum2  -  values[i].doubleValue();	  double    dev    =    values[i]    -    accum2.doubleValue();    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	34	None	replace
237	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    mean    -    values[i];    accum  =  mean  -  values[i];  dev  =  mean  -  values[i];  accum  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev        =        mean        -        values[i];        accum    =    mean    -    values[i];    dev  =  mean  -  values[i];  accum  =  mean  -  values[i];	  	compilable	  [FE]  AssertionError  	97	3	add
238	[BUG]  [BUGGY]  dev    =    mean    -    values[i];    accum  =  mean  -  values[i];  dev  =  mean  -  values[i];  accum  =  mean  -  values[i];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    mean    -    values[i];    accum  =  mean  -  values[i];  dev  =  mean  -  values[i];  accum  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        mean        -        values[i];        accum    =    mean    -    values[i];    dev  =  mean  -  values[i];  accum  =  mean  -  values[i];	  	compilable	  [FE]  AssertionError  	97	3	add
239	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    mean    -    values[i];    accum  =  mean  -  values[i];  accum  =  mean  -  values[i];  accum  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev        =        mean        -        values[i];        accum    =    mean    -    values[i];    accum  =  mean  -  values[i];  accum  =  mean  -  values[i];	  	compilable	  [FE]  AssertionError  	97	3	add
240	[BUG]  [BUGGY]  dev    =    mean    -    values[i];    accum  =  mean  -  values[i];  accum  =  mean  -  values[i];  accum  =  mean  -  values[i];  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    mean    -    values[i];    accum  =  mean  -  values[i];  accum  =  mean  -  values[i];  accum  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        mean        -        values[i];        accum    =    mean    -    values[i];    accum  =  mean  -  values[i];  accum  =  mean  -  values[i];	  	compilable	  [FE]  AssertionError  	97	3	add
241	[BUG]  [BUGGY]  dev    =    mean    -    values[i];    accum  =  mean  -  values[i];  Dev  =  mean  -  values[i];  accum  =  mean  -  values[i];  [CE]  cannot  find  symbol  Dev  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    mean    -    values[i];    accum  =  mean  -  values[i];  Dev  =  mean  -  values[i];  accum  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        mean        -        values[i];        accum    =    mean    -    values[i];    Dev  =  mean  -  values[i];  accum  =  mean  -  values[i];	  	non-compiled	[CE]  cannot  find  symbol  Dev	97	None	add
242	[BUG]  [BUGGY]  dev    =    mean    -    values[i];    accum  =  mean  -  values[i];  double  dev  =  mean  -  values[i];  accum  =  mean  -  values[i];  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    mean    -    values[i];    accum  =  mean  -  values[i];  double  dev  =  mean  -  values[i];  accum  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        mean        -        values[i];        accum    =    mean    -    values[i];    double  dev  =  mean  -  values[i];  accum  =  mean  -  values[i];	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	97	None	add
243	[BUG]  [BUGGY]  dev    =    mean    -    values[i];    accum  =  mean  -  values[i];  int  dev  =  mean  -  values[i];  accum  =  mean  -  values[i];  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    mean    -    values[i];    accum  =  mean  -  values[i];  int  dev  =  mean  -  values[i];  accum  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        mean        -        values[i];        accum    =    mean    -    values[i];    int  dev  =  mean  -  values[i];  accum  =  mean  -  values[i];	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	97	None	add
244	[BUG]  [BUGGY]  double  dev  =  values[i].doubleValue()  *  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i].doubleValue()  *  1;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i].doubleValue()  *  1;	  double    dev    =    values[i].doubleValue()    -    1;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	131	None	replace
245	[BUG]  [BUGGY]  double  dev  =  values[i].doubleValue()  /  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i].doubleValue()  /  1;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i].doubleValue()  /  1;	  double    dev    =    values[i].doubleValue()    -    1;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	131	None	replace
246	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum  =  values[i]  -  accum2;	  dev    =    values[i]    -    accum;    accum    =    values[i]    -    accum;    	compilable	  [FE]  AssertionError  	59	3	replace
247	[BUG]  [BUGGY]  accum  =  values[i]  -  accum2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  =  values[i]  -  accum2;	  dev    =    values[i]    -    accum;    accum    =    values[i]    -    accum;    	compilable	  [FE]  AssertionError  	59	3	replace
248	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  -  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum  =  values[i]  -  accum;	  dev    =    values[i]    -    accum;    accum    =    values[i]    -    accum;    	compilable	  [FE]  AssertionError  	59	3	replace
249	[BUG]  [BUGGY]  accum  =  values[i]  -  accum;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  -  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  =  values[i]  -  accum;	  dev    =    values[i]    -    accum;    accum    =    values[i]    -    accum;    	compilable	  [FE]  AssertionError  	59	3	replace
250	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum2  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;	  dev    =    values[i]    -    accum2;    dev    =    values[i]    -    accum2;    	compilable	  [FE]  AssertionError  	36	3	replace
251	[BUG]  [BUGGY]  accum2  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;	  dev    =    values[i]    -    accum2;    dev    =    values[i]    -    accum2;    	compilable	  [FE]  AssertionError  	36	3	replace
252	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;	  dev    =    values[i]    -    accum2;    dev    =    values[i]    -    accum2;    	compilable	  [FE]  AssertionError  	36	3	replace
253	[BUG]  [BUGGY]  accum  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;	  dev    =    values[i]    -    accum2;    dev    =    values[i]    -    accum2;    	compilable	  [FE]  AssertionError  	36	3	replace
254	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  weights[i]  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  weights[i]  /  mean;	  dev    =    mean[i]    /    values;    	compilable	  [FE]  AssertionError  	74	3	replace
255	[BUG]  [BUGGY]  dev  =  weights[i]  /  mean;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  weights[i]  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  weights[i]  /  mean;	  dev    =    mean[i]    /    values;    	compilable	  [FE]  AssertionError  	74	3	replace
256	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  -=  values[i]  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  -=  values[i]  /  mean;	  dev    =    mean[i]    /    values;    	compilable	  [FE]  AssertionError  	74	3	replace
257	[BUG]  [BUGGY]  dev  -=  values[i]  /  mean;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  -=  values[i]  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  -=  values[i]  /  mean;	  dev    =    mean[i]    /    values;    	compilable	  [FE]  AssertionError  	74	3	replace
258	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  dev  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  values[i]  *  dev  +  1;	  dev    =    values[i]    *    mean    +    1;    	compilable	  [FE]  AssertionError  	93	3	replace
259	[BUG]  [BUGGY]  dev  =  values[i]  *  dev  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  dev  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  *  dev  +  1;	  dev    =    values[i]    *    mean    +    1;    	compilable	  [FE]  AssertionError  	93	3	replace
260	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  accum2  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  values[i]  *  accum2  +  1;	  dev    =    values[i]    *    mean    +    1;    	compilable	  [FE]  AssertionError  	93	3	replace
261	[BUG]  [BUGGY]  dev  =  values[i]  *  accum2  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  accum2  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  *  accum2  +  1;	  dev    =    values[i]    *    mean    +    1;    	compilable	  [FE]  AssertionError  	93	3	replace
262	[BUG]  [BUGGY]  dev  =  values[i]  *  DEV  +  1;  [CE]  cannot  find  symbol  DEV  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  DEV  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  *  DEV  +  1;	  dev    =    values[i]    *    mean    +    1;    	non-compiled	[CE]  cannot  find  symbol  DEV	93	None	replace
263	[BUG]  [BUGGY]  double  dev  =  Double.valueOf(values[i],  begin,  length  -  1);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  Double.valueOf(values[i],  begin,  length  -  1);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  Double.valueOf(values[i],  begin,  length  -  1);	          double    dev    =    Double.valueOf(values[i],    begin,    length);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	81	None	replace
264	[BUG]  [BUGGY]  double  dev  =  Double.valueOf(values[i],  begin,  length,  accum2);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  Double.valueOf(values[i],  begin,  length,  accum2);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  Double.valueOf(values[i],  begin,  length,  accum2);	          double    dev    =    Double.valueOf(values[i],    begin,    length);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	81	None	replace
265	[BUG]  [BUGGY]  double  dev  =  Double.valueOf(values[i],  begin,  length  +  1);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  Double.valueOf(values[i],  begin,  length  +  1);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  Double.valueOf(values[i],  begin,  length  +  1);	          double    dev    =    Double.valueOf(values[i],    begin,    length);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	81	None	replace
266	[BUG]  [BUGGY]  double  dev  =  values[i]  /  mean  +  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i]  /  mean  +  1;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i]  /  mean  +  1;	  double    dev    =    values[i]    /    mean;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	79	None	replace
267	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  mean  -  values[i];  dev  =  accum2  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum  =  mean  -  values[i];  dev  =  accum2  -  values[i];	  dev    =    mean    -    values[i];    dev    =    mean    -    values[i];    	compilable	  [FE]  AssertionError  	95	3	replace
268	[BUG]  [BUGGY]  accum  =  mean  -  values[i];  dev  =  accum2  -  values[i];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  mean  -  values[i];  dev  =  accum2  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  =  mean  -  values[i];  dev  =  accum2  -  values[i];	  dev    =    mean    -    values[i];    dev    =    mean    -    values[i];    	compilable	  [FE]  AssertionError  	95	3	replace
269	[BUG]  [BUGGY]  dev  =  values[i]  /  dev2;  [CE]  cannot  find  symbol  dev2  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  dev2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  /  dev2;	  dev    =    values[i]    /    dev;    	non-compiled	[CE]  cannot  find  symbol  dev2	73	None	replace
270	[BUG]  [BUGGY]  dev  =  values[i]  /  dev.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  dev.doubleValue();  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  /  dev.doubleValue();	  dev    =    values[i]    /    dev;    	non-compiled	[CE]  double  cannot  be  dereferenced	73	None	replace
271	[BUG]  [BUGGY]  double  mean  =  values[i].doubleValue()  *  2;  [CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  mean  =  values[i].doubleValue()  *  2;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  mean  =  values[i].doubleValue()  *  2;	  double    mean    =    values[i].doubleValue()    /    2;    	non-compiled	[CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	84	None	replace
272	[BUG]  [BUGGY]  double  mean  =  values[i].doubleValue()  /  1;  [CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  mean  =  values[i].doubleValue()  /  1;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  mean  =  values[i].doubleValue()  /  1;	  double    mean    =    values[i].doubleValue()    /    2;    	non-compiled	[CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	84	None	replace
273	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  accum2  +  2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  values[i]  -  accum2  +  2;	  dev    =    values[i]    -    mean    +    2;    	compilable	  [FE]  AssertionError  	120	3	replace
274	[BUG]  [BUGGY]  dev  =  values[i]  -  accum2  +  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  accum2  +  2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  -  accum2  +  2;	  dev    =    values[i]    -    mean    +    2;    	compilable	  [FE]  AssertionError  	120	3	replace
275	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  2  +  2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  values[i]  /  2  +  2;	  dev    =    values[i]    -    mean    +    2;    	compilable	  [FE]  AssertionError  	120	3	replace
276	[BUG]  [BUGGY]  dev  =  values[i]  /  2  +  2;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  2  +  2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  /  2  +  2;	  dev    =    values[i]    -    mean    +    2;    	compilable	  [FE]  AssertionError  	120	3	replace
277	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  dev  +  2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  values[i]  -  dev  +  2;	  dev    =    values[i]    -    mean    +    2;    	compilable	  [FE]  AssertionError  	120	3	replace
278	[BUG]  [BUGGY]  dev  =  values[i]  -  dev  +  2;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  dev  +  2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  -  dev  +  2;	  dev    =    values[i]    -    mean    +    2;    	compilable	  [FE]  AssertionError  	120	3	replace
279	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  -  accum;  dev  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum2  =  values[i]  -  accum;  dev  =  values[i]  -  accum2;	  dev    =    values[i]    -    accum;    dev    =    values[i]    -    accum;    	compilable	  [FE]  AssertionError  	57	3	replace
280	[BUG]  [BUGGY]  accum2  =  values[i]  -  accum;  dev  =  values[i]  -  accum2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  -  accum;  dev  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  =  values[i]  -  accum;  dev  =  values[i]  -  accum2;	  dev    =    values[i]    -    accum;    dev    =    values[i]    -    accum;    	compilable	  [FE]  AssertionError  	57	3	replace
281	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  -  accum;  dev  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum  =  values[i]  -  accum;  dev  =  values[i]  -  accum2;	  dev    =    values[i]    -    accum;    dev    =    values[i]    -    accum;    	compilable	  [FE]  AssertionError  	57	3	replace
282	[BUG]  [BUGGY]  accum  =  values[i]  -  accum;  dev  =  values[i]  -  accum2;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  -  accum;  dev  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  =  values[i]  -  accum;  dev  =  values[i]  -  accum2;	  dev    =    values[i]    -    accum;    dev    =    values[i]    -    accum;    	compilable	  [FE]  AssertionError  	57	3	replace
283	[BUG]  [BUGGY]  double  dev  =  values[i]  /  accum;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i]  /  accum;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i]  /  accum;	  double    dev    =    values[i]    -    accum;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	78	None	replace
284	[BUG]  [BUGGY]  double  dev  =  accum2  -  values[i];  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  accum2  -  values[i];  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  accum2  -  values[i];	  double    dev    =    values[i]    -    accum;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	78	None	replace
285	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  -  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum  =  values[i]  -  mean  +  1;	  dev    =    values[i]    -    mean    +    1;    accum    =    values[i]    -    mean    +    1;    	compilable	  [FE]  AssertionError  	24	3	replace
286	[BUG]  [BUGGY]  accum  =  values[i]  -  mean  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  -  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  =  values[i]  -  mean  +  1;	  dev    =    values[i]    -    mean    +    1;    accum    =    values[i]    -    mean    +    1;    	compilable	  [FE]  AssertionError  	24	3	replace
287	[BUG]  [BUGGY]  dev  =  values[i]  -  mean  +  1;  accum  =  values[i]  -  mean2  +  1;  [CE]  cannot  find  symbol  mean2  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  mean  +  1;  accum  =  values[i]  -  mean2  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  -  mean  +  1;  accum  =  values[i]  -  mean2  +  1;	  dev    =    values[i]    -    mean    +    1;    accum    =    values[i]    -    mean    +    1;    	non-compiled	[CE]  cannot  find  symbol  mean2	24	None	replace
288	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  -  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum2  =  values[i]  -  mean  +  1;	  dev    =    values[i]    -    mean    +    1;    accum    =    values[i]    -    mean    +    1;    	compilable	  [FE]  AssertionError  	24	3	replace
289	[BUG]  [BUGGY]  accum2  =  values[i]  -  mean  +  1;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  -  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  =  values[i]  -  mean  +  1;	  dev    =    values[i]    -    mean    +    1;    accum    =    values[i]    -    mean    +    1;    	compilable	  [FE]  AssertionError  	24	3	replace
290	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  dev;  dev  =  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev    =    values[i]    *    dev;    dev  =  values[i]  *  dev;	  	compilable	  [FE]  AssertionError  	101	1	add
291	[BUG]  [BUGGY]  dev  =  values[i]  *  dev;  dev  =  values[i]  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  dev;  dev  =  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    *    dev;    dev  =  values[i]  *  dev;	  	compilable	  [FE]  AssertionError  	101	1	add
292	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  dev;  accum  =  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev    =    values[i]    *    dev;    accum  =  values[i]  *  dev;	  	compilable	  [FE]  AssertionError  	101	3	add
293	[BUG]  [BUGGY]  dev  =  values[i]  *  dev;  accum  =  values[i]  *  dev;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  dev;  accum  =  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    *    dev;    accum  =  values[i]  *  dev;	  	compilable	  [FE]  AssertionError  	101	3	add
294	[BUG]  [BUGGY]  dev  =  values[i]  *  dev;  Dev  =  values[i]  *  dev;  [CE]  cannot  find  symbol  Dev  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  dev;  Dev  =  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    *    dev;    Dev  =  values[i]  *  dev;	  	non-compiled	[CE]  cannot  find  symbol  Dev	101	None	add
295	[BUG]  [BUGGY]  dev  =  values[i]  *  dev;  int  dev  =  values[i]  *  dev;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  dev;  int  dev  =  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    *    dev;    int  dev  =  values[i]  *  dev;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	101	None	add
296	[BUG]  [BUGGY]  dev  =  values[i]  *  dev;  double  dev  =  values[i]  *  dev;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  dev;  double  dev  =  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    *    dev;    double  dev  =  values[i]  *  dev;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	101	None	add
297	[BUG]  [BUGGY]  Dev  =  values[i]  -  mean  +  1;  [CE]  cannot  find  symbol  Dev  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  Dev  =  values[i]  -  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	Dev  =  values[i]  -  mean  +  1;	  dev    =    values[i]    -    mean    +    1;    Dev    =    values[i]    -    mean    +    1;    	non-compiled	[CE]  cannot  find  symbol  Dev	25	None	replace
298	[BUG]  [BUGGY]  dev  =  values[i]  -  mean  +  1;  Dev  =  values[i]  -  mean2  +  1;  [CE]  cannot  find  symbol  Dev  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  mean  +  1;  Dev  =  values[i]  -  mean2  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  -  mean  +  1;  Dev  =  values[i]  -  mean2  +  1;	  dev    =    values[i]    -    mean    +    1;    Dev    =    values[i]    -    mean    +    1;    	non-compiled	[CE]  cannot  find  symbol  Dev	25	None	replace
299	[BUG]  [BUGGY]  accum2  =  values[i]  -  mean  +  1;  Dev  =  values[i]  -  mean  +  1;  [CE]  cannot  find  symbol  Dev  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  -  mean  +  1;  Dev  =  values[i]  -  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  =  values[i]  -  mean  +  1;  Dev  =  values[i]  -  mean  +  1;	  dev    =    values[i]    -    mean    +    1;    Dev    =    values[i]    -    mean    +    1;    	non-compiled	[CE]  cannot  find  symbol  Dev	25	None	replace
300	[BUG]  [BUGGY]  dev  =  accum2[i]  /  values[i];  [CE]  array  required,  but  double  found  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2[i]  /  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  accum2[i]  /  values[i];	  dev    =    values[i]    /    accum2;    	non-compiled	[CE]  array  required,  but  double  found	29	None	replace
301	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  dev  -  values[i];  dev  =  dev  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev    =    dev    -    values[i];    dev  =  dev  -  values[i];	  	compilable	  [FE]  AssertionError  	12	1	add
302	[BUG]  [BUGGY]  dev  =  dev  -  values[i];  dev  =  dev  -  values[i];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  dev  -  values[i];  dev  =  dev  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    dev    -    values[i];    dev  =  dev  -  values[i];	  	compilable	  [FE]  AssertionError  	12	1	add
303	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  dev  -  values[i];  accum  =  dev  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev    =    dev    -    values[i];    accum  =  dev  -  values[i];	  	compilable	  [FE]  AssertionError  	12	3	add
304	[BUG]  [BUGGY]  dev  =  dev  -  values[i];  accum  =  dev  -  values[i];  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  dev  -  values[i];  accum  =  dev  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    dev    -    values[i];    accum  =  dev  -  values[i];	  	compilable	  [FE]  AssertionError  	12	3	add
305	[BUG]  [BUGGY]  dev  =  dev  -  values[i];  Dev  =  dev  -  values[i];  [CE]  cannot  find  symbol  Dev  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  dev  -  values[i];  Dev  =  dev  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    dev    -    values[i];    Dev  =  dev  -  values[i];	  	non-compiled	[CE]  cannot  find  symbol  Dev	12	None	add
306	[BUG]  [BUGGY]  dev  =  dev  -  values[i];  double  dev  =  dev  -  values[i];  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  dev  -  values[i];  double  dev  =  dev  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    dev    -    values[i];    double  dev  =  dev  -  values[i];	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	12	None	add
307	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  accum2  +  1;  dev  =  values[i]  -  accum2  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev    =    values[i]    -    accum2    +    1;    dev  =  values[i]  -  accum2  +  1;	  	compilable	  [FE]  AssertionError  	30	1	add
308	[BUG]  [BUGGY]  dev  =  values[i]  -  accum2  +  1;  dev  =  values[i]  -  accum2  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  accum2  +  1;  dev  =  values[i]  -  accum2  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    -    accum2    +    1;    dev  =  values[i]  -  accum2  +  1;	  	compilable	  [FE]  AssertionError  	30	1	add
309	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  accum2  +  1;  accum  =  values[i]  -  accum2  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev    =    values[i]    -    accum2    +    1;    accum  =  values[i]  -  accum2  +  1;	  	compilable	  [FE]  AssertionError  	30	3	add
310	[BUG]  [BUGGY]  dev  =  values[i]  -  accum2  +  1;  accum  =  values[i]  -  accum2  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  accum2  +  1;  accum  =  values[i]  -  accum2  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    -    accum2    +    1;    accum  =  values[i]  -  accum2  +  1;	  	compilable	  [FE]  AssertionError  	30	3	add
311	[BUG]  [BUGGY]  dev  =  values[i]  -  accum2  +  1;  Dev  =  values[i]  -  accum2  +  1;  [CE]  cannot  find  symbol  Dev  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  accum2  +  1;  Dev  =  values[i]  -  accum2  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    -    accum2    +    1;    Dev  =  values[i]  -  accum2  +  1;	  	non-compiled	[CE]  cannot  find  symbol  Dev	30	None	add
312	[BUG]  [BUGGY]  dev  =  values[i]  -  accum2  +  1;  int  dev  =  values[i]  -  accum2  +  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  accum2  +  1;  int  dev  =  values[i]  -  accum2  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    -    accum2    +    1;    int  dev  =  values[i]  -  accum2  +  1;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	30	None	add
313	[BUG]  [BUGGY]  dev  =  values[i]  -  accum2  +  1;  double  dev  =  values[i]  -  accum2  +  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  accum2  +  1;  double  dev  =  values[i]  -  accum2  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    -    accum2    +    1;    double  dev  =  values[i]  -  accum2  +  1;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	30	None	add
314	[BUG]  [BUGGY]  double  dev  =  values[i]  -  mean  +  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i]  -  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i]  -  mean  +  1;	  dev    =    values[i]    -    mean    +    1;    double    dev    =    values[i]    -    mean    +    1;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	27	None	replace
315	[BUG]  [BUGGY]  double  dev  =  values[i]  -  mean  +  2;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i]  -  mean  +  2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i]  -  mean  +  2;	  dev    =    values[i]    -    mean    +    1;    double    dev    =    values[i]    -    mean    +    1;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	27	None	replace
316	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  +=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  (dev  *  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum2    +=    values[i]    *    (dev    *    dev);    accum2  +=  values[i]  *  (dev  *  dev);	  	compilable	  [FE]  AssertionError  	15	3	add
317	[BUG]  [BUGGY]  accum2  +=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  (dev  *  dev);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  +=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  (dev  *  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2    +=    values[i]    *    (dev    *    dev);    accum2  +=  values[i]  *  (dev  *  dev);	  	compilable	  [FE]  AssertionError  	15	3	add
318	[BUG]  [BUGGY]  accum2  +=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  (dev  *  DEV);  [CE]  cannot  find  symbol  DEV  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  +=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  (dev  *  DEV);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2    +=    values[i]    *    (dev    *    dev);    accum2  +=  values[i]  *  (dev  *  DEV);	  	non-compiled	[CE]  cannot  find  symbol  DEV	15	None	add
319	[BUG]  [BUGGY]  accum2  +=  values[i]  *  (dev  *  dev);  double  accum2  +=  values[i]  *  (dev  *  dev);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  +=  values[i]  *  (dev  *  dev);  double  accum2  +=  values[i]  *  (dev  *  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2    +=    values[i]    *    (dev    *    dev);    double  accum2  +=  values[i]  *  (dev  *  dev);	  	non-compiled	[CE]  ';'  expected	15	None	add
320	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  mean  +  2;  dev  =  values[i]  -  mean  +  2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev    =    values[i]    -    mean    +    2;    dev  =  values[i]  -  mean  +  2;	  	compilable	  [FE]  AssertionError  	119	1	add
321	[BUG]  [BUGGY]  dev  =  values[i]  -  mean  +  2;  dev  =  values[i]  -  mean  +  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  mean  +  2;  dev  =  values[i]  -  mean  +  2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    -    mean    +    2;    dev  =  values[i]  -  mean  +  2;	  	compilable	  [FE]  AssertionError  	119	1	add
322	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  mean  +  2;  accum  =  values[i]  -  mean  +  2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev    =    values[i]    -    mean    +    2;    accum  =  values[i]  -  mean  +  2;	  	compilable	  [FE]  AssertionError  	119	3	add
323	[BUG]  [BUGGY]  dev  =  values[i]  -  mean  +  2;  accum  =  values[i]  -  mean  +  2;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  mean  +  2;  accum  =  values[i]  -  mean  +  2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    -    mean    +    2;    accum  =  values[i]  -  mean  +  2;	  	compilable	  [FE]  AssertionError  	119	3	add
324	[BUG]  [BUGGY]  dev  =  values[i]  -  mean  +  2;  Dev  =  values[i]  -  mean  +  2;  [CE]  cannot  find  symbol  Dev  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  mean  +  2;  Dev  =  values[i]  -  mean  +  2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    -    mean    +    2;    Dev  =  values[i]  -  mean  +  2;	  	non-compiled	[CE]  cannot  find  symbol  Dev	119	None	add
325	[BUG]  [BUGGY]  dev  =  values[i]  -  mean  +  2;  int  dev  =  values[i]  -  mean  +  2;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  mean  +  2;  int  dev  =  values[i]  -  mean  +  2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    -    mean    +    2;    int  dev  =  values[i]  -  mean  +  2;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	119	None	add
326	[BUG]  [BUGGY]  dev  =  values[i]  -  mean  +  2;  double  dev  =  values[i]  -  mean  +  2;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  mean  +  2;  double  dev  =  values[i]  -  mean  +  2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    -    mean    +    2;    double  dev  =  values[i]  -  mean  +  2;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	119	None	add
327	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  accum;  dev  =  values[i]  /  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev    =    values[i]    /    accum;    dev  =  values[i]  /  accum;	  	compilable	  [FE]  AssertionError  	1	1	add
328	[BUG]  [BUGGY]  dev  =  values[i]  /  accum;  dev  =  values[i]  /  accum;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  accum;  dev  =  values[i]  /  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    /    accum;    dev  =  values[i]  /  accum;	  	compilable	  [FE]  AssertionError  	1	1	add
329	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  accum;  accum  =  values[i]  /  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev    =    values[i]    /    accum;    accum  =  values[i]  /  accum;	  	compilable	  [FE]  AssertionError  	1	3	add
330	[BUG]  [BUGGY]  dev  =  values[i]  /  accum;  accum  =  values[i]  /  accum;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  accum;  accum  =  values[i]  /  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    /    accum;    accum  =  values[i]  /  accum;	  	compilable	  [FE]  AssertionError  	1	3	add
331	[BUG]  [BUGGY]  dev  =  values[i]  /  accum;  Dev  =  values[i]  /  accum;  [CE]  cannot  find  symbol  Dev  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  accum;  Dev  =  values[i]  /  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    /    accum;    Dev  =  values[i]  /  accum;	  	non-compiled	[CE]  cannot  find  symbol  Dev	1	None	add
332	[BUG]  [BUGGY]  dev  =  values[i]  /  accum;  int  dev  =  values[i]  /  accum;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  accum;  int  dev  =  values[i]  /  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    /    accum;    int  dev  =  values[i]  /  accum;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	1	None	add
333	[BUG]  [BUGGY]  dev  =  values[i]  /  accum;  double  accum  =  values[i]  /  accum;  [CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  accum;  double  accum  =  values[i]  /  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    /    accum;    double  accum  =  values[i]  /  accum;	  	non-compiled	[CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	1	None	add
334	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  accum2;  dev  =  values[i]  /  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev    =    values[i]    /    accum2;    dev  =  values[i]  /  accum2;	  	compilable	  [FE]  AssertionError  	28	1	add
335	[BUG]  [BUGGY]  dev  =  values[i]  /  accum2;  dev  =  values[i]  /  accum2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  accum2;  dev  =  values[i]  /  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    /    accum2;    dev  =  values[i]  /  accum2;	  	compilable	  [FE]  AssertionError  	28	1	add
336	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  accum2;  accum  =  values[i]  /  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev    =    values[i]    /    accum2;    accum  =  values[i]  /  accum2;	  	compilable	  [FE]  AssertionError  	28	3	add
337	[BUG]  [BUGGY]  dev  =  values[i]  /  accum2;  accum  =  values[i]  /  accum2;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  accum2;  accum  =  values[i]  /  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    /    accum2;    accum  =  values[i]  /  accum2;	  	compilable	  [FE]  AssertionError  	28	3	add
338	[BUG]  [BUGGY]  dev  =  values[i]  /  accum2;  Dev  =  values[i]  /  accum2;  [CE]  cannot  find  symbol  Dev  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  accum2;  Dev  =  values[i]  /  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    /    accum2;    Dev  =  values[i]  /  accum2;	  	non-compiled	[CE]  cannot  find  symbol  Dev	28	None	add
339	[BUG]  [BUGGY]  dev  =  values[i]  /  accum2;  int  dev  =  values[i]  /  accum2;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  accum2;  int  dev  =  values[i]  /  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    /    accum2;    int  dev  =  values[i]  /  accum2;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	28	None	add
340	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    *    mean;    accum  =  values[i]  *  mean;  dev  =  values[i]  *  mean;  accum  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev        =        values[i]        *        mean;        accum    =    values[i]    *    mean;    dev  =  values[i]  *  mean;  accum  =  values[i]  *  mean;	  	compilable	  [FE]  AssertionError  	67	3	add
341	[BUG]  [BUGGY]  dev    =    values[i]    *    mean;    accum  =  values[i]  *  mean;  dev  =  values[i]  *  mean;  accum  =  values[i]  *  mean;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    *    mean;    accum  =  values[i]  *  mean;  dev  =  values[i]  *  mean;  accum  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        *        mean;        accum    =    values[i]    *    mean;    dev  =  values[i]  *  mean;  accum  =  values[i]  *  mean;	  	compilable	  [FE]  AssertionError  	67	3	add
342	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    *    mean;    accum  =  values[i]  *  mean;  accum  =  values[i]  *  mean;  accum  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev        =        values[i]        *        mean;        accum    =    values[i]    *    mean;    accum  =  values[i]  *  mean;  accum  =  values[i]  *  mean;	  	compilable	  [FE]  AssertionError  	67	3	add
343	[BUG]  [BUGGY]  dev    =    values[i]    *    mean;    accum  =  values[i]  *  mean;  accum  =  values[i]  *  mean;  accum  =  values[i]  *  mean;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    *    mean;    accum  =  values[i]  *  mean;  accum  =  values[i]  *  mean;  accum  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        *        mean;        accum    =    values[i]    *    mean;    accum  =  values[i]  *  mean;  accum  =  values[i]  *  mean;	  	compilable	  [FE]  AssertionError  	67	3	add
344	[BUG]  [BUGGY]  dev    =    values[i]    *    mean;    accum  =  values[i]  *  mean;  double  dev  =  values[i]  *  mean;  accum  =  values[i]  *  mean;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    *    mean;    accum  =  values[i]  *  mean;  double  dev  =  values[i]  *  mean;  accum  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        *        mean;        accum    =    values[i]    *    mean;    double  dev  =  values[i]  *  mean;  accum  =  values[i]  *  mean;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	67	None	add
345	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    *    mean;    accum  =  values[i]  *  mean;  accum2  =  values[i]  *  mean;  accum  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev        =        values[i]        *        mean;        accum    =    values[i]    *    mean;    accum2  =  values[i]  *  mean;  accum  =  values[i]  *  mean;	  	compilable	  [FE]  AssertionError  	67	3	add
346	[BUG]  [BUGGY]  dev    =    values[i]    *    mean;    accum  =  values[i]  *  mean;  accum2  =  values[i]  *  mean;  accum  =  values[i]  *  mean;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    *    mean;    accum  =  values[i]  *  mean;  accum2  =  values[i]  *  mean;  accum  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        *        mean;        accum    =    values[i]    *    mean;    accum2  =  values[i]  *  mean;  accum  =  values[i]  *  mean;	  	compilable	  [FE]  AssertionError  	67	3	add
347	[BUG]  [BUGGY]  dev    =    values[i]    *    mean;    accum  =  values[i]  *  mean;  Dev  =  values[i]  *  mean;  accum  =  values[i]  *  mean;  [CE]  cannot  find  symbol  Dev  [FE]            AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    *    mean;    accum  =  values[i]  *  mean;  Dev  =  values[i]  *  mean;  accum  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        *        mean;        accum    =    values[i]    *    mean;    Dev  =  values[i]  *  mean;  accum  =  values[i]  *  mean;	  	non-compiled	[CE]  cannot  find  symbol  Dev	67	None	add
348	[BUG]  [BUGGY]  dev  =  values[i]  *  mean;  Dev  =  values[i]  *  dev;  [CE]  cannot  find  symbol  Dev  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  mean;  Dev  =  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  *  mean;  Dev  =  values[i]  *  dev;	  dev    =    values[i]    *    mean;    Dev    =    values[i]    *    mean;    	non-compiled	[CE]  cannot  find  symbol  Dev	69	None	replace
349	[BUG]  [BUGGY]  dev  =  values[i]  *  accum2;  Dev  =  values[i]  *  mean;  [CE]  cannot  find  symbol  Dev  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  accum2;  Dev  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  *  accum2;  Dev  =  values[i]  *  mean;	  dev    =    values[i]    *    mean;    Dev    =    values[i]    *    mean;    	non-compiled	[CE]  cannot  find  symbol  Dev	69	None	replace
350	[BUG]  [BUGGY]  accum2  =  values[i]  *  mean;  Dev  =  values[i]  *  mean;  [CE]  cannot  find  symbol  Dev  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  *  mean;  Dev  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  =  values[i]  *  mean;  Dev  =  values[i]  *  mean;	  dev    =    values[i]    *    mean;    Dev    =    values[i]    *    mean;    	non-compiled	[CE]  cannot  find  symbol  Dev	69	None	replace
351	[BUG]  [BUGGY]  dev  =  values[i]  *  accum;  Dev  =  values[i]  *  mean;  [CE]  cannot  find  symbol  Dev  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  accum;  Dev  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  *  accum;  Dev  =  values[i]  *  mean;	  dev    =    values[i]    *    mean;    Dev    =    values[i]    *    mean;    	non-compiled	[CE]  cannot  find  symbol  Dev	69	None	replace
352	[BUG]  [BUGGY]  double  mean  =  values[i]  /  dev;  [CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  mean  =  values[i]  /  dev;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  mean  =  values[i]  /  dev;	  double    mean    =    values[i]    -    dev;    	non-compiled	[CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	48	None	replace
353	[BUG]  [BUGGY]  double  dev  =  values[i]  -  mean.doubleValue()  *  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i]  -  mean.doubleValue()  *  1;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i]  -  mean.doubleValue()  *  1;	  double    dev    =    values[i]    -    mean.doubleValue()    +    1;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	33	None	replace
354	[BUG]  [BUGGY]  double  dev  =  values[i]  -  mean.doubleValue()  +  2;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i]  -  mean.doubleValue()  +  2;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i]  -  mean.doubleValue()  +  2;	  double    dev    =    values[i]    -    mean.doubleValue()    +    1;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	33	None	replace
355	[BUG]  [BUGGY]  doubledev  =  Math.abs(values[i]  *  dev);  [CE]  cannot  find  symbol  doubledev  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  doubledev  =  Math.abs(values[i]  *  dev);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	doubledev  =  Math.abs(values[i]  *  dev);	  doubledev    =    Math.abs(values[i]    /    dev);    	non-compiled	[CE]  cannot  find  symbol  doubledev	54	None	replace
356	[BUG]  [BUGGY]  doubledev  =  Math.abs(values[i]  /  dev2);  [CE]  cannot  find  symbol  doubledev  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  doubledev  =  Math.abs(values[i]  /  dev2);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	doubledev  =  Math.abs(values[i]  /  dev2);	  doubledev    =    Math.abs(values[i]    /    dev);    	non-compiled	[CE]  cannot  find  symbol  doubledev	54	None	replace
357	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  Math.abs(values[i]  /  dev);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum2  =  Math.abs(values[i]  /  dev);	  doubledev    =    Math.abs(values[i]    /    dev);    	compilable	  [FE]  AssertionError  	54	2	replace
358	[BUG]  [BUGGY]  accum2  =  Math.abs(values[i]  /  dev);  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  Math.abs(values[i]  /  dev);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  =  Math.abs(values[i]  /  dev);	  doubledev    =    Math.abs(values[i]    /    dev);    	compilable	  [FE]  AssertionError  	54	2	replace
359	[BUG]  [BUGGY]  double  accum  =  values[i]  -  accum2;  [CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  accum  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  accum  =  values[i]  -  accum2;	  dev    =    values[i]    -    accum;    double    accum    =    values[i]    -    accum;    	non-compiled	[CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	62	None	replace
360	[BUG]  [BUGGY]  double  accum  =  values[i]  -  accum;  [CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  accum  =  values[i]  -  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  accum  =  values[i]  -  accum;	  dev    =    values[i]    -    accum;    double    accum    =    values[i]    -    accum;    	non-compiled	[CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	62	None	replace
361	[BUG]  [BUGGY]  dev  =  values[i]  -  accum1;  [CE]  cannot  find  symbol  accum1  [FE]        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  accum1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  -  accum1;	  dev    =    accum1    -    values[i];    	non-compiled	[CE]  cannot  find  symbol  accum1	114	None	replace
362	[BUG]  [BUGGY]  double  dev  =  Math.abs(values[i]  -  accum2,  dev);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  Math.abs(values[i]  -  accum2,  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  Math.abs(values[i]  -  accum2,  dev);	  double    dev    =    Math.abs(values[i]    -    accum2,    mean);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	123	None	replace
363	[BUG]  [BUGGY]  double  dev  =  Math.abs(values[i]  -  accum2,  var);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  Math.abs(values[i]  -  accum2,  var);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  Math.abs(values[i]  -  accum2,  var);	  double    dev    =    Math.abs(values[i]    -    accum2,    mean);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	123	None	replace
364	[BUG]  [BUGGY]  double  dev  =  Math.abs(values[i]  -  accum2,  var,  mean);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  Math.abs(values[i]  -  accum2,  var,  mean);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  Math.abs(values[i]  -  accum2,  var,  mean);	  double    dev    =    Math.abs(values[i]    -    accum2,    mean);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	123	None	replace
365	[BUG]  [BUGGY]  double  dev  =  Math.abs(values[i]  /  accum2,  mean);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  Math.abs(values[i]  /  accum2,  mean);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  Math.abs(values[i]  /  accum2,  mean);	  double    dev    =    Math.abs(values[i]    -    accum2,    mean);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	123	None	replace
366	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  +=  weights[i]  *  (dev  *  dev);  accum  +=  weights[i]  *  (dev  *  dev);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum    +=    weights[i]    *    (dev    *    dev);    accum  +=  weights[i]  *  (dev  *  dev);	  	compilable	  [FE]  AssertionError  	124	3	add
367	[BUG]  [BUGGY]  accum  +=  weights[i]  *  (dev  *  dev);  accum  +=  weights[i]  *  (dev  *  dev);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  +=  weights[i]  *  (dev  *  dev);  accum  +=  weights[i]  *  (dev  *  dev);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum    +=    weights[i]    *    (dev    *    dev);    accum  +=  weights[i]  *  (dev  *  dev);	  	compilable	  [FE]  AssertionError  	124	3	add
368	[BUG]  [BUGGY]  accum  +=  weights[i]  *  (dev  *  dev);  accum  +=  weights[i]  *  (dev  *  DEV);  [CE]  cannot  find  symbol  DEV  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  +=  weights[i]  *  (dev  *  dev);  accum  +=  weights[i]  *  (dev  *  DEV);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum    +=    weights[i]    *    (dev    *    dev);    accum  +=  weights[i]  *  (dev  *  DEV);	  	non-compiled	[CE]  cannot  find  symbol  DEV	124	None	add
369	[BUG]  [BUGGY]  accum  +=  weights[i]  *  (dev  *  dev);  double  accum  +=  weights[i]  *  (dev  *  dev);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  +=  weights[i]  *  (dev  *  dev);  double  accum  +=  weights[i]  *  (dev  *  dev);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum    +=    weights[i]    *    (dev    *    dev);    double  accum  +=  weights[i]  *  (dev  *  dev);	  	non-compiled	[CE]  ';'  expected	124	None	add
370	[BUG]  [BUGGY]  double  dev  =  Math.abs(values[i]  -  accum2  +  1);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  Math.abs(values[i]  -  accum2  +  1);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  Math.abs(values[i]  -  accum2  +  1);	  double    dev    =    Math.abs(values[i]    -    accum2);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	64	None	replace
371	[BUG]  [BUGGY]  accum2  =  values[i]  -  accum;  int  dev  =  values[i]  -  accum;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  -  accum;  int  dev  =  values[i]  -  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  =  values[i]  -  accum;  int  dev  =  values[i]  -  accum;	  dev    =    values[i]    -    accum;    int    dev    =    values[i]    -    accum;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	61	None	replace
372	[BUG]  [BUGGY]  int  dev  =  values[i]  -  accum;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  int  dev  =  values[i]  -  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	int  dev  =  values[i]  -  accum;	  dev    =    values[i]    -    accum;    int    dev    =    values[i]    -    accum;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	61	None	replace
373	[BUG]  [BUGGY]  double  dev  =  Math.abs(values[i]  *  mean);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  Math.abs(values[i]  *  mean);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  Math.abs(values[i]  *  mean);	  double    dev    =    Math.abs(values[i]    /    mean);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	86	None	replace
374	[BUG]  [BUGGY]  double  dev  =  accum2.doubleValue();  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  accum2.doubleValue();  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  accum2.doubleValue();	          double    dev    =    m2.doubleValue();    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	107	None	replace
375	[BUG]  [BUGGY]  double  dev  =  m2.doubleValue()  *  accum2;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  m2.doubleValue()  *  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  m2.doubleValue()  *  accum2;	          double    dev    =    m2.doubleValue();    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	107	None	replace
376	[BUG]  [BUGGY]  double  dev  =  var.doubleValue();  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  var.doubleValue();  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  var.doubleValue();	          double    dev    =    m2.doubleValue();    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	107	None	replace
377	[BUG]  [BUGGY]  double  dev  =  Double.valueOf(values[i],  begin  +  length,  accum2);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  Double.valueOf(values[i],  begin  +  length,  accum2);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  Double.valueOf(values[i],  begin  +  length,  accum2);	  double    dev    =    Double.valueOf(values[i],    begin    +    length);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	55	None	replace
378	[BUG]  [BUGGY]  double  dev  =  Double.valueOf(values[i],  begin  +  length  -  1);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  Double.valueOf(values[i],  begin  +  length  -  1);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  Double.valueOf(values[i],  begin  +  length  -  1);	  double    dev    =    Double.valueOf(values[i],    begin    +    length);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	55	None	replace
379	[BUG]  [BUGGY]  double  dev  =  Double.valueOf(values[i],  begin  +  length,  weights[i]);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  Double.valueOf(values[i],  begin  +  length,  weights[i]);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  Double.valueOf(values[i],  begin  +  length,  weights[i]);	  double    dev    =    Double.valueOf(values[i],    begin    +    length);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	55	None	replace
380	[BUG]  [BUGGY]  int  dev  =  values[i]  *  mean;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  int  dev  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	int  dev  =  values[i]  *  mean;	  dev    =    values[i]    *    mean;    int    dev    =    values[i]    *    mean;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	70	None	replace
381	[BUG]  [BUGGY]  accum2  =  values[i]  *  mean;  int  dev  =  values[i]  *  mean;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  *  mean;  int  dev  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  =  values[i]  *  mean;  int  dev  =  values[i]  *  mean;	  dev    =    values[i]    *    mean;    int    dev    =    values[i]    *    mean;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	70	None	replace
382	[BUG]  [BUGGY]  double  dev  =  values[i]  *  mean;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i]  *  mean;	  dev    =    values[i]    *    mean;    int    dev    =    values[i]    *    mean;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	70	None	replace
383	[BUG]  [BUGGY]  accum  =  values[i]  *  mean;  int  dev  =  values[i]  *  dev;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  *  mean;  int  dev  =  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  =  values[i]  *  mean;  int  dev  =  values[i]  *  dev;	  dev    =    values[i]    *    mean;    int    dev    =    values[i]    *    mean;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	70	None	replace
384	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    /    mean;    dev  =  values[i]  /  mean;  dev  =  values[i]  /  mean;  dev  =  values[i]  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev        =        values[i]        /        mean;        dev    =    values[i]    /    mean;    dev  =  values[i]  /  mean;  dev  =  values[i]  /  mean;	  	compilable	  [FE]  AssertionError  	42	1	add
385	[BUG]  [BUGGY]  dev    =    values[i]    /    mean;    dev  =  values[i]  /  mean;  dev  =  values[i]  /  mean;  dev  =  values[i]  /  mean;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    /    mean;    dev  =  values[i]  /  mean;  dev  =  values[i]  /  mean;  dev  =  values[i]  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        /        mean;        dev    =    values[i]    /    mean;    dev  =  values[i]  /  mean;  dev  =  values[i]  /  mean;	  	compilable	  [FE]  AssertionError  	42	1	add
386	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    /    mean;    dev  =  values[i]  /  mean;  accum  =  values[i]  /  mean;  dev  =  values[i]  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev        =        values[i]        /        mean;        dev    =    values[i]    /    mean;    accum  =  values[i]  /  mean;  dev  =  values[i]  /  mean;	  	compilable	  [FE]  AssertionError  	42	3	add
387	[BUG]  [BUGGY]  dev    =    values[i]    /    mean;    dev  =  values[i]  /  mean;  accum  =  values[i]  /  mean;  dev  =  values[i]  /  mean;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    /    mean;    dev  =  values[i]  /  mean;  accum  =  values[i]  /  mean;  dev  =  values[i]  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        /        mean;        dev    =    values[i]    /    mean;    accum  =  values[i]  /  mean;  dev  =  values[i]  /  mean;	  	compilable	  [FE]  AssertionError  	42	3	add
388	[BUG]  [BUGGY]  dev    =    values[i]    /    mean;    dev  =  values[i]  /  mean;  Dev  =  values[i]  /  mean;  dev  =  values[i]  /  mean;  [CE]  cannot  find  symbol  Dev  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    /    mean;    dev  =  values[i]  /  mean;  Dev  =  values[i]  /  mean;  dev  =  values[i]  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        /        mean;        dev    =    values[i]    /    mean;    Dev  =  values[i]  /  mean;  dev  =  values[i]  /  mean;	  	non-compiled	[CE]  cannot  find  symbol  Dev	42	None	add
389	[BUG]  [BUGGY]  dev    =    values[i]    /    mean;    dev  =  values[i]  /  mean;  int  dev  =  values[i]  /  mean;  dev  =  values[i]  /  mean;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    /    mean;    dev  =  values[i]  /  mean;  int  dev  =  values[i]  /  mean;  dev  =  values[i]  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        /        mean;        dev    =    values[i]    /    mean;    int  dev  =  values[i]  /  mean;  dev  =  values[i]  /  mean;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	42	None	add
390	[BUG]  [BUGGY]  dev    =    values[i]    /    mean;    dev  =  values[i]  /  mean;  double  dev  =  values[i]  /  mean;  dev  =  values[i]  /  mean;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    /    mean;    dev  =  values[i]  /  mean;  double  dev  =  values[i]  /  mean;  dev  =  values[i]  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        /        mean;        dev    =    values[i]    /    mean;    double  dev  =  values[i]  /  mean;  dev  =  values[i]  /  mean;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	42	None	add
391	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  accum2;  accum  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  values[i]  /  accum2;  accum  =  values[i]  -  accum2;	  dev    =    values[i]    -    accum2;    accum    =    values[i]    -    accum2;    	compilable	  [FE]  AssertionError  	38	2	replace
392	[BUG]  [BUGGY]  dev  =  values[i]  /  accum2;  accum  =  values[i]  -  accum2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  accum2;  accum  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  /  accum2;  accum  =  values[i]  -  accum2;	  dev    =    values[i]    -    accum2;    accum    =    values[i]    -    accum2;    	compilable	  [FE]  AssertionError  	38	2	replace
393	[BUG]  [BUGGY]  dev  =  accum2  -  values[i];  Dev  =  mean  -  values[i];  [CE]  cannot  find  symbol  Dev  [FE]          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  -  values[i];  Dev  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  accum2  -  values[i];  Dev  =  mean  -  values[i];	  dev    =    mean    -    values[i];    Dev    =    mean    -    values[i];    	non-compiled	[CE]  cannot  find  symbol  Dev	96	None	replace
394	[BUG]  [BUGGY]  accum2  =  mean  -  values[i];  Dev  =  mean  -  values[i];  [CE]  cannot  find  symbol  Dev  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  mean  -  values[i];  Dev  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  =  mean  -  values[i];  Dev  =  mean  -  values[i];	  dev    =    mean    -    values[i];    Dev    =    mean    -    values[i];    	non-compiled	[CE]  cannot  find  symbol  Dev	96	None	replace
395	[BUG]  [BUGGY]  Dev  =  mean  -  values[i];  [CE]  cannot  find  symbol  Dev  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  Dev  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	Dev  =  mean  -  values[i];	  dev    =    mean    -    values[i];    Dev    =    mean    -    values[i];    	non-compiled	[CE]  cannot  find  symbol  Dev	96	None	replace
396	[BUG]  [BUGGY]  accum  =  mean  -  values[i];  Dev  =  mean  -  values[i];  [CE]  cannot  find  symbol  Dev  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  mean  -  values[i];  Dev  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  =  mean  -  values[i];  Dev  =  mean  -  values[i];	  dev    =    mean    -    values[i];    Dev    =    mean    -    values[i];    	non-compiled	[CE]  cannot  find  symbol  Dev	96	None	replace
397	[BUG]  [BUGGY]  double  mean  =  weights[i]  /  dev;  [CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  mean  =  weights[i]  /  dev;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  mean  =  weights[i]  /  dev;	  double    mean    =    values[i]    /    mean;    	non-compiled	[CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	49	None	replace
398	[BUG]  [BUGGY]  double  mean  =  values[i]  /  weights[i];  [CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  mean  =  values[i]  /  weights[i];  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  mean  =  values[i]  /  weights[i];	  double    mean    =    values[i]    /    mean;    	non-compiled	[CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	49	None	replace
399	[BUG]  [BUGGY]  double  mean  =  values[i]  *  mean;  [CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  mean  =  values[i]  *  mean;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  mean  =  values[i]  *  mean;	  double    mean    =    values[i]    /    mean;    	non-compiled	[CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	49	None	replace
400	[BUG]  [BUGGY]  dev  =  accum[i]  *  values;  [CE]  array  required,  but  double  found  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum[i]  *  values;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  accum[i]  *  values;	  dev    =    values[i]    *    accum;    	non-compiled	[CE]  array  required,  but  double  found	6	None	replace
401	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  +=  weights[i]  *  (dev  *  var);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum  +=  weights[i]  *  (dev  *  var);	  accum    +=    weights[i]    *    (dev    *    dev);    	compilable	  [FE]  AssertionError  	125	2	replace
402	[BUG]  [BUGGY]  accum  +=  weights[i]  *  (dev  *  var);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  +=  weights[i]  *  (dev  *  var);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  +=  weights[i]  *  (dev  *  var);	  accum    +=    weights[i]    *    (dev    *    dev);    	compilable	  [FE]  AssertionError  	125	2	replace
403	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  +=  weights[i]  *  (dev  /  dev);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum  +=  weights[i]  *  (dev  /  dev);	  accum    +=    weights[i]    *    (dev    *    dev);    	compilable	  [FE]  AssertionError  	125	2	replace
404	[BUG]  [BUGGY]  accum  +=  weights[i]  *  (dev  /  dev);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  +=  weights[i]  *  (dev  /  dev);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  +=  weights[i]  *  (dev  /  dev);	  accum    +=    weights[i]    *    (dev    *    dev);    	compilable	  [FE]  AssertionError  	125	2	replace
405	[BUG]  [BUGGY]  accum  +=  weights[i]  *  (dev  *  dev2);  [CE]  cannot  find  symbol  dev2  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  +=  weights[i]  *  (dev  *  dev2);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  +=  weights[i]  *  (dev  *  dev2);	  accum    +=    weights[i]    *    (dev    *    dev);    	non-compiled	[CE]  cannot  find  symbol  dev2	125	None	replace
406	[BUG]  [BUGGY]  accum2  =  values[i]  *  mean;  double  dev  =  values[i]  *  mean;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  *  mean;  double  dev  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  =  values[i]  *  mean;  double  dev  =  values[i]  *  mean;	  dev    =    values[i]    *    mean;    double    dev    =    values[i]    *    mean;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	71	None	replace
407	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum2  =  values[i]  *  mean;	  dev    =    values[i]    *    mean;    double    dev    =    values[i]    *    mean;    	compilable	  [FE]  AssertionError  	71	3	replace
408	[BUG]  [BUGGY]  accum2  =  values[i]  *  mean;  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  =  values[i]  *  mean;	  dev    =    values[i]    *    mean;    double    dev    =    values[i]    *    mean;    	compilable	  [FE]  AssertionError  	71	3	replace
409	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  dev  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum2  =  dev  -  values[i];	  dev    =    dev2    -    values[i];    	compilable	  [FE]  AssertionError  	14	3	replace
410	[BUG]  [BUGGY]  accum2  =  dev  -  values[i];  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  dev  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  =  dev  -  values[i];	  dev    =    dev2    -    values[i];    	compilable	  [FE]  AssertionError  	14	3	replace
411	[BUG]  [BUGGY]  dev  =  accum2.length  -  values[i];  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2.length  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  accum2.length  -  values[i];	  dev    =    dev2    -    values[i];    	non-compiled	[CE]  double  cannot  be  dereferenced	14	None	replace
412	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  *  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  accum2  *  values[i];	  dev    =    values[i]    *    accum2;    	compilable	  [FE]  AssertionError  	104	2	replace
413	[BUG]  [BUGGY]  dev  =  accum2  *  values[i];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  *  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  accum2  *  values[i];	  dev    =    values[i]    *    accum2;    	compilable	  [FE]  AssertionError  	104	2	replace
414	[BUG]  [BUGGY]  accum2  =  values[i]  -  accum2;  Dev  =  values[i]  -  accum2;  [CE]  cannot  find  symbol  Dev  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  -  accum2;  Dev  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  =  values[i]  -  accum2;  Dev  =  values[i]  -  accum2;	  dev    =    values[i]    -    accum2;    Dev    =    values[i]    -    accum2;    	non-compiled	[CE]  cannot  find  symbol  Dev	39	None	replace
415	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    accum;    dev  =  values[i]  -  accum;  dev  =  values[i]  -  accum;  dev  =  values[i]  -  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev        =        values[i]        -        accum;        dev    =    values[i]    -    accum;    dev  =  values[i]  -  accum;  dev  =  values[i]  -  accum;	  	compilable	  [FE]  AssertionError  	56	1	add
416	[BUG]  [BUGGY]  dev    =    values[i]    -    accum;    dev  =  values[i]  -  accum;  dev  =  values[i]  -  accum;  dev  =  values[i]  -  accum;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    accum;    dev  =  values[i]  -  accum;  dev  =  values[i]  -  accum;  dev  =  values[i]  -  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        -        accum;        dev    =    values[i]    -    accum;    dev  =  values[i]  -  accum;  dev  =  values[i]  -  accum;	  	compilable	  [FE]  AssertionError  	56	1	add
417	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    accum;    dev  =  values[i]  -  accum;  accum  =  values[i]  -  accum;  dev  =  values[i]  -  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev        =        values[i]        -        accum;        dev    =    values[i]    -    accum;    accum  =  values[i]  -  accum;  dev  =  values[i]  -  accum;	  	compilable	  [FE]  AssertionError  	56	3	add
418	[BUG]  [BUGGY]  dev    =    values[i]    -    accum;    dev  =  values[i]  -  accum;  accum  =  values[i]  -  accum;  dev  =  values[i]  -  accum;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    accum;    dev  =  values[i]  -  accum;  accum  =  values[i]  -  accum;  dev  =  values[i]  -  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        -        accum;        dev    =    values[i]    -    accum;    accum  =  values[i]  -  accum;  dev  =  values[i]  -  accum;	  	compilable	  [FE]  AssertionError  	56	3	add
419	[BUG]  [BUGGY]  dev    =    values[i]    -    accum;    dev  =  values[i]  -  accum;  Dev  =  values[i]  -  accum;  dev  =  values[i]  -  accum;  [CE]  cannot  find  symbol  Dev  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    accum;    dev  =  values[i]  -  accum;  Dev  =  values[i]  -  accum;  dev  =  values[i]  -  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        -        accum;        dev    =    values[i]    -    accum;    Dev  =  values[i]  -  accum;  dev  =  values[i]  -  accum;	  	non-compiled	[CE]  cannot  find  symbol  Dev	56	None	add
420	[BUG]  [BUGGY]  dev    =    values[i]    -    accum;    dev  =  values[i]  -  accum;  double  accum  =  values[i]  -  accum;  dev  =  values[i]  -  accum;  [CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    accum;    dev  =  values[i]  -  accum;  double  accum  =  values[i]  -  accum;  dev  =  values[i]  -  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        -        accum;        dev    =    values[i]    -    accum;    double  accum  =  values[i]  -  accum;  dev  =  values[i]  -  accum;	  	non-compiled	[CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	56	None	add
421	[BUG]  [BUGGY]  dev    =    values[i]    -    accum;    dev  =  values[i]  -  accum;  int  dev  =  values[i]  -  accum;  dev  =  values[i]  -  accum;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    accum;    dev  =  values[i]  -  accum;  int  dev  =  values[i]  -  accum;  dev  =  values[i]  -  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        -        accum;        dev    =    values[i]    -    accum;    int  dev  =  values[i]  -  accum;  dev  =  values[i]  -  accum;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	56	None	add
422	[BUG]  [BUGGY]  int  dev  =  values[i]  -  mean  +  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  int  dev  =  values[i]  -  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	int  dev  =  values[i]  -  mean  +  1;	  dev    =    values[i]    -    mean    +    1;    int    dev    =    values[i]    -    mean    +    1;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	26	None	replace
423	[BUG]  [BUGGY]  accum2  =  values[i]  -  mean  +  1;  int  dev  =  values[i]  -  mean  +  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  -  mean  +  1;  int  dev  =  values[i]  -  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  =  values[i]  -  mean  +  1;  int  dev  =  values[i]  -  mean  +  1;	  dev    =    values[i]    -    mean    +    1;    int    dev    =    values[i]    -    mean    +    1;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	26	None	replace
424	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum2    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);	  	compilable	  [FE]  AssertionError  	17	3	add
425	[BUG]  [BUGGY]  accum2  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);	  	compilable	  [FE]  AssertionError  	17	3	add
426	[BUG]  [BUGGY]  accum2  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  DEV);  [CE]  cannot  find  symbol  DEV  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  DEV);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  DEV);	  	non-compiled	[CE]  cannot  find  symbol  DEV	17	None	add
427	[BUG]  [BUGGY]  accum2  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  double  accum2  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  double  accum2  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    double  accum2  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);	  	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	17	None	add
428	[BUG]  [BUGGY]  double  dev  =  Double.valueOf(values[i],  accum);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  Double.valueOf(values[i],  accum);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  Double.valueOf(values[i],  accum);	  double    dev    =    Double.valueOf(values[i]);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	52	None	replace
429	[BUG]  [BUGGY]  double  dev  =  Double.valueOf(values[i]  /  2.0);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  Double.valueOf(values[i]  /  2.0);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  Double.valueOf(values[i]  /  2.0);	  double    dev    =    Double.valueOf(values[i]);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	52	None	replace
430	[BUG]  [BUGGY]  double  dev  =  Double.valueOf(values[i],  accum2);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  Double.valueOf(values[i],  accum2);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  Double.valueOf(values[i],  accum2);	  double    dev    =    Double.valueOf(values[i]);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	52	None	replace
431	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  dev  /  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  dev  /  values[i];	  dev    =    dev    -    values[i];    	compilable	  [FE]  AssertionError  	13	2	replace
432	[BUG]  [BUGGY]  dev  =  dev  /  values[i];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  dev  /  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  dev  /  values[i];	  dev    =    dev    -    values[i];    	compilable	  [FE]  AssertionError  	13	2	replace
433	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  dev  *  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  dev  *  values[i];	  dev    =    dev    -    values[i];    	compilable	  [FE]  AssertionError  	13	2	replace
434	[BUG]  [BUGGY]  dev  =  dev  *  values[i];  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  dev  *  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  dev  *  values[i];	  dev    =    dev    -    values[i];    	compilable	  [FE]  AssertionError  	13	2	replace
435	[BUG]  [BUGGY]  accum2  =  mean  -  values[i];  double  dev  =  mean  -  values[i];  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  mean  -  values[i];  double  dev  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  =  mean  -  values[i];  double  dev  =  mean  -  values[i];	  dev    =    mean    -    values[i];    double    dev    =    mean    -    values[i];    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	99	None	replace
436	[BUG]  [BUGGY]  accum  =  mean  -  values[i];  double  dev  =  accum2  -  values[i];  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  mean  -  values[i];  double  dev  =  accum2  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  =  mean  -  values[i];  double  dev  =  accum2  -  values[i];	  dev    =    mean    -    values[i];    double    dev    =    mean    -    values[i];    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	99	None	replace
437	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum  -  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  accum  -  values[i]  *  dev;	  dev    =    accum    -    values[i];    	compilable	  [FE]  AssertionError  	127	2	replace
438	[BUG]  [BUGGY]  dev  =  accum  -  values[i]  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum  -  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  accum  -  values[i]  *  dev;	  dev    =    accum    -    values[i];    	compilable	  [FE]  AssertionError  	127	2	replace
439	[BUG]  [BUGGY]  dev  =  accum[i]  /  values[i];  [CE]  array  required,  but  double  found  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum[i]  /  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  accum[i]  /  values[i];	  dev    =    values[i]    /    accum;    	non-compiled	[CE]  array  required,  but  double  found	2	None	replace
440	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  *  mean;  dev  =  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum  =  values[i]  *  mean;  dev  =  values[i]  *  dev;	  dev    =    values[i]    *    mean;    dev    =    values[i]    *    mean;    	compilable	  [FE]  AssertionError  	66	3	replace
441	[BUG]  [BUGGY]  accum  =  values[i]  *  mean;  dev  =  values[i]  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  *  mean;  dev  =  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  =  values[i]  *  mean;  dev  =  values[i]  *  dev;	  dev    =    values[i]    *    mean;    dev    =    values[i]    *    mean;    	compilable	  [FE]  AssertionError  	66	3	replace
442	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  *  mean;  dev  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum2  =  values[i]  *  mean;  dev  =  values[i]  *  mean;	  dev    =    values[i]    *    mean;    dev    =    values[i]    *    mean;    	compilable	  [FE]  AssertionError  	66	3	replace
443	[BUG]  [BUGGY]  accum2  =  values[i]  *  mean;  dev  =  values[i]  *  mean;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  *  mean;  dev  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  =  values[i]  *  mean;  dev  =  values[i]  *  mean;	  dev    =    values[i]    *    mean;    dev    =    values[i]    *    mean;    	compilable	  [FE]  AssertionError  	66	3	replace
444	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  accum;  dev  =  values[i]  *  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev    =    values[i]    *    accum;    dev  =  values[i]  *  accum;	  	compilable	  [FE]  AssertionError  	5	1	add
445	[BUG]  [BUGGY]  dev  =  values[i]  *  accum;  dev  =  values[i]  *  accum;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  accum;  dev  =  values[i]  *  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    *    accum;    dev  =  values[i]  *  accum;	  	compilable	  [FE]  AssertionError  	5	1	add
446	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  accum;  accum  =  values[i]  *  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev    =    values[i]    *    accum;    accum  =  values[i]  *  accum;	  	compilable	  [FE]  AssertionError  	5	3	add
447	[BUG]  [BUGGY]  dev  =  values[i]  *  accum;  accum  =  values[i]  *  accum;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  accum;  accum  =  values[i]  *  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    *    accum;    accum  =  values[i]  *  accum;	  	compilable	  [FE]  AssertionError  	5	3	add
448	[BUG]  [BUGGY]  dev  =  values[i]  *  accum;  Dev  =  values[i]  *  accum;  [CE]  cannot  find  symbol  Dev  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  accum;  Dev  =  values[i]  *  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    *    accum;    Dev  =  values[i]  *  accum;	  	non-compiled	[CE]  cannot  find  symbol  Dev	5	None	add
449	[BUG]  [BUGGY]  dev  =  values[i]  *  accum;  int  dev  =  values[i]  *  accum;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  accum;  int  dev  =  values[i]  *  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    *    accum;    int  dev  =  values[i]  *  accum;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	5	None	add
450	[BUG]  [BUGGY]  dev  =  values[i]  *  accum;  double  dev  =  values[i]  *  accum;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  accum;  double  dev  =  values[i]  *  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    *    accum;    double  dev  =  values[i]  *  accum;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	5	None	add
451	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  /  mean;  dev  =  accum2  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev    =    accum2    /    mean;    dev  =  accum2  /  mean;	  	compilable	  [FE]  AssertionError  	75	1	add
452	[BUG]  [BUGGY]  dev  =  accum2  /  mean;  dev  =  accum2  /  mean;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  /  mean;  dev  =  accum2  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    accum2    /    mean;    dev  =  accum2  /  mean;	  	compilable	  [FE]  AssertionError  	75	1	add
453	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  /  mean;  accum2  =  accum2  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev    =    accum2    /    mean;    accum2  =  accum2  /  mean;	  	compilable	  [FE]  AssertionError  	75	3	add
454	[BUG]  [BUGGY]  dev  =  accum2  /  mean;  accum2  =  accum2  /  mean;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  /  mean;  accum2  =  accum2  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    accum2    /    mean;    accum2  =  accum2  /  mean;	  	compilable	  [FE]  AssertionError  	75	3	add
455	[BUG]  [BUGGY]  dev  =  accum2  /  mean;  Dev  =  accum2  /  mean;  [CE]  cannot  find  symbol  Dev  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  /  mean;  Dev  =  accum2  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    accum2    /    mean;    Dev  =  accum2  /  mean;	  	non-compiled	[CE]  cannot  find  symbol  Dev	75	None	add
456	[BUG]  [BUGGY]  dev  =  accum2  /  mean;  int  dev  =  accum2  /  mean;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  /  mean;  int  dev  =  accum2  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    accum2    /    mean;    int  dev  =  accum2  /  mean;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	75	None	add
457	[BUG]  [BUGGY]  double  dev  =  Math.abs(values[i]  *  accum2);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  Math.abs(values[i]  *  accum2);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  Math.abs(values[i]  *  accum2);	          double    dev    =    Math.abs(values[i]);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	106	None	replace
458	[BUG]  [BUGGY]  double  dev  =  Math.abs(values[i]  -  1);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  Math.abs(values[i]  -  1);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  Math.abs(values[i]  -  1);	          double    dev    =    Math.abs(values[i]);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	106	None	replace
459	[BUG]  [BUGGY]  double  dev  =  Math.abs(values[i]  +  accum2);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  Math.abs(values[i]  +  accum2);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  Math.abs(values[i]  +  accum2);	          double    dev    =    Math.abs(values[i]);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	106	None	replace
460	[BUG]  [BUGGY]  double  dev  =  values[i]  *  mean;  accum2  +=  weights[i]  *  dev;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i]  *  mean;  accum2  +=  weights[i]  *  dev;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i]  *  mean;  accum2  +=  weights[i]  *  dev;	  double    dev    =    values[i]    *    mean;    accum2    +=    values[i]    *    dev;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	11	None	replace
461	[BUG]  [BUGGY]  double  dev  =  values[i]  *  mean;  accum2  +=  values[i]  *  (dev  *  dev);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i]  *  mean;  accum2  +=  values[i]  *  (dev  *  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i]  *  mean;  accum2  +=  values[i]  *  (dev  *  dev);	  double    dev    =    values[i]    *    mean;    accum2    +=    values[i]    *    dev;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	11	None	replace
462	[BUG]  [BUGGY]  double  dev  =  values[i]  /  weights[i].doubleValue();  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i]  /  weights[i].doubleValue();  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i]  /  weights[i].doubleValue();	  double    dev    =    values[i]    /    mean.doubleValue();    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	32	None	replace
463	[BUG]  [BUGGY]  double  dev  =  values[i]  *  mean.doubleValue();  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i]  *  mean.doubleValue();  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i]  *  mean.doubleValue();	  double    dev    =    values[i]    /    mean.doubleValue();    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	32	None	replace
464	[BUG]  [BUGGY]  double  dev  =  values[i]  /  mean.doubleValue()  +  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i]  /  mean.doubleValue()  +  1;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i]  /  mean.doubleValue()  +  1;	  double    dev    =    values[i]    /    mean.doubleValue();    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	32	None	replace
465	[BUG]  [BUGGY]  double  dev  =  value(values[i],  begin,  length,  accum2);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  value(values[i],  begin,  length,  accum2);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  value(values[i],  begin,  length,  accum2);	          double    dev    =    value(values[i],    begin,    length);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	105	None	replace
466	[BUG]  [BUGGY]  double  dev  =  value(values[i],  mean,  length);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  value(values[i],  mean,  length);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  value(values[i],  mean,  length);	          double    dev    =    value(values[i],    begin,    length);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	105	None	replace
467	[BUG]  [BUGGY]  double  dev  =  value(values[i],  begin,  length,  mean);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  value(values[i],  begin,  length,  mean);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  value(values[i],  begin,  length,  mean);	          double    dev    =    value(values[i],    begin,    length);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	105	None	replace
468	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    *    mean;    accum  +=  values[i]  *  mean;  dev  =  values[i]  *  mean;  accum  +=  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev        =        values[i]        *        mean;        accum    +=    values[i]    *    mean;    dev  =  values[i]  *  mean;  accum  +=  values[i]  *  mean;	  	compilable	  [FE]  AssertionError  	121	3	add
469	[BUG]  [BUGGY]  dev    =    values[i]    *    mean;    accum  +=  values[i]  *  mean;  dev  =  values[i]  *  mean;  accum  +=  values[i]  *  mean;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    *    mean;    accum  +=  values[i]  *  mean;  dev  =  values[i]  *  mean;  accum  +=  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        *        mean;        accum    +=    values[i]    *    mean;    dev  =  values[i]  *  mean;  accum  +=  values[i]  *  mean;	  	compilable	  [FE]  AssertionError  	121	3	add
470	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    *    mean;    accum  +=  values[i]  *  mean;  accum  =  values[i]  *  mean;  accum  +=  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev        =        values[i]        *        mean;        accum    +=    values[i]    *    mean;    accum  =  values[i]  *  mean;  accum  +=  values[i]  *  mean;	  	compilable	  [FE]  AssertionError  	121	3	add
471	[BUG]  [BUGGY]  dev    =    values[i]    *    mean;    accum  +=  values[i]  *  mean;  accum  =  values[i]  *  mean;  accum  +=  values[i]  *  mean;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    *    mean;    accum  +=  values[i]  *  mean;  accum  =  values[i]  *  mean;  accum  +=  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        *        mean;        accum    +=    values[i]    *    mean;    accum  =  values[i]  *  mean;  accum  +=  values[i]  *  mean;	  	compilable	  [FE]  AssertionError  	121	3	add
472	[BUG]  [BUGGY]  dev    =    values[i]    *    mean;    accum  +=  values[i]  *  mean;  Dev  =  values[i]  *  mean;  accum  +=  values[i]  *  mean;  [CE]  cannot  find  symbol  Dev  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    *    mean;    accum  +=  values[i]  *  mean;  Dev  =  values[i]  *  mean;  accum  +=  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        *        mean;        accum    +=    values[i]    *    mean;    Dev  =  values[i]  *  mean;  accum  +=  values[i]  *  mean;	  	non-compiled	[CE]  cannot  find  symbol  Dev	121	None	add
473	[BUG]  [BUGGY]  dev    =    values[i]    *    mean;    accum  +=  values[i]  *  mean;  int  dev  =  values[i]  *  mean;  accum  +=  values[i]  *  mean;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    *    mean;    accum  +=  values[i]  *  mean;  int  dev  =  values[i]  *  mean;  accum  +=  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        *        mean;        accum    +=    values[i]    *    mean;    int  dev  =  values[i]  *  mean;  accum  +=  values[i]  *  mean;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	121	None	add
474	[BUG]  [BUGGY]  dev    =    values[i]    *    mean;    accum  +=  values[i]  *  mean;  double  dev  =  values[i]  *  mean;  accum  +=  values[i]  *  mean;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    *    mean;    accum  +=  values[i]  *  mean;  double  dev  =  values[i]  *  mean;  accum  +=  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        *        mean;        accum    +=    values[i]    *    mean;    double  dev  =  values[i]  *  mean;  accum  +=  values[i]  *  mean;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	121	None	add
475	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    *    mean;    dev  =  values[i]  *  mean;  dev  =  values[i]  *  mean;  dev  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev        =        values[i]        *        mean;        dev    =    values[i]    *    mean;    dev  =  values[i]  *  mean;  dev  =  values[i]  *  mean;	  	compilable	  [FE]  AssertionError  	65	1	add
476	[BUG]  [BUGGY]  dev    =    values[i]    *    mean;    dev  =  values[i]  *  mean;  dev  =  values[i]  *  mean;  dev  =  values[i]  *  mean;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    *    mean;    dev  =  values[i]  *  mean;  dev  =  values[i]  *  mean;  dev  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        *        mean;        dev    =    values[i]    *    mean;    dev  =  values[i]  *  mean;  dev  =  values[i]  *  mean;	  	compilable	  [FE]  AssertionError  	65	1	add
477	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    *    mean;    dev  =  values[i]  *  mean;  accum  =  values[i]  *  mean;  dev  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev        =        values[i]        *        mean;        dev    =    values[i]    *    mean;    accum  =  values[i]  *  mean;  dev  =  values[i]  *  mean;	  	compilable	  [FE]  AssertionError  	65	3	add
478	[BUG]  [BUGGY]  dev    =    values[i]    *    mean;    dev  =  values[i]  *  mean;  accum  =  values[i]  *  mean;  dev  =  values[i]  *  mean;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    *    mean;    dev  =  values[i]  *  mean;  accum  =  values[i]  *  mean;  dev  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        *        mean;        dev    =    values[i]    *    mean;    accum  =  values[i]  *  mean;  dev  =  values[i]  *  mean;	  	compilable	  [FE]  AssertionError  	65	3	add
479	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    *    mean;    dev  =  values[i]  *  mean;  accum2  =  values[i]  *  mean;  dev  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev        =        values[i]        *        mean;        dev    =    values[i]    *    mean;    accum2  =  values[i]  *  mean;  dev  =  values[i]  *  mean;	  	compilable	  [FE]  AssertionError  	65	3	add
480	[BUG]  [BUGGY]  dev    =    values[i]    *    mean;    dev  =  values[i]  *  mean;  accum2  =  values[i]  *  mean;  dev  =  values[i]  *  mean;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    *    mean;    dev  =  values[i]  *  mean;  accum2  =  values[i]  *  mean;  dev  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        *        mean;        dev    =    values[i]    *    mean;    accum2  =  values[i]  *  mean;  dev  =  values[i]  *  mean;	  	compilable	  [FE]  AssertionError  	65	3	add
481	[BUG]  [BUGGY]  dev    =    values[i]    *    mean;    dev  =  values[i]  *  mean;  double  dev  =  values[i]  *  mean;  dev  =  values[i]  *  mean;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    *    mean;    dev  =  values[i]  *  mean;  double  dev  =  values[i]  *  mean;  dev  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        *        mean;        dev    =    values[i]    *    mean;    double  dev  =  values[i]  *  mean;  dev  =  values[i]  *  mean;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	65	None	add
482	[BUG]  [BUGGY]  dev    =    values[i]    *    mean;    dev  =  values[i]  *  mean;  int  dev  =  values[i]  *  mean;  dev  =  values[i]  *  mean;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    *    mean;    dev  =  values[i]  *  mean;  int  dev  =  values[i]  *  mean;  dev  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        *        mean;        dev    =    values[i]    *    mean;    int  dev  =  values[i]  *  mean;  dev  =  values[i]  *  mean;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	65	None	add
483	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum2  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;	  dev    =    values[i]    -    mean    +    1;    dev    =    values[i]    -    mean    +    1;    	compilable	  [FE]  AssertionError  	22	3	replace
484	[BUG]  [BUGGY]  accum2  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;	  dev    =    values[i]    -    mean    +    1;    dev    =    values[i]    -    mean    +    1;    	compilable	  [FE]  AssertionError  	22	3	replace
485	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;	  dev    =    values[i]    -    mean    +    1;    dev    =    values[i]    -    mean    +    1;    	compilable	  [FE]  AssertionError  	22	3	replace
486	[BUG]  [BUGGY]  accum  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;	  dev    =    values[i]    -    mean    +    1;    dev    =    values[i]    -    mean    +    1;    	compilable	  [FE]  AssertionError  	22	3	replace
487	[BUG]  [BUGGY]  double  mean  =  values[i]  /  accum2;  [CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  mean  =  values[i]  /  accum2;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  mean  =  values[i]  /  accum2;	  double    mean    =    values[i]    -    accum2;    	non-compiled	[CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	50	None	replace
488	[BUG]  [BUGGY]  double  mean  =  weights[i]  /  accum2;  [CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  mean  =  weights[i]  /  accum2;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  mean  =  weights[i]  /  accum2;	  double    mean    =    values[i]    -    accum2;    	non-compiled	[CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	50	None	replace
489	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  accum2  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  values[i]  /  accum2  +  1;	  dev    =    values[i]    -    accum2    +    1;    	compilable	  [FE]  AssertionError  	31	2	replace
490	[BUG]  [BUGGY]  dev  =  values[i]  /  accum2  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  accum2  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  /  accum2  +  1;	  dev    =    values[i]    -    accum2    +    1;    	compilable	  [FE]  AssertionError  	31	2	replace
491	[BUG]  [BUGGY]  double  dev  =  values[i]  -  accum;  accum  +=  weights[i]  *  (dev  *  dev);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i]  -  accum;  accum  +=  weights[i]  *  (dev  *  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i]  -  accum;  accum  +=  weights[i]  *  (dev  *  dev);	  double    dev    =    values[i]    -    mean;    accum2    +=    weights[i]    *    (dev    *    dev);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	10	None	replace
492	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  dev;  dev  =  values[i]  /  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev    =    values[i]    /    dev;    dev  =  values[i]  /  dev;	  	compilable	  [FE]  AssertionError  	72	1	add
493	[BUG]  [BUGGY]  dev  =  values[i]  /  dev;  dev  =  values[i]  /  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  dev;  dev  =  values[i]  /  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    /    dev;    dev  =  values[i]  /  dev;	  	compilable	  [FE]  AssertionError  	72	1	add
494	[BUG]  [BUGGY]  dev  =  values[i]  /  dev;  int  dev  =  values[i]  /  dev;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  dev;  int  dev  =  values[i]  /  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    /    dev;    int  dev  =  values[i]  /  dev;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	72	None	add
495	[BUG]  [BUGGY]  double  dev  =  values[i].doubleValue()  /  mean;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i].doubleValue()  /  mean;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i].doubleValue()  /  mean;	  double    dev    =    values[i].doubleValue()    -    mean;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	113	None	replace
496	[BUG]  [BUGGY]  double  dev  =  values[i].doubleValue()  *  mean;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i].doubleValue()  *  mean;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i].doubleValue()  *  mean;	  double    dev    =    values[i].doubleValue()    -    mean;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	113	None	replace
497	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  accum;  accum  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  values[i]  /  accum;  accum  =  values[i]  -  accum2;	  dev    =    values[i]    -    accum;    accum    =    values[i]    -    accum;    	compilable	  [FE]  AssertionError  	59	2	replace
498	[BUG]  [BUGGY]  dev  =  values[i]  /  accum;  accum  =  values[i]  -  accum2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  accum;  accum  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  /  accum;  accum  =  values[i]  -  accum2;	  dev    =    values[i]    -    accum;    accum    =    values[i]    -    accum;    	compilable	  [FE]  AssertionError  	59	2	replace
499	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  -  values[i];  dev  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  accum2  -  values[i];  dev  =  mean  -  values[i];	  dev    =    mean    -    values[i];    dev    =    mean    -    values[i];    	compilable	  [FE]  AssertionError  	95	1	replace
500	[BUG]  [BUGGY]  dev  =  accum2  -  values[i];  dev  =  mean  -  values[i];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  -  values[i];  dev  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  accum2  -  values[i];  dev  =  mean  -  values[i];	  dev    =    mean    -    values[i];    dev    =    mean    -    values[i];    	compilable	  [FE]  AssertionError  	95	1	replace
501	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  dev  -  values[i];  dev  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  dev  -  values[i];  dev  =  mean  -  values[i];	  dev    =    mean    -    values[i];    dev    =    mean    -    values[i];    	compilable	  [FE]  AssertionError  	95	1	replace
502	[BUG]  [BUGGY]  dev  =  dev  -  values[i];  dev  =  mean  -  values[i];  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  dev  -  values[i];  dev  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  dev  -  values[i];  dev  =  mean  -  values[i];	  dev    =    mean    -    values[i];    dev    =    mean    -    values[i];    	compilable	  [FE]  AssertionError  	95	1	replace
503	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  mean  -  values[i];  dev  =  accum2  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  mean  -  values[i];  dev  =  accum2  -  values[i];	  dev    =    mean    -    values[i];    dev    =    mean    -    values[i];    	compilable	  [FE]  AssertionError  	95	3	replace
504	[BUG]  [BUGGY]  dev  =  mean  -  values[i];  dev  =  accum2  -  values[i];  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  mean  -  values[i];  dev  =  accum2  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  mean  -  values[i];  dev  =  accum2  -  values[i];	  dev    =    mean    -    values[i];    dev    =    mean    -    values[i];    	compilable	  [FE]  AssertionError  	95	3	replace
505	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  mean  -  values[i];  dev  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum2  =  mean  -  values[i];  dev  =  mean  -  values[i];	  dev    =    mean    -    values[i];    dev    =    mean    -    values[i];    	compilable	  [FE]  AssertionError  	95	3	replace
506	[BUG]  [BUGGY]  accum2  =  mean  -  values[i];  dev  =  mean  -  values[i];  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  mean  -  values[i];  dev  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  =  mean  -  values[i];  dev  =  mean  -  values[i];	  dev    =    mean    -    values[i];    dev    =    mean    -    values[i];    	compilable	  [FE]  AssertionError  	95	3	replace
507	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  mean  +  1;  accum2  =  values[i]  -  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  values[i]  -  mean  +  1;  accum2  =  values[i]  -  mean  +  1;	  dev    =    values[i]    -    mean    +    1;    accum    =    values[i]    -    mean    +    1;    	compilable	  [FE]  AssertionError  	24	3	replace
508	[BUG]  [BUGGY]  dev  =  values[i]  -  mean  +  1;  accum2  =  values[i]  -  mean  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  mean  +  1;  accum2  =  values[i]  -  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  -  mean  +  1;  accum2  =  values[i]  -  mean  +  1;	  dev    =    values[i]    -    mean    +    1;    accum    =    values[i]    -    mean    +    1;    	compilable	  [FE]  AssertionError  	24	3	replace
509	[BUG]  [BUGGY]  dev  =  values[i]  /  dev;  double  dev  =  values[i]  /  dev;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  dev;  double  dev  =  values[i]  /  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    /    dev;    double  dev  =  values[i]  /  dev;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	72	None	add
510	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  mean;  accum2  +=  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  values[i]  *  mean;  accum2  +=  values[i]  *  mean;	  dev    =    values[i]    *    mean;    accum    +=    values[i]    *    mean;    	compilable	  [FE]  AssertionError  	122	3	replace
511	[BUG]  [BUGGY]  dev  =  values[i]  *  mean;  accum2  +=  values[i]  *  mean;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  mean;  accum2  +=  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  *  mean;  accum2  +=  values[i]  *  mean;	  dev    =    values[i]    *    mean;    accum    +=    values[i]    *    mean;    	compilable	  [FE]  AssertionError  	122	3	replace
512	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  var;  accum  +=  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  values[i]  *  var;  accum  +=  values[i]  *  mean;	  dev    =    values[i]    *    mean;    accum    +=    values[i]    *    mean;    	compilable	  [FE]  AssertionError  	122	2	replace
513	[BUG]  [BUGGY]  dev  =  values[i]  *  var;  accum  +=  values[i]  *  mean;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  var;  accum  +=  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  *  var;  accum  +=  values[i]  *  mean;	  dev    =    values[i]    *    mean;    accum    +=    values[i]    *    mean;    	compilable	  [FE]  AssertionError  	122	2	replace
514	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  var);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  var);	  accum    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    var);    	compilable	  [FE]  AssertionError  	20	2	replace
515	[BUG]  [BUGGY]  accum  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  var);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  var);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  var);	  accum    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    var);    	compilable	  [FE]  AssertionError  	20	2	replace
516	[BUG]  [BUGGY]  dev  =  values[i]  -  accum1;  Dev  =  values[i]  -  accum2;  [CE]  cannot  find  symbol  accum1  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  accum1;  Dev  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  -  accum1;  Dev  =  values[i]  -  accum2;	  dev    =    values[i]    -    accum2;    Dev    =    values[i]    -    accum2;    	non-compiled	[CE]  cannot  find  symbol  accum1	39	None	replace
517	[BUG]  [BUGGY]  accum2  =  values[i]  -  mean  +  1;  double  dev  =  values[i]  -  mean  +  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  -  mean  +  1;  double  dev  =  values[i]  -  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  =  values[i]  -  mean  +  1;  double  dev  =  values[i]  -  mean  +  1;	  dev    =    values[i]    -    mean    +    1;    double    dev    =    values[i]    -    mean    +    1;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	27	None	replace
518	[BUG]  [BUGGY]  accum  =  values[i]  -  mean  +  1;  double  dev  =  values[i]  -  mean  +  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  -  mean  +  1;  double  dev  =  values[i]  -  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  =  values[i]  -  mean  +  1;  double  dev  =  values[i]  -  mean  +  1;	  dev    =    values[i]    -    mean    +    1;    double    dev    =    values[i]    -    mean    +    1;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	27	None	replace
519	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  accum2  /  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  values[i]  -  accum2  /  1;	  dev    =    values[i]    -    accum2    +    1;    	compilable	  [FE]  AssertionError  	31	3	replace
520	[BUG]  [BUGGY]  dev  =  values[i]  -  accum2  /  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  accum2  /  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  -  accum2  /  1;	  dev    =    values[i]    -    accum2    +    1;    	compilable	  [FE]  AssertionError  	31	3	replace
521	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  -  values[i  +  1]  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  accum2  -  values[i  +  1]  +  1;	  dev    =    values[i]    -    accum    +    1;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	110	3	replace
522	[BUG]  [BUGGY]  dev  =  accum2  -  values[i  +  1]  +  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  -  values[i  +  1]  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  accum2  -  values[i  +  1]  +  1;	  dev    =    values[i]    -    accum    +    1;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	110	3	replace
523	[BUG]  [BUGGY]  double  mean  =  weights[i].doubleValue()  +  accum2;  [CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  mean  =  weights[i].doubleValue()  +  accum2;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  mean  =  weights[i].doubleValue()  +  accum2;	  double    mean    =    weights[i].doubleValue();    	non-compiled	[CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	83	None	replace
524	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  (dev);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  values[i]  *  (dev);	  dev    =    values[i]    *    accum;    	compilable	  [FE]  AssertionError  	6	2	replace
525	[BUG]  [BUGGY]  dev  =  values[i]  *  (dev);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  (dev);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  *  (dev);	  dev    =    values[i]    *    accum;    	compilable	  [FE]  AssertionError  	6	2	replace
526	[BUG]  [BUGGY]  dev  =  values[i]  *  DEV;  [CE]  cannot  find  symbol  DEV  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  DEV;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  *  DEV;	  dev    =    values[i]    *    accum;    	non-compiled	[CE]  cannot  find  symbol  DEV	6	None	replace
527	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  accum2;  dev  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  values[i]  *  accum2;  dev  =  values[i]  *  mean;	  dev    =    values[i]    *    mean;    dev    =    values[i]    *    mean;    	compilable	  [FE]  AssertionError  	66	3	replace
528	[BUG]  [BUGGY]  dev  =  values[i]  *  accum2;  dev  =  values[i]  *  mean;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  accum2;  dev  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  *  accum2;  dev  =  values[i]  *  mean;	  dev    =    values[i]    *    mean;    dev    =    values[i]    *    mean;    	compilable	  [FE]  AssertionError  	66	3	replace
529	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  mean;  dev  =  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  values[i]  *  mean;  dev  =  values[i]  *  dev;	  dev    =    values[i]    *    mean;    dev    =    values[i]    *    mean;    	compilable	  [FE]  AssertionError  	66	3	replace
530	[BUG]  [BUGGY]  dev  =  values[i]  *  mean;  dev  =  values[i]  *  dev;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  mean;  dev  =  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  *  mean;  dev  =  values[i]  *  dev;	  dev    =    values[i]    *    mean;    dev    =    values[i]    *    mean;    	compilable	  [FE]  AssertionError  	66	3	replace
531	[BUG]  [BUGGY]  double  dev  =  values[i].doubleValue()  /  2  +  mean;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i].doubleValue()  /  2  +  mean;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i].doubleValue()  /  2  +  mean;	  double    dev    =    values[i].doubleValue()    /    2;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	88	None	replace
532	[BUG]  [BUGGY]  double  dev  =  Math.abs(values[i]  -  accum2)+  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  Math.abs(values[i]  -  accum2)+  1;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  Math.abs(values[i]  -  accum2)+  1;	  double    dev    =    Math.abs(values[i]    -    accum2);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	64	None	replace
533	[BUG]  [BUGGY]  accum  =  values[i]  *  mean;  double  dev  =  values[i]  *  dev;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  *  mean;  double  dev  =  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  =  values[i]  *  mean;  double  dev  =  values[i]  *  dev;	  dev    =    values[i]    *    mean;    double    dev    =    values[i]    *    mean;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	71	None	replace
534	[BUG]  [BUGGY]  dev  =  values[i]  /  mean2;  [CE]  cannot  find  symbol  mean2  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  mean2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  /  mean2;	  dev    =    values[i]    /    mean;    dev    =    values[i]    /    mean;    	non-compiled	[CE]  cannot  find  symbol  mean2	43	None	replace
535	[BUG]  [BUGGY]  accum  =  values[i]  *  mean;  int  dev  =  values[i]  *  mean;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  *  mean;  int  dev  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  =  values[i]  *  mean;  int  dev  =  values[i]  *  mean;	  dev    =    values[i]    *    mean;    int    dev    =    values[i]    *    mean;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	70	None	replace
536	[BUG]  [BUGGY]  double  dev  =  values[i]  *  mean;  accum  +=  weights[i]  *  (dev  *  dev2);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i]  *  mean;  accum  +=  weights[i]  *  (dev  *  dev2);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i]  *  mean;  accum  +=  weights[i]  *  (dev  *  dev2);	  double    dev    =    values[i]    *    mean;    accum    +=    weights[i]    *    (dev    *    dev);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	117	None	replace
537	[BUG]  [BUGGY]  double  dev  =  values[i]  *  mean;  accum2  +=  weights[i]  *  (dev  *  dev);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i]  *  mean;  accum2  +=  weights[i]  *  (dev  *  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i]  *  mean;  accum2  +=  weights[i]  *  (dev  *  dev);	  double    dev    =    values[i]    *    mean;    accum    +=    weights[i]    *    (dev    *    dev);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	117	None	replace
538	[BUG]  [BUGGY]  double  dev  =  Double.valueOf(values[i],  accum2,  length);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  Double.valueOf(values[i],  accum2,  length);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  Double.valueOf(values[i],  accum2,  length);	          double    dev    =    Double.valueOf(values[i],    begin,    length);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	81	None	replace
539	[BUG]  [BUGGY]  accum  =  values[i]  -  mean  +  1;  int  dev  =  values[i]  -  mean  +  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  -  mean  +  1;  int  dev  =  values[i]  -  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  =  values[i]  -  mean  +  1;  int  dev  =  values[i]  -  mean  +  1;	  dev    =    values[i]    -    mean    +    1;    int    dev    =    values[i]    -    mean    +    1;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	26	None	replace
540	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  accum2;  accum  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  values[i]  *  accum2;  accum  =  values[i]  *  mean;	  dev    =    values[i]    *    mean;    accum    =    values[i]    *    mean;    	compilable	  [FE]  AssertionError  	68	3	replace
541	[BUG]  [BUGGY]  dev  =  values[i]  *  accum2;  accum  =  values[i]  *  mean;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  accum2;  accum  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  *  accum2;  accum  =  values[i]  *  mean;	  dev    =    values[i]    *    mean;    accum    =    values[i]    *    mean;    	compilable	  [FE]  AssertionError  	68	3	replace
542	[BUG]  [BUGGY]  dev  =  mean  -  values[i];  Dev  =  dev  -  values[i];  [CE]  cannot  find  symbol  Dev  [FE]          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  mean  -  values[i];  Dev  =  dev  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  mean  -  values[i];  Dev  =  dev  -  values[i];	  dev    =    mean    -    values[i];    Dev    =    mean    -    values[i];    	non-compiled	[CE]  cannot  find  symbol  Dev	96	None	replace
543	[BUG]  [BUGGY]  double  dev  =  values[i]  /  weights.doubleValue();  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i]  /  weights.doubleValue();  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i]  /  weights.doubleValue();	  double    dev    =    values[i]    /    mean.doubleValue();    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	32	None	replace
544	[BUG]  [BUGGY]  double  dev  =  Double.valueOf(values[i]  /  mean);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  Double.valueOf(values[i]  /  mean);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  Double.valueOf(values[i]  /  mean);	  double    dev    =    Double.valueOf(values[i]);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	52	None	replace
545	[BUG]  [BUGGY]  double  dev  =  Double.valueOf(values[i]  -  mean);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  Double.valueOf(values[i]  -  mean);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  Double.valueOf(values[i]  -  mean);	  double    dev    =    Double.valueOf(values[i]);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	52	None	replace
546	[BUG]  [BUGGY]  double  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev);	  double    dev    =    values[i]    -    mean;    accum2    +=    weights[i]    *    dev;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	9	None	replace
547	[BUG]  [BUGGY]  double  dev  =  values[i]  -  mean2;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i]  -  mean2;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i]  -  mean2;	  double    dev    =    values[i]    -    accum;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	78	None	replace
548	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  -  values[i];  accum  =  accum2  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev    =    accum2    -    values[i];    accum  =  accum2  -  values[i];	  	compilable	  [FE]  AssertionError  	3	3	add
549	[BUG]  [BUGGY]  dev  =  accum2  -  values[i];  accum  =  accum2  -  values[i];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  -  values[i];  accum  =  accum2  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    accum2    -    values[i];    accum  =  accum2  -  values[i];	  	compilable	  [FE]  AssertionError  	3	3	add
550	[BUG]  [BUGGY]  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum  =  values[i]  -  mean;  accum  +=  pounds[i]  *  (dev  *  dev);  [CE]  cannot  find  symbol  pounds  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum  =  values[i]  -  mean;  accum  +=  pounds[i]  *  (dev  *  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum  =  values[i]  -  mean;  accum  +=  pounds[i]  *  (dev  *  dev);	  	non-compiled	[CE]  cannot  find  symbol  pounds	133	None	add
551	[BUG]  [BUGGY]  dev  =  accum  -  values[i];  double  dev  =  accum  -  values[i];  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum  -  values[i];  double  dev  =  accum  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    accum    -    values[i];    double  dev  =  accum  -  values[i];	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	126	None	add
552	[BUG]  [BUGGY]  dev  =  values[i]  -  accum2;  double  accum  =  values[i]  -  accum2;  [CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  accum2;  double  accum  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  -  accum2;  double  accum  =  values[i]  -  accum2;	  dev    =    values[i]    -    accum;    double    accum    =    values[i]    -    accum;    	non-compiled	[CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	62	None	replace
553	[BUG]  [BUGGY]  accum2  =  values[i]  -  accum;  double  accum  =  values[i]  -  accum2;  [CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  -  accum;  double  accum  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  =  values[i]  -  accum;  double  accum  =  values[i]  -  accum2;	  dev    =    values[i]    -    accum;    double    accum    =    values[i]    -    accum;    	non-compiled	[CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	62	None	replace
554	[BUG]  [BUGGY]  dev    =    values[i]    *    mean;    dev  =  values[i]  *  mean;  Dev  =  values[i]  *  mean;  dev  =  values[i]  *  mean;  [CE]  cannot  find  symbol  Dev  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    *    mean;    dev  =  values[i]  *  mean;  Dev  =  values[i]  *  mean;  dev  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        *        mean;        dev    =    values[i]    *    mean;    Dev  =  values[i]  *  mean;  dev  =  values[i]  *  mean;	  	non-compiled	[CE]  cannot  find  symbol  Dev	65	None	add
555	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  /  mean  +  2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  accum2  /  mean  +  2;	  dev    =    accum2    /    mean;    	compilable	  [FE]  AssertionError  	76	3	replace
556	[BUG]  [BUGGY]  dev  =  accum2  /  mean  +  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  /  mean  +  2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  accum2  /  mean  +  2;	  dev    =    accum2    /    mean;    	compilable	  [FE]  AssertionError  	76	3	replace
557	[BUG]  [BUGGY]  dev  =  values[i]  /  accum;  double  dev  =  values[i]  /  accum;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  accum;  double  dev  =  values[i]  /  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    /    accum;    double  dev  =  values[i]  /  accum;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	1	None	add
558	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  var  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  var  -  values[i];	  dev    =    accum1    -    values[i];    	compilable	  [FE]  AssertionError  	114	2	replace
559	[BUG]  [BUGGY]  dev  =  var  -  values[i];  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  var  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  var  -  values[i];	  dev    =    accum1    -    values[i];    	compilable	  [FE]  AssertionError  	114	2	replace
560	[BUG]  [BUGGY]  dev  =  accum1  -  values[i]  *  dev;  [CE]  cannot  find  symbol  accum1  [FE]          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum1  -  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  accum1  -  values[i]  *  dev;	  dev    =    accum1    -    values[i];    	non-compiled	[CE]  cannot  find  symbol  accum1	114	None	replace
561	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  /  mean;  accum  =  accum2  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev    =    accum2    /    mean;    accum  =  accum2  /  mean;	  	compilable	  [FE]  AssertionError  	75	3	add
562	[BUG]  [BUGGY]  dev  =  accum2  /  mean;  accum  =  accum2  /  mean;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  /  mean;  accum  =  accum2  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    accum2    /    mean;    accum  =  accum2  /  mean;	  	compilable	  [FE]  AssertionError  	75	3	add
563	[BUG]  [BUGGY]  dev  =  accum2  /  mean;  double  dev  =  accum2  /  mean;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  /  mean;  double  dev  =  accum2  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    accum2    /    mean;    double  dev  =  accum2  /  mean;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	75	None	add
564	[BUG]  [BUGGY]  dev  =  values[i]  /  accum2;  double  dev  =  values[i]  /  accum2;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  accum2;  double  dev  =  values[i]  /  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    /    accum2;    double  dev  =  values[i]  /  accum2;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	28	None	add
565	[BUG]  [BUGGY]  accum  =  values[i]  -  accum;  Dev  =  values[i]  -  accum2;  [CE]  cannot  find  symbol  Dev  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  -  accum;  Dev  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  =  values[i]  -  accum;  Dev  =  values[i]  -  accum2;	  dev    =    values[i]    -    accum;    Dev    =    values[i]    -    accum;    	non-compiled	[CE]  cannot  find  symbol  Dev	60	None	replace
566	[BUG]  [BUGGY]  dev    =    values[i]    -    accum;    dev  =  values[i]  -  accum;  double  dev  =  values[i]  -  accum;  dev  =  values[i]  -  accum;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    accum;    dev  =  values[i]  -  accum;  double  dev  =  values[i]  -  accum;  dev  =  values[i]  -  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        -        accum;        dev    =    values[i]    -    accum;    double  dev  =  values[i]  -  accum;  dev  =  values[i]  -  accum;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	56	None	add
567	[BUG]  [BUGGY]  double  dev  =  value(values[i],  begin,  length  -  1);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  value(values[i],  begin,  length  -  1);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  value(values[i],  begin,  length  -  1);	          double    dev    =    value(values[i],    begin,    length);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	105	None	replace
568	[BUG]  [BUGGY]  double  dev  =  value(values[i],  accum2,  length);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  value(values[i],  accum2,  length);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  value(values[i],  accum2,  length);	          double    dev    =    value(values[i],    begin,    length);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	105	None	replace
569	[BUG]  [BUGGY]  double  dev  =  value(values[i],  weights,  begin,  length);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  value(values[i],  weights,  begin,  length);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  value(values[i],  weights,  begin,  length);	          double    dev    =    value(values[i],    begin,    length);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	105	None	replace
570	[BUG]  [BUGGY]  dev  =  dev  -  values[i];  int  dev  =  dev  -  values[i];  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  dev  -  values[i];  int  dev  =  dev  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    dev    -    values[i];    int  dev  =  dev  -  values[i];	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	12	None	add
571	[BUG]  [BUGGY]  double  dev  =  Double.NaN  -  1;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  Double.NaN  -  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  Double.NaN  -  1;	  double    dev    =    Double.NaN;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	53	None	replace
572	[BUG]  [BUGGY]  double  dev  =  Double.NEGATIVE_INFINITY;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  Double.NEGATIVE_INFINITY;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  Double.NEGATIVE_INFINITY;	  double    dev    =    Double.NaN;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	53	None	replace
573	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    /    mean;    dev  =  values[i]  /  mean;  accum2  =  values[i]  /  mean;  dev  =  values[i]  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev        =        values[i]        /        mean;        dev    =    values[i]    /    mean;    accum2  =  values[i]  /  mean;  dev  =  values[i]  /  mean;	  	compilable	  [FE]  AssertionError  	42	3	add
574	[BUG]  [BUGGY]  dev    =    values[i]    /    mean;    dev  =  values[i]  /  mean;  accum2  =  values[i]  /  mean;  dev  =  values[i]  /  mean;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    /    mean;    dev  =  values[i]  /  mean;  accum2  =  values[i]  /  mean;  dev  =  values[i]  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        /        mean;        dev    =    values[i]    /    mean;    accum2  =  values[i]  /  mean;  dev  =  values[i]  /  mean;	  	compilable	  [FE]  AssertionError  	42	3	add
575	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  +=  values[i]  *  (dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum2  +=  values[i]  *  (dev);	  accum2    +=    values[i]    *    dev;    	compilable	  [FE]  AssertionError  	8	2	replace
576	[BUG]  [BUGGY]  accum2  +=  values[i]  *  (dev);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  +=  values[i]  *  (dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  +=  values[i]  *  (dev);	  accum2    +=    values[i]    *    dev;    	compilable	  [FE]  AssertionError  	8	2	replace
577	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  -  dev;  accum  +=  weights[i]  *  (dev  *  mean);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum  =  values[i]  -  dev;  accum  +=  weights[i]  *  (dev  *  mean);	  accum    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    	compilable	  [FE]  AssertionError  	134	3	replace
578	[BUG]  [BUGGY]  accum  =  values[i]  -  dev;  accum  +=  weights[i]  *  (dev  *  mean);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  -  dev;  accum  +=  weights[i]  *  (dev  *  mean);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  =  values[i]  -  dev;  accum  +=  weights[i]  *  (dev  *  mean);	  accum    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    	compilable	  [FE]  AssertionError  	134	3	replace
579	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  dev);	  accum    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    	compilable	  [FE]  AssertionError  	134	3	replace
580	[BUG]  [BUGGY]  accum  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  dev);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  dev);	  accum    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    	compilable	  [FE]  AssertionError  	134	3	replace
581	[BUG]  [BUGGY]  accum2  =  values[i]  -  accum;  int  dev  =  values[i]  -  accum2;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  -  accum;  int  dev  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  =  values[i]  -  accum;  int  dev  =  values[i]  -  accum2;	  dev    =    values[i]    -    accum;    int    dev    =    values[i]    -    accum;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	61	None	replace
582	[BUG]  [BUGGY]  double  dev  =  weights[i]  /  mean.doubleValue();  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  weights[i]  /  mean.doubleValue();  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  weights[i]  /  mean.doubleValue();	  double    dev    =    weights[i]    -    mean.doubleValue();    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	129	None	replace
583	[BUG]  [BUGGY]  dev  =  values[i]  *  dev;  Dev  =  values[i]  *  mean;  [CE]  cannot  find  symbol  Dev  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  dev;  Dev  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  *  dev;  Dev  =  values[i]  *  mean;	  dev    =    values[i]    *    mean;    Dev    =    values[i]    *    mean;    	non-compiled	[CE]  cannot  find  symbol  Dev	69	None	replace
584	[BUG]  [BUGGY]  accum2  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  =  values[i]  -  mean;  accum  +=  pounds[i]  *  (dev  *  dev);  [CE]  cannot  find  symbol  pounds  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  =  values[i]  -  mean;  accum  +=  pounds[i]  *  (dev  *  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2  =  values[i]  -  mean;  accum  +=  pounds[i]  *  (dev  *  dev);	  	non-compiled	[CE]  cannot  find  symbol  pounds	17	None	add
585	[BUG]  [BUGGY]  accum2  =  values[i]  /  mean;  double  dev  =  values[i]  /  mean;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  /  mean;  double  dev  =  values[i]  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  =  values[i]  /  mean;  double  dev  =  values[i]  /  mean;	  dev    =    values[i]    /    mean;    double    dev    =    values[i]    /    mean;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	118	None	replace
586	[BUG]  [BUGGY]  dev    =    values[i]    *    mean;    accum  =  values[i]  *  mean;  int  dev  =  values[i]  *  mean;  accum  =  values[i]  *  mean;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    *    mean;    accum  =  values[i]  *  mean;  int  dev  =  values[i]  *  mean;  accum  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        *        mean;        accum    =    values[i]    *    mean;    int  dev  =  values[i]  *  mean;  accum  =  values[i]  *  mean;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	67	None	add
587	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  +=  values[i]  *  dev;  accum2  +=  weights[i]  *  dev;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum2    +=    values[i]    *    dev;    accum2  +=  weights[i]  *  dev;	  	compilable	  [FE]  AssertionError  	7	3	add
588	[BUG]  [BUGGY]  accum2  +=  values[i]  *  dev;  accum2  +=  weights[i]  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  +=  values[i]  *  dev;  accum2  +=  weights[i]  *  dev;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2    +=    values[i]    *    dev;    accum2  +=  weights[i]  *  dev;	  	compilable	  [FE]  AssertionError  	7	3	add
589	[BUG]  [BUGGY]  accum2  +=  values[i]  *  dev;  accum2  +=  values[i]  *  DEV;  [CE]  cannot  find  symbol  DEV  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  +=  values[i]  *  dev;  accum2  +=  values[i]  *  DEV;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2    +=    values[i]    *    dev;    accum2  +=  values[i]  *  DEV;	  	non-compiled	[CE]  cannot  find  symbol  DEV	7	None	add
590	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  -  dev;  accum  +=  weights[i]  *  (dev  *  mean);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum2  =  values[i]  -  dev;  accum  +=  weights[i]  *  (dev  *  mean);	  accum2    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    	compilable	  [FE]  AssertionError  	18	3	replace
591	[BUG]  [BUGGY]  accum2  =  values[i]  -  dev;  accum  +=  weights[i]  *  (dev  *  mean);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  -  dev;  accum  +=  weights[i]  *  (dev  *  mean);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  =  values[i]  -  dev;  accum  +=  weights[i]  *  (dev  *  mean);	  accum2    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    	compilable	  [FE]  AssertionError  	18	3	replace
592	[BUG]  [BUGGY]  accum2  =  values[i]  /  mean;  int  dev  =  values[i]  /  mean;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  /  mean;  int  dev  =  values[i]  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  =  values[i]  /  mean;  int  dev  =  values[i]  /  mean;	  dev    =    values[i]    /    mean;    int    dev    =    values[i]    /    mean;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	47	None	replace
593	[BUG]  [BUGGY]  accum  =  mean  -  values[i];  double  dev  =  mean  -  values[i];  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  mean  -  values[i];  double  dev  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  =  mean  -  values[i];  double  dev  =  mean  -  values[i];	  dev    =    mean    -    values[i];    double    dev    =    mean    -    values[i];    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	99	None	replace
594	[BUG]  [BUGGY]  double  dev  =  value(values[i],  begin  +  length  -  1);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  value(values[i],  begin  +  length  -  1);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  value(values[i],  begin  +  length  -  1);	          double    dev    =    value(values[i],    begin    +    length);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	108	None	replace
595	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  accum2  +  2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  values[i]  *  accum2  +  2;	  dev    =    values[i]    *    accum2;    	compilable	  [FE]  AssertionError  	104	3	replace
596	[BUG]  [BUGGY]  dev  =  values[i]  *  accum2  +  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  accum2  +  2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  *  accum2  +  2;	  dev    =    values[i]    *    accum2;    	compilable	  [FE]  AssertionError  	104	3	replace
597	[BUG]  [BUGGY]  double  dev  =  Double.valueOf(values[i],  begin  +  length,  accum);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  Double.valueOf(values[i],  begin  +  length,  accum);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  Double.valueOf(values[i],  begin  +  length,  accum);	  double    dev    =    Double.valueOf(values[i],    begin    +    length);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	55	None	replace
598	[BUG]  [BUGGY]  double  dev  =  m2.doubleValue()  +  accum2;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  m2.doubleValue()  +  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  m2.doubleValue()  +  accum2;	          double    dev    =    m2.doubleValue();    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	107	None	replace
599	[BUG]  [BUGGY]  double  dev  =  values[i]  /  mean2;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i]  /  mean2;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i]  /  mean2;	  double    dev    =    values[i]    /    mean;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	79	None	replace
600	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  accum  +  2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  values[i]  -  accum  +  2;	  dev    =    values[i]    -    mean    +    2;    	compilable	  [FE]  AssertionError  	120	3	replace
601	[BUG]  [BUGGY]  dev  =  values[i]  -  accum  +  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  accum  +  2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  -  accum  +  2;	  dev    =    values[i]    -    mean    +    2;    	compilable	  [FE]  AssertionError  	120	3	replace
602	[BUG]  [BUGGY]  double  dev  =  values[i]  *  mean;  accum2  +=  values[i]  *  (dev);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i]  *  mean;  accum2  +=  values[i]  *  (dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i]  *  mean;  accum2  +=  values[i]  *  (dev);	  double    dev    =    values[i]    *    mean;    accum2    +=    values[i]    *    dev;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	11	None	replace
603	[BUG]  [BUGGY]  double  dev  =  values[i]  *  accum;  accum2  +=  values[i]  *  dev;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i]  *  accum;  accum2  +=  values[i]  *  dev;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i]  *  accum;  accum2  +=  values[i]  *  dev;	  double    dev    =    values[i]    *    mean;    accum2    +=    values[i]    *    dev;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	11	None	replace
604	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  var  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  values[i]  *  var  +  1;	  dev    =    values[i]    *    mean    +    1;    	compilable	  [FE]  AssertionError  	93	2	replace
605	[BUG]  [BUGGY]  dev  =  values[i]  *  var  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  var  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  *  var  +  1;	  dev    =    values[i]    *    mean    +    1;    	compilable	  [FE]  AssertionError  	93	2	replace
606	[BUG]  [BUGGY]  dev  =  values[i]  /  mean2;  Dev  =  values[i]  /  mean;  [CE]  cannot  find  symbol  mean2  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  mean2;  Dev  =  values[i]  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  /  mean2;  Dev  =  values[i]  /  mean;	  dev    =    values[i]    /    mean;    Dev    =    values[i]    /    mean;    	non-compiled	[CE]  cannot  find  symbol  mean2	46	None	replace
607	[BUG]  [BUGGY]  dev    =    values[i]    -    accum2;    dev  =  values[i]  -  accum2;  double  dev  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    accum2;    dev  =  values[i]  -  accum2;  double  dev  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        -        accum2;        dev    =    values[i]    -    accum2;    double  dev  =  values[i]  -  accum2;  dev  =  values[i]  -  accum2;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	35	None	add
608	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  (dev  /  dev);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  values[i]  *  (dev  /  dev);	  dev    =    values[i]    *    dev;    	compilable	  [FE]  AssertionError  	102	2	replace
609	[BUG]  [BUGGY]  dev  =  values[i]  *  (dev  /  dev);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  (dev  /  dev);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  *  (dev  /  dev);	  dev    =    values[i]    *    dev;    	compilable	  [FE]  AssertionError  	102	2	replace
610	[BUG]  [BUGGY]  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  var);  accum  =  values[i]  -  mean;  accum  +=  pounds[i]  *  (dev  *  var);  [CE]  cannot  find  symbol  pounds  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  var);  accum  =  values[i]  -  mean;  accum  +=  pounds[i]  *  (dev  *  var);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    var);    accum  =  values[i]  -  mean;  accum  +=  pounds[i]  *  (dev  *  var);	  	non-compiled	[CE]  cannot  find  symbol  pounds	19	None	add
611	[BUG]  [BUGGY]  accum  +=  weights[i]  *  (dev  *  dev);  Accum  +=  weights[i]  *  (dev  *  dev);  [CE]  cannot  find  symbol  Accum  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  +=  weights[i]  *  (dev  *  dev);  Accum  +=  weights[i]  *  (dev  *  dev);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum    +=    weights[i]    *    (dev    *    dev);    Accum  +=  weights[i]  *  (dev  *  dev);	  	non-compiled	[CE]  cannot  find  symbol  Accum	124	None	add
612	[BUG]  [BUGGY]  double  dev  =  Math.abs(values[i]  -  accum1,  mean);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  Math.abs(values[i]  -  accum1,  mean);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  Math.abs(values[i]  -  accum1,  mean);	  double    dev    =    Math.abs(values[i]    -    accum2,    mean);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	123	None	replace
613	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  accum2;  accum  =  values[i]  /  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  values[i]  -  accum2;  accum  =  values[i]  /  accum2;	  dev    =    values[i]    -    accum2;    accum    =    values[i]    -    accum2;    	compilable	  [FE]  AssertionError  	38	3	replace
614	[BUG]  [BUGGY]  dev  =  values[i]  -  accum2;  accum  =  values[i]  /  accum2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  accum2;  accum  =  values[i]  /  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  -  accum2;  accum  =  values[i]  /  accum2;	  dev    =    values[i]    -    accum2;    accum    =    values[i]    -    accum2;    	compilable	  [FE]  AssertionError  	38	3	replace
615	[BUG]  [BUGGY]  accum2  =  accum  -  values[i];  Double  dev  =  mean  -  values[i];  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  accum  -  values[i];  Double  dev  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  =  accum  -  values[i];  Double  dev  =  mean  -  values[i];	  dev    =    mean    -    values[i];    Double    dev    =    mean    -    values[i];    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	137	None	replace
616	[BUG]  [BUGGY]  accum2  =  accum  -  values[i];  double  dev  =  mean  -  values[i];  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  accum  -  values[i];  double  dev  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  =  accum  -  values[i];  double  dev  =  mean  -  values[i];	  dev    =    mean    -    values[i];    Double    dev    =    mean    -    values[i];    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	137	None	replace
617	[BUG]  [BUGGY]  double  dev  =  accum  -  values[i];  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  accum  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  accum  -  values[i];	  dev    =    mean    -    values[i];    double    dev    =    mean    -    values[i];    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	99	None	replace
618	[BUG]  [BUGGY]  accum  =  mean  -  values[i];  double  dev  =  accum  -  values[i];  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  mean  -  values[i];  double  dev  =  accum  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  =  mean  -  values[i];  double  dev  =  accum  -  values[i];	  dev    =    mean    -    values[i];    double    dev    =    mean    -    values[i];    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	99	None	replace
619	[BUG]  [BUGGY]  dev  =  accum2  -  values[i];  Dev  =  values[i]  -  accum2;  [CE]  cannot  find  symbol  Dev  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  -  values[i];  Dev  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  accum2  -  values[i];  Dev  =  values[i]  -  accum2;	  dev    =    values[i]    -    accum2;    Dev    =    values[i]    -    accum2;    	non-compiled	[CE]  cannot  find  symbol  Dev	39	None	replace
620	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum  /  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  accum  /  values[i];	  dev    =    accum    -    values[i];    	compilable	  [FE]  AssertionError  	127	2	replace
621	[BUG]  [BUGGY]  dev  =  accum  /  values[i];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum  /  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  accum  /  values[i];	  dev    =    accum    -    values[i];    	compilable	  [FE]  AssertionError  	127	2	replace
622	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  +=  weights[i]  *  (dev  *  mean);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum  +=  weights[i]  *  (dev  *  mean);	  accum    +=    weights[i]    *    (dev    *    dev);    	compilable	  [FE]  AssertionError  	125	2	replace
623	[BUG]  [BUGGY]  accum  +=  weights[i]  *  (dev  *  mean);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  +=  weights[i]  *  (dev  *  mean);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  +=  weights[i]  *  (dev  *  mean);	  accum    +=    weights[i]    *    (dev    *    dev);    	compilable	  [FE]  AssertionError  	125	2	replace
624	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  mean  +  1;  accum  +=  values[i]  *  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev    =    values[i]    *    mean    +    1;    accum  +=  values[i]  *  mean  +  1;	  	compilable	  [FE]  AssertionError  	92	3	add
625	[BUG]  [BUGGY]  dev  =  values[i]  *  mean  +  1;  accum  +=  values[i]  *  mean  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  mean  +  1;  accum  +=  values[i]  *  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    *    mean    +    1;    accum  +=  values[i]  *  mean  +  1;	  	compilable	  [FE]  AssertionError  	92	3	add
626	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  -  dev;  accum  +=  weights[i]  *  (dev  *  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum2  =  values[i]  -  dev;  accum  +=  weights[i]  *  (dev  *  dev);	  accum2    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    	compilable	  [FE]  AssertionError  	18	3	replace
627	[BUG]  [BUGGY]  accum2  =  values[i]  -  dev;  accum  +=  weights[i]  *  (dev  *  dev);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  -  dev;  accum  +=  weights[i]  *  (dev  *  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  =  values[i]  -  dev;  accum  +=  weights[i]  *  (dev  *  dev);	  accum2    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    	compilable	  [FE]  AssertionError  	18	3	replace
628	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  weights[i]  /  dev  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  weights[i]  /  dev  +  1;	  dev    =    values[i]    /    mean    +    1;    	compilable	  [FE]  AssertionError  	91	2	replace
629	[BUG]  [BUGGY]  dev  =  weights[i]  /  dev  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  weights[i]  /  dev  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  weights[i]  /  dev  +  1;	  dev    =    values[i]    /    mean    +    1;    	compilable	  [FE]  AssertionError  	91	2	replace
630	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  -=  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  -=  values[i]  *  dev;	  dev    =    values[i]    *    dev;    	compilable	  [FE]  AssertionError  	102	2	replace
631	[BUG]  [BUGGY]  dev  -=  values[i]  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  -=  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  -=  values[i]  *  dev;	  dev    =    values[i]    *    dev;    	compilable	  [FE]  AssertionError  	102	2	replace
632	[BUG]  [BUGGY]  dev  =  accum2  -  values[i];  Dev  =  values[i]  -  accum;  [CE]  cannot  find  symbol  Dev  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2  -  values[i];  Dev  =  values[i]  -  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  accum2  -  values[i];  Dev  =  values[i]  -  accum;	  dev    =    values[i]    -    accum;    Dev    =    values[i]    -    accum;    	non-compiled	[CE]  cannot  find  symbol  Dev	60	None	replace
633	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  -  dev;  accum  +=  weights[i]  *  (dev  *  var);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum  =  values[i]  -  dev;  accum  +=  weights[i]  *  (dev  *  var);	  accum    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    var);    	compilable	  [FE]  AssertionError  	20	2	replace
634	[BUG]  [BUGGY]  accum  =  values[i]  -  dev;  accum  +=  weights[i]  *  (dev  *  var);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  -  dev;  accum  +=  weights[i]  *  (dev  *  var);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  =  values[i]  -  dev;  accum  +=  weights[i]  *  (dev  *  var);	  accum    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    var);    	compilable	  [FE]  AssertionError  	20	2	replace
635	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  Math.abs(values[i]  /  dev);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum  =  Math.abs(values[i]  /  dev);	  doubledev    =    Math.abs(values[i]    /    dev);    	compilable	  [FE]  AssertionError  	54	2	replace
636	[BUG]  [BUGGY]  accum  =  Math.abs(values[i]  /  dev);  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  Math.abs(values[i]  /  dev);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  =  Math.abs(values[i]  /  dev);	  doubledev    =    Math.abs(values[i]    /    dev);    	compilable	  [FE]  AssertionError  	54	2	replace
637	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  mean  *  2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  values[i]  -  mean  *  2;	  dev    =    values[i]    -    mean    +    2;    	compilable	  [FE]  AssertionError  	120	1	replace
638	[BUG]  [BUGGY]  dev  =  values[i]  -  mean  *  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  mean  *  2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  -  mean  *  2;	  dev    =    values[i]    -    mean    +    2;    	compilable	  [FE]  AssertionError  	120	1	replace
639	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  dev;  accum  +=  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev    =    values[i]    *    dev;    accum  +=  values[i]  *  dev;	  	compilable	  [FE]  AssertionError  	101	3	add
640	[BUG]  [BUGGY]  dev  =  values[i]  *  dev;  accum  +=  values[i]  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  dev;  accum  +=  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev    =    values[i]    *    dev;    accum  +=  values[i]  *  dev;	  	compilable	  [FE]  AssertionError  	101	3	add
641	[BUG]  [BUGGY]  double  mean  =  weights[i].doubleValue()  -  1;  [CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  mean  =  weights[i].doubleValue()  -  1;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  mean  =  weights[i].doubleValue()  -  1;	  double    mean    =    weights[i].doubleValue();    	non-compiled	[CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	83	None	replace
642	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  +=  values[i]  *  (dev  *  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum  +=  values[i]  *  (dev  *  dev);	  double    dev    =    values[i]    *    mean;    accum    +=    weights[i]    *    (dev    *    dev);    	compilable	  [FE]  AssertionError  	117	2	replace
643	[BUG]  [BUGGY]  accum  +=  values[i]  *  (dev  *  dev);  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  +=  values[i]  *  (dev  *  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  +=  values[i]  *  (dev  *  dev);	  double    dev    =    values[i]    *    mean;    accum    +=    weights[i]    *    (dev    *    dev);    	compilable	  [FE]  AssertionError  	117	2	replace
644	[BUG]  [BUGGY]  double  mean  =  values[i].doubleValue()  +  dev;  [CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  mean  =  values[i].doubleValue()  +  dev;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  mean  =  values[i].doubleValue()  +  dev;	  double    mean    =    values[i].doubleValue()    +    accum2;    	non-compiled	[CE]  variable  mean  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	112	None	replace
645	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    /    mean;    accum  =  values[i]  /  mean;  accum2  =  values[i]  /  mean;  accum  =  values[i]  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev        =        values[i]        /        mean;        accum    =    values[i]    /    mean;    accum2  =  values[i]  /  mean;  accum  =  values[i]  /  mean;	  	compilable	  [FE]  AssertionError  	44	3	add
646	[BUG]  [BUGGY]  dev    =    values[i]    /    mean;    accum  =  values[i]  /  mean;  accum2  =  values[i]  /  mean;  accum  =  values[i]  /  mean;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    /    mean;    accum  =  values[i]  /  mean;  accum2  =  values[i]  /  mean;  accum  =  values[i]  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        /        mean;        accum    =    values[i]    /    mean;    accum2  =  values[i]  /  mean;  accum  =  values[i]  /  mean;	  	compilable	  [FE]  AssertionError  	44	3	add
647	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  mean;  accum  +=  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  values[i]  *  mean;  accum  +=  values[i]  *  dev;	  dev    =    values[i]    *    mean;    accum    +=    values[i]    *    mean;    	compilable	  [FE]  AssertionError  	122	3	replace
648	[BUG]  [BUGGY]  dev  =  values[i]  *  mean;  accum  +=  values[i]  *  dev;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  mean;  accum  +=  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  *  mean;  accum  +=  values[i]  *  dev;	  dev    =    values[i]    *    mean;    accum    +=    values[i]    *    mean;    	compilable	  [FE]  AssertionError  	122	3	replace
649	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  mean;  accum2  +=  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  values[i]  *  mean;  accum2  +=  values[i]  *  dev;	  dev    =    values[i]    *    mean;    accum    +=    values[i]    *    mean;    	compilable	  [FE]  AssertionError  	122	3	replace
650	[BUG]  [BUGGY]  dev  =  values[i]  *  mean;  accum2  +=  values[i]  *  dev;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  mean;  accum2  +=  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  *  mean;  accum2  +=  values[i]  *  dev;	  dev    =    values[i]    *    mean;    accum    +=    values[i]    *    mean;    	compilable	  [FE]  AssertionError  	122	3	replace
651	[BUG]  [BUGGY]  accum  =  values[i]  /  mean;  int  dev  =  values[i]  /  dev;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  /  mean;  int  dev  =  values[i]  /  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  =  values[i]  /  mean;  int  dev  =  values[i]  /  dev;	  dev    =    values[i]    /    mean;    int    dev    =    values[i]    /    mean;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	47	None	replace
652	[BUG]  [BUGGY]  dev  =  accum2.doubleValue()  -  values[i];  [CE]  double  cannot  be  dereferenced  [FE]          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum2.doubleValue()  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  accum2.doubleValue()  -  values[i];	  dev    =    value2    -    values[i];    	non-compiled	[CE]  double  cannot  be  dereferenced	115	None	replace
653	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  accum  /  mean;	  dev    =    accum2    /    mean;    	compilable	  [FE]  AssertionError  	76	2	replace
654	[BUG]  [BUGGY]  dev  =  accum  /  mean;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum  /  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  accum  /  mean;	  dev    =    accum2    /    mean;    	compilable	  [FE]  AssertionError  	76	2	replace
655	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    accum2;    accum  =  values[i]  -  accum2;  accum2  =  values[i]  -  accum2;  accum  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev        =        values[i]        -        accum2;        accum    =    values[i]    -    accum2;    accum2  =  values[i]  -  accum2;  accum  =  values[i]  -  accum2;	  	compilable	  [FE]  AssertionError  	37	3	add
656	[BUG]  [BUGGY]  dev    =    values[i]    -    accum2;    accum  =  values[i]  -  accum2;  accum2  =  values[i]  -  accum2;  accum  =  values[i]  -  accum2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    accum2;    accum  =  values[i]  -  accum2;  accum2  =  values[i]  -  accum2;  accum  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        -        accum2;        accum    =    values[i]    -    accum2;    accum2  =  values[i]  -  accum2;  accum  =  values[i]  -  accum2;	  	compilable	  [FE]  AssertionError  	37	3	add
657	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  (dev  +  1);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  values[i]  *  (dev  +  1);	  dev    =    values[i]    *    mean    +    1;    	compilable	  [FE]  AssertionError  	93	3	replace
658	[BUG]  [BUGGY]  dev  =  values[i]  *  (dev  +  1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  *  (dev  +  1);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  *  (dev  +  1);	  dev    =    values[i]    *    mean    +    1;    	compilable	  [FE]  AssertionError  	93	3	replace
659	[BUG]  [BUGGY]  dev  =  values[i]  -  mean  +  1;  Dev  =  values[i]  -  dev  +  1;  [CE]  cannot  find  symbol  Dev  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  mean  +  1;  Dev  =  values[i]  -  dev  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  -  mean  +  1;  Dev  =  values[i]  -  dev  +  1;	  dev    =    values[i]    -    mean    +    1;    Dev    =    values[i]    -    mean    +    1;    	non-compiled	[CE]  cannot  find  symbol  Dev	25	None	replace
660	[BUG]  [BUGGY]  dev  =  values[i]  -  mean  +  2;  Dev  =  values[i]  -  mean  +  1;  [CE]  cannot  find  symbol  Dev  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  mean  +  2;  Dev  =  values[i]  -  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  -  mean  +  2;  Dev  =  values[i]  -  mean  +  1;	  dev    =    values[i]    -    mean    +    1;    Dev    =    values[i]    -    mean    +    1;    	non-compiled	[CE]  cannot  find  symbol  Dev	25	None	replace
661	[BUG]  [BUGGY]  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum  =  values[i]  -  mean;  accum  +=  poids[i]  *  (dev  *  dev);  [CE]  cannot  find  symbol  poids  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum  =  values[i]  -  mean;  accum  +=  poids[i]  *  (dev  *  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum  =  values[i]  -  mean;  accum  +=  poids[i]  *  (dev  *  dev);	  	non-compiled	[CE]  cannot  find  symbol  poids	133	None	add
662	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  -=  values[i]  *  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  -=  values[i]  *  accum2;	  dev    =    values[i]    *    accum2;    	compilable	  [FE]  AssertionError  	104	2	replace
663	[BUG]  [BUGGY]  dev  -=  values[i]  *  accum2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  -=  values[i]  *  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  -=  values[i]  *  accum2;	  dev    =    values[i]    *    accum2;    	compilable	  [FE]  AssertionError  	104	2	replace
664	[BUG]  [BUGGY]  double  dev  =  values[i]  -  means.doubleValue();  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  values[i]  -  means.doubleValue();  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  values[i]  -  means.doubleValue();	  double    dev    =    values[i]    -    mean.doubleValue()    +    1;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	33	None	replace
665	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    mean    +    1;    dev  =  values[i]  -  mean  +  1;  accum2  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev        =        values[i]        -        mean        +        1;        dev    =    values[i]    -    mean    +    1;    accum2  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;	  	compilable	  [FE]  AssertionError  	21	3	add
666	[BUG]  [BUGGY]  dev    =    values[i]    -    mean    +    1;    dev  =  values[i]  -  mean  +  1;  accum2  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    -    mean    +    1;    dev  =  values[i]  -  mean  +  1;  accum2  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        -        mean        +        1;        dev    =    values[i]    -    mean    +    1;    accum2  =  values[i]  -  mean  +  1;  dev  =  values[i]  -  mean  +  1;	  	compilable	  [FE]  AssertionError  	21	3	add
667	[BUG]  [BUGGY]  accum2  =  values[i]  *  mean;  double  dev  =  values[i]  *  dev;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  *  mean;  double  dev  =  values[i]  *  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  =  values[i]  *  mean;  double  dev  =  values[i]  *  dev;	  dev    =    values[i]    *    mean;    double    dev    =    values[i]    *    mean;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	71	None	replace
668	[BUG]  [BUGGY]  double  dev  =  Double.valueOf(values[i]  *  accum);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  Double.valueOf(values[i]  *  accum);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  Double.valueOf(values[i]  *  accum);	  double    dev    =    Double.valueOf(values[i]);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	52	None	replace
669	[BUG]  [BUGGY]  double  dev  =  value(values[i],  begin,  length,  accum);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  value(values[i],  begin,  length,  accum);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  value(values[i],  begin,  length,  accum);	          double    dev    =    value(values[i],    begin,    length);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	105	None	replace
670	[BUG]  [BUGGY]  dev  =  values[i]  /  DEV;  Dev  =  values[i]  /  DEV;  [CE]  cannot  find  symbol  DEV  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  /  DEV;  Dev  =  values[i]  /  DEV;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  /  DEV;  Dev  =  values[i]  /  DEV;	  dev    =    values[i]    /    mean;    Dev    =    values[i]    /    mean;    	non-compiled	[CE]  cannot  find  symbol  DEV	46	None	replace
671	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum  -  values[i];  dev  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  accum  -  values[i];  dev  =  mean  -  values[i];	  dev    =    mean    -    values[i];    dev    =    mean    -    values[i];    	compilable	  [FE]  AssertionError  	95	1	replace
672	[BUG]  [BUGGY]  dev  =  accum  -  values[i];  dev  =  mean  -  values[i];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum  -  values[i];  dev  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  accum  -  values[i];  dev  =  mean  -  values[i];	  dev    =    mean    -    values[i];    dev    =    mean    -    values[i];    	compilable	  [FE]  AssertionError  	95	1	replace
673	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  dev  -  values[i];  dev  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum  =  dev  -  values[i];  dev  =  mean  -  values[i];	  dev    =    mean    -    values[i];    dev    =    mean    -    values[i];    	compilable	  [FE]  AssertionError  	95	3	replace
674	[BUG]  [BUGGY]  accum  =  dev  -  values[i];  dev  =  mean  -  values[i];  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  dev  -  values[i];  dev  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  =  dev  -  values[i];  dev  =  mean  -  values[i];	  dev    =    mean    -    values[i];    dev    =    mean    -    values[i];    	compilable	  [FE]  AssertionError  	95	3	replace
675	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  -=  values[i]  *  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  -=  values[i]  *  accum;	  dev    =    values[i]    *    accum;    	compilable	  [FE]  AssertionError  	6	2	replace
676	[BUG]  [BUGGY]  dev  -=  values[i]  *  accum;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  -=  values[i]  *  accum;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  -=  values[i]  *  accum;	  dev    =    values[i]    *    accum;    	compilable	  [FE]  AssertionError  	6	2	replace
677	[BUG]  [BUGGY]  accum  =  values[i]  /  mean;  double  dev  =  values[i]  /  dev;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  values[i]  /  mean;  double  dev  =  values[i]  /  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  =  values[i]  /  mean;  double  dev  =  values[i]  /  dev;	  dev    =    values[i]    /    mean;    double    dev    =    values[i]    /    mean;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	118	None	replace
678	[BUG]  [BUGGY]  accum2  =  values[i]  /  mean;  double  dev  =  values[i]  /  dev;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum2  =  values[i]  /  mean;  double  dev  =  values[i]  /  dev;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum2  =  values[i]  /  mean;  double  dev  =  values[i]  /  dev;	  dev    =    values[i]    /    mean;    double    dev    =    values[i]    /    mean;    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	118	None	replace
679	[BUG]  [BUGGY]  dev  =  accum[i]  /  values;  [CE]  array  required,  but  double  found  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum[i]  /  values;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  accum[i]  /  values;	  dev    =    values[i]    /    accum;    	non-compiled	[CE]  array  required,  but  double  found	2	None	replace
680	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum  -  values[i];  accum  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  accum  -  values[i];  accum  =  mean  -  values[i];	  dev    =    mean    -    values[i];    accum    =    mean    -    values[i];    	compilable	  [FE]  AssertionError  	98	3	replace
681	[BUG]  [BUGGY]  dev  =  accum  -  values[i];  accum  =  mean  -  values[i];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum  -  values[i];  accum  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  accum  -  values[i];  accum  =  mean  -  values[i];	  dev    =    mean    -    values[i];    accum    =    mean    -    values[i];    	compilable	  [FE]  AssertionError  	98	3	replace
682	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  accum  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	accum  =  accum  -  values[i];	  dev    =    mean    -    values[i];    accum    =    mean    -    values[i];    	compilable	  [FE]  AssertionError  	98	3	replace
683	[BUG]  [BUGGY]  accum  =  accum  -  values[i];  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  accum  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  =  accum  -  values[i];	  dev    =    mean    -    values[i];    accum    =    mean    -    values[i];    	compilable	  [FE]  AssertionError  	98	3	replace
684	[BUG]  [BUGGY]  double  dev  =  Math.abs(values[i]  *  accum);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  Math.abs(values[i]  *  accum);  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  Math.abs(values[i]  *  accum);	          double    dev    =    Math.abs(values[i]);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	106	None	replace
685	[BUG]  [BUGGY]  double  dev  =  Math.abs(values[i]  -  accum,  dev);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  Math.abs(values[i]  -  accum,  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  Math.abs(values[i]  -  accum,  dev);	  double    dev    =    Math.abs(values[i]    -    accum2,    mean);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	123	None	replace
686	[BUG]  [BUGGY]  double  dev  =  Math.abs(values[i]  /  accum2,  begin);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  Math.abs(values[i]  /  accum2,  begin);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  Math.abs(values[i]  /  accum2,  begin);	  double    dev    =    Math.abs(values[i]    /    begin);    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	63	None	replace
687	[BUG]  [BUGGY]  double  dev  =  accum.doubleValue();  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  double  dev  =  accum.doubleValue();  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	double  dev  =  accum.doubleValue();	          double    dev    =    m2.doubleValue();    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	107	None	replace
688	[BUG]  [BUGGY]  int  dev  =  accum2  -  values[i];  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  int  dev  =  accum2  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	int  dev  =  accum2  -  values[i];	  dev    =    mean    -    values[i];    int    dev    =    mean    -    values[i];    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	100	None	replace
689	[BUG]  [BUGGY]  accum  =  mean  -  values[i];  int  dev  =  accum2  -  values[i];  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  accum  =  mean  -  values[i];  int  dev  =  accum2  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	accum  =  mean  -  values[i];  int  dev  =  accum2  -  values[i];	  dev    =    mean    -    values[i];    int    dev    =    mean    -    values[i];    	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	100	None	replace
690	[BUG]  [BUGGY]  dev  =  accum  -  values[i];  Dev  =  mean  -  values[i];  [CE]  cannot  find  symbol  Dev  [FE]          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  accum  -  values[i];  Dev  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  accum  -  values[i];  Dev  =  mean  -  values[i];	  dev    =    mean    -    values[i];    Dev    =    mean    -    values[i];    	non-compiled	[CE]  cannot  find  symbol  Dev	96	None	replace
691	[BUG]  [BUGGY]  Dev  =  dev  -  values[i];  [CE]  cannot  find  symbol  Dev  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  Dev  =  dev  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	Dev  =  dev  -  values[i];	  dev    =    mean    -    values[i];    Dev    =    mean    -    values[i];    	non-compiled	[CE]  cannot  find  symbol  Dev	96	None	replace
692	[BUG]  [BUGGY]  dev  =  mean  -  values[i];  Dev  =  accum2  -  values[i];  [CE]  cannot  find  symbol  Dev  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  mean  -  values[i];  Dev  =  accum2  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  mean  -  values[i];  Dev  =  accum2  -  values[i];	  dev    =    mean    -    values[i];    Dev    =    mean    -    values[i];    	non-compiled	[CE]  cannot  find  symbol  Dev	96	None	replace
693	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  accum;  accum  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev  =  values[i]  -  accum;  accum  =  values[i]  -  accum2;	  dev    =    values[i]    -    accum;    accum    =    values[i]    -    accum;    	compilable	  [FE]  AssertionError  	59	3	replace
694	[BUG]  [BUGGY]  dev  =  values[i]  -  accum;  accum  =  values[i]  -  accum2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev  =  values[i]  -  accum;  accum  =  values[i]  -  accum2;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev  =  values[i]  -  accum;  accum  =  values[i]  -  accum2;	  dev    =    values[i]    -    accum;    accum    =    values[i]    -    accum;    	compilable	  [FE]  AssertionError  	59	3	replace
695	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    *    mean;    dev  =  values[i]  *  mean;  accum  +=  values[i]  *  mean;  dev  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev        =        values[i]        *        mean;        dev    =    values[i]    *    mean;    accum  +=  values[i]  *  mean;  dev  =  values[i]  *  mean;	  	compilable	  [FE]  AssertionError  	65	3	add
696	[BUG]  [BUGGY]  dev    =    values[i]    *    mean;    dev  =  values[i]  *  mean;  accum  +=  values[i]  *  mean;  dev  =  values[i]  *  mean;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    values[i]    *    mean;    dev  =  values[i]  *  mean;  accum  +=  values[i]  *  mean;  dev  =  values[i]  *  mean;  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        values[i]        *        mean;        dev    =    values[i]    *    mean;    accum  +=  values[i]  *  mean;  dev  =  values[i]  *  mean;	  	compilable	  [FE]  AssertionError  	65	3	add
697	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    mean    -    values[i];    accum  =  mean  -  values[i];  accum  =  dev  -  values[i];  accum  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev        =        mean        -        values[i];        accum    =    mean    -    values[i];    accum  =  dev  -  values[i];  accum  =  mean  -  values[i];	  	compilable	  [FE]  AssertionError  	97	3	add
698	[BUG]  [BUGGY]  dev    =    mean    -    values[i];    accum  =  mean  -  values[i];  accum  =  dev  -  values[i];  accum  =  mean  -  values[i];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    mean    -    values[i];    accum  =  mean  -  values[i];  accum  =  dev  -  values[i];  accum  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        mean        -        values[i];        accum    =    mean    -    values[i];    accum  =  dev  -  values[i];  accum  =  mean  -  values[i];	  	compilable	  [FE]  AssertionError  	97	3	add
699	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    mean    -    values[i];    dev  =  mean  -  values[i];  accum  =  dev  -  values[i];  dev  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev        =        mean        -        values[i];        dev    =    mean    -    values[i];    accum  =  dev  -  values[i];  dev  =  mean  -  values[i];	  	compilable	  [FE]  AssertionError  	94	3	add
700	[BUG]  [BUGGY]  dev    =    mean    -    values[i];    dev  =  mean  -  values[i];  accum  =  dev  -  values[i];  dev  =  mean  -  values[i];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    mean    -    values[i];    dev  =  mean  -  values[i];  accum  =  dev  -  values[i];  dev  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        mean        -        values[i];        dev    =    mean    -    values[i];    accum  =  dev  -  values[i];  dev  =  mean  -  values[i];	  	compilable	  [FE]  AssertionError  	94	3	add
701	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    mean    -    values[i];    dev  =  mean  -  values[i];  accum2  =  mean  -  values[i];  dev  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	add	dev        =        mean        -        values[i];        dev    =    mean    -    values[i];    accum2  =  mean  -  values[i];  dev  =  mean  -  values[i];	  	compilable	  [FE]  AssertionError  	94	3	add
702	[BUG]  [BUGGY]  dev    =    mean    -    values[i];    dev  =  mean  -  values[i];  accum2  =  mean  -  values[i];  dev  =  mean  -  values[i];  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {      [BUGGY]  dev    =    mean    -    values[i];    dev  =  mean  -  values[i];  accum2  =  mean  -  values[i];  dev  =  mean  -  values[i];  [BUGGY]      accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	514	514	1	replace	dev        =        mean        -        values[i];        dev    =    mean    -    values[i];    accum2  =  mean  -  values[i];  dev  =  mean  -  values[i];	  	compilable	  [FE]  AssertionError  	94	3	add
