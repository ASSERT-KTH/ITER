bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ||  incMoment)  {  values[i]  -  mean;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  ||  incMoment)  {  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	||  incMoment)  {  values[i]  -  mean;  }	  ||    isBiasCorrected)    {    values[i]    -    mean;    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
2	[BUG]  [BUGGY]  ||  isBiasCorrected)  {  values[i]  -  mean  +  1;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  ||  isBiasCorrected)  {  values[i]  -  mean  +  1;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	||  isBiasCorrected)  {  values[i]  -  mean  +  1;  }	  ||    isBiasCorrected)    {    values[i]    -    mean;    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
3	[BUG]  [BUGGY]  ||  isBiasCorrected)  {  values[i]  /  mean;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  ||  isBiasCorrected)  {  values[i]  /  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	||  isBiasCorrected)  {  values[i]  /  mean;  }	  ||    isBiasCorrected)    {    values[i]    -    mean;    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
4	[BUG]  [BUGGY]  if(isBiasCorrected)  {  incMoment  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i];  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  incMoment  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  incMoment  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i];  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  not  a  statement	29	None	replace
5	[BUG]  [BUGGY]  if(isBiasCorrected)  {  int[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i];  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  int[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  int[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i];  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  not  a  statement	29	None	replace
6	[BUG]  [BUGGY]  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  accum2  +=  values[i]  *  values[i];  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  accum2  +=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  accum2  +=  values[i]  *  values[i];  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  not  a  statement	29	None	replace
7	[BUG]  [BUGGY]  if(incMoment)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value	  if(length    ==    1)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    value    	non-compiled	[CE]  ';'  expected	114	None	replace
8	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  [CE]  '.class'  expected  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=	  if(length    ==    1)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    value    	non-compiled	[CE]  '.class'  expected	114	None	replace
9	[BUG]  [BUGGY]  if(incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value	  if(length    ==    1)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    value    	non-compiled	[CE]  ';'  expected	114	None	replace
10	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value	  if(length    ==    1)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    value    	non-compiled	[CE]  ';'  expected	114	None	replace
11	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected  /  1;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected  /  1;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment  =  isBiasCorrected  /  1;	  incMoment    =    isBiasCorrected    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	172	None	replace
12	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected  +  length;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected  +  length;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment  =  isBiasCorrected  +  length;	  incMoment    =    isBiasCorrected    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	172	None	replace
13	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected  +  var;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected  +  var;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment  =  isBiasCorrected  +  var;	  incMoment    =    isBiasCorrected    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	172	None	replace
14	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    amount);    }    	non-compiled	[CE]  ';'  expected	57	None	replace
15	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected  ||  incMoment)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected  ||  incMoment)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected  ||  incMoment)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    amount);    }    	non-compiled	[CE]  ';'  expected	57	None	replace
16	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected  ||  incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected  ||  incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected  ||  incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    amount);    }    	non-compiled	[CE]  ';'  expected	57	None	replace
17	[BUG]  [BUGGY]  var  =  isBiasCorrected;  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  var  =  isBiasCorrected;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	var  =  isBiasCorrected;	          incMoment    =    isBiasCorrected;    imcMoment    =    isBiasCorrected;    	non-compiled	[CE]  incompatible  types	10	None	replace
18	[BUG]  [BUGGY]  imcMoment  =  isBiasCorrected;  [CE]  cannot  find  symbol  imcMoment  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  imcMoment  =  isBiasCorrected;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	imcMoment  =  isBiasCorrected;	          incMoment    =    isBiasCorrected;    imcMoment    =    isBiasCorrected;    	non-compiled	[CE]  cannot  find  symbol  imcMoment	10	None	replace
19	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  false;  incMoment  =  false;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	incMoment    =    false;    incMoment  =  false;	  	compilable	  [FE]  AssertionError  	95	1	add
20	[BUG]  [BUGGY]  incMoment  =  false;  incMoment  =  false;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  false;  incMoment  =  false;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment    =    false;    incMoment  =  false;	  	compilable	  [FE]  AssertionError  	95	1	add
21	[BUG]  [BUGGY]  incMoment  =  false;  if(isBiasCorrected)  {  incMoment  =  false;  }  else  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (dev  *  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  false;  if(isBiasCorrected)  {  incMoment  =  false;  }  else  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (dev  *  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment    =    false;    if(isBiasCorrected)  {  incMoment  =  false;  }  else  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (dev  *	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
22	[BUG]  [BUGGY]  incMoment  =  false;  if(isBiasCorrected)  {  incMoment  =  false;  }  else  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  false;  if(isBiasCorrected)  {  incMoment  =  false;  }  else  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment    =    false;    if(isBiasCorrected)  {  incMoment  =  false;  }  else  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
23	[BUG]  [BUGGY]  incMoment  =  false;  if(isBiasCorrected)  {  incMoment  =  false;  }  else  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  false;  if(isBiasCorrected)  {  incMoment  =  false;  }  else  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment    =    false;    if(isBiasCorrected)  {  incMoment  =  false;  }  else  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value	  	non-compiled	[CE]  ';'  expected	95	None	add
24	[BUG]  [BUGGY]  incMoment  =  false;  if(isBiasCorrected)  {  incMoment  =  false;  }  else  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (dev  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  false;  if(isBiasCorrected)  {  incMoment  =  false;  }  else  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (dev  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment    =    false;    if(isBiasCorrected)  {  incMoment  =  false;  }  else  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (dev	  	non-compiled	[CE]  ')'  expected	95	None	add
25	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  amount);  }  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  amount);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  amount);  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    Accum    +=    values[i]    *    (values[i]    *    amount);    }    	non-compiled	[CE]  ';'  expected	59	None	replace
26	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  amount);  }  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  amount);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  amount);  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    Accum    +=    values[i]    *    (values[i]    *    amount);    }    	non-compiled	[CE]  ';'  expected	59	None	replace
27	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected  ||  incMoment)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  amount);  }  [CE]  ';'  expected  [FE]                            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected  ||  incMoment)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  amount);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected  ||  incMoment)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  amount);  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    Accum    +=    values[i]    *    (values[i]    *    amount);    }    	non-compiled	[CE]  ';'  expected	59	None	replace
28	[BUG]  [BUGGY]  Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  amount);  }  [CE]  cannot  find  symbol  Context  [FE]                              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  amount);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  amount);  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    Accum    +=    values[i]    *    (values[i]    *    amount);    }    	non-compiled	[CE]  cannot  find  symbol  Context	59	None	replace
29	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }	  Context.checkState(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  ';'  expected	126	None	replace
30	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected  ||  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected  ||  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected  ||  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }	  Context.checkState(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  ';'  expected	126	None	replace
31	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }	  Context.checkState(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  ';'  expected	126	None	replace
32	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected;    incMoment  =  isBiasCorrected;  incMoment  =  isBiasCorrected;  incMoment  =  isBiasCorrected;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	                incMoment        =        isBiasCorrected;        incMoment    =    isBiasCorrected;    incMoment  =  isBiasCorrected;  incMoment  =  isBiasCorrected;	  	compilable	  [FE]  AssertionError  	6	1	add
33	[BUG]  [BUGGY]          incMoment    =    isBiasCorrected;    incMoment  =  isBiasCorrected;  incMoment  =  isBiasCorrected;  incMoment  =  isBiasCorrected;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected;    incMoment  =  isBiasCorrected;  incMoment  =  isBiasCorrected;  incMoment  =  isBiasCorrected;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                incMoment        =        isBiasCorrected;        incMoment    =    isBiasCorrected;    incMoment  =  isBiasCorrected;  incMoment  =  isBiasCorrected;	  	compilable	  [FE]  AssertionError  	6	1	add
34	[BUG]  [BUGGY]          incMoment    =    isBiasCorrected;    incMoment  =  isBiasCorrected;  var  =  isBiasCorrected;  incMoment  =  isBiasCorrected;  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected;    incMoment  =  isBiasCorrected;  var  =  isBiasCorrected;  incMoment  =  isBiasCorrected;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                incMoment        =        isBiasCorrected;        incMoment    =    isBiasCorrected;    var  =  isBiasCorrected;  incMoment  =  isBiasCorrected;	  	non-compiled	[CE]  incompatible  types	6	None	add
35	[BUG]  [BUGGY]          incMoment    =    isBiasCorrected;    incMoment  =  isBiasCorrected;  varMoment  =  isBiasCorrected;  incMoment  =  isBiasCorrected;  [CE]  cannot  find  symbol  varMoment  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected;    incMoment  =  isBiasCorrected;  varMoment  =  isBiasCorrected;  incMoment  =  isBiasCorrected;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                incMoment        =        isBiasCorrected;        incMoment    =    isBiasCorrected;    varMoment  =  isBiasCorrected;  incMoment  =  isBiasCorrected;	  	non-compiled	[CE]  cannot  find  symbol  varMoment	6	None	add
36	[BUG]  [BUGGY]          incMoment    =    isBiasCorrected;    incMoment  =  isBiasCorrected;  incMoment  =  accum;  incMoment  =  isBiasCorrected;  [CE]  cannot  find  symbol  accum  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected;    incMoment  =  isBiasCorrected;  incMoment  =  accum;  incMoment  =  isBiasCorrected;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                incMoment        =        isBiasCorrected;        incMoment    =    isBiasCorrected;    incMoment  =  accum;  incMoment  =  isBiasCorrected;	  	non-compiled	[CE]  cannot  find  symbol  accum	6	None	add
37	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  <  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        <        1)        {        }    else    if(length    >=    1)    {    }  else  if(length  <  1)  {	  	compilable	  [FE]  AssertionError  	35	2	add
38	[BUG]  [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  <  1)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  <  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        <        1)        {        }    else    if(length    >=    1)    {    }  else  if(length  <  1)  {	  	compilable	  [FE]  AssertionError  	35	2	add
39	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  >=  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        <        1)        {        }    else    if(length    >=    1)    {    }  else  if(length  >=  1)  {	  	compilable	  [FE]  AssertionError  	35	2	add
40	[BUG]  [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  >=  1)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  >=  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        <        1)        {        }    else    if(length    >=    1)    {    }  else  if(length  >=  1)  {	  	compilable	  [FE]  AssertionError  	35	2	add
41	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  >  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        <        1)        {        }    else    if(length    >=    1)    {    }  else  if(length  >  1)  {	  	compilable	  [FE]  AssertionError  	35	2	add
42	[BUG]  [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  >  1)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  >  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        <        1)        {        }    else    if(length    >=    1)    {    }  else  if(length  >  1)  {	  	compilable	  [FE]  AssertionError  	35	2	add
43	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  ==  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        <        1)        {        }    else    if(length    >=    1)    {    }  else  if(length  ==  1)  {	  	compilable	  [FE]  AssertionError  	35	2	add
44	[BUG]  [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  ==  1)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  ==  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        <        1)        {        }    else    if(length    >=    1)    {    }  else  if(length  ==  1)  {	  	compilable	  [FE]  AssertionError  	35	2	add
45	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  <  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        <        1)        {        }    else    if(length    >=    1)    {    }  else  if(length  <  2)  {	  	compilable	  [FE]  AssertionError  	35	2	add
46	[BUG]  [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  <  2)  {  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  <  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        <        1)        {        }    else    if(length    >=    1)    {    }  else  if(length  <  2)  {	  	compilable	  [FE]  AssertionError  	35	2	add
47	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(test(values,  begin,  length))  {  var  =  0.0;  }  else  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	if(test(values,  begin,  length))  {  var  =  0.0;  }  else  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }	          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,    weights,    start,    length))    {    var    =    0.0;    }    	compilable	  [FE]  AssertionError  	106	2	replace
48	[BUG]  [BUGGY]  if(test(values,  begin,  length))  {  var  =  0.0;  }  else  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(test(values,  begin,  length))  {  var  =  0.0;  }  else  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(test(values,  begin,  length))  {  var  =  0.0;  }  else  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }	          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,    weights,    start,    length))    {    var    =    0.0;    }    	compilable	  [FE]  AssertionError  	106	2	replace
49	[BUG]  [BUGGY]  Context.checkState(false);  [CE]  cannot  find  symbol  Context  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(false);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(false);	  Context.checkState(incMoment);    	non-compiled	[CE]  cannot  find  symbol  Context	160	None	replace
50	[BUG]  [BUGGY]  Context.checkState(incMoment  ==  isBiasCorrected);  [CE]  cannot  find  symbol  Context  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(incMoment  ==  isBiasCorrected);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment  ==  isBiasCorrected);	  Context.checkState(incMoment);    	non-compiled	[CE]  cannot  find  symbol  Context	160	None	replace
51	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected,  incMoment);  [CE]  cannot  find  symbol  Context  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected,  incMoment);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected,  incMoment);	  Context.checkState(incMoment);    	non-compiled	[CE]  cannot  find  symbol  Context	160	None	replace
52	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  mean;  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  mean;  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    Accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  ';'  expected	81	None	replace
53	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  mean;  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  mean;  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    Accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  ';'  expected	81	None	replace
54	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected  ||  incMoment)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  mean;  }  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected  ||  incMoment)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected  ||  incMoment)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  mean;  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    Accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  ';'  expected	81	None	replace
55	[BUG]  [BUGGY]  Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  mean;  }  [CE]  cannot  find  symbol  Context  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  mean;  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    Accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  cannot  find  symbol  Context	81	None	replace
56	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FULL;  [CE]  cannot  find  symbol  FULL  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FULL;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FULL;	          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FULL;    	non-compiled	[CE]  cannot  find  symbol  FULL	85	None	replace
57	[BUG]  [BUGGY]  test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	test(values,  weights,  begin,  length))  {  var  =  0.0;  }	          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,    weights,    beginning,    length))    {    var    =    0.0;    }    	non-compiled	[CE]  ';'  expected	107	None	replace
58	[BUG]  [BUGGY]  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i]  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i]  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i]	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[i]    *    values[i]    	non-compiled	[CE]  not  a  statement	168	None	replace
59	[BUG]  [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i]  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i]  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i]	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[i]    *    values[i]    	non-compiled	[CE]  not  a  statement	168	None	replace
60	[BUG]  [BUGGY]  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i]  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i]  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i]  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[i]    *    values[i]    	non-compiled	[CE]  not  a  statement	168	None	replace
61	[BUG]  [BUGGY]  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  accum2  +=  values[i]  *  values[i]  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  accum2  +=  values[i]  *  values[i]  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  accum2  +=  values[i]  *  values[i]  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[i]    *    values[i]    	non-compiled	[CE]  not  a  statement	168	None	replace
62	[BUG]  [BUGGY]  Context.checkMoment(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkMoment(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkMoment(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }	  Context.checkMoment(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  ';'  expected	53	None	replace
63	[BUG]  [BUGGY]  Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [CE]  cannot  find  symbol  Context  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }	  Context.checkMoment(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  cannot  find  symbol  Context	53	None	replace
64	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  1)  {  }  else  if(length  <  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        <        1)        {        }    else    if(length    <    1)    {    }  else  if(length  <  1)  {	  	compilable	  [FE]  AssertionError  	33	1	add
65	[BUG]  [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  1)  {  }  else  if(length  <  1)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  1)  {  }  else  if(length  <  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        <        1)        {        }    else    if(length    <    1)    {    }  else  if(length  <  1)  {	  	compilable	  [FE]  AssertionError  	33	1	add
66	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  1)  {  }  else  if(length  <  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        <        1)        {        }    else    if(length    <    1)    {    }  else  if(length  <  2)  {	  	compilable	  [FE]  AssertionError  	33	1	add
67	[BUG]  [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  1)  {  }  else  if(length  <  2)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  1)  {  }  else  if(length  <  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        <        1)        {        }    else    if(length    <    1)    {    }  else  if(length  <  2)  {	  	compilable	  [FE]  AssertionError  	33	1	add
68	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  1)  {  }  else  if(length  <  1  ||  length  <  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        <        1)        {        }    else    if(length    <    1)    {    }  else  if(length  <  1  ||  length  <  2)  {	  	compilable	  [FE]  AssertionError  	33	1	add
69	[BUG]  [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  1)  {  }  else  if(length  <  1  ||  length  <  2)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  1)  {  }  else  if(length  <  1  ||  length  <  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        <        1)        {        }    else    if(length    <    1)    {    }  else  if(length  <  1  ||  length  <  2)  {	  	compilable	  [FE]  AssertionError  	33	1	add
70	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  1)  {  }  else  if(length  <  1  ||  length  >  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        <        1)        {        }    else    if(length    <    1)    {    }  else  if(length  <  1  ||  length  >  2)  {	  	compilable	  [FE]  AssertionError  	33	2	add
71	[BUG]  [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  1)  {  }  else  if(length  <  1  ||  length  >  2)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  1)  {  }  else  if(length  <  1  ||  length  >  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        <        1)        {        }    else    if(length    <    1)    {    }  else  if(length  <  1  ||  length  >  2)  {	  	compilable	  [FE]  AssertionError  	33	2	add
72	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  1)  {  }  else  if(length  <  1  ||  length  <  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        <        1)        {        }    else    if(length    <    1)    {    }  else  if(length  <  1  ||  length  <  1)  {	  	compilable	  [FE]  AssertionError  	33	1	add
73	[BUG]  [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  1)  {  }  else  if(length  <  1  ||  length  <  1)  {  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  1)  {  }  else  if(length  <  1  ||  length  <  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        <        1)        {        }    else    if(length    <    1)    {    }  else  if(length  <  1  ||  length  <  1)  {	  	compilable	  [FE]  AssertionError  	33	1	add
74	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i]  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i]  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i]	  if(incMoment)    {    if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i]    	non-compiled	[CE]  ';'  expected	78	None	replace
75	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i]  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i]  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i]  }	  if(incMoment)    {    if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i]    	non-compiled	[CE]  ';'  expected	78	None	replace
76	[BUG]  [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i]  }  ';'  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i]  }  ';'  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i]  }  ';'	  if(incMoment)    {    if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i]    	non-compiled	[CE]  ';'  expected	78	None	replace
77	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[  [CE]  '.class'  expected  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[	  if(incMoment)    {    if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i]    	non-compiled	[CE]  '.class'  expected	78	None	replace
78	[BUG]  [BUGGY]          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  }  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boo  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  }  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boo  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                incMoment        =        isBiasCorrected?        Boolean.TRUE        :        Boolean.FALSE;        if(isBiasCorrected)    {    incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    }    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boo	  	non-compiled	[CE]  ';'  expected	155	None	add
79	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  }  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	                incMoment        =        isBiasCorrected?        Boolean.TRUE        :        Boolean.FALSE;        if(isBiasCorrected)    {    incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    }    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;	  	compilable	  [FE]  AssertionError  	155	1	add
80	[BUG]  [BUGGY]          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  }  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  }  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                incMoment        =        isBiasCorrected?        Boolean.TRUE        :        Boolean.FALSE;        if(isBiasCorrected)    {    incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    }    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;	  	compilable	  [FE]  AssertionError  	155	1	add
81	[BUG]  [BUGGY]          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  }  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Bo  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  }  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Bo  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                incMoment        =        isBiasCorrected?        Boolean.TRUE        :        Boolean.FALSE;        if(isBiasCorrected)    {    incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    }    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Bo	  	non-compiled	[CE]  ';'  expected	155	None	add
82	[BUG]  [BUGGY]          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  }  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boo  [CE]  :  expected  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  }  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boo  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                incMoment        =        isBiasCorrected?        Boolean.TRUE        :        Boolean.FALSE;        if(isBiasCorrected)    {    incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    }    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boo	  	non-compiled	[CE]  :  expected	155	None	add
83	[BUG]  [BUGGY]          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  }  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  if(isBiasCorrected)  {  incMoment  =  isBiasCor  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  }  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  if(isBiasCorrected)  {  incMoment  =  isBiasCor  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                incMoment        =        isBiasCorrected?        Boolean.TRUE        :        Boolean.FALSE;        if(isBiasCorrected)    {    incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    }    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  if(isBiasCorrected)  {  incMoment  =  isBiasCor	  	non-compiled	[CE]  ';'  expected	155	None	add
84	[BUG]  [BUGGY]  if(incMoment)  {  if(isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  mean;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  mean;  }	  if(isBiasCorrected)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    weights[i]    *    mean;    }    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
85	[BUG]  [BUGGY]  if(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  mean;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  mean;  }	  if(isBiasCorrected)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    weights[i]    *    mean;    }    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
86	[BUG]  [BUGGY]  if(incMoment)  {  if(isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  mean;  }  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  mean;  }  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  mean;  }  }	  if(isBiasCorrected)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    weights[i]    *    mean;    }    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
87	[BUG]  [BUGGY]  if(incMoment)  {  if(isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  mean;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  mean;  }	  if(isBiasCorrected)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    weights[i]    *    mean;    }    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
88	[BUG]  [BUGGY]  accum2  =  values[i]  /  mean;  [CE]  cannot  find  symbol  accum2  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  =  values[i]  /  mean;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  =  values[i]  /  mean;	  accum2    =    values[i]    -    mean;    	non-compiled	[CE]  cannot  find  symbol  accum2	12	None	replace
89	[BUG]  [BUGGY]  accum2  =  values[i]  -  mean.doubleValue();  [CE]  cannot  find  symbol  accum2  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  =  values[i]  -  mean.doubleValue();  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  =  values[i]  -  mean.doubleValue();	  accum2    =    values[i]    -    mean;    	non-compiled	[CE]  cannot  find  symbol  accum2	12	None	replace
90	[BUG]  [BUGGY]  accum2  =  values[i]  -  mean  +  1;  [CE]  cannot  find  symbol  accum2  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  =  values[i]  -  mean  +  1;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  =  values[i]  -  mean  +  1;	  accum2    =    values[i]    -    mean;    	non-compiled	[CE]  cannot  find  symbol  accum2	12	None	replace
91	[BUG]  [BUGGY]  accum2  =  Math.abs(mean  -  var);  [CE]  cannot  find  symbol  accum2  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  =  Math.abs(mean  -  var);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  =  Math.abs(mean  -  var);	  accum2    =    Math.abs(accum2    -    mean);    	non-compiled	[CE]  cannot  find  symbol  accum2	89	None	replace
92	[BUG]  [BUGGY]  accum2  =  Math.abs(var  -  mean);  [CE]  cannot  find  symbol  accum2  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  =  Math.abs(var  -  mean);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  =  Math.abs(var  -  mean);	  accum2    =    Math.abs(accum2    -    mean);    	non-compiled	[CE]  cannot  find  symbol  accum2	89	None	replace
93	[BUG]  [BUGGY]  accum2  =  Math.abs(m2  -  mean);  [CE]  cannot  find  symbol  accum2  [FE]                            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  =  Math.abs(m2  -  mean);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  =  Math.abs(m2  -  mean);	  accum2    =    Math.abs(accum2    -    mean);    	non-compiled	[CE]  cannot  find  symbol  accum2	89	None	replace
94	[BUG]  [BUGGY]  accum2  =  Math.abs(dev  -  mean);  [CE]  cannot  find  symbol  accum2  [FE]                              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  =  Math.abs(dev  -  mean);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  =  Math.abs(dev  -  mean);	  accum2    =    Math.abs(accum2    -    mean);    	non-compiled	[CE]  cannot  find  symbol  accum2	89	None	replace
95	[BUG]  [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  weights[i]  *  mean;  }  [CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  weights[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  weights[i]  *  mean;  }	  double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    weights[i]    *    amount;    }    	non-compiled	[CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	120	None	replace
96	[BUG]  [BUGGY]  int  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  weights[i]  *  amount;  }  [CE]  possible  loss  of  precision  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  int  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  weights[i]  *  amount;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	int  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  weights[i]  *  amount;  }	  double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    weights[i]    *    amount;    }    	non-compiled	[CE]  possible  loss  of  precision	120	None	replace
97	[BUG]  [BUGGY]  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  weights[i]  *  amount;  }  [CE]  cannot  find  symbol  accum  [FE]                            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  weights[i]  *  amount;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  weights[i]  *  amount;  }	  double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    weights[i]    *    amount;    }    	non-compiled	[CE]  cannot  find  symbol  accum	120	None	replace
98	[BUG]  [BUGGY]  Context.reportCodeChange();  [CE]  cannot  find  symbol  Context  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.reportCodeChange();  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.reportCodeChange();	  if(length    ==    1)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  cannot  find  symbol  Context	142	None	replace
99	[BUG]  [BUGGY]  Context.checkState(false, "Unexpected  length  of  value ");  [CE]  cannot  find  symbol  Context  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(false, "Unexpected  length  of  value ");  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(false, "Unexpected  length  of  value ");	  if(length    ==    1)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  cannot  find  symbol  Context	142	None	replace
100	[BUG]  [BUGGY]  Context.checkNotNull(accum);  [CE]  cannot  find  symbol  accum  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkNotNull(accum);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkNotNull(accum);	  if(length    ==    1)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  cannot  find  symbol  accum	142	None	replace
101	[BUG]  [BUGGY]  AssertionError.show(accum,  accum2,  0,  value.length);  [CE]  cannot  find  symbol  accum  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  AssertionError.show(accum,  accum2,  0,  value.length);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	AssertionError.show(accum,  accum2,  0,  value.length);	  if(length    ==    1)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  cannot  find  symbol  accum	142	None	replace
102	[BUG]  [BUGGY]  Double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  *  mean;  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  *  mean;  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    *    mean;    }    	non-compiled	[CE]  not  a  statement	137	None	replace
103	[BUG]  [BUGGY]  ||  isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  *  mean;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  ||  isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	||  isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  *  mean;  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    *    mean;    }    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
104	[BUG]  [BUGGY]  ||  isBiasCorrected)  {  values[0]  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  *  mean;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  ||  isBiasCorrected)  {  values[0]  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	||  isBiasCorrected)  {  values[0]  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  *  mean;  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    *    mean;    }    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
105	[BUG]  [BUGGY]  Double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  *  Mean;  }  [CE]  not  a  statement  [FE]                              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  *  Mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  *  Mean;  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    *    mean;    }    	non-compiled	[CE]  not  a  statement	137	None	replace
106	[BUG]  [BUGGY]  double  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }	  MiscMoment    incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  ';'  expected	158	None	replace
107	[BUG]  [BUGGY]  final  MiscMoment  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  final  MiscMoment  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	final  MiscMoment  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }	  MiscMoment    incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  ';'  expected	158	None	replace
108	[BUG]  [BUGGY]  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }	  MiscMoment    incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  not  a  statement	158	None	replace
109	[BUG]  [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }	  while(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	181	None	replace
110	[BUG]  [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }	  while(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	181	None	replace
111	[BUG]  [BUGGY]  While(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  While(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	While(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }	  while(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  ';'  expected	181	None	replace
112	[BUG]  [BUGGY]  while(!isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  while(!isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	while(!isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }	  while(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	181	None	replace
113	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  valueWts);  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    Accum    +=    values[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  ';'  expected	69	None	replace
114	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  valueWts);  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    Accum    +=    values[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  ';'  expected	69	None	replace
115	[BUG]  [BUGGY]  Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [CE]  cannot  find  symbol  Context  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  valueWts);  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    Accum    +=    values[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  cannot  find  symbol  Context	69	None	replace
116	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected  ||  incMoment)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected  ||  incMoment)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected  ||  incMoment)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  valueWts);  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    Accum    +=    values[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  ';'  expected	69	None	replace
117	[BUG]  [BUGGY]  MiscUtilities.checkState(incMoment)||  isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  MiscUtilities.checkState(incMoment)||  isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	MiscUtilities.checkState(incMoment)||  isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }	  MiscUtilities.checkState(incMoment)&&    isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  not  a  statement	128	None	replace
118	[BUG]  [BUGGY]  MiscUtilities.checkState(isBiasCorrected)&&  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  MiscUtilities.checkState(isBiasCorrected)&&  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	MiscUtilities.checkState(isBiasCorrected)&&  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }	  MiscUtilities.checkState(incMoment)&&    isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  not  a  statement	128	None	replace
119	[BUG]  [BUGGY]  MiscUtilities.checkState(incMoment  ||  isBiasCorrected))  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  MiscUtilities.checkState(incMoment  ||  isBiasCorrected))  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	MiscUtilities.checkState(incMoment  ||  isBiasCorrected))  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }	  MiscUtilities.checkState(incMoment)&&    isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  ';'  expected	128	None	replace
120	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values	  if(incMoment)    {    if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[    	non-compiled	[CE]  ';'  expected	77	None	replace
121	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  [CE]  '.class'  expected  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *	  if(incMoment)    {    if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[    	non-compiled	[CE]  '.class'  expected	77	None	replace
122	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[  }	  if(incMoment)    {    if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
123	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  ==  2)  {  }  else  if(length  ==  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        ==        1)        {        }    else    if(length    ==    2)    {    }  else  if(length  ==  2)  {	  	compilable	  [FE]  AssertionError  	16	1	add
124	[BUG]  [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  ==  2)  {  }  else  if(length  ==  2)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  ==  2)  {  }  else  if(length  ==  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        ==        1)        {        }    else    if(length    ==    2)    {    }  else  if(length  ==  2)  {	  	compilable	  [FE]  AssertionError  	16	1	add
125	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  ==  2)  {  }  else  if(length  ==  1)  {  }  else  if(length  ==  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        ==        1)        {        }    else    if(length    ==    2)    {    }  else  if(length  ==  1)  {  }  else  if(length  ==  2)  {	  	compilable	  [FE]  AssertionError  	16	1	add
126	[BUG]  [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  ==  2)  {  }  else  if(length  ==  1)  {  }  else  if(length  ==  2)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  ==  2)  {  }  else  if(length  ==  1)  {  }  else  if(length  ==  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        ==        1)        {        }    else    if(length    ==    2)    {    }  else  if(length  ==  1)  {  }  else  if(length  ==  2)  {	  	compilable	  [FE]  AssertionError  	16	1	add
127	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  ==  2)  {  }  else  if(length  ==  1)  {  }  else  if(length  >=  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        ==        1)        {        }    else    if(length    ==    2)    {    }  else  if(length  ==  1)  {  }  else  if(length  >=  2)  {	  	compilable	  [FE]  AssertionError  	16	2	add
128	[BUG]  [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  ==  2)  {  }  else  if(length  ==  1)  {  }  else  if(length  >=  2)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  ==  2)  {  }  else  if(length  ==  1)  {  }  else  if(length  >=  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        ==        1)        {        }    else    if(length    ==    2)    {    }  else  if(length  ==  1)  {  }  else  if(length  >=  2)  {	  	compilable	  [FE]  AssertionError  	16	2	add
129	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  ==  2)  {  }  else  if(length  ==  1)  {  }  else  if(length!=  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        ==        1)        {        }    else    if(length    ==    2)    {    }  else  if(length  ==  1)  {  }  else  if(length!=  2)  {	  	compilable	  [FE]  AssertionError  	16	2	add
130	[BUG]  [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  ==  2)  {  }  else  if(length  ==  1)  {  }  else  if(length!=  2)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  ==  2)  {  }  else  if(length  ==  1)  {  }  else  if(length!=  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        ==        1)        {        }    else    if(length    ==    2)    {    }  else  if(length  ==  1)  {  }  else  if(length!=  2)  {	  	compilable	  [FE]  AssertionError  	16	2	add
131	[BUG]  [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  ==  2)  {  }  else  if(length  {  2)  {  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  ==  2)  {  }  else  if(length  {  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        ==        1)        {        }    else    if(length    ==    2)    {    }  else  if(length  {  2)  {	  	non-compiled	[CE]  ')'  expected	16	None	add
132	[BUG]  [BUGGY]  if(incMoment)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }	  if(isBiasCorrected)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
133	[BUG]  [BUGGY]  Context.checkMoment(incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkMoment(incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkMoment(incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }	  if(isBiasCorrected)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  ';'  expected	97	None	replace
134	[BUG]  [BUGGY]  if(incMoment)  {  if(test(values,  weights,  begin,  length))  {  accum2  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(test(values,  weights,  begin,  length))  {  accum2  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(test(values,  weights,  begin,  length))  {  accum2  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }	  if(isBiasCorrected)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
135	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  ';'  expected	79	None	replace
136	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  ';'  expected	79	None	replace
137	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected  ||  incMoment)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected  ||  incMoment)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected  ||  incMoment)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  ';'  expected	79	None	replace
138	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected,  incMoment)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected,  incMoment)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected,  incMoment)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  ';'  expected	79	None	replace
139	[BUG]  [BUGGY]  int  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  ValueWts);  }  [CE]  possible  loss  of  precision  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  int  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  ValueWts);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	int  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  ValueWts);  }	  double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    ValueWts);    }    	non-compiled	[CE]  possible  loss  of  precision	178	None	replace
140	[BUG]  [BUGGY]  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  ValueWts);  }  [CE]  cannot  find  symbol  accum  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  ValueWts);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  ValueWts);  }	  double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    ValueWts);    }    	non-compiled	[CE]  cannot  find  symbol  accum	178	None	replace
141	[BUG]  [BUGGY]  if(length  >  1)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  ValueWts);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  >  1)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  ValueWts);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  >  1)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  ValueWts);  }	  double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    ValueWts);    }    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
142	[BUG]  [BUGGY]  accum  =  isBiasCorrected;  [CE]  cannot  find  symbol  accum  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum  =  isBiasCorrected;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum  =  isBiasCorrected;	          incMoment    =    isBiasCorrected;    if(incMoment    ==    isBiasCorrected)    {    incMoment    =    isBiasCorrected;    }    else    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    	non-compiled	[CE]  cannot  find  symbol  accum	187	None	replace
143	[BUG]  [BUGGY]  incMoment  =  accum;  [CE]  cannot  find  symbol  accum  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  accum;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment  =  accum;	          incMoment    =    isBiasCorrected;    if(incMoment    ==    isBiasCorrected)    {    incMoment    =    isBiasCorrected;    }    else    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    	non-compiled	[CE]  cannot  find  symbol  accum	187	None	replace
144	[BUG]  [BUGGY]  accum2  =  1.0;  [CE]  cannot  find  symbol  accum2  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  =  1.0;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  =  1.0;	          incMoment    =    isBiasCorrected;    if(incMoment    ==    isBiasCorrected)    {    incMoment    =    isBiasCorrected;    }    else    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    	non-compiled	[CE]  cannot  find  symbol  accum2	187	None	replace
145	[BUG]  [BUGGY]  ||  test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  ||  test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	||  test(values,  weights,  begin,  length))  {  var  =  0.0;  }	  ||    test(values,    begin,    length))    {    var    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
146	[BUG]  [BUGGY]  &&  test(values,  begin,  length))  {  var  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  &&  test(values,  begin,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	&&  test(values,  begin,  length))  {  var  =  0.0;  }	  ||    test(values,    begin,    length))    {    var    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
147	[BUG]  [BUGGY]  ||  test(values,  accum,  length))  {  var  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  ||  test(values,  accum,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	||  test(values,  accum,  length))  {  var  =  0.0;  }	  ||    test(values,    begin,    length))    {    var    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
148	[BUG]  [BUGGY]  accum2  +=  weights[i]  *  (dev  *  value  }  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  +=  weights[i]  *  (dev  *  value  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  +=  weights[i]  *  (dev  *  value  }	  accum2    +=    weights[i]    *    value    	non-compiled	[CE]  ')'  expected	88	None	replace
149	[BUG]  [BUGGY]  accum2  +=  weights[i]  *  dev  }  ';'  expected  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  +=  weights[i]  *  dev  }  ';'  expected  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  +=  weights[i]  *  dev  }  ';'  expected	  accum2    +=    weights[i]    *    value    	non-compiled	[CE]  ';'  expected	88	None	replace
150	[BUG]  [BUGGY]  accum2  +=  weights[i]  *  (dev  *  value  [CE]  ')'  expected  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  +=  weights[i]  *  (dev  *  value  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  +=  weights[i]  *  (dev  *  value	  accum2    +=    weights[i]    *    value    	non-compiled	[CE]  ')'  expected	88	None	replace
151	[BUG]  [BUGGY]  accum2  +=  weights[i]  *  dev  }  ';'  [CE]  ';'  expected  [FE]                            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  +=  weights[i]  *  dev  }  ';'  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  +=  weights[i]  *  dev  }  ';'	  accum2    +=    weights[i]    *    value    	non-compiled	[CE]  ';'  expected	88	None	replace
152	[BUG]  [BUGGY]  ||  incMoment)  {  values[0]  -  mean;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  ||  incMoment)  {  values[0]  -  mean;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	||  incMoment)  {  values[0]  -  mean;	  ||    isBiasCorrected)    {    values[0]    -    mean;    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
153	[BUG]  [BUGGY]  ||  isBiasCorrected)  {  values[1]  -  mean;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  ||  isBiasCorrected)  {  values[1]  -  mean;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	||  isBiasCorrected)  {  values[1]  -  mean;	  ||    isBiasCorrected)    {    values[0]    -    mean;    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
154	[BUG]  [BUGGY]  ||  isBiasCorrected)  {  values[0]  -  mean  +  1;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  ||  isBiasCorrected)  {  values[0]  -  mean  +  1;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	||  isBiasCorrected)  {  values[0]  -  mean  +  1;	  ||    isBiasCorrected)    {    values[0]    -    mean;    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
155	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	incMoment    =    isBiasCorrected?    Boolean.FALSE    :    Boolean.TRUE;    incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;	  	compilable	  [FE]  AssertionError  	3	1	add
156	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment    =    isBiasCorrected?    Boolean.FALSE    :    Boolean.TRUE;    incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;	  	compilable	  [FE]  AssertionError  	3	1	add
157	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  incMoment  =  isBiasCorrected?  Boolean.FULL  :  Boolean.TRUE;  [CE]  cannot  find  symbol  FULL  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  incMoment  =  isBiasCorrected?  Boolean.FULL  :  Boolean.TRUE;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment    =    isBiasCorrected?    Boolean.FALSE    :    Boolean.TRUE;    incMoment  =  isBiasCorrected?  Boolean.FULL  :  Boolean.TRUE;	  	non-compiled	[CE]  cannot  find  symbol  FULL	3	None	add
158	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  accum  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  [CE]  cannot  find  symbol  accum  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  accum  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment    =    isBiasCorrected?    Boolean.FALSE    :    Boolean.TRUE;    accum  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;	  	non-compiled	[CE]  cannot  find  symbol  accum	3	None	add
159	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	incMoment    =    isBiasCorrected?    Boolean.FALSE    :    Boolean.TRUE;    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;	  	compilable	  [FE]  AssertionError  	3	1	add
160	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment    =    isBiasCorrected?    Boolean.FALSE    :    Boolean.TRUE;    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;	  	compilable	  [FE]  AssertionError  	3	1	add
161	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  <  1)  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	if(length  <  1)  {  var  =  0.0;  }	  if(length    ==    1)    {    var    =    0.0;    }    	compilable	  [FE]  AssertionError  	48	2	replace
162	[BUG]  [BUGGY]  if(length  <  1)  {  var  =  0.0;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  <  1)  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  <  1)  {  var  =  0.0;  }	  if(length    ==    1)    {    var    =    0.0;    }    	compilable	  [FE]  AssertionError  	48	2	replace
163	[BUG]  [BUGGY]  while(isBiasCorrected  &&  isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i].doubleValue();  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  while(isBiasCorrected  &&  isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i].doubleValue();  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	while(isBiasCorrected  &&  isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i].doubleValue();  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[i]    *    values[i].doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
164	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i].doubleValue();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i].doubleValue();  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i].doubleValue();  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[i]    *    values[i].doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
165	[BUG]  [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i].doubleValue();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i].doubleValue();  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i].doubleValue();  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[i]    *    values[i].doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
166	[BUG]  [BUGGY]  while(isBiasCorrected  &&  isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i].doubleValu  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  while(isBiasCorrected  &&  isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i].doubleValu  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	while(isBiasCorrected  &&  isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i].doubleValu	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[i]    *    values[i].doubleValue();    }    	non-compiled	[CE]  ';'  expected	182	None	replace
167	[BUG]  [BUGGY]  AssertionError.show(accum,  accum2,  value);  [CE]  cannot  find  symbol  accum  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  AssertionError.show(accum,  accum2,  value);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	AssertionError.show(accum,  accum2,  value);	  if(test(values,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    value    	non-compiled	[CE]  cannot  find  symbol  accum	115	None	replace
168	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length  ==  1)  {  }  else  if(length  >=  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        >=        1)        {        }    else    if(length    ==    1)    {    }  else  if(length  >=  1)  {	  	compilable	  [FE]  AssertionError  	63	2	add
169	[BUG]  [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length  ==  1)  {  }  else  if(length  >=  1)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length  ==  1)  {  }  else  if(length  >=  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        >=        1)        {        }    else    if(length    ==    1)    {    }  else  if(length  >=  1)  {	  	compilable	  [FE]  AssertionError  	63	2	add
170	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length  ==  1)  {  }  else  if(length  ==  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        >=        1)        {        }    else    if(length    ==    1)    {    }  else  if(length  ==  1)  {	  	compilable	  [FE]  AssertionError  	63	2	add
171	[BUG]  [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length  ==  1)  {  }  else  if(length  ==  1)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length  ==  1)  {  }  else  if(length  ==  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        >=        1)        {        }    else    if(length    ==    1)    {    }  else  if(length  ==  1)  {	  	compilable	  [FE]  AssertionError  	63	2	add
172	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length  ==  1)  {  }  else  if(length!=  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        >=        1)        {        }    else    if(length    ==    1)    {    }  else  if(length!=  1)  {	  	compilable	  [FE]  AssertionError  	63	2	add
173	[BUG]  [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length  ==  1)  {  }  else  if(length!=  1)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length  ==  1)  {  }  else  if(length!=  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        >=        1)        {        }    else    if(length    ==    1)    {    }  else  if(length!=  1)  {	  	compilable	  [FE]  AssertionError  	63	2	add
174	[BUG]  [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length  ==  1)  {  }  else  if(length  >>  1)  {  [CE]  incompatible  types  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length  ==  1)  {  }  else  if(length  >>  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        >=        1)        {        }    else    if(length    ==    1)    {    }  else  if(length  >>  1)  {	  	non-compiled	[CE]  incompatible  types	63	None	add
175	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length  ==  1)  {  }  else  if(length  >  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        >=        1)        {        }    else    if(length    ==    1)    {    }  else  if(length  >  1)  {	  	compilable	  [FE]  AssertionError  	63	2	add
176	[BUG]  [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length  ==  1)  {  }  else  if(length  >  1)  {  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length  ==  1)  {  }  else  if(length  >  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        >=        1)        {        }    else    if(length    ==    1)    {    }  else  if(length  >  1)  {	  	compilable	  [FE]  AssertionError  	63	2	add
177	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(test(values,  weights,  begin,  length))  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}  else  if(test(values,  weights,  begin,  length))  {	  }    else    if(length    ==    1)    {    }    else    if(length    ==    1)    {    	compilable	  [FE]  AssertionError  	15	1	replace
178	[BUG]  [BUGGY]  }  else  if(test(values,  weights,  begin,  length))  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(test(values,  weights,  begin,  length))  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}  else  if(test(values,  weights,  begin,  length))  {	  }    else    if(length    ==    1)    {    }    else    if(length    ==    1)    {    	compilable	  [FE]  AssertionError  	15	1	replace
179	[BUG]  [BUGGY]  [FE]  MathIllegalArgumentException  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(test(values,  values,  begin,  length))  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}  else  if(test(values,  values,  begin,  length))  {	  }    else    if(length    ==    1)    {    }    else    if(length    ==    1)    {    	compilable	  [FE]  MathIllegalArgumentException  	15	2	replace
180	[BUG]  [BUGGY]  }  else  if(test(values,  values,  begin,  length))  {  [FE]  MathIllegalArgumentException  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(test(values,  values,  begin,  length))  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}  else  if(test(values,  values,  begin,  length))  {	  }    else    if(length    ==    1)    {    }    else    if(length    ==    1)    {    	compilable	  [FE]  MathIllegalArgumentException  	15	2	replace
181	[BUG]  [BUGGY]  Integer  incMoment  =  isBiasCorrected;  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Integer  incMoment  =  isBiasCorrected;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Integer  incMoment  =  isBiasCorrected;	          incMoment    =    isBiasCorrected;    Integer    incMoment    =    isBiasCorrected;    	non-compiled	[CE]  incompatible  types	8	None	replace
182	[BUG]  [BUGGY]  int  incMoment  =  isBiasCorrected;  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  int  incMoment  =  isBiasCorrected;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	int  incMoment  =  isBiasCorrected;	          incMoment    =    isBiasCorrected;    Integer    incMoment    =    isBiasCorrected;    	non-compiled	[CE]  incompatible  types	8	None	replace
183	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  }	  if(incMoment)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
184	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2	  if(incMoment)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    	non-compiled	[CE]  not  a  statement	148	None	replace
185	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  [CE]  '.class'  expected  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=	  if(incMoment)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    	non-compiled	[CE]  '.class'  expected	148	None	replace
186	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  var  =  Double.NaN;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	var  =  Double.NaN;	          incMoment    =    isBiasCorrected;    if(incMoment    ==    isBiasCorrected)    {    incMoment    =    isBiasCorrected;    }    	compilable	  [FE]  AssertionError  	185	2	replace
187	[BUG]  [BUGGY]  var  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  var  =  Double.NaN;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	var  =  Double.NaN;	          incMoment    =    isBiasCorrected;    if(incMoment    ==    isBiasCorrected)    {    incMoment    =    isBiasCorrected;    }    	compilable	  [FE]  AssertionError  	185	2	replace
188	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  ';'  expected	68	None	replace
189	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  ';'  expected	68	None	replace
190	[BUG]  [BUGGY]  Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [CE]  cannot  find  symbol  Context  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  cannot  find  symbol  Context	68	None	replace
191	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected,  incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected,  incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected,  incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  ';'  expected	68	None	replace
192	[BUG]  [BUGGY]  AssertionError.show(accum2,  dev,  value);  [CE]  cannot  find  symbol  accum2  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  AssertionError.show(accum2,  dev,  value);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	AssertionError.show(accum2,  dev,  value);	  if(test(values,    mean,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    value    	non-compiled	[CE]  cannot  find  symbol  accum2	116	None	replace
193	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FIELD;  [CE]  cannot  find  symbol  FIELD  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FIELD;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FIELD;	          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FIELD;    	non-compiled	[CE]  cannot  find  symbol  FIELD	86	None	replace
194	[BUG]  [BUGGY]  accum2  =  var.doubleValue();  [CE]  cannot  find  symbol  accum2  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  =  var.doubleValue();  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  =  var.doubleValue();	  accum2    =    accum2.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  accum2	157	None	replace
195	[BUG]  [BUGGY]  accum2  =  mean.doubleValue();  [CE]  cannot  find  symbol  accum2  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  =  mean.doubleValue();  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  =  mean.doubleValue();	  accum2    =    accum2.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  accum2	157	None	replace
196	[BUG]  [BUGGY]  double  accum2  =  var.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double  accum2  =  var.doubleValue();  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  accum2  =  var.doubleValue();	  accum2    =    accum2.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	157	None	replace
197	[BUG]  [BUGGY]  if(incMoment)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }	  if(length    ==    1)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
198	[BUG]  [BUGGY]  if(incMoment)  {  if(test(values,  length,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(test(values,  length,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(test(values,  length,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }	  if(length    ==    1)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
199	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }	  if(test(values,    mean,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
200	[BUG]  [BUGGY]  if(length  ==  1)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  ==  1)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  ==  1)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }	  if(test(values,    mean,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
201	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }	  if(test(values,    mean,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
202	[BUG]  [BUGGY]  incMoment)  {  sumWts  +=  values[i]  *  values[i];  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment)  {  sumWts  +=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment)  {  sumWts  +=  values[i]  *  values[i];  }	  incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  not  a  statement	122	None	replace
203	[BUG]  [BUGGY]  int  accum)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  int  accum)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	int  accum)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }	  incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  ';'  expected	122	None	replace
204	[BUG]  [BUGGY]  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  values[i];  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  values[i];  }	  incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  not  a  statement	122	None	replace
205	[BUG]  [BUGGY]  incMoment  :  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  :  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment  :  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;	  incMoment    :    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  not  a  statement	174	None	replace
206	[BUG]  [BUGGY]  :  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  :  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	:  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;	  incMoment    :    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  illegal  start  of  expression	174	None	replace
207	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  [CE]  '.class'  expected  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *	  if(incMoment)    {    if(test(values,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    	non-compiled	[CE]  '.class'  expected	150	None	replace
208	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[  [CE]  '.class'  expected  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[	  if(incMoment)    {    if(test(values,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    	non-compiled	[CE]  '.class'  expected	150	None	replace
209	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  }	  if(incMoment)    {    if(test(values,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
210	[BUG]  [BUGGY]  int  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [CE]  possible  loss  of  precision  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  int  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	int  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }	  ble    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  possible  loss  of  precision	152	None	replace
211	[BUG]  [BUGGY]  long  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [CE]  possible  loss  of  precision  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  long  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	long  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }	  ble    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  possible  loss  of  precision	152	None	replace
212	[BUG]  [BUGGY]  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [CE]  cannot  find  symbol  accum  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }	  ble    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  cannot  find  symbol  accum	152	None	replace
213	[BUG]  [BUGGY]  Context.checkState(!incMoment);  [CE]  cannot  find  symbol  Context  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(!incMoment);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(!incMoment);	  Context.checkState(isBiasCorrected);    	non-compiled	[CE]  cannot  find  symbol  Context	54	None	replace
214	[BUG]  [BUGGY]  if(incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }	  if(isBiasCorrected)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
215	[BUG]  [BUGGY]  if(incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0	  if(isBiasCorrected)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  ';'  expected	50	None	replace
216	[BUG]  [BUGGY]  if(incMoment)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }	  if(isBiasCorrected)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
217	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  [CE]  '.class'  expected  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =	  if(length    ==    2)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    }    	non-compiled	[CE]  '.class'  expected	141	None	replace
218	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected()  ||  isIncMoment);  [CE]  cannot  find  symbol  isIncMoment  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected()  ||  isIncMoment);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected()  ||  isIncMoment);	  Context.checkState(isBiasCorrected());    	non-compiled	[CE]  cannot  find  symbol  isIncMoment	55	None	replace
219	[BUG]  [BUGGY]  Context.checkState(!isBiasCorrected());  [CE]  cannot  find  symbol  Context  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(!isBiasCorrected());  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(!isBiasCorrected());	  Context.checkState(isBiasCorrected());    	non-compiled	[CE]  cannot  find  symbol  Context	55	None	replace
220	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected()  ||  incMoment);  [CE]  cannot  find  symbol  Context  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected()  ||  incMoment);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected()  ||  incMoment);	  Context.checkState(isBiasCorrected());    	non-compiled	[CE]  cannot  find  symbol  Context	55	None	replace
221	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >    2)    {    }  else  if(length  >  1)  {  }  else  if(length  >  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        >        2)        {        }    else    if(length    >    1)    {    }  else  if(length  >  2)  {	  	compilable	  [FE]  AssertionError  	26	2	add
222	[BUG]  [BUGGY]  }    else    if(length    >    2)    {    }  else  if(length  >  1)  {  }  else  if(length  >  2)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >    2)    {    }  else  if(length  >  1)  {  }  else  if(length  >  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        >        2)        {        }    else    if(length    >    1)    {    }  else  if(length  >  2)  {	  	compilable	  [FE]  AssertionError  	26	2	add
223	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >    2)    {    }  else  if(length  >  1)  {  }  else  if(length  >  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        >        2)        {        }    else    if(length    >    1)    {    }  else  if(length  >  1)  {	  	compilable	  [FE]  AssertionError  	26	2	add
224	[BUG]  [BUGGY]  }    else    if(length    >    2)    {    }  else  if(length  >  1)  {  }  else  if(length  >  1)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >    2)    {    }  else  if(length  >  1)  {  }  else  if(length  >  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        >        2)        {        }    else    if(length    >    1)    {    }  else  if(length  >  1)  {	  	compilable	  [FE]  AssertionError  	26	2	add
225	[BUG]  [BUGGY]  }    else    if(length    >    2)    {    }  else  if(length  >  1)  {  else  if(length  >  2)  {  [CE]  'else'  without  'if'  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >    2)    {    }  else  if(length  >  1)  {  else  if(length  >  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        >        2)        {        }    else    if(length    >    1)    {    else  if(length  >  2)  {	  	non-compiled	[CE]  'else'  without  'if'	26	None	add
226	[BUG]  [BUGGY]  accum  =  0.0;  [CE]  cannot  find  symbol  accum  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum  =  0.0;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum  =  0.0;	  accum2    =    0.0;    	non-compiled	[CE]  cannot  find  symbol  accum	163	None	replace
227	[BUG]  [BUGGY]  accum1  =  0.0;  [CE]  cannot  find  symbol  accum1  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum1  =  0.0;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum1  =  0.0;	  accum2    =    0.0;    	non-compiled	[CE]  cannot  find  symbol  accum1	163	None	replace
228	[BUG]  [BUGGY]  double  accum2  =  0.0;  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double  accum2  =  0.0;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  accum2  =  0.0;	  accum2    =    0.0;    	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	163	None	replace
229	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    while(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  while(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	                if(test(values,        weights,        begin,        length))        {        var        =        0.0;        }        while(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  while(test(values,  weights,  begin,  length))  {  var  =  0.0;  }	  	compilable	  [FE]  AssertionError  	124	1	add
230	[BUG]  [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    while(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  while(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    while(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  while(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                if(test(values,        weights,        begin,        length))        {        var        =        0.0;        }        while(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  while(test(values,  weights,  begin,  length))  {  var  =  0.0;  }	  	compilable	  [FE]  AssertionError  	124	1	add
231	[BUG]  [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    while(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  while(test(values,  weights,  start,  length))  {  var  =  0.0;  }  [CE]  cannot  find  symbol  start  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    while(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  while(test(values,  weights,  start,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                if(test(values,        weights,        begin,        length))        {        var        =        0.0;        }        while(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  while(test(values,  weights,  start,  length))  {  var  =  0.0;  }	  	non-compiled	[CE]  cannot  find  symbol  start	124	None	add
232	[BUG]  [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    while(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  start,  length))  {  var  =  0.0;  }  while(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [CE]  cannot  find  symbol  start  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    while(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  start,  length))  {  var  =  0.0;  }  while(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                if(test(values,        weights,        begin,        length))        {        var        =        0.0;        }        while(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  weights,  start,  length))  {  var  =  0.0;  }  while(test(values,  weights,  begin,  length))  {  var  =  0.0;  }	  	non-compiled	[CE]  cannot  find  symbol  start	124	None	add
233	[BUG]  [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    while(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  while(test(values,  weights,  begin,  length))  {  var  =  0.0;  [CE]  'else'  without  'if'  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    while(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  while(test(values,  weights,  begin,  length))  {  var  =  0.0;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                if(test(values,        weights,        begin,        length))        {        var        =        0.0;        }        while(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  while(test(values,  weights,  begin,  length))  {  var  =  0.0;	  	non-compiled	[CE]  'else'  without  'if'	124	None	add
234	[BUG]  [BUGGY]  double  varMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double  varMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  varMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;	  varMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  incompatible  types	5	None	replace
235	[BUG]  [BUGGY]  incMoment?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment?  Boolean.TRUE  :  Boolean.FALSE;	  varMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  not  a  statement	5	None	replace
236	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(length  >=  2)  {  }  else  if(length  >=  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}    else    if(length    >=    2)    {    }  else  if(length  >=  2)  {	  	compilable	  [FE]  AssertionError  	91	2	add
237	[BUG]  [BUGGY]  }  else  if(length  >=  2)  {  }  else  if(length  >=  2)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(length  >=  2)  {  }  else  if(length  >=  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length    >=    2)    {    }  else  if(length  >=  2)  {	  	compilable	  [FE]  AssertionError  	91	2	add
238	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(length  >=  2)  {  }  else  if(length!=  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}    else    if(length    >=    2)    {    }  else  if(length!=  2)  {	  	compilable	  [FE]  AssertionError  	91	2	add
239	[BUG]  [BUGGY]  }  else  if(length  >=  2)  {  }  else  if(length!=  2)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(length  >=  2)  {  }  else  if(length!=  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length    >=    2)    {    }  else  if(length!=  2)  {	  	compilable	  [FE]  AssertionError  	91	2	add
240	[BUG]  [BUGGY]  }  else  if(length  >=  2)  {  }  else  if(length  >>  2)  {  [CE]  incompatible  types  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(length  >=  2)  {  }  else  if(length  >>  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length    >=    2)    {    }  else  if(length  >>  2)  {	  	non-compiled	[CE]  incompatible  types	91	None	add
241	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(length  >=  2)  {  }  else  if(length  ==  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}    else    if(length    >=    2)    {    }  else  if(length  ==  2)  {	  	compilable	  [FE]  AssertionError  	91	2	add
242	[BUG]  [BUGGY]  }  else  if(length  >=  2)  {  }  else  if(length  ==  2)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(length  >=  2)  {  }  else  if(length  ==  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length    >=    2)    {    }  else  if(length  ==  2)  {	  	compilable	  [FE]  AssertionError  	91	2	add
243	[BUG]  [BUGGY]  }  else  if(length  >=  2)  {  }  else  if(length  [BUGGY]  2)  {  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(length  >=  2)  {  }  else  if(length  [BUGGY]  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length    >=    2)    {    }  else  if(length  [BUGGY]  2)  {	  	non-compiled	[CE]  ')'  expected	91	None	add
244	[BUG]  [BUGGY]  if(incMoment)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }	  if(isBiasCorrected)    {    if(test(values,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
245	[BUG]  [BUGGY]  if(incMoment)  {  if(test(values,  start,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(test(values,  start,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(test(values,  start,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }	  if(isBiasCorrected)    {    if(test(values,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
246	[BUG]  [BUGGY]  accum2  =  1.0  /  mean.doubleValue();  [CE]  cannot  find  symbol  accum2  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  =  1.0  /  mean.doubleValue();  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  =  1.0  /  mean.doubleValue();	  accum2    =    1.0    -    mean.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  accum2	167	None	replace
247	[BUG]  [BUGGY]  accum2  =  0.0  -  mean.doubleValue();  [CE]  cannot  find  symbol  accum2  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  =  0.0  -  mean.doubleValue();  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  =  0.0  -  mean.doubleValue();	  accum2    =    1.0    -    mean.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  accum2	167	None	replace
248	[BUG]  [BUGGY]  accum1  =  1.0  -  mean.doubleValue();  [CE]  cannot  find  symbol  accum1  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum1  =  1.0  -  mean.doubleValue();  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum1  =  1.0  -  mean.doubleValue();	  accum2    =    1.0    -    mean.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  accum1	167	None	replace
249	[BUG]  [BUGGY]  Context.checkMoment(isBiasCorrected)  {  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkMoment(isBiasCorrected)  {  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkMoment(isBiasCorrected)  {  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  dev  =  values[i]  -  mean;  }	  Context.checkMoment(incMoment)    {    for(int    i    =    begin;    i    <    start    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  ';'  expected	56	None	replace
250	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected,  incMoment)  {  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected,  incMoment)  {  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected,  incMoment)  {  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  dev  =  values[i]  -  mean;  }	  Context.checkMoment(incMoment)    {    for(int    i    =    begin;    i    <    start    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  ';'  expected	56	None	replace
251	[BUG]  [BUGGY]  incMoment  :  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE  +  1;  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  :  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE  +  1;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment  :  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE  +  1;	  incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE    +    1;    	non-compiled	[CE]  not  a  statement	146	None	replace
252	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE  +  2;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE  +  2;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE  +  2;	  incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	146	None	replace
253	[BUG]  [BUGGY]  if(incMoment)  {  if(test(values,  weights,  start,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(test(values,  weights,  start,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(test(values,  weights,  start,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }	  if(length    ==    2)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
254	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  }	          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    if(isBiasCorrected)    {    incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    }    	compilable	  [FE]  AssertionError  	156	2	replace
255	[BUG]  [BUGGY]  if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  }	          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    if(isBiasCorrected)    {    incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    }    	compilable	  [FE]  AssertionError  	156	2	replace
256	[BUG]  [BUGGY]  while(isBiasCorrected  &&  isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  values[i];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  while(isBiasCorrected  &&  isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	while(isBiasCorrected  &&  isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  values[i];  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    weights[i]    *    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
257	[BUG]  [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  values[i];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  values[i];  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    weights[i]    *    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
258	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  values[i];  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  values[i];  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    weights[i]    *    values[i];    }    	non-compiled	[CE]  ';'  expected	123	None	replace
259	[BUG]  [BUGGY]  while(isBiasCorrected  &&  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  values[i];  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  while(isBiasCorrected  &&  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	while(isBiasCorrected  &&  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  values[i];  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    weights[i]    *    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
260	[BUG]  [BUGGY]  varMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  [CE]  cannot  find  symbol  varMoment  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  varMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	varMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;	  incMoment    =    isBiasCorrected?    Boolean.FALSE    :    Boolean.TRUE;    	non-compiled	[CE]  cannot  find  symbol  varMoment	4	None	replace
261	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  ==  2)  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	if(length  ==  2)  {  var  =  0.0;  }	          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    If(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    	compilable	  [FE]  AssertionError  	108	2	replace
262	[BUG]  [BUGGY]  if(length  ==  2)  {  var  =  0.0;  }  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  ==  2)  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  ==  2)  {  var  =  0.0;  }	          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    If(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    	compilable	  [FE]  AssertionError  	108	2	replace
263	[BUG]  [BUGGY]  validate(values,  begin,  length);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  validate(values,  begin,  length);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	validate(values,  begin,  length);	          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    If(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
264	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	if(test(values,  values,  begin,  length))  {  var  =  0.0;  }	          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,    values,    begin,    length))    {    var    =    0.0;    }    	compilable	  [FE]  AssertionError  	170	2	replace
265	[BUG]  [BUGGY]  if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(test(values,  values,  begin,  length))  {  var  =  0.0;  }	          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,    values,    begin,    length))    {    var    =    0.0;    }    	compilable	  [FE]  AssertionError  	170	2	replace
266	[BUG]  [BUGGY]  if(length  ==  1)  {  var  =  0.0;  }  else  {  double  accum2  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  ==  1)  {  var  =  0.0;  }  else  {  double  accum2  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  ==  1)  {  var  =  0.0;  }  else  {  double  accum2  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }	          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,    values,    begin,    length))    {    var    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
267	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,    values,    begin,    length))    {    var    =    0.0;    }    	compilable	  [FE]  AssertionError  	170	2	replace
268	[BUG]  [BUGGY]  if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,    values,    begin,    length))    {    var    =    0.0;    }    	compilable	  [FE]  AssertionError  	170	2	replace
269	[BUG]  [BUGGY]  luate(values,  begin,  length))  {  if(isBiasCorrected)  {  values[1]  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  luate(values,  begin,  length))  {  if(isBiasCorrected)  {  values[1]  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	luate(values,  begin,  length))  {  if(isBiasCorrected)  {  values[1]  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[	  luate(values,    begin,    length))    {    if(isBiasCorrected)    {    values[0]    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[    	non-compiled	[CE]  ';'  expected	138	None	replace
270	[BUG]  [BUGGY]  luate(values,  begin,  length))  {  if(incMoment)  {  values[0]  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[  [CE]  ';'  expected  [FE]                            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  luate(values,  begin,  length))  {  if(incMoment)  {  values[0]  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	luate(values,  begin,  length))  {  if(incMoment)  {  values[0]  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[	  luate(values,    begin,    length))    {    if(isBiasCorrected)    {    values[0]    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[    	non-compiled	[CE]  ';'  expected	138	None	replace
271	[BUG]  [BUGGY]  test(values,  weights,  begin,  length))  {  if(isBiasCorrected)  {  values[0]  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[  [CE]  ';'  expected  [FE]                              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  test(values,  weights,  begin,  length))  {  if(isBiasCorrected)  {  values[0]  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	test(values,  weights,  begin,  length))  {  if(isBiasCorrected)  {  values[0]  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[	  luate(values,    begin,    length))    {    if(isBiasCorrected)    {    values[0]    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[    	non-compiled	[CE]  ';'  expected	138	None	replace
272	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    start    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  ';'  expected	71	None	replace
273	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected,  incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected,  incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected,  incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    start    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  ';'  expected	71	None	replace
274	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [CE]  ';'  expected  [FE]                            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    start    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  ';'  expected	71	None	replace
275	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected  ||  incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [CE]  ';'  expected  [FE]                              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected  ||  incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected  ||  incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    start    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  ';'  expected	71	None	replace
276	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length!=  1)  {  }  else  if(length  ==  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        ==        1)        {        }    else    if(length!=    1)    {    }  else  if(length  ==  1)  {	  	compilable	  [FE]  AssertionError  	21	2	add
277	[BUG]  [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length!=  1)  {  }  else  if(length  ==  1)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length!=  1)  {  }  else  if(length  ==  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        ==        1)        {        }    else    if(length!=    1)    {    }  else  if(length  ==  1)  {	  	compilable	  [FE]  AssertionError  	21	2	add
278	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length!=  1)  {  }  else  if(length!=  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        ==        1)        {        }    else    if(length!=    1)    {    }  else  if(length!=  1)  {	  	compilable	  [FE]  AssertionError  	21	2	add
279	[BUG]  [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length!=  1)  {  }  else  if(length!=  1)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length!=  1)  {  }  else  if(length!=  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        ==        1)        {        }    else    if(length!=    1)    {    }  else  if(length!=  1)  {	  	compilable	  [FE]  AssertionError  	21	2	add
280	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length!=  1)  {  }  else  if(length  >=  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        ==        1)        {        }    else    if(length!=    1)    {    }  else  if(length  >=  1)  {	  	compilable	  [FE]  AssertionError  	21	2	add
281	[BUG]  [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length!=  1)  {  }  else  if(length  >=  1)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length!=  1)  {  }  else  if(length  >=  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        ==        1)        {        }    else    if(length!=    1)    {    }  else  if(length  >=  1)  {	  	compilable	  [FE]  AssertionError  	21	2	add
282	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length!=  1)  {  }  else  if(length  ==  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        ==        1)        {        }    else    if(length!=    1)    {    }  else  if(length  ==  2)  {	  	compilable	  [FE]  AssertionError  	21	2	add
283	[BUG]  [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length!=  1)  {  }  else  if(length  ==  2)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length!=  1)  {  }  else  if(length  ==  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        ==        1)        {        }    else    if(length!=    1)    {    }  else  if(length  ==  2)  {	  	compilable	  [FE]  AssertionError  	21	2	add
284	[BUG]  [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length!=  1)  {  }  else  if(length  >>  1)  {  [CE]  incompatible  types  [FE]            AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length!=  1)  {  }  else  if(length  >>  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        ==        1)        {        }    else    if(length!=    1)    {    }  else  if(length  >>  1)  {	  	non-compiled	[CE]  incompatible  types	21	None	add
285	[BUG]  [BUGGY]  Double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    }    	non-compiled	[CE]  not  a  statement	135	None	replace
286	[BUG]  [BUGGY]  ||  isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  ||  isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	||  isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    }    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
287	[BUG]  [BUGGY]  ||  isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  ||  isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	||  isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    }    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
288	[BUG]  [BUGGY]  Double[]  values  =  getValues();  for(int  i  =  start;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Double[]  values  =  getValues();  for(int  i  =  start;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Double[]  values  =  getValues();  for(int  i  =  start;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    }    	non-compiled	[CE]  not  a  statement	135	None	replace
289	[BUG]  [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  mean);  }  [CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  mean);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  mean);  }	  double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    amount);    }    	non-compiled	[CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	118	None	replace
290	[BUG]  [BUGGY]  int  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }  [CE]  possible  loss  of  precision  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  int  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	int  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }	  double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    amount);    }    	non-compiled	[CE]  possible  loss  of  precision	118	None	replace
291	[BUG]  [BUGGY]  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }  [CE]  cannot  find  symbol  accum  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }	  double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    amount);    }    	non-compiled	[CE]  cannot  find  symbol  accum	118	None	replace
292	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }	  Context.checkState(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  ';'  expected	73	None	replace
293	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected  ||  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected  ||  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected  ||  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }	  Context.checkState(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  ';'  expected	73	None	replace
294	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }	  Context.checkState(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  ';'  expected	73	None	replace
295	[BUG]  [BUGGY]  Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [CE]  cannot  find  symbol  Context  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }	  Context.checkState(incMoment)    {    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  cannot  find  symbol  Context	80	None	replace
296	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected  ||  isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected  ||  isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected  ||  isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }	  Context.checkState(incMoment)    {    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  ';'  expected	80	None	replace
297	[BUG]  [BUGGY]  Context.checkMoment(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkMoment(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkMoment(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }	  Context.checkMoment(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  ';'  expected	72	None	replace
298	[BUG]  [BUGGY]  Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [CE]  cannot  find  symbol  Context  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }	  Context.checkMoment(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  cannot  find  symbol  Context	72	None	replace
299	[BUG]  [BUGGY]  Context.checkMoment(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[0]  *  values[i];  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkMoment(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[0]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkMoment(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[0]  *  values[i];  }	  Context.checkMoment(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[0]    *    values[i];    }    	non-compiled	[CE]  ';'  expected	74	None	replace
300	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected  ||  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[0]  *  values[i];  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected  ||  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[0]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected  ||  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[0]  *  values[i];  }	  Context.checkMoment(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[0]    *    values[i];    }    	non-compiled	[CE]  ';'  expected	74	None	replace
301	[BUG]  [BUGGY]  Context.checkMoment(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[1]  *  values[0];  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkMoment(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[1]  *  values[0];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkMoment(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[1]  *  values[0];  }	  Context.checkMoment(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[0]    *    values[i];    }    	non-compiled	[CE]  ';'  expected	74	None	replace
302	[BUG]  [BUGGY]  Context.checkMoment(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[1]  *  values[2];  }  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkMoment(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[1]  *  values[2];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkMoment(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[1]  *  values[2];  }	  Context.checkMoment(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[0]    *    values[i];    }    	non-compiled	[CE]  ';'  expected	74	None	replace
303	[BUG]  [BUGGY]  Double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [CE]  variable  values  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    start;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i];    }    	non-compiled	[CE]  variable  values  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	130	None	replace
304	[BUG]  [BUGGY]  double[]  values  =  getValues();  for(int  i  =  start;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [CE]  variable  values  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double[]  values  =  getValues();  for(int  i  =  start;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double[]  values  =  getValues();  for(int  i  =  start;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    start;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i];    }    	non-compiled	[CE]  variable  values  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	130	None	replace
305	[BUG]  [BUGGY]  Double[]  values  =  getValues();  for(int  i  =  start;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [CE]  variable  values  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Double[]  values  =  getValues();  for(int  i  =  start;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Double[]  values  =  getValues();  for(int  i  =  start;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    start;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i];    }    	non-compiled	[CE]  variable  values  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	130	None	replace
306	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(length  <  2)  {  }  else  if(length  <  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}    else    if(length    <    2)    {    }  else  if(length  <  2)  {	  	compilable	  [FE]  AssertionError  	40	1	add
307	[BUG]  [BUGGY]  }  else  if(length  <  2)  {  }  else  if(length  <  2)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(length  <  2)  {  }  else  if(length  <  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length    <    2)    {    }  else  if(length  <  2)  {	  	compilable	  [FE]  AssertionError  	40	1	add
308	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(length  <  2)  {  }  else  if(length  >=  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}    else    if(length    <    2)    {    }  else  if(length  >=  2)  {	  	compilable	  [FE]  AssertionError  	40	2	add
309	[BUG]  [BUGGY]  }  else  if(length  <  2)  {  }  else  if(length  >=  2)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(length  <  2)  {  }  else  if(length  >=  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length    <    2)    {    }  else  if(length  >=  2)  {	  	compilable	  [FE]  AssertionError  	40	2	add
310	[BUG]  [BUGGY]  }  else  if(length  <  2)  {  else  if(length  <  2)  {  [CE]  'else'  without  'if'  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(length  <  2)  {  else  if(length  <  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length    <    2)    {    else  if(length  <  2)  {	  	non-compiled	[CE]  'else'  without  'if'	40	None	add
311	[BUG]  [BUGGY]  if(incMoment)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }	  if(isBiasCorrected)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
312	[BUG]  [BUGGY]  if(incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  [CE]  '.class'  expected  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =	  if(isBiasCorrected)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    }    	non-compiled	[CE]  '.class'  expected	49	None	replace
313	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  while(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	while(test(values,  weights,  begin,  length))  {  var  =  0.0;  }	          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    while(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    	compilable	  [FE]  AssertionError  	125	2	replace
314	[BUG]  [BUGGY]  while(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  while(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	while(test(values,  weights,  begin,  length))  {  var  =  0.0;  }	          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    while(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    	compilable	  [FE]  AssertionError  	125	2	replace
315	[BUG]  [BUGGY]  while(test(values,  weights,  begin,  length))  {  var  =  0.0;  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  while(test(values,  weights,  begin,  length))  {  var  =  0.0;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	while(test(values,  weights,  begin,  length))  {  var  =  0.0;	          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    while(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
316	[BUG]  [BUGGY]  ||  isBiasCorrected)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  ||  isBiasCorrected)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	||  isBiasCorrected)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[	  if(incMoment)    {    if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
317	[BUG]  [BUGGY]  ||  isBiasCorrected)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  ||  isBiasCorrected)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	||  isBiasCorrected)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[	  if(incMoment)    {    if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
318	[BUG]  [BUGGY]  ||  isBiasCorrected)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  ||  isBiasCorrected)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	||  isBiasCorrected)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *	  if(incMoment)    {    if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
319	[BUG]  [BUGGY]  accum2  +=  weights[i]  *  (dev  *  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  +=  weights[i]  *  (dev  *  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  +=  weights[i]  *  (dev  *	  accum2    +=    values[i]    *    (dev    *    	non-compiled	[CE]  ')'  expected	11	None	replace
320	[BUG]  [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  (values[i]  *  mean);  }  [CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  (values[i]  *  mean);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  (values[i]  *  mean);  }	  double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    weights[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	133	None	replace
321	[BUG]  [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  (values[i]  *  value);  }  [CE]  cannot  find  symbol  value  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  (values[i]  *  value);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  (values[i]  *  value);  }	  double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    weights[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  cannot  find  symbol  value	133	None	replace
322	[BUG]  [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  (values[i]  *  sum);  }  [CE]  cannot  find  symbol  sum  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  (values[i]  *  sum);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  (values[i]  *  sum);  }	  double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    weights[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  cannot  find  symbol  sum	133	None	replace
323	[BUG]  [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  Accum2  +=  values[i]  *  values[i];  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  Accum2  +=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  Accum2  +=  values[i]  *  values[i];  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    Accum2    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  not  a  statement	145	None	replace
324	[BUG]  [BUGGY]  double[]  values  =  getValues();  for(int  i  =  start;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  Accum2  +=  values[i]  *  values[i];  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double[]  values  =  getValues();  for(int  i  =  start;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  Accum2  +=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double[]  values  =  getValues();  for(int  i  =  start;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  Accum2  +=  values[i]  *  values[i];  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    Accum2    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  not  a  statement	145	None	replace
325	[BUG]  [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  Accum2  +=  values[i]  *  values[i].  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  Accum2  +=  values[i]  *  values[i].  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  Accum2  +=  values[i]  *  values[i].	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    Accum2    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  not  a  statement	145	None	replace
326	[BUG]  [BUGGY]  MiscUtilities.checkState(isBiasCorrected,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  MiscUtilities.checkState(isBiasCorrected,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	MiscUtilities.checkState(isBiasCorrected,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }	  MiscUtilities.checkState(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  ';'  expected	127	None	replace
327	[BUG]  [BUGGY]  MiscUtilities.checkState(isBiasCorrected  ||  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  MiscUtilities.checkState(isBiasCorrected  ||  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	MiscUtilities.checkState(isBiasCorrected  ||  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }	  MiscUtilities.checkState(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  ';'  expected	127	None	replace
328	[BUG]  [BUGGY]  MiscUtilities.checkState(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  MiscUtilities.checkState(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	MiscUtilities.checkState(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }	  MiscUtilities.checkState(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  ';'  expected	127	None	replace
329	[BUG]  [BUGGY]  MiscUtilities.checkState(isBiasCorrected);  [CE]  cannot  find  symbol  MiscUtilities  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  MiscUtilities.checkState(isBiasCorrected);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	MiscUtilities.checkState(isBiasCorrected);	  MiscUtilities.checkState(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  cannot  find  symbol  MiscUtilities	127	None	replace
330	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  true;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	incMoment  =  true;	  incMoment    =    false;    	compilable	  [FE]  AssertionError  	96	2	replace
331	[BUG]  [BUGGY]  incMoment  =  true;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  true;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment  =  true;	  incMoment    =    false;    	compilable	  [FE]  AssertionError  	96	2	replace
332	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected  ||  isBiasCorrected;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	incMoment  =  isBiasCorrected  ||  isBiasCorrected;	  incMoment    =    false;    	compilable	  [FE]  AssertionError  	96	2	replace
333	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected  ||  isBiasCorrected;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected  ||  isBiasCorrected;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment  =  isBiasCorrected  ||  isBiasCorrected;	  incMoment    =    false;    	compilable	  [FE]  AssertionError  	96	2	replace
334	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected  &&  isBiasCorrected;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	incMoment  =  isBiasCorrected  &&  isBiasCorrected;	  incMoment    =    false;    	compilable	  [FE]  AssertionError  	96	2	replace
335	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected  &&  isBiasCorrected;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected  &&  isBiasCorrected;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment  =  isBiasCorrected  &&  isBiasCorrected;	  incMoment    =    false;    	compilable	  [FE]  AssertionError  	96	2	replace
336	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  Double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(incMoment)  {  Double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment)  {  Double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }	  if(incMoment)    {    Double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i];    }    	non-compiled	[CE]  ';'  expected	179	None	replace
337	[BUG]  [BUGGY]  Double[]  values  =  getValues();  for(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [CE]  variable  values  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Double[]  values  =  getValues();  for(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Double[]  values  =  getValues();  for(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }	  if(incMoment)    {    Double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i];    }    	non-compiled	[CE]  variable  values  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	179	None	replace
338	[BUG]  [BUGGY]  nMoment  =  isBiasCorrected;  [CE]  cannot  find  symbol  nMoment  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  nMoment  =  isBiasCorrected;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	nMoment  =  isBiasCorrected;	          incMoment    =    isBiasCorrected;    incMoment    =    isBiasCorrected;    	non-compiled	[CE]  cannot  find  symbol  nMoment	7	None	replace
339	[BUG]  [BUGGY]  Integer  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Integer  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Integer  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;	          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    Integer    incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  incompatible  types	111	None	replace
340	[BUG]  [BUGGY]  int  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  int  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	int  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;	          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    Integer    incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  incompatible  types	111	None	replace
341	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  boolean  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	boolean  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;	          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    Integer    incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    	compilable	  [FE]  AssertionError  	111	2	replace
342	[BUG]  [BUGGY]  boolean  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  boolean  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	boolean  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;	          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    Integer    incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    	compilable	  [FE]  AssertionError  	111	2	replace
343	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (dev  *  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (dev  *  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (dev  *	  if(incMoment)    {    if(test(values,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    (dev    *    	non-compiled	[CE]  ')'  expected	149	None	replace
344	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +  [CE]  '.class'  expected  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +	  if(incMoment)    {    if(test(values,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    (dev    *    	non-compiled	[CE]  '.class'  expected	149	None	replace
345	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2	  if(incMoment)    {    if(test(values,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    (dev    *    	non-compiled	[CE]  not  a  statement	149	None	replace
346	[BUG]  [BUGGY]  double  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  *  mean;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  *  mean;  }	  MiscMoment    incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    *    mean;    }    	non-compiled	[CE]  ';'  expected	159	None	replace
347	[BUG]  [BUGGY]  final  MiscMoment  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  *  mean;  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  final  MiscMoment  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	final  MiscMoment  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  *  mean;  }	  MiscMoment    incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    *    mean;    }    	non-compiled	[CE]  ';'  expected	159	None	replace
348	[BUG]  [BUGGY]  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  *  mean;  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  *  mean;  }	  MiscMoment    incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    *    mean;    }    	non-compiled	[CE]  not  a  statement	159	None	replace
349	[BUG]  [BUGGY]  double  accum  =  Double.POSITIVE_INFINITY;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [CE]  cannot  find  symbol  valueWts  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double  accum  =  Double.POSITIVE_INFINITY;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  accum  =  Double.POSITIVE_INFINITY;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }	  ble    accum    =    Double.POSITIVE_INFINITY;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  cannot  find  symbol  valueWts	132	None	replace
350	[BUG]  [BUGGY]  accum  =  Double.POSITIVE_INFINITY;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [CE]  cannot  find  symbol  accum  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum  =  Double.POSITIVE_INFINITY;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum  =  Double.POSITIVE_INFINITY;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }	  ble    accum    =    Double.POSITIVE_INFINITY;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  cannot  find  symbol  accum	132	None	replace
351	[BUG]  [BUGGY]  int  accum  =  Double.POSITIVE_INFINITY;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [CE]  possible  loss  of  precision  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  int  accum  =  Double.POSITIVE_INFINITY;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	int  accum  =  Double.POSITIVE_INFINITY;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }	  ble    accum    =    Double.POSITIVE_INFINITY;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  possible  loss  of  precision	132	None	replace
352	[BUG]  [BUGGY]  boolean  accum  =  Double.POSITIVE_INFINITY;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [CE]  incompatible  types  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  boolean  accum  =  Double.POSITIVE_INFINITY;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	boolean  accum  =  Double.POSITIVE_INFINITY;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }	  ble    accum    =    Double.POSITIVE_INFINITY;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  incompatible  types	132	None	replace
353	[BUG]  [BUGGY]  double  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;	          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    double    incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  incompatible  types	112	None	replace
354	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }	  Context.checkState(incMoment)    {    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    amount);    }    	non-compiled	[CE]  ';'  expected	58	None	replace
355	[BUG]  [BUGGY]  Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }  [CE]  cannot  find  symbol  Context  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }	  Context.checkState(incMoment)    {    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    amount);    }    	non-compiled	[CE]  cannot  find  symbol  Context	58	None	replace
356	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  var  =  Double.POSITIVE_INFINITY;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	var  =  Double.POSITIVE_INFINITY;	  var    =    0.0;    	compilable	  [FE]  AssertionError  	43	2	replace
357	[BUG]  [BUGGY]  var  =  Double.POSITIVE_INFINITY;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  var  =  Double.POSITIVE_INFINITY;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	var  =  Double.POSITIVE_INFINITY;	  var    =    0.0;    	compilable	  [FE]  AssertionError  	43	2	replace
358	[BUG]  [BUGGY]  var  =  Double.NEGATIVE;  [CE]  cannot  find  symbol  NEGATIVE  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  var  =  Double.NEGATIVE;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	var  =  Double.NEGATIVE;	  var    =    0.0;    	non-compiled	[CE]  cannot  find  symbol  NEGATIVE	43	None	replace
359	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  var  =  Double.NEGATIVE_INFINITY;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	var  =  Double.NEGATIVE_INFINITY;	  var    =    0.0;    	compilable	  [FE]  AssertionError  	43	2	replace
360	[BUG]  [BUGGY]  var  =  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  var  =  Double.NEGATIVE_INFINITY;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	var  =  Double.NEGATIVE_INFINITY;	  var    =    0.0;    	compilable	  [FE]  AssertionError  	43	2	replace
361	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected;  accum2  =  isBiasCorrected;  [CE]  cannot  find  symbol  accum2  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected;  accum2  =  isBiasCorrected;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment  =  isBiasCorrected;  accum2  =  isBiasCorrected;	          incMoment    =    isBiasCorrected;    accum    =    isBiasCorrected;    	non-compiled	[CE]  cannot  find  symbol  accum2	9	None	replace
362	[BUG]  [BUGGY]  incMoment  =  var;  accum  =  isBiasCorrected;  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  var;  accum  =  isBiasCorrected;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment  =  var;  accum  =  isBiasCorrected;	          incMoment    =    isBiasCorrected;    accum    =    isBiasCorrected;    	non-compiled	[CE]  incompatible  types	9	None	replace
363	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (dev  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (dev  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (dev	  if(incMoment)    {    if(test(values,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    (dev    	non-compiled	[CE]  ')'  expected	147	None	replace
364	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected?  var  :  var;  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected?  var  :  var;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment  =  isBiasCorrected?  var  :  var;	  incMoment    =    var;    	non-compiled	[CE]  incompatible  types	94	None	replace
365	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected?  var  :  null;  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected?  var  :  null;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment  =  isBiasCorrected?  var  :  null;	  incMoment    =    var;    	non-compiled	[CE]  incompatible  types	94	None	replace
366	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected?  var  :  m2;  [CE]  cannot  find  symbol  m2  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected?  var  :  m2;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment  =  isBiasCorrected?  var  :  m2;	  incMoment    =    var;    	non-compiled	[CE]  cannot  find  symbol  m2	94	None	replace
367	[BUG]  [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  weights[i]  *  sumWts;  }  [CE]  cannot  find  symbol  sumWts  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  weights[i]  *  sumWts;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  weights[i]  *  sumWts;  }	  double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    weights[i]    *    valueWts;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	134	None	replace
368	[BUG]  [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  weights[i]  *  height;  }  [CE]  cannot  find  symbol  height  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  weights[i]  *  height;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  weights[i]  *  height;  }	  double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    weights[i]    *    valueWts;    }    	non-compiled	[CE]  cannot  find  symbol  height	134	None	replace
369	[BUG]  [BUGGY]  accum2  +=  values[i]  *  (  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  +=  values[i]  *  (  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  +=  values[i]  *  (	          incMoment    =    isBiasCorrected;    if(incMoment    ==    isBiasCorrected)    {    incMoment    =    isBiasCorrected;    }    else    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    (    	non-compiled	[CE]  ')'  expected	186	None	replace
370	[BUG]  [BUGGY]  accum2  =  values[i]  -  mean;  accum2  +=  values[i]  *  (  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  =  values[i]  -  mean;  accum2  +=  values[i]  *  (  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  =  values[i]  -  mean;  accum2  +=  values[i]  *  (	          incMoment    =    isBiasCorrected;    if(incMoment    ==    isBiasCorrected)    {    incMoment    =    isBiasCorrected;    }    else    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    (    	non-compiled	[CE]  ')'  expected	186	None	replace
371	[BUG]  [BUGGY]  double  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (	          incMoment    =    isBiasCorrected;    if(incMoment    ==    isBiasCorrected)    {    incMoment    =    isBiasCorrected;    }    else    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    (    	non-compiled	[CE]  ')'  expected	186	None	replace
372	[BUG]  [BUGGY]  while(isBiasCorrected  &&  isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  while(isBiasCorrected  &&  isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	while(isBiasCorrected  &&  isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
373	[BUG]  [BUGGY]  while(isBiasCorrected  &&  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  while(isBiasCorrected  &&  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	while(isBiasCorrected  &&  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
374	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(test(values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  begin,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	if(test(values,    begin,    length))    {    var    =    0.0;    }    if(test(values,  begin,  length))  {  var  =  0.0;  }	  	compilable	  [FE]  AssertionError  	44	1	add
375	[BUG]  [BUGGY]  if(test(values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  begin,  length))  {  var  =  0.0;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(test(values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  begin,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(test(values,    begin,    length))    {    var    =    0.0;    }    if(test(values,  begin,  length))  {  var  =  0.0;  }	  	compilable	  [FE]  AssertionError  	44	1	add
376	[BUG]  [BUGGY]  if(test(values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  start,  length))  {  var  =  0.0;  }  [CE]  cannot  find  symbol  start  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(test(values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  start,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(test(values,    begin,    length))    {    var    =    0.0;    }    if(test(values,  start,  length))  {  var  =  0.0;  }	  	non-compiled	[CE]  cannot  find  symbol  start	44	None	add
377	[BUG]  [BUGGY]  if(test(values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  beginning,  length))  {  var  =  0.0;  }  [CE]  cannot  find  symbol  beginning  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(test(values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  beginning,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(test(values,    begin,    length))    {    var    =    0.0;    }    if(test(values,  beginning,  length))  {  var  =  0.0;  }	  	non-compiled	[CE]  cannot  find  symbol  beginning	44	None	add
378	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(test(values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  begin,  length))  {  var  =  0.00;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	if(test(values,    begin,    length))    {    var    =    0.0;    }    if(test(values,  begin,  length))  {  var  =  0.00;  }	  	compilable	  [FE]  AssertionError  	44	1	add
379	[BUG]  [BUGGY]  if(test(values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  begin,  length))  {  var  =  0.00;  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(test(values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  begin,  length))  {  var  =  0.00;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(test(values,    begin,    length))    {    var    =    0.0;    }    if(test(values,  begin,  length))  {  var  =  0.00;  }	  	compilable	  [FE]  AssertionError  	44	1	add
380	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected.doubleValue();  [CE]  boolean  cannot  be  dereferenced  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected.doubleValue();  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment  =  isBiasCorrected.doubleValue();	          incMoment    =    isBiasCorrected;    incMoment    =    isBiasCorrected.doubleValue();    	non-compiled	[CE]  boolean  cannot  be  dereferenced	154	None	replace
381	[BUG]  [BUGGY]  varMoment  =  isBiasCorrected.doubleValue();  [CE]  cannot  find  symbol  varMoment  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  varMoment  =  isBiasCorrected.doubleValue();  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	varMoment  =  isBiasCorrected.doubleValue();	          incMoment    =    isBiasCorrected;    incMoment    =    isBiasCorrected.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  varMoment	154	None	replace
382	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(length!=  1)  {  }  else  if(length!=  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}    else    if(length!=    1)    {    }  else  if(length!=  1)  {	  	compilable	  [FE]  AssertionError  	109	2	add
383	[BUG]  [BUGGY]  }  else  if(length!=  1)  {  }  else  if(length!=  1)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(length!=  1)  {  }  else  if(length!=  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length!=    1)    {    }  else  if(length!=  1)  {	  	compilable	  [FE]  AssertionError  	109	2	add
384	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(length!=  1)  {  }  else  if(length  >=  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}    else    if(length!=    1)    {    }  else  if(length  >=  1)  {	  	compilable	  [FE]  AssertionError  	109	2	add
385	[BUG]  [BUGGY]  }  else  if(length!=  1)  {  }  else  if(length  >=  1)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(length!=  1)  {  }  else  if(length  >=  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length!=    1)    {    }  else  if(length  >=  1)  {	  	compilable	  [FE]  AssertionError  	109	2	add
386	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(length!=  1)  {  }  else  if(length  ==  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}    else    if(length!=    1)    {    }  else  if(length  ==  1)  {	  	compilable	  [FE]  AssertionError  	109	2	add
387	[BUG]  [BUGGY]  }  else  if(length!=  1)  {  }  else  if(length  ==  1)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(length!=  1)  {  }  else  if(length  ==  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length!=    1)    {    }  else  if(length  ==  1)  {	  	compilable	  [FE]  AssertionError  	109	2	add
388	[BUG]  [BUGGY]  }  else  if(length!=  1)  {  }  else  if(length  >>  1)  {  [CE]  incompatible  types  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(length!=  1)  {  }  else  if(length  >>  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length!=    1)    {    }  else  if(length  >>  1)  {	  	non-compiled	[CE]  incompatible  types	109	None	add
389	[BUG]  [BUGGY]  }  else  if(length!=  1)  {  }  else  if(length  [Delete]  1)  {  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(length!=  1)  {  }  else  if(length  [Delete]  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length!=    1)    {    }  else  if(length  [Delete]  1)  {	  	non-compiled	[CE]  ')'  expected	109	None	add
390	[BUG]  [BUGGY]  int  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  (values[i]  *  amount);  }  [CE]  possible  loss  of  precision  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  int  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  (values[i]  *  amount);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	int  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  (values[i]  *  amount);  }	  double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    weights[i]    *    (values[i]    *    amount);    }    	non-compiled	[CE]  possible  loss  of  precision	119	None	replace
391	[BUG]  [BUGGY]  ||  incMoment)  {  values[i]  -  mean;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  ||  incMoment)  {  values[i]  -  mean;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	||  incMoment)  {  values[i]  -  mean;	  ||    isBiasCorrected)    {    values[i]    -    mean;    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
392	[BUG]  [BUGGY]  ||  isBiasCorrected)  {  values[i]  -  mean  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  ||  isBiasCorrected)  {  values[i]  -  mean  +  1;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	||  isBiasCorrected)  {  values[i]  -  mean  +  1;	  ||    isBiasCorrected)    {    values[i]    -    mean;    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
393	[BUG]  [BUGGY]  ||  isBiasCorrected)  {  values[i]  -=  mean;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  ||  isBiasCorrected)  {  values[i]  -=  mean;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	||  isBiasCorrected)  {  values[i]  -=  mean;	  ||    isBiasCorrected)    {    values[i]    -    mean;    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
394	[BUG]  [BUGGY]  int  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  mean);  }  [CE]  possible  loss  of  precision  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  int  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  mean);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	int  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  mean);  }	  double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    sumWts);    }    	non-compiled	[CE]  possible  loss  of  precision	177	None	replace
395	[BUG]  [BUGGY]  Double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  mean);  }  [CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  mean);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  mean);  }	  double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    sumWts);    }    	non-compiled	[CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	177	None	replace
396	[BUG]  [BUGGY]  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  mean);  }  [CE]  cannot  find  symbol  accum  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  mean);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  mean);  }	  double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    sumWts);    }    	non-compiled	[CE]  cannot  find  symbol  accum	177	None	replace
397	[BUG]  [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  sum);  }  [CE]  cannot  find  symbol  sum  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  sum);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  sum);  }	  double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  cannot  find  symbol  sum	131	None	replace
398	[BUG]  [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  value);  }  [CE]  cannot  find  symbol  value  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  value);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  value);  }	  double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  cannot  find  symbol  value	131	None	replace
399	[BUG]  [BUGGY]  varMoment  =  incMoment;  [CE]  cannot  find  symbol  varMoment  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  varMoment  =  incMoment;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	varMoment  =  incMoment;	  varMoment    =    isBiasCorrected;    	non-compiled	[CE]  cannot  find  symbol  varMoment	93	None	replace
400	[BUG]  [BUGGY]  double  varMoment  =  isBiasCorrected;  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double  varMoment  =  isBiasCorrected;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  varMoment  =  isBiasCorrected;	  varMoment    =    isBiasCorrected;    	non-compiled	[CE]  incompatible  types	93	None	replace
401	[BUG]  [BUGGY]  int[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i];  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  int[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	int[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i];  }	  double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  not  a  statement	143	None	replace
402	[BUG]  [BUGGY]  if(length  >  1)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i];  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  >  1)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  >  1)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i];  }	  double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  not  a  statement	143	None	replace
403	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  ==  1)  {  var  =  0.0;  }  if(length  ==  1)  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	if(length    ==    1)    {    var    =    0.0;    }    if(length  ==  1)  {  var  =  0.0;  }	  	compilable	  [FE]  AssertionError  	47	1	add
404	[BUG]  [BUGGY]  if(length  ==  1)  {  var  =  0.0;  }  if(length  ==  1)  {  var  =  0.0;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  ==  1)  {  var  =  0.0;  }  if(length  ==  1)  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length    ==    1)    {    var    =    0.0;    }    if(length  ==  1)  {  var  =  0.0;  }	  	compilable	  [FE]  AssertionError  	47	1	add
405	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  ==  1)  {  var  =  0.0;  }  if(length  >=  1)  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	if(length    ==    1)    {    var    =    0.0;    }    if(length  >=  1)  {  var  =  0.0;  }	  	compilable	  [FE]  AssertionError  	47	1	add
406	[BUG]  [BUGGY]  if(length  ==  1)  {  var  =  0.0;  }  if(length  >=  1)  {  var  =  0.0;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  ==  1)  {  var  =  0.0;  }  if(length  >=  1)  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length    ==    1)    {    var    =    0.0;    }    if(length  >=  1)  {  var  =  0.0;  }	  	compilable	  [FE]  AssertionError  	47	1	add
407	[BUG]  [BUGGY]  if(length  ==  1)  {  var  =  0.0;  }  if(length  {  1)  {  var  =  0.0;  }  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  ==  1)  {  var  =  0.0;  }  if(length  {  1)  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length    ==    1)    {    var    =    0.0;    }    if(length  {  1)  {  var  =  0.0;  }	  	non-compiled	[CE]  ')'  expected	47	None	add
408	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  ==  1)  {  var  =  0.0;  }  if(length!=  1)  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	if(length    ==    1)    {    var    =    0.0;    }    if(length!=  1)  {  var  =  0.0;  }	  	compilable	  [FE]  AssertionError  	47	1	add
409	[BUG]  [BUGGY]  if(length  ==  1)  {  var  =  0.0;  }  if(length!=  1)  {  var  =  0.0;  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  ==  1)  {  var  =  0.0;  }  if(length!=  1)  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length    ==    1)    {    var    =    0.0;    }    if(length!=  1)  {  var  =  0.0;  }	  	compilable	  [FE]  AssertionError  	47	1	add
410	[BUG]  [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i].doubleValue();  }  [CE]  variable  values  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i].doubleValue();  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i].doubleValue();  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i].doubleValue();    }    	non-compiled	[CE]  variable  values  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	180	None	replace
411	[BUG]  [BUGGY]  Double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i].doubleValue();  }  [CE]  variable  values  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i].doubleValue();  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i].doubleValue();  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i].doubleValue();    }    	non-compiled	[CE]  variable  values  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	180	None	replace
412	[BUG]  [BUGGY]  double[]  values  =  getValues();  for(int  i  =  start;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i].doubleValue();  }  [CE]  variable  values  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double[]  values  =  getValues();  for(int  i  =  start;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i].doubleValue();  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double[]  values  =  getValues();  for(int  i  =  start;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i].doubleValue();  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i].doubleValue();    }    	non-compiled	[CE]  variable  values  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	180	None	replace
413	[BUG]  [BUGGY]  Double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[0]  -  mean;  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[0]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[0]  -  mean;  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    start;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    }    	non-compiled	[CE]  not  a  statement	136	None	replace
414	[BUG]  [BUGGY]  Double[]  values  =  getValues();  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  values[i]  -  mean;  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Double[]  values  =  getValues();  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Double[]  values  =  getValues();  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  values[i]  -  mean;  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    start;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    }    	non-compiled	[CE]  not  a  statement	136	None	replace
415	[BUG]  [BUGGY]  if(length  ==  1)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  ==  1)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  ==  1)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }	  if(test(values,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
416	[BUG]  [BUGGY]  if(length  ==  1)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  ==  1)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  ==  1)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  }	  if(test(values,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
417	[BUG]  [BUGGY]  if(isBiasCorrected  ||  isBiasCorrected)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected  ||  isBiasCorrected)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected  ||  isBiasCorrected)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }	  if(incMoment)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	188	None	replace
418	[BUG]  [BUGGY]  if(isBiasCorrected  ||  incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected  ||  incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected  ||  incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }	  if(incMoment)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	188	None	replace
419	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }	  if(incMoment)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	188	None	replace
420	[BUG]  [BUGGY]  double  accum2  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [CE]  cannot  find  symbol  accum  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double  accum2  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  accum2  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }	  double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  cannot  find  symbol  accum	151	None	replace
421	[BUG]  [BUGGY]  if(length  >  1)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  >  1)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  >  1)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }	  double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
422	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  ==  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        ==        1)        {        }    else    if(length    >=    1)    {    }  else  if(length  ==  1)  {	  	compilable	  [FE]  AssertionError  	19	2	add
423	[BUG]  [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  ==  1)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  ==  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        ==        1)        {        }    else    if(length    >=    1)    {    }  else  if(length  ==  1)  {	  	compilable	  [FE]  AssertionError  	19	2	add
424	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  >=  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        ==        1)        {        }    else    if(length    >=    1)    {    }  else  if(length  >=  1)  {	  	compilable	  [FE]  AssertionError  	19	2	add
425	[BUG]  [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  >=  1)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  >=  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        ==        1)        {        }    else    if(length    >=    1)    {    }  else  if(length  >=  1)  {	  	compilable	  [FE]  AssertionError  	19	2	add
426	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  >=  1)  {  }  else  if(length!=  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        ==        1)        {        }    else    if(length    >=    1)    {    }  else  if(length!=  1)  {	  	compilable	  [FE]  AssertionError  	19	2	add
427	[BUG]  [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  >=  1)  {  }  else  if(length!=  1)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  >=  1)  {  }  else  if(length!=  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        ==        1)        {        }    else    if(length    >=    1)    {    }  else  if(length!=  1)  {	  	compilable	  [FE]  AssertionError  	19	2	add
428	[BUG]  [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  >>  1)  {  [CE]  incompatible  types  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  >>  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        ==        1)        {        }    else    if(length    >=    1)    {    }  else  if(length  >>  1)  {	  	non-compiled	[CE]  incompatible  types	19	None	add
429	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  ==  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        ==        1)        {        }    else    if(length    >=    1)    {    }  else  if(length  ==  2)  {	  	compilable	  [FE]  AssertionError  	19	2	add
430	[BUG]  [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  ==  2)  {  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  ==  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        ==        1)        {        }    else    if(length    >=    1)    {    }  else  if(length  ==  2)  {	  	compilable	  [FE]  AssertionError  	19	2	add
431	[BUG]  [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *	  if(incMoment)    {    if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[i]    *    	non-compiled	[CE]  not  a  statement	32	None	replace
432	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=	  if(incMoment)    {    if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[i]    *    	non-compiled	[CE]  not  a  statement	32	None	replace
433	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  [CE]  not  a  statement  [FE]                            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2	  if(incMoment)    {    if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[i]    *    	non-compiled	[CE]  not  a  statement	32	None	replace
434	[BUG]  [BUGGY]  if(length  >  2)  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  }  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  >  2)  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  >  2)  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  }	  if(length    ==    2)    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    value    	non-compiled	[CE]  ';'  expected	117	None	replace
435	[BUG]  [BUGGY]  if(length  ==  2)  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  }  [CE]  ';'  expected  [FE]                            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  ==  2)  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  ==  2)  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  }	  if(length    ==    2)    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    value    	non-compiled	[CE]  ';'  expected	117	None	replace
436	[BUG]  [BUGGY]  if(length  >  2)  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [CE]  ';'  expected  [FE]                              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  >  2)  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  >  2)  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value	  if(length    ==    2)    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    value    	non-compiled	[CE]  ';'  expected	117	None	replace
437	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(length  ==  2)  {  }  else  if(length  ==  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}    else    if(length    ==    2)    {    }  else  if(length  ==  2)  {	  	compilable	  [FE]  AssertionError  	1	1	add
438	[BUG]  [BUGGY]  }  else  if(length  ==  2)  {  }  else  if(length  ==  2)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(length  ==  2)  {  }  else  if(length  ==  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length    ==    2)    {    }  else  if(length  ==  2)  {	  	compilable	  [FE]  AssertionError  	1	1	add
439	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(length  ==  2)  {  }  else  if(length  >=  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}    else    if(length    ==    2)    {    }  else  if(length  >=  2)  {	  	compilable	  [FE]  AssertionError  	1	2	add
440	[BUG]  [BUGGY]  }  else  if(length  ==  2)  {  }  else  if(length  >=  2)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(length  ==  2)  {  }  else  if(length  >=  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length    ==    2)    {    }  else  if(length  >=  2)  {	  	compilable	  [FE]  AssertionError  	1	2	add
441	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(length  ==  2)  {  }  else  if(length!=  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}    else    if(length    ==    2)    {    }  else  if(length!=  2)  {	  	compilable	  [FE]  AssertionError  	1	2	add
442	[BUG]  [BUGGY]  }  else  if(length  ==  2)  {  }  else  if(length!=  2)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(length  ==  2)  {  }  else  if(length!=  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length    ==    2)    {    }  else  if(length!=  2)  {	  	compilable	  [FE]  AssertionError  	1	2	add
443	[BUG]  [BUGGY]  }  else  if(length  ==  2)  {  }  else  if(length  {  2)  {  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(length  ==  2)  {  }  else  if(length  {  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length    ==    2)    {    }  else  if(length  {  2)  {	  	non-compiled	[CE]  ')'  expected	1	None	add
444	[BUG]  [BUGGY]  }  else  if(length  ==  2)  {  }  else  if(length  >>  2)  {  [CE]  incompatible  types  [FE]            AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(length  ==  2)  {  }  else  if(length  >>  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length    ==    2)    {    }  else  if(length  >>  2)  {	  	non-compiled	[CE]  incompatible  types	1	None	add
445	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length!=  1)  {  }  else  if(length  >=  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        >=        1)        {        }    else    if(length!=    1)    {    }  else  if(length  >=  1)  {	  	compilable	  [FE]  AssertionError  	65	2	add
446	[BUG]  [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length!=  1)  {  }  else  if(length  >=  1)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length!=  1)  {  }  else  if(length  >=  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        >=        1)        {        }    else    if(length!=    1)    {    }  else  if(length  >=  1)  {	  	compilable	  [FE]  AssertionError  	65	2	add
447	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length!=  1)  {  }  else  if(length  ==  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        >=        1)        {        }    else    if(length!=    1)    {    }  else  if(length  ==  1)  {	  	compilable	  [FE]  AssertionError  	65	2	add
448	[BUG]  [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length!=  1)  {  }  else  if(length  ==  1)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length!=  1)  {  }  else  if(length  ==  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        >=        1)        {        }    else    if(length!=    1)    {    }  else  if(length  ==  1)  {	  	compilable	  [FE]  AssertionError  	65	2	add
449	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length!=  1)  {  }  else  if(length!=  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        >=        1)        {        }    else    if(length!=    1)    {    }  else  if(length!=  1)  {	  	compilable	  [FE]  AssertionError  	65	2	add
450	[BUG]  [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length!=  1)  {  }  else  if(length!=  1)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length!=  1)  {  }  else  if(length!=  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        >=        1)        {        }    else    if(length!=    1)    {    }  else  if(length!=  1)  {	  	compilable	  [FE]  AssertionError  	65	2	add
451	[BUG]  [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length!=  1)  {  }  else  if(length  >>  1)  {  [CE]  incompatible  types  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length!=  1)  {  }  else  if(length  >>  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        >=        1)        {        }    else    if(length!=    1)    {    }  else  if(length  >>  1)  {	  	non-compiled	[CE]  incompatible  types	65	None	add
452	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length!=  1)  {  }  else  if(length  >=  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        >=        1)        {        }    else    if(length!=    1)    {    }  else  if(length  >=  2)  {	  	compilable	  [FE]  AssertionError  	65	2	add
453	[BUG]  [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length!=  1)  {  }  else  if(length  >=  2)  {  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length!=  1)  {  }  else  if(length  >=  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        >=        1)        {        }    else    if(length!=    1)    {    }  else  if(length  >=  2)  {	  	compilable	  [FE]  AssertionError  	65	2	add
454	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >    2)    {    }  else  if(length  >  2)  {  }  else  if(length  >  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        >        2)        {        }    else    if(length    >    2)    {    }  else  if(length  >  2)  {	  	compilable	  [FE]  AssertionError  	23	2	add
455	[BUG]  [BUGGY]  }    else    if(length    >    2)    {    }  else  if(length  >  2)  {  }  else  if(length  >  2)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >    2)    {    }  else  if(length  >  2)  {  }  else  if(length  >  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        >        2)        {        }    else    if(length    >    2)    {    }  else  if(length  >  2)  {	  	compilable	  [FE]  AssertionError  	23	2	add
456	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >    2)    {    }  else  if(length  >  2)  {  }  else  if(length  >  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        >        2)        {        }    else    if(length    >    2)    {    }  else  if(length  >  1)  {	  	compilable	  [FE]  AssertionError  	23	2	add
457	[BUG]  [BUGGY]  }    else    if(length    >    2)    {    }  else  if(length  >  2)  {  }  else  if(length  >  1)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >    2)    {    }  else  if(length  >  2)  {  }  else  if(length  >  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        >        2)        {        }    else    if(length    >    2)    {    }  else  if(length  >  1)  {	  	compilable	  [FE]  AssertionError  	23	2	add
458	[BUG]  [BUGGY]  }    else    if(length    >    2)    {    }  else  if(length  >  2)  {  }  else  if(length  >  2  {  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >    2)    {    }  else  if(length  >  2)  {  }  else  if(length  >  2  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        >        2)        {        }    else    if(length    >    2)    {    }  else  if(length  >  2  {	  	non-compiled	[CE]  ')'  expected	23	None	add
459	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >    2)    {    }  else  if(length  >  2)  {  }  else  if(length  <  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        >        2)        {        }    else    if(length    >    2)    {    }  else  if(length  <  2)  {	  	compilable	  [FE]  AssertionError  	23	2	add
460	[BUG]  [BUGGY]  }    else    if(length    >    2)    {    }  else  if(length  >  2)  {  }  else  if(length  <  2)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >    2)    {    }  else  if(length  >  2)  {  }  else  if(length  <  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        >        2)        {        }    else    if(length    >    2)    {    }  else  if(length  <  2)  {	  	compilable	  [FE]  AssertionError  	23	2	add
461	[BUG]  [BUGGY]  int[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [CE]  variable  values  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  int[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	int[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }	  double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i];    }    	non-compiled	[CE]  variable  values  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	129	None	replace
462	[BUG]  [BUGGY]  if(length  >  1)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  >  1)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  >  1)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }	  double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
463	[BUG]  [BUGGY]  double[]  values  =  getValues();  [CE]  variable  values  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double[]  values  =  getValues();  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double[]  values  =  getValues();	  double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i];    }    	non-compiled	[CE]  variable  values  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	129	None	replace
464	[BUG]  [BUGGY]  if(incMoment)  {  if(isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }	  if(isBiasCorrected)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  illegal  start  of  expression	175	None	replace
465	[BUG]  [BUGGY]  if(incMoment)  {  if(isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  }	  if(isBiasCorrected)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  illegal  start  of  expression	175	None	replace
466	[BUG]  [BUGGY]  Context.checkMoment(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkMoment(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkMoment(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }	  if(isBiasCorrected)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  ';'  expected	175	None	replace
467	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	                incMoment        =        isBiasCorrected?        Boolean.TRUE        :        Boolean.FALSE;        incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;	  	compilable	  [FE]  AssertionError  	82	1	add
468	[BUG]  [BUGGY]          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                incMoment        =        isBiasCorrected?        Boolean.TRUE        :        Boolean.FALSE;        incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;	  	compilable	  [FE]  AssertionError  	82	1	add
469	[BUG]  [BUGGY]          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boo  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boo  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                incMoment        =        isBiasCorrected?        Boolean.TRUE        :        Boolean.FALSE;        incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boo	  	non-compiled	[CE]  ';'  expected	82	None	add
470	[BUG]  [BUGGY]          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.FALSE  [CE]  :  expected  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.FALSE  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                incMoment        =        isBiasCorrected?        Boolean.TRUE        :        Boolean.FALSE;        incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.FALSE	  	non-compiled	[CE]  :  expected	82	None	add
471	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	                incMoment        =        isBiasCorrected?        Boolean.TRUE        :        Boolean.FALSE;        incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;	  	compilable	  [FE]  AssertionError  	82	1	add
472	[BUG]  [BUGGY]          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                incMoment        =        isBiasCorrected?        Boolean.TRUE        :        Boolean.FALSE;        incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;	  	compilable	  [FE]  AssertionError  	82	1	add
473	[BUG]  [BUGGY]          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                incMoment        =        isBiasCorrected?        Boolean.TRUE        :        Boolean.FALSE;        incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.	  	non-compiled	[CE]  <identifier>  expected	82	None	add
474	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected?  1  :  var;  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected?  1  :  var;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment  =  isBiasCorrected?  1  :  var;	  incMoment    =    isBiasCorrected?    1    :    0;    	non-compiled	[CE]  incompatible  types	171	None	replace
475	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected?  1,  length  :  0;  [CE]  :  expected  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected?  1,  length  :  0;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment  =  isBiasCorrected?  1,  length  :  0;	  incMoment    =    isBiasCorrected?    1    :    0;    	non-compiled	[CE]  :  expected	171	None	replace
476	[BUG]  [BUGGY]  int[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  int[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	int[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }	  double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    }    	non-compiled	[CE]  not  a  statement	161	None	replace
477	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }	  double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    }    	non-compiled	[CE]  not  a  statement	161	None	replace
478	[BUG]  [BUGGY]  AssertionError.show(mean,  dev,  weights,  begin,  length);  [CE]  cannot  find  symbol  dev  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  AssertionError.show(mean,  dev,  weights,  begin,  length);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	AssertionError.show(mean,  dev,  weights,  begin,  length);	  AssertionError.show(accum,    dev,    weights,    begin,    length);    	non-compiled	[CE]  cannot  find  symbol  dev	13	None	replace
479	[BUG]  [BUGGY]  AssertionError.show(m2,  accum,  dev,  weights,  begin,  length);  [CE]  cannot  find  symbol  m2  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  AssertionError.show(m2,  accum,  dev,  weights,  begin,  length);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	AssertionError.show(m2,  accum,  dev,  weights,  begin,  length);	  AssertionError.show(accum,    dev,    weights,    begin,    length);    	non-compiled	[CE]  cannot  find  symbol  m2	13	None	replace
480	[BUG]  [BUGGY]  AssertionError.show(message,  dev,  weights,  begin,  length);  [CE]  cannot  find  symbol  message  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  AssertionError.show(message,  dev,  weights,  begin,  length);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	AssertionError.show(message,  dev,  weights,  begin,  length);	  AssertionError.show(accum,    dev,    weights,    begin,    length);    	non-compiled	[CE]  cannot  find  symbol  message	13	None	replace
481	[BUG]  [BUGGY]  double  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  [CE]  '.class'  expected  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *	          incMoment    =    isBiasCorrected;    if(incMoment    ==    isBiasCorrected)    {    incMoment    =    isBiasCorrected;    }    else    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    	non-compiled	[CE]  '.class'  expected	183	None	replace
482	[BUG]  [BUGGY]  accum2  =  values[i]  -  mean;  accum2  +=  values[i]  *  [CE]  '.class'  expected  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  =  values[i]  -  mean;  accum2  +=  values[i]  *  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  =  values[i]  -  mean;  accum2  +=  values[i]  *	          incMoment    =    isBiasCorrected;    if(incMoment    ==    isBiasCorrected)    {    incMoment    =    isBiasCorrected;    }    else    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    	non-compiled	[CE]  '.class'  expected	183	None	replace
483	[BUG]  [BUGGY]  accum2  +=  values[i]  *  [CE]  '.class'  expected  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  +=  values[i]  *  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  +=  values[i]  *	          incMoment    =    isBiasCorrected;    if(incMoment    ==    isBiasCorrected)    {    incMoment    =    isBiasCorrected;    }    else    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    	non-compiled	[CE]  '.class'  expected	183	None	replace
484	[BUG]  [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values	  if(incMoment)    {    if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[i]    *    values    	non-compiled	[CE]  not  a  statement	30	None	replace
485	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  >=  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        >=        1)        {        }    else    if(length    >=    1)    {    }  else  if(length  >=  1)  {	  	compilable	  [FE]  AssertionError  	60	2	add
486	[BUG]  [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  >=  1)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  >=  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        >=        1)        {        }    else    if(length    >=    1)    {    }  else  if(length  >=  1)  {	  	compilable	  [FE]  AssertionError  	60	2	add
487	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  ==  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        >=        1)        {        }    else    if(length    >=    1)    {    }  else  if(length  ==  1)  {	  	compilable	  [FE]  AssertionError  	60	2	add
488	[BUG]  [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  ==  1)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  ==  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        >=        1)        {        }    else    if(length    >=    1)    {    }  else  if(length  ==  1)  {	  	compilable	  [FE]  AssertionError  	60	2	add
489	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length  >=  1)  {  }  else  if(length!=  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        >=        1)        {        }    else    if(length    >=    1)    {    }  else  if(length!=  1)  {	  	compilable	  [FE]  AssertionError  	60	2	add
490	[BUG]  [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length  >=  1)  {  }  else  if(length!=  1)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length  >=  1)  {  }  else  if(length!=  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        >=        1)        {        }    else    if(length    >=    1)    {    }  else  if(length!=  1)  {	  	compilable	  [FE]  AssertionError  	60	2	add
491	[BUG]  [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  >>  1)  {  [CE]  incompatible  types  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  >>  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        >=        1)        {        }    else    if(length    >=    1)    {    }  else  if(length  >>  1)  {	  	non-compiled	[CE]  incompatible  types	60	None	add
492	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  >  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        >=        1)        {        }    else    if(length    >=    1)    {    }  else  if(length  >  1)  {	  	compilable	  [FE]  AssertionError  	60	2	add
493	[BUG]  [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  >  1)  {  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  >  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        >=        1)        {        }    else    if(length    >=    1)    {    }  else  if(length  >  1)  {	  	compilable	  [FE]  AssertionError  	60	2	add
494	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  var  =  0.0;  var  =  0.0;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	var    =    0.0;    var  =  0.0;	  	compilable	  [FE]  AssertionError  	42	1	add
495	[BUG]  [BUGGY]  var  =  0.0;  var  =  0.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  var  =  0.0;  var  =  0.0;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	var    =    0.0;    var  =  0.0;	  	compilable	  [FE]  AssertionError  	42	1	add
496	[BUG]  [BUGGY]  var  =  0.0;  var  =  0.0;  }  else  if(length  >  1)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (dev  *  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  var  =  0.0;  var  =  0.0;  }  else  if(length  >  1)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (dev  *  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	var    =    0.0;    var  =  0.0;  }  else  if(length  >  1)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (dev  *	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
497	[BUG]  [BUGGY]  var  =  0.0;  var  =  0.0;  }  else  if(length  >  1)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (dev  *  value);  accum  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  var  =  0.0;  var  =  0.0;  }  else  if(length  >  1)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (dev  *  value);  accum  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	var    =    0.0;    var  =  0.0;  }  else  if(length  >  1)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (dev  *  value);  accum	  	non-compiled	[CE]  not  a  statement	42	None	add
498	[BUG]  [BUGGY]  var  =  0.0;  var  =  0.0;  }  else  if(length  >  1)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (dev  *  value  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  var  =  0.0;  var  =  0.0;  }  else  if(length  >  1)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (dev  *  value  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	var    =    0.0;    var  =  0.0;  }  else  if(length  >  1)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (dev  *  value	  	non-compiled	[CE]  ')'  expected	42	None	add
499	[BUG]  [BUGGY]  var  =  0.0;  var  =  0.0;  }  else  if(length  >  1)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (dev  *  value);  [CE]  'else'  without  'if'  [FE]            AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  var  =  0.0;  var  =  0.0;  }  else  if(length  >  1)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (dev  *  value);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	var    =    0.0;    var  =  0.0;  }  else  if(length  >  1)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (dev  *  value);	  	non-compiled	[CE]  'else'  without  'if'	42	None	add
500	[BUG]  [BUGGY]  if(incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  }	  if(isBiasCorrected)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
501	[BUG]  [BUGGY]  if(incMoment)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  }	  if(isBiasCorrected)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
502	[BUG]  [BUGGY]  if(incMoment)  {  if(test(values,  weights,  begin,  length))  {  accum2  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(test(values,  weights,  begin,  length))  {  accum2  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(test(values,  weights,  begin,  length))  {  accum2  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  }	  if(isBiasCorrected)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
503	[BUG]  [BUGGY]  AssertionError.show(value,  accum2);  [CE]  cannot  find  symbol  value  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  AssertionError.show(value,  accum2);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	AssertionError.show(value,  accum2);	  AssertionError.show(accum2,    value);    	non-compiled	[CE]  cannot  find  symbol  value	90	None	replace
504	[BUG]  [BUGGY]  AssertionError.show(value,  accum);  [CE]  cannot  find  symbol  value  [FE]                            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  AssertionError.show(value,  accum);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	AssertionError.show(value,  accum);	  AssertionError.show(accum2,    value);    	non-compiled	[CE]  cannot  find  symbol  value	90	None	replace
505	[BUG]  [BUGGY]  AssertionError.show(mean,  value);  [CE]  cannot  find  symbol  value  [FE]                              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  AssertionError.show(mean,  value);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	AssertionError.show(mean,  value);	  AssertionError.show(accum2,    value);    	non-compiled	[CE]  cannot  find  symbol  value	90	None	replace
506	[BUG]  [BUGGY]  AssertionError.show(m2Value,  value);  [CE]  cannot  find  symbol  m2Value  [FE]                                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  AssertionError.show(m2Value,  value);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	AssertionError.show(m2Value,  value);	  AssertionError.show(accum2,    value);    	non-compiled	[CE]  cannot  find  symbol  m2Value	90	None	replace
507	[BUG]  [BUGGY]  accum  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  cannot  find  symbol  accum  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;	          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    accum    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  cannot  find  symbol  accum	84	None	replace
508	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	                if(test(values,        weights,        begin,        length))        {        var        =        0.0;        }        if(test(values,    values,    begin,    length))    {    var    =    0.0;    }    if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  begin,  length))  {  var  =  0.0;  }	  	compilable	  [FE]  AssertionError  	169	1	add
509	[BUG]  [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                if(test(values,        weights,        begin,        length))        {        var        =        0.0;        }        if(test(values,    values,    begin,    length))    {    var    =    0.0;    }    if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  begin,  length))  {  var  =  0.0;  }	  	compilable	  [FE]  AssertionError  	169	1	add
510	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	                if(test(values,        weights,        begin,        length))        {        var        =        0.0;        }        if(test(values,    values,    begin,    length))    {    var    =    0.0;    }    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  begin,  length))  {  var  =  0.0;  }	  	compilable	  [FE]  AssertionError  	169	1	add
511	[BUG]  [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                if(test(values,        weights,        begin,        length))        {        var        =        0.0;        }        if(test(values,    values,    begin,    length))    {    var    =    0.0;    }    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  begin,  length))  {  var  =  0.0;  }	  	compilable	  [FE]  AssertionError  	169	1	add
512	[BUG]  [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  start,  length))  {  var  =  0.0;  }  [CE]  cannot  find  symbol  start  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  start,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                if(test(values,        weights,        begin,        length))        {        var        =        0.0;        }        if(test(values,    values,    begin,    length))    {    var    =    0.0;    }    if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  start,  length))  {  var  =  0.0;  }	  	non-compiled	[CE]  cannot  find  symbol  start	169	None	add
513	[BUG]  [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  start,  length))  {  var  =  0.0;  }  [CE]  cannot  find  symbol  start  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  start,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                if(test(values,        weights,        begin,        length))        {        var        =        0.0;        }        if(test(values,    values,    begin,    length))    {    var    =    0.0;    }    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  start,  length))  {  var  =  0.0;  }	  	non-compiled	[CE]  cannot  find  symbol  start	169	None	add
514	[BUG]  [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  end,  length))  {  var  =  0.0;  }  [CE]  cannot  find  symbol  end  [FE]            AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  end,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                if(test(values,        weights,        begin,        length))        {        var        =        0.0;        }        if(test(values,    values,    begin,    length))    {    var    =    0.0;    }    if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  end,  length))  {  var  =  0.0;  }	  	non-compiled	[CE]  cannot  find  symbol  end	169	None	add
515	[BUG]  [BUGGY]  if(incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0  }	  if(isBiasCorrected)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0    	non-compiled	[CE]  ';'  expected	52	None	replace
516	[BUG]  [BUGGY]  if(incMoment)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0	  if(isBiasCorrected)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0    	non-compiled	[CE]  ';'  expected	52	None	replace
517	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected;    if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  incMoment  =  isBiasCorrected;  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	                incMoment        =        isBiasCorrected;        if(incMoment    ==    isBiasCorrected)    {    incMoment    =    isBiasCorrected;    }    incMoment  =  isBiasCorrected;  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }	  	compilable	  [FE]  AssertionError  	184	1	add
518	[BUG]  [BUGGY]          incMoment    =    isBiasCorrected;    if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  incMoment  =  isBiasCorrected;  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected;    if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  incMoment  =  isBiasCorrected;  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                incMoment        =        isBiasCorrected;        if(incMoment    ==    isBiasCorrected)    {    incMoment    =    isBiasCorrected;    }    incMoment  =  isBiasCorrected;  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }	  	compilable	  [FE]  AssertionError  	184	1	add
519	[BUG]  [BUGGY]          incMoment    =    isBiasCorrected;    if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  double  incMoment  =  isBiasCorrected;  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected;    if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  double  incMoment  =  isBiasCorrected;  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                incMoment        =        isBiasCorrected;        if(incMoment    ==    isBiasCorrected)    {    incMoment    =    isBiasCorrected;    }    double  incMoment  =  isBiasCorrected;  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }	  	non-compiled	[CE]  incompatible  types	184	None	add
520	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected;    if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	                incMoment        =        isBiasCorrected;        if(incMoment    ==    isBiasCorrected)    {    incMoment    =    isBiasCorrected;    }    if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }	  	compilable	  [FE]  AssertionError  	184	1	add
521	[BUG]  [BUGGY]          incMoment    =    isBiasCorrected;    if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected;    if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                incMoment        =        isBiasCorrected;        if(incMoment    ==    isBiasCorrected)    {    incMoment    =    isBiasCorrected;    }    if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }	  	compilable	  [FE]  AssertionError  	184	1	add
522	[BUG]  [BUGGY]          incMoment    =    isBiasCorrected;    if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  Integer  incMoment  =  isBiasCorrected;  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  [CE]  incompatible  types  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected;    if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  Integer  incMoment  =  isBiasCorrected;  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                incMoment        =        isBiasCorrected;        if(incMoment    ==    isBiasCorrected)    {    incMoment    =    isBiasCorrected;    }    Integer  incMoment  =  isBiasCorrected;  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }	  	non-compiled	[CE]  incompatible  types	184	None	add
523	[BUG]  [BUGGY]          incMoment    =    isBiasCorrected;    if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  accum2  =  isBiasCorrected;  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  [CE]  cannot  find  symbol  accum2  [FE]            AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected;    if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  accum2  =  isBiasCorrected;  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                incMoment        =        isBiasCorrected;        if(incMoment    ==    isBiasCorrected)    {    incMoment    =    isBiasCorrected;    }    accum2  =  isBiasCorrected;  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }	  	non-compiled	[CE]  cannot  find  symbol  accum2	184	None	add
524	[BUG]  [BUGGY]  if(length  >  1)  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  >  1)  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  >  1)  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }	  var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	189	None	replace
525	[BUG]  [BUGGY]  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum1  =  0.0;  }  [CE]  cannot  find  symbol  accum1  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum1  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum1  =  0.0;  }	  var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  cannot  find  symbol  accum1	189	None	replace
526	[BUG]  [BUGGY]  if(length  ==  1)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  ==  1)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  ==  1)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }	  if(test(values,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
527	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }	  if(test(values,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
528	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0	  if(test(values,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  ';'  expected	140	None	replace
529	[BUG]  [BUGGY]  nisipIsBiasCorrected  &&  incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  nisipIsBiasCorrected  &&  incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	nisipIsBiasCorrected  &&  incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }	  nisipIsBiasCorrected    &&    isBiasCorrected)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  not  a  statement	153	None	replace
530	[BUG]  [BUGGY]  nisipIsBiasCorrected  ||  isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  nisipIsBiasCorrected  ||  isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	nisipIsBiasCorrected  ||  isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }	  nisipIsBiasCorrected    &&    isBiasCorrected)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  not  a  statement	153	None	replace
531	[BUG]  [BUGGY]  nisipIsBiasCorrected  ||  isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  nisipIsBiasCorrected  ||  isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	nisipIsBiasCorrected  ||  isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }	  nisipIsBiasCorrected    &&    isBiasCorrected)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  not  a  statement	153	None	replace
532	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i];  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i];  }	  Context.checkState(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  ';'  expected	144	None	replace
533	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i]  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i]  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i]	  Context.checkState(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  ';'  expected	144	None	replace
534	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected,  incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected,  incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected,  incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values	  Context.checkState(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  ';'  expected	144	None	replace
535	[BUG]  [BUGGY]  var  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  var  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	var  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;	  var    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  incompatible  types	173	None	replace
536	[BUG]  [BUGGY]  var  =  incMoment?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  var  =  incMoment?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	var  =  incMoment?  Boolean.TRUE  :  Boolean.FALSE;	  var    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  incompatible  types	173	None	replace
537	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueW  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueW  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueW	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    valueW    	non-compiled	[CE]  ';'  expected	70	None	replace
538	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected,  incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueW  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected,  incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueW  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected,  incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueW	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    valueW    	non-compiled	[CE]  ';'  expected	70	None	replace
539	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected  ||  incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueW  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected  ||  incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueW  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected  ||  incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueW	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    valueW    	non-compiled	[CE]  ';'  expected	70	None	replace
540	[BUG]  [BUGGY]  Context.checkMoment(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkMoment(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkMoment(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }	  Context.checkMoment(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    }    	non-compiled	[CE]  ';'  expected	162	None	replace
541	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected,  incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected,  incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected,  incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }	  Context.checkMoment(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    }    	non-compiled	[CE]  ';'  expected	162	None	replace
542	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }	  Context.checkMoment(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    }    	non-compiled	[CE]  ';'  expected	162	None	replace
543	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[	  if(incMoment)    {    if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[    	non-compiled	[CE]  not  a  statement	31	None	replace
544	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  ==  1)  {  }  else  if(length  ==  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        ==        1)        {        }    else    if(length    ==    1)    {    }  else  if(length  ==  1)  {	  	compilable	  [FE]  AssertionError  	14	1	add
545	[BUG]  [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  ==  1)  {  }  else  if(length  ==  1)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  ==  1)  {  }  else  if(length  ==  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        ==        1)        {        }    else    if(length    ==    1)    {    }  else  if(length  ==  1)  {	  	compilable	  [FE]  AssertionError  	14	1	add
546	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  ==  1)  {  }  else  if(length  ==  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        ==        1)        {        }    else    if(length    ==    1)    {    }  else  if(length  ==  2)  {	  	compilable	  [FE]  AssertionError  	14	1	add
547	[BUG]  [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  ==  1)  {  }  else  if(length  ==  2)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  ==  1)  {  }  else  if(length  ==  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        ==        1)        {        }    else    if(length    ==    1)    {    }  else  if(length  ==  2)  {	  	compilable	  [FE]  AssertionError  	14	1	add
548	[BUG]  [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  ==  1)  {  }  else  if(length  {  1)  {  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  ==  1)  {  }  else  if(length  {  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        ==        1)        {        }    else    if(length    ==    1)    {    }  else  if(length  {  1)  {	  	non-compiled	[CE]  ')'  expected	14	None	add
549	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  ==  1)  {  }  else  if(length  >=  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        ==        1)        {        }    else    if(length    ==    1)    {    }  else  if(length  >=  1)  {	  	compilable	  [FE]  AssertionError  	14	2	add
550	[BUG]  [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  ==  1)  {  }  else  if(length  >=  1)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  ==  1)  {  }  else  if(length  >=  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        ==        1)        {        }    else    if(length    ==    1)    {    }  else  if(length  >=  1)  {	  	compilable	  [FE]  AssertionError  	14	2	add
551	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  ==  1)  {  }  else  if(length!=  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        ==        1)        {        }    else    if(length    ==    1)    {    }  else  if(length!=  1)  {	  	compilable	  [FE]  AssertionError  	14	2	add
552	[BUG]  [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  ==  1)  {  }  else  if(length!=  1)  {  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  ==  1)  {  }  else  if(length!=  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        ==        1)        {        }    else    if(length    ==    1)    {    }  else  if(length!=  1)  {	  	compilable	  [FE]  AssertionError  	14	2	add
553	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  2)  {  }  else  if(length  <  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        <        1)        {        }    else    if(length    <    2)    {    }  else  if(length  <  1)  {	  	compilable	  [FE]  AssertionError  	37	1	add
554	[BUG]  [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  2)  {  }  else  if(length  <  1)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  2)  {  }  else  if(length  <  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        <        1)        {        }    else    if(length    <    2)    {    }  else  if(length  <  1)  {	  	compilable	  [FE]  AssertionError  	37	1	add
555	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  2)  {  }  else  if(length  <  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        <        1)        {        }    else    if(length    <    2)    {    }  else  if(length  <  2)  {	  	compilable	  [FE]  AssertionError  	37	1	add
556	[BUG]  [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  2)  {  }  else  if(length  <  2)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  2)  {  }  else  if(length  <  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        <        1)        {        }    else    if(length    <    2)    {    }  else  if(length  <  2)  {	  	compilable	  [FE]  AssertionError  	37	1	add
557	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  2)  {  }  else  if(length  <  2  ||  isBiasCorrected)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        <        1)        {        }    else    if(length    <    2)    {    }  else  if(length  <  2  ||  isBiasCorrected)  {	  	compilable	  [FE]  AssertionError  	37	2	add
558	[BUG]  [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  2)  {  }  else  if(length  <  2  ||  isBiasCorrected)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  2)  {  }  else  if(length  <  2  ||  isBiasCorrected)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        <        1)        {        }    else    if(length    <    2)    {    }  else  if(length  <  2  ||  isBiasCorrected)  {	  	compilable	  [FE]  AssertionError  	37	2	add
559	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  2)  {  }  else  if(length  <  2  ||  isBiasCorrected())  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        <        1)        {        }    else    if(length    <    2)    {    }  else  if(length  <  2  ||  isBiasCorrected())  {	  	compilable	  [FE]  AssertionError  	37	2	add
560	[BUG]  [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  2)  {  }  else  if(length  <  2  ||  isBiasCorrected())  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  2)  {  }  else  if(length  <  2  ||  isBiasCorrected())  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        <        1)        {        }    else    if(length    <    2)    {    }  else  if(length  <  2  ||  isBiasCorrected())  {	  	compilable	  [FE]  AssertionError  	37	2	add
561	[BUG]  [BUGGY]  accum2  +=  values[i]  *  (dev  *  value  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  +=  values[i]  *  (dev  *  value  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  +=  values[i]  *  (dev  *  value	  accum2    +=    values[i]    *    value    	non-compiled	[CE]  ')'  expected	87	None	replace
562	[BUG]  [BUGGY]  accum2  +=  values[i]  *  var  >>  ';'  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  +=  values[i]  *  var  >>  ';'  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  +=  values[i]  *  var  >>  ';'	  accum2    +=    values[i]    *    value    	non-compiled	[CE]  ';'  expected	87	None	replace
563	[BUG]  [BUGGY]  accum2  +=  values[i]  *  var!=  ';'  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  +=  values[i]  *  var!=  ';'  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  +=  values[i]  *  var!=  ';'	  accum2    +=    values[i]    *    value    	non-compiled	[CE]  ';'  expected	87	None	replace
564	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	                if(test(values,        weights,        begin,        length))        {        var        =        0.0;        }        if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }	  	compilable	  [FE]  AssertionError  	104	1	add
565	[BUG]  [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                if(test(values,        weights,        begin,        length))        {        var        =        0.0;        }        if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }	  	compilable	  [FE]  AssertionError  	104	1	add
566	[BUG]  [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  start,  length))  {  var  =  0.0;  }  [CE]  cannot  find  symbol  start  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  start,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                if(test(values,        weights,        begin,        length))        {        var        =        0.0;        }        if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  start,  length))  {  var  =  0.0;  }	  	non-compiled	[CE]  cannot  find  symbol  start	104	None	add
567	[BUG]  [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  end,  length))  {  var  =  0.0;  }  [CE]  cannot  find  symbol  end  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  end,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                if(test(values,        weights,        begin,        length))        {        var        =        0.0;        }        if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  end,  length))  {  var  =  0.0;  }	  	non-compiled	[CE]  cannot  find  symbol  end	104	None	add
568	[BUG]  [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  start,  length))  {  var  =  0.0;  }  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [CE]  cannot  find  symbol  start  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  start,  length))  {  var  =  0.0;  }  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                if(test(values,        weights,        begin,        length))        {        var        =        0.0;        }        if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  weights,  start,  length))  {  var  =  0.0;  }  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }	  	non-compiled	[CE]  cannot  find  symbol  start	104	None	add
569	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	                if(test(values,        weights,        begin,        length))        {        var        =        0.0;        }        if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }	  	compilable	  [FE]  AssertionError  	104	1	add
570	[BUG]  [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                if(test(values,        weights,        begin,        length))        {        var        =        0.0;        }        if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }	  	compilable	  [FE]  AssertionError  	104	1	add
571	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  [CE]  '.class'  expected  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=	  if(incMoment)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    	non-compiled	[CE]  '.class'  expected	148	None	replace
572	[BUG]  [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[  [CE]  '.class'  expected  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[	  if(incMoment)    {    if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[    	non-compiled	[CE]  '.class'  expected	77	None	replace
573	[BUG]  [BUGGY]  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[  [CE]  '.class'  expected  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[	  if(incMoment)    {    if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[    	non-compiled	[CE]  '.class'  expected	77	None	replace
574	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [CE]  cannot  find  symbol  Context  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }	  Context.checkState(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  cannot  find  symbol  Context	73	None	replace
575	[BUG]  [BUGGY]  if(incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=	  if(incMoment)    {    if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[i]    *    	non-compiled	[CE]  not  a  statement	32	None	replace
576	[BUG]  [BUGGY]  Context.checkState(incMoment!=  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [CE]  cannot  find  symbol  Context  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(incMoment!=  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment!=  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  valueWts);  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    Accum    +=    values[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  cannot  find  symbol  Context	69	None	replace
577	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected?  1  :  0,  length;  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected?  1  :  0,  length;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment  =  isBiasCorrected?  1  :  0,  length;	  incMoment    =    isBiasCorrected?    1    :    0;    	non-compiled	[CE]  ';'  expected	171	None	replace
578	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  >=  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        ==        1)        {        }    else    if(length    >=    1)    {    }  else  if(length  >=  2)  {	  	compilable	  [FE]  AssertionError  	19	2	add
579	[BUG]  [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  >=  2)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  >=  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        ==        1)        {        }    else    if(length    >=    1)    {    }  else  if(length  >=  2)  {	  	compilable	  [FE]  AssertionError  	19	2	add
580	[BUG]  [BUGGY]  var  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  var  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE  +  1;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	var  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE  +  1;	  var    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	173	None	replace
581	[BUG]  [BUGGY]  var  =  0.0;  double  var  =  0.0;  [CE]  variable  var  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  var  =  0.0;  double  var  =  0.0;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	var    =    0.0;    double  var  =  0.0;	  	non-compiled	[CE]  variable  var  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	42	None	add
582	[BUG]  [BUGGY]  var  =  0.0;  int  var  =  0.0;  [CE]  variable  var  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  var  =  0.0;  int  var  =  0.0;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	var    =    0.0;    int  var  =  0.0;	  	non-compiled	[CE]  variable  var  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	42	None	add
583	[BUG]  [BUGGY]  var  =  0.0;  Var  var  =  0.0;  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  var  =  0.0;  Var  var  =  0.0;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	var    =    0.0;    Var  var  =  0.0;	  	non-compiled	[CE]  cannot  find  symbol	42	None	add
584	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  var  =  0.0;  var  =  0.00;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	var    =    0.0;    var  =  0.00;	  	compilable	  [FE]  AssertionError  	42	1	add
585	[BUG]  [BUGGY]  var  =  0.0;  var  =  0.00;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  var  =  0.0;  var  =  0.00;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	var    =    0.0;    var  =  0.00;	  	compilable	  [FE]  AssertionError  	42	1	add
586	[BUG]  [BUGGY]          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  }  double  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boo  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  }  double  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boo  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                incMoment        =        isBiasCorrected?        Boolean.TRUE        :        Boolean.FALSE;        if(isBiasCorrected)    {    incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    }    double  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boo	  	non-compiled	[CE]  ';'  expected	155	None	add
587	[BUG]  [BUGGY]          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  }  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  if(isBiasCorrected)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  }  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  if(isBiasCorrected)  {  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                incMoment        =        isBiasCorrected?        Boolean.TRUE        :        Boolean.FALSE;        if(isBiasCorrected)    {    incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    }    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  if(isBiasCorrected)  {	  	non-compiled	[CE]  illegal  start  of  expression	155	None	add
588	[BUG]  [BUGGY]  Context.checkMoment(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[1]  *  values[1];  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkMoment(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[1]  *  values[1];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkMoment(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[1]  *  values[1];  }	  Context.checkMoment(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[0]    *    values[i];    }    	non-compiled	[CE]  ';'  expected	74	None	replace
589	[BUG]  [BUGGY]  Context.checkState(incMoment!=  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  mean;  }  [CE]  cannot  find  symbol  Context  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(incMoment!=  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment!=  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  mean;  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    Accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  cannot  find  symbol  Context	81	None	replace
590	[BUG]  [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  weights[i]  *  mean;  }  [CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  weights[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  weights[i]  *  mean;  }	  double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    weights[i]    *    amount;    }    	non-compiled	[CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	120	None	replace
591	[BUG]  [BUGGY]  int  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  weights[i]  *  mean;  }  [CE]  possible  loss  of  precision  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  int  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  weights[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	int  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  weights[i]  *  mean;  }	  double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    weights[i]    *    amount;    }    	non-compiled	[CE]  possible  loss  of  precision	120	None	replace
592	[BUG]  [BUGGY]  if(length  ==  1)  {  if(test(values,  begin,  length))  {  var  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  ==  1)  {  if(test(values,  begin,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  ==  1)  {  if(test(values,  begin,  length))  {  var  =  0.0;  }	          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,    values,    begin,    length))    {    var    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
593	[BUG]  [BUGGY]  if(length  ==  1)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  ==  1)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  ==  1)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }	          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,    values,    begin,    length))    {    var    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
594	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }	  if(incMoment)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	188	None	replace
595	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0	  if(incMoment)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  ';'  expected	188	None	replace
596	[BUG]  [BUGGY]  if(length  ==  1)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  ==  1)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  ==  1)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value	  if(test(values,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    value    	non-compiled	[CE]  ';'  expected	115	None	replace
597	[BUG]  [BUGGY]  if(!incMoment)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(!incMoment)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(!incMoment)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value	  if(test(values,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    value    	non-compiled	[CE]  ';'  expected	115	None	replace
598	[BUG]  [BUGGY]  if(test(values,  mean,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(test(values,  mean,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(test(values,  mean,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value	  if(test(values,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    value    	non-compiled	[CE]  ';'  expected	115	None	replace
599	[BUG]  [BUGGY]  accum2  +=  weights[i]  *  (value  }  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  +=  weights[i]  *  (value  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  +=  weights[i]  *  (value  }	  accum2    +=    weights[i]    *    value    	non-compiled	[CE]  ')'  expected	88	None	replace
600	[BUG]  [BUGGY]  accum2  +=  weights[i]  *  (value  >>  ';')  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  +=  weights[i]  *  (value  >>  ';')  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  +=  weights[i]  *  (value  >>  ';')	  accum2    +=    weights[i]    *    value    	non-compiled	[CE]  ';'  expected	88	None	replace
601	[BUG]  [BUGGY]  accum2  +=  weights[i]  *  (value  >>  ';');  [CE]  cannot  find  symbol  accum2  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  +=  weights[i]  *  (value  >>  ';');  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  +=  weights[i]  *  (value  >>  ';');	  accum2    +=    weights[i]    *    value    	non-compiled	[CE]  cannot  find  symbol  accum2	88	None	replace
602	[BUG]  [BUGGY]  accum2  +=  weights[i]  *  (value!=  ';')  [CE]  ';'  expected  [FE]                            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  +=  weights[i]  *  (value!=  ';')  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  +=  weights[i]  *  (value!=  ';')	  accum2    +=    weights[i]    *    value    	non-compiled	[CE]  ';'  expected	88	None	replace
603	[BUG]  [BUGGY]  varMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FIELD;  [CE]  cannot  find  symbol  varMoment  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  varMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FIELD;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	varMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FIELD;	          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FIELD;    	non-compiled	[CE]  cannot  find  symbol  varMoment	86	None	replace
604	[BUG]  [BUGGY]  if(length  ==  2)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  ==  2)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  ==  2)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }	  if(test(values,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
605	[BUG]  [BUGGY]  if(length  ==  1)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  ==  1)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  ==  1)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }	  if(test(values,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
606	[BUG]  [BUGGY]  if(incMoment)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0  }	  if(isBiasCorrected)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0    	non-compiled	[CE]  ';'  expected	52	None	replace
607	[BUG]  [BUGGY]  accum2  =  Accum2.doubleValue();  [CE]  cannot  find  symbol  accum2  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  =  Accum2.doubleValue();  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  =  Accum2.doubleValue();	          incMoment    =    isBiasCorrected;    if(incMoment    ==    isBiasCorrected)    {    incMoment    =    isBiasCorrected;    }    else    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    (    	non-compiled	[CE]  cannot  find  symbol  accum2	186	None	replace
608	[BUG]  [BUGGY]  double  incMoment  =  isBiasCorrected;  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double  incMoment  =  isBiasCorrected;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  incMoment  =  isBiasCorrected;	          incMoment    =    isBiasCorrected;    if(incMoment    ==    isBiasCorrected)    {    incMoment    =    isBiasCorrected;    }    	non-compiled	[CE]  incompatible  types	185	None	replace
609	[BUG]  [BUGGY]  AssertionError.show(var,  value);  [CE]  cannot  find  symbol  value  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  AssertionError.show(var,  value);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	AssertionError.show(var,  value);	  AssertionError.show(accum2,    value);    	non-compiled	[CE]  cannot  find  symbol  value	90	None	replace
610	[BUG]  [BUGGY]  Context.checkState(incMoment  ||  isBiasCorrected());  [CE]  cannot  find  symbol  Context  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(incMoment  ||  isBiasCorrected());  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment  ||  isBiasCorrected());	  Context.checkState(isBiasCorrected());    	non-compiled	[CE]  cannot  find  symbol  Context	55	None	replace
611	[BUG]  [BUGGY]  if(test(values,  weights,  length))  {  var  =  0.0;  }  [CE]  no  suitable  method  found  for  test(double[],double[],int)  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(test(values,  weights,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(test(values,  weights,  length))  {  var  =  0.0;  }	  if(test(values,    begin,    length))    {    var    =    0.0;    }    	non-compiled	[CE]  no  suitable  method  found  for  test(double[],double[],int)	45	None	replace
612	[BUG]  [BUGGY]  if(length  >  2)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  >  2)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  >  2)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }	  if(length    ==    2)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
613	[BUG]  [BUGGY]  if(length  ==  2)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  ==  2)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  ==  2)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }	  if(length    ==    2)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
614	[BUG]  [BUGGY]  if(length  >  2)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  >  2)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  >  2)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }	  if(length    ==    2)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
615	[BUG]  [BUGGY]  if(length  ==  2)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  ==  2)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  ==  2)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }	  if(length    ==    2)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
616	[BUG]  [BUGGY]  if(length  ==  1)  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  ==  1)  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  ==  1)  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value	  if(length    ==    2)    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    value    	non-compiled	[CE]  ';'  expected	117	None	replace
617	[BUG]  [BUGGY]  if(length  <  2)  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [CE]  ';'  expected  [FE]                            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  <  2)  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  <  2)  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value	  if(length    ==    2)    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    value    	non-compiled	[CE]  ';'  expected	117	None	replace
618	[BUG]  [BUGGY]  if(length  >  1)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  >  1)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  >  1)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value	  if(length    ==    1)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    value    	non-compiled	[CE]  ';'  expected	114	None	replace
619	[BUG]  [BUGGY]  if(length  >  1)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  >  1)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  >  1)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value	  if(length    ==    1)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    value    	non-compiled	[CE]  ';'  expected	114	None	replace
620	[BUG]  [BUGGY]  if(length  ==  1)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  ==  1)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  ==  1)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value	  if(length    ==    1)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    value    	non-compiled	[CE]  ';'  expected	114	None	replace
621	[BUG]  [BUGGY]  if(length  ==  1)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  ==  1)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  ==  1)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value	  if(length    ==    1)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    value    	non-compiled	[CE]  ';'  expected	114	None	replace
622	[BUG]  [BUGGY]  if(length  ==  1)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  ==  1)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  ==  1)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }	  if(test(values,    mean,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
623	[BUG]  [BUGGY]  if(length  ==  2)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  ==  2)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  ==  2)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }	          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    If(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
624	[BUG]  [BUGGY]  if(length  ==  2)  {  if(test(values,  begin,  length))  {  var  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  ==  2)  {  if(test(values,  begin,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  ==  2)  {  if(test(values,  begin,  length))  {  var  =  0.0;  }	          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    If(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
625	[BUG]  [BUGGY]  if(length  >  1)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  >  1)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  >  1)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }	  if(length    ==    1)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
626	[BUG]  [BUGGY]  if(length  >  1)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  >  1)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  >  1)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }	  if(length    ==    1)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
627	[BUG]  [BUGGY]  if(length  ==  1)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  ==  1)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  ==  1)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }	  if(length    ==    1)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
628	[BUG]  [BUGGY]  if(length  ==  1)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  ==  1)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  ==  1)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }	  if(length    ==    1)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
629	[BUG]  [BUGGY]  if(incMoment)  {  if(isBiasCorrected)  {  values[0]  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[  [CE]  '.class'  expected  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(isBiasCorrected)  {  values[0]  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(isBiasCorrected)  {  values[0]  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[	  luate(values,    begin,    length))    {    if(isBiasCorrected)    {    values[0]    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[    	non-compiled	[CE]  '.class'  expected	138	None	replace
630	[BUG]  [BUGGY]  luate(values,  begin,  length))  {  if(!incMoment)  {  values[0]  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[  [CE]  ';'  expected  [FE]                            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  luate(values,  begin,  length))  {  if(!incMoment)  {  values[0]  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	luate(values,  begin,  length))  {  if(!incMoment)  {  values[0]  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[	  luate(values,    begin,    length))    {    if(isBiasCorrected)    {    values[0]    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[    	non-compiled	[CE]  ';'  expected	138	None	replace
631	[BUG]  [BUGGY]  if(incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values	  if(incMoment)    {    if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[    	non-compiled	[CE]  not  a  statement	31	None	replace
632	[BUG]  [BUGGY]  if(incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[  }	  if(incMoment)    {    if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[    	non-compiled	[CE]  not  a  statement	31	None	replace
633	[BUG]  [BUGGY]  if(length  >  2)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  >  2)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  >  2)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }	  if(length    ==    2)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    }    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
634	[BUG]  [BUGGY]  if(length  >  2)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  >  2)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  >  2)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }	  if(length    ==    2)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    }    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
635	[BUG]  [BUGGY]  boolean  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  boolean  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	boolean  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }	  ble    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  incompatible  types	152	None	replace
636	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(length!=  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}  else  if(length!=  2)  {	  }    else    if(length    >=    2)    {    	compilable	  [FE]  AssertionError  	92	1	replace
637	[BUG]  [BUGGY]  }  else  if(length!=  2)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(length!=  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}  else  if(length!=  2)  {	  }    else    if(length    >=    2)    {    	compilable	  [FE]  AssertionError  	92	1	replace
638	[BUG]  [BUGGY]  if(!incMoment)  {  if(accum  ==  0.0)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(!incMoment)  {  if(accum  ==  0.0)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(!incMoment)  {  if(accum  ==  0.0)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }	  if(accum2    ==    0.0)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
639	[BUG]  [BUGGY]  if(!incMoment)  {  if(accum  ==  0.0)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  [CE]  '.class'  expected  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(!incMoment)  {  if(accum  ==  0.0)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(!incMoment)  {  if(accum  ==  0.0)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =	  if(accum2    ==    0.0)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  '.class'  expected	166	None	replace
640	[BUG]  [BUGGY]  if(dev  ==  0.0)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(dev  ==  0.0)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(dev  ==  0.0)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }	  if(accum2    ==    0.0)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
641	[BUG]  [BUGGY]  if(length  ==  1)  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  ==  1)  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  ==  1)  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }	  var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	189	None	replace
642	[BUG]  [BUGGY]  if(length  ==  2)  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  ==  2)  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  ==  2)  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }	  var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	189	None	replace
643	[BUG]  [BUGGY]  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  }  [CE]  no  suitable  method  found  for  test(double[],double,int,int)  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(test(values,  mean,  begin,  length))  {  var  =  0.0;  }	          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,    weights,    beginning,    length))    {    var    =    0.0;    }    	non-compiled	[CE]  no  suitable  method  found  for  test(double[],double,int,int)	107	None	replace
644	[BUG]  [BUGGY]  if(!incMoment)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(!incMoment)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(!incMoment)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value	  if(test(values,    mean,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    value    	non-compiled	[CE]  ';'  expected	116	None	replace
645	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  >=  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        >=        1)        {        }    else    if(length    >=    1)    {    }  else  if(length  >=  2)  {	  	compilable	  [FE]  AssertionError  	60	2	add
646	[BUG]  [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  >=  2)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  >=  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        >=        1)        {        }    else    if(length    >=    1)    {    }  else  if(length  >=  2)  {	  	compilable	  [FE]  AssertionError  	60	2	add
647	[BUG]  [BUGGY]  long  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  ValueWts);  }  [CE]  possible  loss  of  precision  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  long  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  ValueWts);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	long  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  ValueWts);  }	  double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    ValueWts);    }    	non-compiled	[CE]  possible  loss  of  precision	178	None	replace
648	[BUG]  [BUGGY]  AssertionError.show(mean,  accum,  dev,  weights,  begin,  length);  [CE]  cannot  find  symbol  accum  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  AssertionError.show(mean,  accum,  dev,  weights,  begin,  length);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	AssertionError.show(mean,  accum,  dev,  weights,  begin,  length);	  AssertionError.show(accum,    dev,    weights,    begin,    length);    	non-compiled	[CE]  cannot  find  symbol  accum	13	None	replace
649	[BUG]  [BUGGY]  AssertionError.show(mean,  accum,  weights,  begin,  length);  [CE]  cannot  find  symbol  accum  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  AssertionError.show(mean,  accum,  weights,  begin,  length);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	AssertionError.show(mean,  accum,  weights,  begin,  length);	  AssertionError.show(accum,    dev,    weights,    begin,    length);    	non-compiled	[CE]  cannot  find  symbol  accum	13	None	replace
650	[BUG]  [BUGGY]  Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [CE]  cannot  find  symbol  Context  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  dev  =  values[i]  -  mean;  }	  Context.checkMoment(incMoment)    {    for(int    i    =    begin;    i    <    start    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  cannot  find  symbol  Context	56	None	replace
651	[BUG]  [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  *  mean;  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  *  mean;  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    *    mean;    }    	non-compiled	[CE]  not  a  statement	137	None	replace
652	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  *  mean;  }  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  *  mean;  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    *    mean;    }    	non-compiled	[CE]  ';'  expected	137	None	replace
653	[BUG]  [BUGGY]  double[]  values  =  getValues();  for(int  i  =  start;  i  <  begin  +  length;  i++)  {  values[i]  *  mean;  }  [CE]  not  a  statement  [FE]                            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double[]  values  =  getValues();  for(int  i  =  start;  i  <  begin  +  length;  i++)  {  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double[]  values  =  getValues();  for(int  i  =  start;  i  <  begin  +  length;  i++)  {  values[i]  *  mean;  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    *    mean;    }    	non-compiled	[CE]  not  a  statement	137	None	replace
654	[BUG]  [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  weights[i]  *  moment;  }  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  weights[i]  *  moment;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  weights[i]  *  moment;  }	  double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    weights[i]    *    valueWts;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	134	None	replace
655	[BUG]  [BUGGY]  Double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  weights[i]  *  mean;  }  [CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  weights[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  weights[i]  *  mean;  }	  double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    weights[i]    *    valueWts;    }    	non-compiled	[CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	134	None	replace
656	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  Accum2  +=  values[i]  *  values[i];  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  Accum2  +=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  Accum2  +=  values[i]  *  values[i];  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    Accum2    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  ';'  expected	145	None	replace
657	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  Accum2  +=  values[i]  *  values[i]  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  Accum2  +=  values[i]  *  values[i]  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  Accum2  +=  values[i]  *  values[i]	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    Accum2    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  ';'  expected	145	None	replace
658	[BUG]  [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  Accum2  +=  values[i]  *  values[i];  }  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  Accum2  +=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double[]  values  =  getValues();  for(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  Accum2  +=  values[i]  *  values[i];  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    Accum2    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  not  a  statement	145	None	replace
659	[BUG]  [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [CE]  variable  values  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double[]  values  =  getValues();  for(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i];    }    	non-compiled	[CE]  variable  values  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	76	None	replace
660	[BUG]  [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[0]  *  values[i];  }  [CE]  variable  values  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[0]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[0]  *  values[i];  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i];    }    	non-compiled	[CE]  variable  values  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	76	None	replace
661	[BUG]  [BUGGY]  long[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  long[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	long[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }	  double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    }    	non-compiled	[CE]  not  a  statement	161	None	replace
662	[BUG]  [BUGGY]  Double.POSITIVE_INFINITY;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Double.POSITIVE_INFINITY;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Double.POSITIVE_INFINITY;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }	  ble    accum    =    Double.POSITIVE_INFINITY;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  not  a  statement	132	None	replace
663	[BUG]  [BUGGY]  varMoment  =  isBiasCorrected;  varMoment  =  isBiasCorrected.doubleValue();  [CE]  cannot  find  symbol  varMoment  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  varMoment  =  isBiasCorrected;  varMoment  =  isBiasCorrected.doubleValue();  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	varMoment  =  isBiasCorrected;  varMoment  =  isBiasCorrected.doubleValue();	          incMoment    =    isBiasCorrected;    incMoment    =    isBiasCorrected.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  varMoment	154	None	replace
664	[BUG]  [BUGGY]  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  weights[i];  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  weights[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  weights[i];  }	  incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  not  a  statement	122	None	replace
665	[BUG]  [BUGGY]  }  else  if(length  <  2)  {  }  else  if(length  <  2  {  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(length  <  2)  {  }  else  if(length  <  2  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length    <    2)    {    }  else  if(length  <  2  {	  	non-compiled	[CE]  ')'  expected	40	None	add
666	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  false;  if(incMoment  ==  false)  {  incMoment  =  false;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	incMoment    =    false;    if(incMoment  ==  false)  {  incMoment  =  false;  }	  	compilable	  [FE]  AssertionError  	95	1	add
667	[BUG]  [BUGGY]  incMoment  =  false;  if(incMoment  ==  false)  {  incMoment  =  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  false;  if(incMoment  ==  false)  {  incMoment  =  false;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment    =    false;    if(incMoment  ==  false)  {  incMoment  =  false;  }	  	compilable	  [FE]  AssertionError  	95	1	add
668	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  false;  if(incMoment!=  false)  {  incMoment  =  false;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	incMoment    =    false;    if(incMoment!=  false)  {  incMoment  =  false;  }	  	compilable	  [FE]  AssertionError  	95	1	add
669	[BUG]  [BUGGY]  incMoment  =  false;  if(incMoment!=  false)  {  incMoment  =  false;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  false;  if(incMoment!=  false)  {  incMoment  =  false;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment    =    false;    if(incMoment!=  false)  {  incMoment  =  false;  }	  	compilable	  [FE]  AssertionError  	95	1	add
670	[BUG]  [BUGGY]  incMoment  =  false;  if(incMoment  >=  false)  {  incMoment  =  false;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  false;  if(incMoment  >=  false)  {  incMoment  =  false;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment    =    false;    if(incMoment  >=  false)  {  incMoment  =  false;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	95	None	add
671	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  false;  if(incMoment)  {  incMoment  =  false;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	incMoment    =    false;    if(incMoment)  {  incMoment  =  false;  }	  	compilable	  [FE]  AssertionError  	95	1	add
672	[BUG]  [BUGGY]  incMoment  =  false;  if(incMoment)  {  incMoment  =  false;  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  false;  if(incMoment)  {  incMoment  =  false;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment    =    false;    if(incMoment)  {  incMoment  =  false;  }	  	compilable	  [FE]  AssertionError  	95	1	add
673	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  >  1)  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	if(length  >  1)  {  var  =  0.0;  }	  if(length    ==    1)    {    var    =    0.0;    }    	compilable	  [FE]  AssertionError  	48	2	replace
674	[BUG]  [BUGGY]  if(length  >  1)  {  var  =  0.0;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  >  1)  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  >  1)  {  var  =  0.0;  }	  if(length    ==    1)    {    var    =    0.0;    }    	compilable	  [FE]  AssertionError  	48	2	replace
675	[BUG]  [BUGGY]  Context.checkState(incMoment  ==  isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(incMoment  ==  isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment  ==  isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }	  Context.checkState(incMoment)    {    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    amount);    }    	non-compiled	[CE]  ';'  expected	58	None	replace
676	[BUG]  [BUGGY]  Context.checkState(this.isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(this.isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(this.isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }	  Context.checkState(incMoment)    {    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    amount);    }    	non-compiled	[CE]  ';'  expected	58	None	replace
677	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected?  var  :  1;  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected?  var  :  1;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment  =  isBiasCorrected?  var  :  1;	  incMoment    =    var;    	non-compiled	[CE]  incompatible  types	94	None	replace
678	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(length!=  1)  {  }  else  if(length!=  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}    else    if(length!=    1)    {    }  else  if(length!=  2)  {	  	compilable	  [FE]  AssertionError  	109	2	add
679	[BUG]  [BUGGY]  }  else  if(length!=  1)  {  }  else  if(length!=  2)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(length!=  1)  {  }  else  if(length!=  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length!=    1)    {    }  else  if(length!=  2)  {	  	compilable	  [FE]  AssertionError  	109	2	add
680	[BUG]  [BUGGY]  if(incMoment)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  }	  if(isBiasCorrected)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
681	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }	  if(incMoment)    {    if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
682	[BUG]  [BUGGY]  accum2  =  1.0  -  values.doubleValue();  [CE]  cannot  find  symbol  accum2  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  =  1.0  -  values.doubleValue();  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  =  1.0  -  values.doubleValue();	  accum2    =    1.0    -    mean.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  accum2	167	None	replace
683	[BUG]  [BUGGY]  accum2  =  1.0  -  value.doubleValue();  [CE]  cannot  find  symbol  accum2  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  =  1.0  -  value.doubleValue();  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  =  1.0  -  value.doubleValue();	  accum2    =    1.0    -    mean.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  accum2	167	None	replace
684	[BUG]  [BUGGY]  var2  =  1.0  -  mean.doubleValue();  [CE]  cannot  find  symbol  var2  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  var2  =  1.0  -  mean.doubleValue();  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	var2  =  1.0  -  mean.doubleValue();	  accum2    =    1.0    -    mean.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  var2	167	None	replace
685	[BUG]  [BUGGY]  Context.checkState(incMoment  ==  isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(incMoment  ==  isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment  ==  isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }	  Context.checkState(incMoment)    {    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  ';'  expected	80	None	replace
686	[BUG]  [BUGGY]  Context.checkState(this.isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(this.isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(this.isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }	  Context.checkState(incMoment)    {    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  ';'  expected	80	None	replace
687	[BUG]  [BUGGY]  if(!incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(!incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(!incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }	          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,    weights,    start,    length))    {    var    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
688	[BUG]  [BUGGY]  MiscUtilities.checkState(incMoment  ||  isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  MiscUtilities.checkState(incMoment  ||  isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	MiscUtilities.checkState(incMoment  ||  isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }	  MiscUtilities.checkState(incMoment)&&    isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  ';'  expected	128	None	replace
689	[BUG]  [BUGGY]  MiscUtilities.checkState(this.incMoment)&&  isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  MiscUtilities.checkState(this.incMoment)&&  isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	MiscUtilities.checkState(this.incMoment)&&  isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }	  MiscUtilities.checkState(incMoment)&&    isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  not  a  statement	128	None	replace
690	[BUG]  [BUGGY]  Context.checkState(var  <  =  isBiasCorrected);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(var  <  =  isBiasCorrected);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(var  <  =  isBiasCorrected);	  Context.checkState(incMoment);    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
691	[BUG]  [BUGGY]  Context.checkState(var  <  =  var);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(var  <  =  var);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(var  <  =  var);	  Context.checkState(incMoment);    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
692	[BUG]  [BUGGY]  Context.checkState(var);  [CE]  cannot  find  symbol  Context  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(var);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(var);	  Context.checkState(incMoment);    	non-compiled	[CE]  cannot  find  symbol  Context	160	None	replace
693	[BUG]  [BUGGY]  Preconditions.checkState(!incMoment)  {  if(test(values,  begin,  length))  {  var  =  0.0;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Preconditions.checkState(!incMoment)  {  if(test(values,  begin,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Preconditions.checkState(!incMoment)  {  if(test(values,  begin,  length))  {  var  =  0.0;  }	          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    	non-compiled	[CE]  ';'  expected	105	None	replace
694	[BUG]  [BUGGY]  Preconditions.checkState(!incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Preconditions.checkState(!incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Preconditions.checkState(!incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }	          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    	non-compiled	[CE]  ';'  expected	105	None	replace
695	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(test(values,  begin,  length))  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}  else  if(test(values,  begin,  length))  {	  }    else    if(length    ==    1)    {    }    else    if(length    ==    2)    {    	compilable	  [FE]  AssertionError  	17	1	replace
696	[BUG]  [BUGGY]  }  else  if(test(values,  begin,  length))  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(test(values,  begin,  length))  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}  else  if(test(values,  begin,  length))  {	  }    else    if(length    ==    1)    {    }    else    if(length    ==    2)    {    	compilable	  [FE]  AssertionError  	17	1	replace
697	[BUG]  [BUGGY]  if(length  >  1)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  >  1)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  >  1)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }	  if(length    ==    1)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    }    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
698	[BUG]  [BUGGY]  if(length  >  1)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  >  1)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  >  1)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }	  if(length    ==    1)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    }    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
699	[BUG]  [BUGGY]  boolean  incMoment  =  isBiasCorrected;  Integer  incMoment  =  isBiasCorrected;  [CE]  variable  incMoment  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  boolean  incMoment  =  isBiasCorrected;  Integer  incMoment  =  isBiasCorrected;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	boolean  incMoment  =  isBiasCorrected;  Integer  incMoment  =  isBiasCorrected;	          incMoment    =    isBiasCorrected;    Integer    incMoment    =    isBiasCorrected;    	non-compiled	[CE]  variable  incMoment  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	8	None	replace
700	[BUG]  [BUGGY]  &&  isBiasCorrected)  {  values[i]  -  mean;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  &&  isBiasCorrected)  {  values[i]  -  mean;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	&&  isBiasCorrected)  {  values[i]  -  mean;	  ||    isBiasCorrected)    {    values[i]    -    mean;    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
701	[BUG]  [BUGGY]  boolean  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  boolean  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	boolean  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }	  MiscMoment    incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  ';'  expected	158	None	replace
702	[BUG]  [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i]  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i]  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i]	  if(incMoment)    {    if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i]    	non-compiled	[CE]  ';'  expected	78	None	replace
703	[BUG]  [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i]  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i]  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i]  }	  if(incMoment)    {    if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i]    	non-compiled	[CE]  ';'  expected	78	None	replace
704	[BUG]  [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i]  >>  ';'  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i]  >>  ';'  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i]  >>  ';'	  if(incMoment)    {    if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i]    	non-compiled	[CE]  ';'  expected	78	None	replace
705	[BUG]  [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i]!=  ';'  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i]!=  ';'  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i]!=  ';'	  if(incMoment)    {    if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i]    	non-compiled	[CE]  ';'  expected	78	None	replace
706	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  values[i];  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  values[i];  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
707	[BUG]  [BUGGY]  accum2  =  values[i]  -  mean  +  length;  [CE]  cannot  find  symbol  accum2  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  =  values[i]  -  mean  +  length;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  =  values[i]  -  mean  +  length;	  accum2    =    values[i]    -    mean;    	non-compiled	[CE]  cannot  find  symbol  accum2	12	None	replace
708	[BUG]  [BUGGY]  accum2  =  value.doubleValue();  [CE]  cannot  find  symbol  accum2  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  =  value.doubleValue();  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  =  value.doubleValue();	  accum2    =    accum2.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  accum2	157	None	replace
709	[BUG]  [BUGGY]  accum2  =  var2.doubleValue();  [CE]  cannot  find  symbol  accum2  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  =  var2.doubleValue();  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  =  var2.doubleValue();	  accum2    =    accum2.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  accum2	157	None	replace
710	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length  ==  1)  {  }  else  if(length  >=  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        >=        1)        {        }    else    if(length    ==    1)    {    }  else  if(length  >=  2)  {	  	compilable	  [FE]  AssertionError  	63	2	add
711	[BUG]  [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length  ==  1)  {  }  else  if(length  >=  2)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length  ==  1)  {  }  else  if(length  >=  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        >=        1)        {        }    else    if(length    ==    1)    {    }  else  if(length  >=  2)  {	  	compilable	  [FE]  AssertionError  	63	2	add
712	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values	  Context.checkState(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  ';'  expected	144	None	replace
713	[BUG]  [BUGGY]  Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i];  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i];  }	  Context.checkState(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  not  a  statement	144	None	replace
714	[BUG]  [BUGGY]  Context.checkState(var  ==  isBiasCorrected);  [CE]  incomparable  types:  double  and  boolean  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(var  ==  isBiasCorrected);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(var  ==  isBiasCorrected);	  Context.checkState(isBiasCorrected);    	non-compiled	[CE]  incomparable  types:  double  and  boolean	54	None	replace
715	[BUG]  [BUGGY]  Context.checkState(var!=  null);  [CE]  incomparable  types:  double  and  <null>  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(var!=  null);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(var!=  null);	  Context.checkState(isBiasCorrected);    	non-compiled	[CE]  incomparable  types:  double  and  <null>	54	None	replace
716	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE  *  1;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE  *  1;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE  *  1;	  incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	146	None	replace
717	[BUG]  [BUGGY]  ||  incMoment)  {  values[1]  -  mean;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  ||  incMoment)  {  values[1]  -  mean;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	||  incMoment)  {  values[1]  -  mean;	  ||    isBiasCorrected)    {    values[0]    -    mean;    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
718	[BUG]  [BUGGY]  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  Accum2  +=  values[i]  *  values[i]  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  Accum2  +=  values[i]  *  values[i]  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  Accum2  +=  values[i]  *  values[i]	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[i]    *    values[i]    	non-compiled	[CE]  not  a  statement	168	None	replace
719	[BUG]  [BUGGY]  Context.checkMoment(isBiasCorrected  ||  isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkMoment(isBiasCorrected  ||  isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkMoment(isBiasCorrected  ||  isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }	  Context.checkMoment(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    }    	non-compiled	[CE]  ';'  expected	162	None	replace
720	[BUG]  [BUGGY]  Context.checkMoment(isBiasCorrected  ||  incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkMoment(isBiasCorrected  ||  incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkMoment(isBiasCorrected  ||  incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }	  Context.checkMoment(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    }    	non-compiled	[CE]  ';'  expected	162	None	replace
721	[BUG]  [BUGGY]  Context.checkMoment(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  start;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkMoment(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  start;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkMoment(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  start;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }	  Context.checkMoment(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    }    	non-compiled	[CE]  ';'  expected	162	None	replace
722	[BUG]  [BUGGY]  nisipIsBiasCorrected  &&  isBiasCorrected)  {  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  nisipIsBiasCorrected  &&  isBiasCorrected)  {  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	nisipIsBiasCorrected  &&  isBiasCorrected)  {	  nisipIsBiasCorrected    &&    isBiasCorrected)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  not  a  statement	153	None	replace
723	[BUG]  [BUGGY]  nisipIsBiasCorrected  &&  isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  nisipIsBiasCorrected  &&  isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	nisipIsBiasCorrected  &&  isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }	  nisipIsBiasCorrected    &&    isBiasCorrected)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  not  a  statement	153	None	replace
724	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  1)  {  }  else  if(length  >  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        <        1)        {        }    else    if(length    <    1)    {    }  else  if(length  >  1)  {	  	compilable	  [FE]  AssertionError  	33	2	add
725	[BUG]  [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  1)  {  }  else  if(length  >  1)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  1)  {  }  else  if(length  >  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        <        1)        {        }    else    if(length    <    1)    {    }  else  if(length  >  1)  {	  	compilable	  [FE]  AssertionError  	33	2	add
726	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  1)  {  }  else  if(length  >=  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        <        1)        {        }    else    if(length    <    1)    {    }  else  if(length  >=  1)  {	  	compilable	  [FE]  AssertionError  	33	2	add
727	[BUG]  [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  1)  {  }  else  if(length  >=  1)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  1)  {  }  else  if(length  >=  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        <        1)        {        }    else    if(length    <    1)    {    }  else  if(length  >=  1)  {	  	compilable	  [FE]  AssertionError  	33	2	add
728	[BUG]  [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  1)  {  }  else  if(length  <  1  {  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  1)  {  }  else  if(length  <  1  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        <        1)        {        }    else    if(length    <    1)    {    }  else  if(length  <  1  {	  	non-compiled	[CE]  ')'  expected	33	None	add
729	[BUG]  [BUGGY]  Context.checkMoment(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  values[i];  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkMoment(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkMoment(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  values[i];  }	  Context.checkMoment(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  ';'  expected	72	None	replace
730	[BUG]  [BUGGY]  Context.checkState(incMoment  <  =  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(incMoment  <  =  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment  <  =  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }	  Context.checkMoment(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
731	[BUG]  [BUGGY]          incMoment    =    isBiasCorrected;    if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected;    if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                incMoment        =        isBiasCorrected;        if(incMoment    ==    isBiasCorrected)    {    incMoment    =    isBiasCorrected;    }    if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }	  	non-compiled	[CE]  illegal  start  of  expression	184	None	add
732	[BUG]  [BUGGY]          incMoment    =    isBiasCorrected;    if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCor  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected;    if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCor  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                incMoment        =        isBiasCorrected;        if(incMoment    ==    isBiasCorrected)    {    incMoment    =    isBiasCorrected;    }    if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCor	  	non-compiled	[CE]  ';'  expected	184	None	add
733	[BUG]  [BUGGY]  long  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  sum);  }  [CE]  possible  loss  of  precision  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  long  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  sum);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	long  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  sum);  }	  double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    sumWts);    }    	non-compiled	[CE]  possible  loss  of  precision	177	None	replace
734	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  isBiasCorrected  =  false;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(incMoment)  {  isBiasCorrected  =  false;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment)  {  isBiasCorrected  =  false;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }	  if(isBiasCorrected)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  ';'  expected	175	None	replace
735	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  isBiasCorrected  =  true;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(incMoment)  {  isBiasCorrected  =  true;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment)  {  isBiasCorrected  =  true;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }	  if(isBiasCorrected)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  ';'  expected	175	None	replace
736	[BUG]  [BUGGY]  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i].doubleValue();  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i].doubleValue();  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i].doubleValue();  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i].doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	180	None	replace
737	[BUG]  [BUGGY]  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i].doubleValu  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i].doubleValu  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i].doubleValu	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i].doubleValue();    }    	non-compiled	[CE]  ';'  expected	180	None	replace
738	[BUG]  [BUGGY]  if(isBiasCorrected)  {  incMoment  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i].doubleValue();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  incMoment  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i].doubleValue();  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  incMoment  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i].doubleValue();  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i].doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	180	None	replace
739	[BUG]  [BUGGY]  if(test(values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  end,  length))  {  var  =  0.0;  }  [CE]  cannot  find  symbol  end  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(test(values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  end,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(test(values,    begin,    length))    {    var    =    0.0;    }    if(test(values,  end,  length))  {  var  =  0.0;  }	  	non-compiled	[CE]  cannot  find  symbol  end	44	None	add
740	[BUG]  [BUGGY]  accum2  +=  values[i]  *  (value  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  +=  values[i]  *  (value  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  +=  values[i]  *  (value  }	  accum2    +=    values[i]    *    value    	non-compiled	[CE]  ')'  expected	87	None	replace
741	[BUG]  [BUGGY]  accum2  +=  values[i]  *  (value  <  <  ';')  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  +=  values[i]  *  (value  <  <  ';')  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  +=  values[i]  *  (value  <  <  ';')	  accum2    +=    values[i]    *    value    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
742	[BUG]  [BUGGY]  ||  isBiasCorrected)  {  values[0]  -  mean;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  ||  isBiasCorrected)  {  values[0]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	||  isBiasCorrected)  {  values[0]  -  mean;  }	  ||    isBiasCorrected)    {    values[i]    -    mean;    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
743	[BUG]  [BUGGY]  &&  isBiasCorrected)  {  values[i]  -  mean;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  &&  isBiasCorrected)  {  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	&&  isBiasCorrected)  {  values[i]  -  mean;  }	  ||    isBiasCorrected)    {    values[i]    -    mean;    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
744	[BUG]  [BUGGY]          incMoment    =    isBiasCorrected;    incMoment  =  isBiasCorrected;  double  incMoment  =  isBiasCorrected;  incMoment  =  isBiasCorrected;  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected;    incMoment  =  isBiasCorrected;  double  incMoment  =  isBiasCorrected;  incMoment  =  isBiasCorrected;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                incMoment        =        isBiasCorrected;        incMoment    =    isBiasCorrected;    double  incMoment  =  isBiasCorrected;  incMoment  =  isBiasCorrected;	  	non-compiled	[CE]  incompatible  types	6	None	add
745	[BUG]  [BUGGY]          incMoment    =    isBiasCorrected;    incMoment  =  isBiasCorrected;  double  accum  =  isBiasCorrected;  incMoment  =  isBiasCorrected;  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected;    incMoment  =  isBiasCorrected;  double  accum  =  isBiasCorrected;  incMoment  =  isBiasCorrected;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                incMoment        =        isBiasCorrected;        incMoment    =    isBiasCorrected;    double  accum  =  isBiasCorrected;  incMoment  =  isBiasCorrected;	  	non-compiled	[CE]  incompatible  types	6	None	add
746	[BUG]  [BUGGY]  MiscMoment  incMoment)  {  for(int  i  =  start;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  *  mean;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  MiscMoment  incMoment)  {  for(int  i  =  start;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	MiscMoment  incMoment)  {  for(int  i  =  start;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  *  mean;  }	  MiscMoment    incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    *    mean;    }    	non-compiled	[CE]  ';'  expected	159	None	replace
747	[BUG]  [BUGGY]  }    else    if(length    >    2)    {    }  else  if(length  >  2)  {  else  if(length  >  2)  {  [CE]  'else'  without  'if'  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >    2)    {    }  else  if(length  >  2)  {  else  if(length  >  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        >        2)        {        }    else    if(length    >    2)    {    else  if(length  >  2)  {	  	non-compiled	[CE]  'else'  without  'if'	23	None	add
748	[BUG]  [BUGGY]  while(test(values,  begin,  length))  {  var  =  0.0;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  while(test(values,  begin,  length))  {  var  =  0.0;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	while(test(values,  begin,  length))  {  var  =  0.0;	          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    while(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
749	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    start;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    }    	non-compiled	[CE]  ';'  expected	136	None	replace
750	[BUG]  [BUGGY]  double[]  values  =  getValues();  for(int  i  =  start;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double[]  values  =  getValues();  for(int  i  =  start;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double[]  values  =  getValues();  for(int  i  =  start;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    start;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    }    	non-compiled	[CE]  not  a  statement	136	None	replace
751	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueW  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueW  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueW	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    valueW    	non-compiled	[CE]  ';'  expected	70	None	replace
752	[BUG]  [BUGGY]  Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueW  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueW  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueW	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    valueW    	non-compiled	[CE]  ')'  expected	70	None	replace
753	[BUG]  [BUGGY]  if(length  >  1)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  >  1)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  >  1)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }	  if(length    ==    1)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
754	[BUG]  [BUGGY]  if(length  >  1)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  >  1)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  >  1)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }	  if(length    ==    1)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
755	[BUG]  [BUGGY]  Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [CE]  cannot  find  symbol  Context  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    start    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  cannot  find  symbol  Context	71	None	replace
756	[BUG]  [BUGGY]  }  else  if(length  ==  2)  {  else  if(length  ==  2)  {  [CE]  'else'  without  'if'  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }  else  if(length  ==  2)  {  else  if(length  ==  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length    ==    2)    {    else  if(length  ==  2)  {	  	non-compiled	[CE]  'else'  without  'if'	1	None	add
757	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  Integer  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  Integer  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  Integer  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;	          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    Integer    incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  incompatible  types	111	None	replace
758	[BUG]  [BUGGY]  if(length  ==  2)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  ==  2)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  ==  2)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }	  if(test(values,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
759	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }	  if(incMoment)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
760	[BUG]  [BUGGY]  luate(values,  begin,  length))  {  if(incMoment)  {  Double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  luate(values,  begin,  length))  {  if(incMoment)  {  Double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	luate(values,  begin,  length))  {  if(incMoment)  {  Double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[	  if(incMoment)    {    Double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i];    }    	non-compiled	[CE]  ';'  expected	179	None	replace
761	[BUG]  [BUGGY]  luate(values,  begin,  length))  {  if(incMoment)  {  Double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  luate(values,  begin,  length))  {  if(incMoment)  {  Double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	luate(values,  begin,  length))  {  if(incMoment)  {  Double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values	  if(incMoment)    {    Double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i];    }    	non-compiled	[CE]  ';'  expected	179	None	replace
762	[BUG]  [BUGGY]  Context.checkState(incMoment!=  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  amount);  }  [CE]  cannot  find  symbol  Context  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(incMoment!=  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  amount);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment!=  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  amount);  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    Accum    +=    values[i]    *    (values[i]    *    amount);    }    	non-compiled	[CE]  cannot  find  symbol  Context	59	None	replace
763	[BUG]  [BUGGY]  accum2  =  Math.abs(values.length  -  mean);  [CE]  cannot  find  symbol  accum2  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  =  Math.abs(values.length  -  mean);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  =  Math.abs(values.length  -  mean);	  accum2    =    Math.abs(accum2    -    mean);    	non-compiled	[CE]  cannot  find  symbol  accum2	89	None	replace
764	[BUG]  [BUGGY]  accum2  =  Math.abs(values[var]  -  mean);  [CE]  cannot  find  symbol  accum2  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  =  Math.abs(values[var]  -  mean);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  =  Math.abs(values[var]  -  mean);	  accum2    =    Math.abs(accum2    -    mean);    	non-compiled	[CE]  cannot  find  symbol  accum2	89	None	replace
765	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  mean;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  mean;  }	  if(isBiasCorrected)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    weights[i]    *    mean;    }    	non-compiled	[CE]  ';'  expected	176	None	replace
766	[BUG]  [BUGGY]  MiscMoment  isBiasCorrected  =  isBiasCorrected;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  mean;  }  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  MiscMoment  isBiasCorrected  =  isBiasCorrected;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	MiscMoment  isBiasCorrected  =  isBiasCorrected;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  mean;  }	  if(isBiasCorrected)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    weights[i]    *    mean;    }    	non-compiled	[CE]  cannot  find  symbol	176	None	replace
767	[BUG]  [BUGGY]  ||  test(values,  weights,  length))  {  var  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  ||  test(values,  weights,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	||  test(values,  weights,  length))  {  var  =  0.0;  }	  ||    test(values,    begin,    length))    {    var    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
768	[BUG]  [BUGGY]          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                incMoment        =        isBiasCorrected?        Boolean.TRUE        :        Boolean.FALSE;        incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE	  	non-compiled	[CE]  ';'  expected	82	None	add
769	[BUG]  [BUGGY]          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  double  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  double  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                incMoment        =        isBiasCorrected?        Boolean.TRUE        :        Boolean.FALSE;        incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    double  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;	  	non-compiled	[CE]  incompatible  types	82	None	add
770	[BUG]  [BUGGY]  MiscUtilities.checkState(this.isBiasCorrected,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  MiscUtilities.checkState(this.isBiasCorrected,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	MiscUtilities.checkState(this.isBiasCorrected,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }	  MiscUtilities.checkState(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  ';'  expected	127	None	replace
771	[BUG]  [BUGGY]  MiscUtilities.checkState(incMoment  ==  isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  MiscUtilities.checkState(incMoment  ==  isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	MiscUtilities.checkState(incMoment  ==  isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }	  MiscUtilities.checkState(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  ';'  expected	127	None	replace
772	[BUG]  [BUGGY]  MiscUtilities.checkState(incMoment  ==  isBiasCorrected);  [CE]  cannot  find  symbol  MiscUtilities  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  MiscUtilities.checkState(incMoment  ==  isBiasCorrected);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	MiscUtilities.checkState(incMoment  ==  isBiasCorrected);	  MiscUtilities.checkState(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  cannot  find  symbol  MiscUtilities	127	None	replace
773	[BUG]  [BUGGY]  ble[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  ble[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	ble[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    start;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i];    }    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
774	[BUG]  [BUGGY]  ble[]  values  =  getValues();  for(int  i  =  start;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  ble[]  values  =  getValues();  for(int  i  =  start;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	ble[]  values  =  getValues();  for(int  i  =  start;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    start;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i];    }    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
775	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  2)  {  }  else  if(length  <  1)  {  }  else  if(length  <  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        <        1)        {        }    else    if(length    <    2)    {    }  else  if(length  <  1)  {  }  else  if(length  <  2)  {	  	compilable	  [FE]  AssertionError  	37	1	add
776	[BUG]  [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  2)  {  }  else  if(length  <  1)  {  }  else  if(length  <  2)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  2)  {  }  else  if(length  <  1)  {  }  else  if(length  <  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        <        1)        {        }    else    if(length    <    2)    {    }  else  if(length  <  1)  {  }  else  if(length  <  2)  {	  	compilable	  [FE]  AssertionError  	37	1	add
777	[BUG]  [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  2)  {  else  if(length  <  1)  {  }  else  if(length  <  2)  {  [CE]  'else'  without  'if'  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    <    1)    {    }  else  if(length  <  2)  {  else  if(length  <  1)  {  }  else  if(length  <  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        <        1)        {        }    else    if(length    <    2)    {    else  if(length  <  1)  {  }  else  if(length  <  2)  {	  	non-compiled	[CE]  'else'  without  'if'	37	None	add
778	[BUG]  [BUGGY]  if(incMoment)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }	  if(isBiasCorrected)    {    if(test(values,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
779	[BUG]  [BUGGY]  Context.checkState(incMoment  <  =  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(incMoment  <  =  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment  <  =  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }	  Context.checkMoment(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
780	[BUG]  [BUGGY]  double[]  values  =  getValues();  if(values!=  null)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double[]  values  =  getValues();  if(values!=  null)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double[]  values  =  getValues();  if(values!=  null)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }	  double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
781	[BUG]  [BUGGY]  Context.checkState(incMoment!=  isBiasCorrected);  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [CE]  cannot  find  symbol  Context  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(incMoment!=  isBiasCorrected);  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment!=  isBiasCorrected);  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    start    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  cannot  find  symbol  Context	71	None	replace
782	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE  /  1;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE  /  1;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE  /  1;	  incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	146	None	replace
783	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE,  var  +  1;  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE,  var  +  1;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE,  var  +  1;	  incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE    +    1;    	non-compiled	[CE]  ';'  expected	146	None	replace
784	[BUG]  [BUGGY]  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values	  if(incMoment)    {    if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[i]    *    values    	non-compiled	[CE]  not  a  statement	30	None	replace
785	[BUG]  [BUGGY]  if(!incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(!incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(!incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values	  if(incMoment)    {    if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[i]    *    values    	non-compiled	[CE]  not  a  statement	30	None	replace
786	[BUG]  [BUGGY]  double  dev  =  values[i]  -  mean;  [CE]  cannot  find  symbol  i  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double  dev  =  values[i]  -  mean;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  dev  =  values[i]  -  mean;	  MiscMoment    incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  cannot  find  symbol  i	158	None	replace
787	[BUG]  [BUGGY]  if(!incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(!incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(!incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  }	  if(isBiasCorrected)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
788	[BUG]  [BUGGY]  if(incMoment)  {  if(test(values,  methods,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(test(values,  methods,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(test(values,  methods,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  }	  if(isBiasCorrected)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
789	[BUG]  [BUGGY]  if(incMoment)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value	  if(length    ==    1)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    value    	non-compiled	[CE]  ';'  expected	114	None	replace
790	[BUG]  [BUGGY]  if(incMoment)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value	  if(length    ==    1)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    value    	non-compiled	[CE]  ';'  expected	114	None	replace
791	[BUG]  [BUGGY]  if(incMoment)  {  if(test(values,  methods,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(test(values,  methods,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(test(values,  methods,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value	  if(length    ==    1)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    value    	non-compiled	[CE]  ';'  expected	114	None	replace
792	[BUG]  [BUGGY]  Context.checkState(accum  <  =  0.0);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  amount);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(accum  <  =  0.0);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  amount);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(accum  <  =  0.0);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  amount);  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    Accum    +=    values[i]    *    (values[i]    *    amount);    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
793	[BUG]  [BUGGY]  Context.checkState(accum  <  0.0);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  amount);  }  [CE]  cannot  find  symbol  accum  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(accum  <  0.0);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  amount);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(accum  <  0.0);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  amount);  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    Accum    +=    values[i]    *    (values[i]    *    amount);    }    	non-compiled	[CE]  cannot  find  symbol  accum	59	None	replace
794	[BUG]  [BUGGY]  Context.checkState(accum  >  incMoment)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  amount);  }  [CE]  ';'  expected  [FE]                            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(accum  >  incMoment)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  amount);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(accum  >  incMoment)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  amount);  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    Accum    +=    values[i]    *    (values[i]    *    amount);    }    	non-compiled	[CE]  ';'  expected	59	None	replace
795	[BUG]  [BUGGY]  }    else    if(length    >    2)    {    }  else  if(length  >  2)  {  }  else  if(length  {  2)  {  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >    2)    {    }  else  if(length  >  2)  {  }  else  if(length  {  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        >        2)        {        }    else    if(length    >    2)    {    }  else  if(length  {  2)  {	  	non-compiled	[CE]  ')'  expected	23	None	add
796	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected;    if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  var  =  Double.NaN;  incMoment  =  isBiasCorrected;  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	                incMoment        =        isBiasCorrected;        if(incMoment    ==    isBiasCorrected)    {    incMoment    =    isBiasCorrected;    }    var  =  Double.NaN;  incMoment  =  isBiasCorrected;  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }	  	compilable	  [FE]  AssertionError  	184	1	add
797	[BUG]  [BUGGY]          incMoment    =    isBiasCorrected;    if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  var  =  Double.NaN;  incMoment  =  isBiasCorrected;  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected;    if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  var  =  Double.NaN;  incMoment  =  isBiasCorrected;  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                incMoment        =        isBiasCorrected;        if(incMoment    ==    isBiasCorrected)    {    incMoment    =    isBiasCorrected;    }    var  =  Double.NaN;  incMoment  =  isBiasCorrected;  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }	  	compilable	  [FE]  AssertionError  	184	1	add
798	[BUG]  [BUGGY]  accum2  +=  weights[i]  *  (value  <  <  ';')  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  +=  weights[i]  *  (value  <  <  ';')  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  +=  weights[i]  *  (value  <  <  ';')	  accum2    +=    weights[i]    *    value    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
799	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  double  incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  double  incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment    =    isBiasCorrected?    Boolean.FALSE    :    Boolean.TRUE;    double  incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;	  	non-compiled	[CE]  incompatible  types	3	None	add
800	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.TRUE;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	incMoment    =    isBiasCorrected?    Boolean.FALSE    :    Boolean.TRUE;    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.TRUE;	  	compilable	  [FE]  AssertionError  	3	1	add
801	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.TRUE;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.TRUE;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment    =    isBiasCorrected?    Boolean.FALSE    :    Boolean.TRUE;    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.TRUE;	  	compilable	  [FE]  AssertionError  	3	1	add
802	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    while(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  while(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	                if(test(values,        weights,        begin,        length))        {        var        =        0.0;        }        while(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  while(test(values,  weights,  begin,  length))  {  var  =  0.0;  }	  	compilable	  [FE]  AssertionError  	124	1	add
803	[BUG]  [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    while(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  while(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    while(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  while(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                if(test(values,        weights,        begin,        length))        {        var        =        0.0;        }        while(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  while(test(values,  weights,  begin,  length))  {  var  =  0.0;  }	  	compilable	  [FE]  AssertionError  	124	1	add
804	[BUG]  [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  mean;  }  [CE]  cannot  find  symbol  Accum  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  mean;  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    Accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  cannot  find  symbol  Accum	81	None	replace
805	[BUG]  [BUGGY]  Context.checkState(accum  <  =  0.0);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  mean;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(accum  <  =  0.0);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(accum  <  =  0.0);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  mean;  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    Accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
806	[BUG]  [BUGGY]  if(test(values,  weights,  begin,  length))  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(test(values,  weights,  begin,  length))  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(test(values,  weights,  begin,  length))  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }	  double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
807	[BUG]  [BUGGY]  if(test(values,  start,  length))  {  var  =  0.0;  }  [CE]  cannot  find  symbol  start  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(test(values,  start,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(test(values,  start,  length))  {  var  =  0.0;  }	          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,    weights,    start,    length))    {    var    =    0.0;    }    	non-compiled	[CE]  cannot  find  symbol  start	106	None	replace
808	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  [CE]  '.class'  expected  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=	  if(incMoment)    {    if(test(values,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    (dev    *    	non-compiled	[CE]  '.class'  expected	149	None	replace
809	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2	  if(incMoment)    {    if(test(values,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    (dev    *    	non-compiled	[CE]  not  a  statement	149	None	replace
810	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +  [CE]  '.class'  expected  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +	  if(incMoment)    {    if(test(values,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    (dev    *    	non-compiled	[CE]  '.class'  expected	149	None	replace
811	[BUG]  [BUGGY]  Context.checkState(incMoment!=  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [CE]  cannot  find  symbol  Context  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(incMoment!=  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment!=  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }	  Context.checkState(incMoment)    {    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  cannot  find  symbol  Context	80	None	replace
812	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected;    incMoment  =  isBiasCorrected;  incMoment  =  isBiasCorrected;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	                incMoment        =        isBiasCorrected;        incMoment    =    isBiasCorrected;    incMoment  =  isBiasCorrected;	  	compilable	  [FE]  AssertionError  	6	1	add
813	[BUG]  [BUGGY]          incMoment    =    isBiasCorrected;    incMoment  =  isBiasCorrected;  incMoment  =  isBiasCorrected;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected;    incMoment  =  isBiasCorrected;  incMoment  =  isBiasCorrected;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                incMoment        =        isBiasCorrected;        incMoment    =    isBiasCorrected;    incMoment  =  isBiasCorrected;	  	compilable	  [FE]  AssertionError  	6	1	add
814	[BUG]  [BUGGY]  incMoment)  {  sumWts  +=  values[0]  *  values[0];  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment)  {  sumWts  +=  values[0]  *  values[0];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment)  {  sumWts  +=  values[0]  *  values[0];  }	  incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  not  a  statement	122	None	replace
815	[BUG]  [BUGGY]  Context.checkMoment(isBiasCorrected);  [CE]  cannot  find  symbol  Context  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkMoment(isBiasCorrected);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkMoment(isBiasCorrected);	  Context.checkMoment(incMoment)    {    for(int    i    =    begin;    i    <    start    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  cannot  find  symbol  Context	56	None	replace
816	[BUG]  [BUGGY]  accum2  =  accum2  -  mean;  accum2  +=  values[i]  *  (  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  =  accum2  -  mean;  accum2  +=  values[i]  *  (  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  =  accum2  -  mean;  accum2  +=  values[i]  *  (	          incMoment    =    isBiasCorrected;    if(incMoment    ==    isBiasCorrected)    {    incMoment    =    isBiasCorrected;    }    else    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    (    	non-compiled	[CE]  ')'  expected	186	None	replace
817	[BUG]  [BUGGY]  if(test(values,  mean,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(test(values,  mean,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(test(values,  mean,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }	  if(test(values,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
818	[BUG]  [BUGGY]  if(incMoment)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }	  if(test(values,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
819	[BUG]  [BUGGY]  if(accum2  ==  0.0)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(accum2  ==  0.0)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(accum2  ==  0.0)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }	  if(test(values,    mean,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
820	[BUG]  [BUGGY]  Var  var  =  0.0;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Var  var  =  0.0;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Var  var  =  0.0;	          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,    values,    begin,    length))    {    var    =    0.0;    }    	non-compiled	[CE]  cannot  find  symbol	170	None	replace
821	[BUG]  [BUGGY]  MiscUtilities.checkState(incMoment)&&  dev!=  isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  MiscUtilities.checkState(incMoment)&&  dev!=  isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	MiscUtilities.checkState(incMoment)&&  dev!=  isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }	  MiscUtilities.checkState(incMoment)&&    isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  not  a  statement	128	None	replace
822	[BUG]  [BUGGY]  MiscUtilities.checkState(incMoment)&&  dev  ==  isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  MiscUtilities.checkState(incMoment)&&  dev  ==  isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	MiscUtilities.checkState(incMoment)&&  dev  ==  isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }	  MiscUtilities.checkState(incMoment)&&    isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  not  a  statement	128	None	replace
823	[BUG]  [BUGGY]  ||  incMoment)  {  var  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  ||  incMoment)  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	||  incMoment)  {  var  =  0.0;  }	  if(length    ==    1)    {    var    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
824	[BUG]  [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  values[i];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  values[i];  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    weights[i]    *    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
825	[BUG]  [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueW  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueW  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueW	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    valueW    	non-compiled	[CE]  ')'  expected	70	None	replace
826	[BUG]  [BUGGY]  nisipIsBiasCorrected  &&  incMoment)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  nisipIsBiasCorrected  &&  incMoment)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	nisipIsBiasCorrected  &&  incMoment)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }	  nisipIsBiasCorrected    &&    isBiasCorrected)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  not  a  statement	153	None	replace
827	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0	  if(incMoment)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  ';'  expected	164	None	replace
828	[BUG]  [BUGGY]  if(isBiasCorrected  ||  incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected  ||  incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected  ||  incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    start;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    }    	non-compiled	[CE]  not  a  statement	136	None	replace
829	[BUG]  [BUGGY]  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  *  mean;  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  *  mean;  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    start;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    }    	non-compiled	[CE]  not  a  statement	136	None	replace
830	[BUG]  [BUGGY]  if(isBiasCorrected  ||  incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected  ||  incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected  ||  incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    start;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
831	[BUG]  [BUGGY]  var  =  0.0;  incMoment  =  isBiasCorrected?  0.0  :  0.0;  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  var  =  0.0;  incMoment  =  isBiasCorrected?  0.0  :  0.0;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	var    =    0.0;    incMoment  =  isBiasCorrected?  0.0  :  0.0;	  	non-compiled	[CE]  incompatible  types	42	None	add
832	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  var  =  0.0;  incMoment  =  isBiasCorrected;  var  =  0.0;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	var    =    0.0;    incMoment  =  isBiasCorrected;  var  =  0.0;	  	compilable	  [FE]  AssertionError  	42	1	add
833	[BUG]  [BUGGY]  var  =  0.0;  incMoment  =  isBiasCorrected;  var  =  0.0;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  var  =  0.0;  incMoment  =  isBiasCorrected;  var  =  0.0;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	var    =    0.0;    incMoment  =  isBiasCorrected;  var  =  0.0;	  	compilable	  [FE]  AssertionError  	42	1	add
834	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  var  =  0.0;  incMoment  =  isBiasCorrected  ||  isBiasCorrected;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	var    =    0.0;    incMoment  =  isBiasCorrected  ||  isBiasCorrected;	  	compilable	  [FE]  AssertionError  	42	1	add
835	[BUG]  [BUGGY]  var  =  0.0;  incMoment  =  isBiasCorrected  ||  isBiasCorrected;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  var  =  0.0;  incMoment  =  isBiasCorrected  ||  isBiasCorrected;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	var    =    0.0;    incMoment  =  isBiasCorrected  ||  isBiasCorrected;	  	compilable	  [FE]  AssertionError  	42	1	add
836	[BUG]  [BUGGY]  var  =  0.0;  incMoment  =  isBiasCorrected?  Double.NaN  :  mean;  [CE]  incompatible  types  [FE]          AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  var  =  0.0;  incMoment  =  isBiasCorrected?  Double.NaN  :  mean;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	var    =    0.0;    incMoment  =  isBiasCorrected?  Double.NaN  :  mean;	  	non-compiled	[CE]  incompatible  types	42	None	add
837	[BUG]  [BUGGY]  if(incMoment)  {  if(test(values,  methods,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(test(values,  methods,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(test(values,  methods,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }	  if(length    ==    1)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
838	[BUG]  [BUGGY]  if(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i]  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i]  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i]  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[i]    *    values[i]    	non-compiled	[CE]  not  a  statement	168	None	replace
839	[BUG]  [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  mean;  }  [CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  mean;  }	  if(isBiasCorrected)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    weights[i]    *    mean;    }    	non-compiled	[CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	176	None	replace
840	[BUG]  [BUGGY]  MiscMoment  isBiasCorrected  =  false;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  mean;  }  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  MiscMoment  isBiasCorrected  =  false;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	MiscMoment  isBiasCorrected  =  false;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  mean;  }	  if(isBiasCorrected)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    weights[i]    *    mean;    }    	non-compiled	[CE]  cannot  find  symbol	176	None	replace
841	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  <  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        >=        1)        {        }    else    if(length    >=    1)    {    }  else  if(length  <  1)  {	  	compilable	  [FE]  AssertionError  	60	2	add
842	[BUG]  [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  <  1)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >=    1)    {    }  else  if(length  >=  1)  {  }  else  if(length  <  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        >=        1)        {        }    else    if(length    >=    1)    {    }  else  if(length  <  1)  {	  	compilable	  [FE]  AssertionError  	60	2	add
843	[BUG]  [BUGGY]  varMoment  =  incMoment?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  cannot  find  symbol  varMoment  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  varMoment  =  incMoment?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	varMoment  =  incMoment?  Boolean.TRUE  :  Boolean.FALSE;	  varMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  cannot  find  symbol  varMoment	5	None	replace
844	[BUG]  [BUGGY]  if(!incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i]  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(!incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i]  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(!incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i]	  if(incMoment)    {    if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i]    	non-compiled	[CE]  ';'  expected	78	None	replace
845	[BUG]  [BUGGY]  if(!incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i]  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(!incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i]  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(!incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i]  }	  if(incMoment)    {    if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i]    	non-compiled	[CE]  ';'  expected	78	None	replace
846	[BUG]  [BUGGY]  if(!incMoment)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(!incMoment)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(!incMoment)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }	  if(incMoment)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	188	None	replace
847	[BUG]  [BUGGY]  if(isBiasCorrected  ||  incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  *  mean;  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected  ||  incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected  ||  incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  *  mean;  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    *    mean;    }    	non-compiled	[CE]  not  a  statement	137	None	replace
848	[BUG]  [BUGGY]  double  dev  =  values[i]  *  mean;  [CE]  cannot  find  symbol  i  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double  dev  =  values[i]  *  mean;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  dev  =  values[i]  *  mean;	  MiscMoment    incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    *    mean;    }    	non-compiled	[CE]  cannot  find  symbol  i	159	None	replace
849	[BUG]  [BUGGY]  accum2  =  Accum.NaN;  [CE]  cannot  find  symbol  accum2  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  =  Accum.NaN;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  =  Accum.NaN;	          incMoment    =    isBiasCorrected;    if(incMoment    ==    isBiasCorrected)    {    incMoment    =    isBiasCorrected;    }    else    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    	non-compiled	[CE]  cannot  find  symbol  accum2	183	None	replace
850	[BUG]  [BUGGY]  accum2  =  accum;  [CE]  cannot  find  symbol  accum2  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  =  accum;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  =  accum;	          incMoment    =    isBiasCorrected;    if(incMoment    ==    isBiasCorrected)    {    incMoment    =    isBiasCorrected;    }    else    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    	non-compiled	[CE]  cannot  find  symbol  accum2	183	None	replace
851	[BUG]  [BUGGY]  Context.checkState(incMoment!=  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }  [CE]  cannot  find  symbol  Context  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(incMoment!=  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment!=  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    amount);    }    	non-compiled	[CE]  cannot  find  symbol  Context	57	None	replace
852	[BUG]  [BUGGY]  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *	  if(incMoment)    {    if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[i]    *    	non-compiled	[CE]  not  a  statement	32	None	replace
853	[BUG]  [BUGGY]  if(!incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(!incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(!incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *	  if(incMoment)    {    if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[i]    *    	non-compiled	[CE]  not  a  statement	32	None	replace
854	[BUG]  [BUGGY]  MiscMoment  isBiasCorrected  =  isBiasCorrected;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  MiscMoment  isBiasCorrected  =  isBiasCorrected;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	MiscMoment  isBiasCorrected  =  isBiasCorrected;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }	  if(isBiasCorrected)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  cannot  find  symbol	175	None	replace
855	[BUG]  [BUGGY]  MiscMoment  isBiasCorrected  =  false;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  MiscMoment  isBiasCorrected  =  false;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	MiscMoment  isBiasCorrected  =  false;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }	  if(isBiasCorrected)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  cannot  find  symbol	175	None	replace
856	[BUG]  [BUGGY]  Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }	  Context.checkMoment(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    }    	non-compiled	[CE]  not  a  statement	162	None	replace
857	[BUG]  [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  weights[i]  *  sum;  }  [CE]  cannot  find  symbol  sum  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  weights[i]  *  sum;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  weights[i]  *  sum;  }	  double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    weights[i]    *    valueWts;    }    	non-compiled	[CE]  cannot  find  symbol  sum	134	None	replace
858	[BUG]  [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  weights[i]  *  values[i];  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  weights[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  weights[i]  *  values[i];  }	  double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  not  a  statement	143	None	replace
859	[BUG]  [BUGGY]  ||  test(values,  var,  length))  {  var  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  ||  test(values,  var,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	||  test(values,  var,  length))  {  var  =  0.0;  }	  ||    test(values,    begin,    length))    {    var    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
860	[BUG]  [BUGGY]  ||  isBiasCorrected)  {  values[begin]  -  mean;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  ||  isBiasCorrected)  {  values[begin]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	||  isBiasCorrected)  {  values[begin]  -  mean;  }	  ||    isBiasCorrected)    {    values[i]    -    mean;    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
861	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected  *  1;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected  *  1;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment  =  isBiasCorrected  *  1;	  incMoment    =    isBiasCorrected    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	172	None	replace
862	[BUG]  [BUGGY]  Double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  Accum2  +=  values[i]  *  values[i];  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  Accum2  +=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  Accum2  +=  values[i]  *  values[i];  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    Accum2    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  not  a  statement	145	None	replace
863	[BUG]  [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  *  mean;  Accum2  +=  values[i]  *  values[i];  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  *  mean;  Accum2  +=  values[i]  *  values[i];  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  *  mean;  Accum2  +=  values[i]  *  values[i];  }	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    Accum2    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  not  a  statement	145	None	replace
864	[BUG]  [BUGGY]  Context.checkState(accum  <  =  0.0);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(accum  <  =  0.0);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(accum  <  =  0.0);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  valueWts);  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    Accum    +=    values[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
865	[BUG]  [BUGGY]  Context.checkState(accum  <  0.0);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [CE]  cannot  find  symbol  accum  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(accum  <  0.0);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(accum  <  0.0);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  valueWts);  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    Accum    +=    values[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  cannot  find  symbol  accum	69	None	replace
866	[BUG]  [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [CE]  cannot  find  symbol  Accum  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  valueWts);  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    Accum    +=    values[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  cannot  find  symbol  Accum	69	None	replace
867	[BUG]  [BUGGY]  if(incMoment)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0	  if(isBiasCorrected)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0    	non-compiled	[CE]  ';'  expected	52	None	replace
868	[BUG]  [BUGGY]  if(!incMoment)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(!incMoment)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(!incMoment)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }	  if(length    ==    1)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    }    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
869	[BUG]  [BUGGY]  if(incMoment)  {  if(test(values,  methods,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(test(values,  methods,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(test(values,  methods,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }	  if(length    ==    1)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    }    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
870	[BUG]  [BUGGY]  Context.checkState(incMoment!=  isBiasCorrected);  [CE]  cannot  find  symbol  Context  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(incMoment!=  isBiasCorrected);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment!=  isBiasCorrected);	  Context.checkState(incMoment);    	non-compiled	[CE]  cannot  find  symbol  Context	160	None	replace
871	[BUG]  [BUGGY]  if(isBiasCorrected  ||  incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i].doubleValu  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected  ||  incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i].doubleValu  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected  ||  incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i].doubleValu	  if(incMoment)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i].doubleValue();    }    	non-compiled	[CE]  ';'  expected	180	None	replace
872	[BUG]  [BUGGY]  if(incMoment  <  =  0.0)  {  incMoment  =  isBiasCorrected;  incMoment  =  isBiasCorrected;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment  <  =  0.0)  {  incMoment  =  isBiasCorrected;  incMoment  =  isBiasCorrected;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment  <  =  0.0)  {  incMoment  =  isBiasCorrected;  incMoment  =  isBiasCorrected;  }	          incMoment    =    isBiasCorrected;    incMoment    =    isBiasCorrected;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
873	[BUG]  [BUGGY]  if(incMoment  <  1)  {  incMoment  =  isBiasCorrected;  incMoment  =  isBiasCorrected;  }  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment  <  1)  {  incMoment  =  isBiasCorrected;  incMoment  =  isBiasCorrected;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment  <  1)  {  incMoment  =  isBiasCorrected;  incMoment  =  isBiasCorrected;  }	          incMoment    =    isBiasCorrected;    incMoment    =    isBiasCorrected;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	7	None	replace
874	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  ==  1)  {  }  else  if(length  <  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        ==        1)        {        }    else    if(length    ==    1)    {    }  else  if(length  <  1)  {	  	compilable	  [FE]  AssertionError  	14	1	add
875	[BUG]  [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  ==  1)  {  }  else  if(length  <  1)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  ==  1)  {  }  else  if(length  <  1)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        ==        1)        {        }    else    if(length    ==    1)    {    }  else  if(length  <  1)  {	  	compilable	  [FE]  AssertionError  	14	1	add
876	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  ==  1)  {  }  else  if(length  <  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        ==        1)        {        }    else    if(length    ==    1)    {    }  else  if(length  <  2)  {	  	compilable	  [FE]  AssertionError  	14	1	add
877	[BUG]  [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  ==  1)  {  }  else  if(length  <  2)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length  ==  1)  {  }  else  if(length  <  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        ==        1)        {        }    else    if(length    ==    1)    {    }  else  if(length  <  2)  {	  	compilable	  [FE]  AssertionError  	14	1	add
878	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >    2)    {    }  else  if(length  >  1)  {  }  else  if(length  <  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        >        2)        {        }    else    if(length    >    1)    {    }  else  if(length  <  2)  {	  	compilable	  [FE]  AssertionError  	26	2	add
879	[BUG]  [BUGGY]  }    else    if(length    >    2)    {    }  else  if(length  >  1)  {  }  else  if(length  <  2)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    >    2)    {    }  else  if(length  >  1)  {  }  else  if(length  <  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        >        2)        {        }    else    if(length    >    1)    {    }  else  if(length  <  2)  {	  	compilable	  [FE]  AssertionError  	26	2	add
880	[BUG]  [BUGGY]  if(!incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(!incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(!incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }	  if(length    ==    2)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    }    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
881	[BUG]  [BUGGY]  accum2  +=  values[i]  *  (dev  /  ')'  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  +=  values[i]  *  (dev  /  ')'  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  +=  values[i]  *  (dev  /  ')'	  accum2    +=    values[i]    *    (dev    *    	non-compiled	[CE]  ')'  expected	11	None	replace
882	[BUG]  [BUGGY]  accum  =  var.doubleValue();  [CE]  cannot  find  symbol  accum  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum  =  var.doubleValue();  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum  =  var.doubleValue();	  accum2    =    accum2.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  accum	157	None	replace
883	[BUG]  [BUGGY]  accum2  =  m2.doubleValue();  [CE]  cannot  find  symbol  accum2  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  =  m2.doubleValue();  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  =  m2.doubleValue();	  accum2    =    accum2.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  accum2	157	None	replace
884	[BUG]  [BUGGY]  accum2  =  v.doubleValue();  [CE]  cannot  find  symbol  accum2  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum2  =  v.doubleValue();  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  =  v.doubleValue();	  accum2    =    accum2.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  accum2	157	None	replace
885	[BUG]  [BUGGY]  if(incMoment)  {  if(test(values,  methods,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(test(values,  methods,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(test(values,  methods,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }	  if(isBiasCorrected)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
886	[BUG]  [BUGGY]  if(!incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(!incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(!incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[	  if(incMoment)    {    if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[    	non-compiled	[CE]  not  a  statement	31	None	replace
887	[BUG]  [BUGGY]  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[  }	  if(incMoment)    {    if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[    	non-compiled	[CE]  not  a  statement	31	None	replace
888	[BUG]  [BUGGY]  if(incMoment)  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }	  var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	189	None	replace
889	[BUG]  [BUGGY]  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  var  =  0.0;  }  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  var  =  0.0;  }	  var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  cannot  find  symbol	189	None	replace
890	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected?  false  :  false;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	incMoment  =  isBiasCorrected?  false  :  false;	  incMoment    =    false;    	compilable	  [FE]  AssertionError  	96	2	replace
891	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected?  false  :  false;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected?  false  :  false;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment  =  isBiasCorrected?  false  :  false;	  incMoment    =    false;    	compilable	  [FE]  AssertionError  	96	2	replace
892	[BUG]  [BUGGY]  MiscUtilities.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [CE]  cannot  find  symbol  MiscUtilities  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  MiscUtilities.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	MiscUtilities.checkState(incMoment  ==  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }	  MiscUtilities.checkState(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  cannot  find  symbol  MiscUtilities	127	None	replace
893	[BUG]  [BUGGY]  MiscUtilities.checkState(isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [CE]  cannot  find  symbol  MiscUtilities  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  MiscUtilities.checkState(isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	MiscUtilities.checkState(isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }	  MiscUtilities.checkState(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  cannot  find  symbol  MiscUtilities	127	None	replace
894	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	                incMoment        =        isBiasCorrected?        Boolean.TRUE        :        Boolean.FALSE;        incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;	  	compilable	  [FE]  AssertionError  	82	1	add
895	[BUG]  [BUGGY]          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                incMoment        =        isBiasCorrected?        Boolean.TRUE        :        Boolean.FALSE;        incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;	  	compilable	  [FE]  AssertionError  	82	1	add
896	[BUG]  [BUGGY]  if(isBiasCorrected)  {  incMoment  =  isBiasCorrected;  incMoment  =  isBiasCorrected.doubleValue();  }  [CE]  boolean  cannot  be  dereferenced  [FE]        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  incMoment  =  isBiasCorrected;  incMoment  =  isBiasCorrected.doubleValue();  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  incMoment  =  isBiasCorrected;  incMoment  =  isBiasCorrected.doubleValue();  }	          incMoment    =    isBiasCorrected;    incMoment    =    isBiasCorrected.doubleValue();    	non-compiled	[CE]  boolean  cannot  be  dereferenced	154	None	replace
897	[BUG]  [BUGGY]  if(isBiasCorrected)  {  incMoment  =  isBiasCorrected.doubleValue();  }  else  {  incMoment  =  isBiasCorrected.doubleValue();  }  [CE]  boolean  cannot  be  dereferenced  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(isBiasCorrected)  {  incMoment  =  isBiasCorrected.doubleValue();  }  else  {  incMoment  =  isBiasCorrected.doubleValue();  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  incMoment  =  isBiasCorrected.doubleValue();  }  else  {  incMoment  =  isBiasCorrected.doubleValue();  }	          incMoment    =    isBiasCorrected;    incMoment    =    isBiasCorrected.doubleValue();    	non-compiled	[CE]  boolean  cannot  be  dereferenced	154	None	replace
898	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  ==  1)  {  var  =  0.0;  }  if(length  ==  1)  {  var  =  0.;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	if(length    ==    1)    {    var    =    0.0;    }    if(length  ==  1)  {  var  =  0.;  }	  	compilable	  [FE]  AssertionError  	47	1	add
899	[BUG]  [BUGGY]  if(length  ==  1)  {  var  =  0.0;  }  if(length  ==  1)  {  var  =  0.;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(length  ==  1)  {  var  =  0.0;  }  if(length  ==  1)  {  var  =  0.;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length    ==    1)    {    var    =    0.0;    }    if(length  ==  1)  {  var  =  0.;  }	  	compilable	  [FE]  AssertionError  	47	1	add
900	[BUG]  [BUGGY]  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }	  if(test(values,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
901	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(test(values,  0,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	if(test(values,  0,  length))  {  var  =  0.0;  }	          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    If(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    	compilable	  [FE]  AssertionError  	108	2	replace
902	[BUG]  [BUGGY]  if(test(values,  0,  length))  {  var  =  0.0;  }  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(test(values,  0,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(test(values,  0,  length))  {  var  =  0.0;  }	          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    If(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    	compilable	  [FE]  AssertionError  	108	2	replace
903	[BUG]  [BUGGY]  var  :  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  var  :  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	var  :  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;	  incMoment    :    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  not  a  statement	174	None	replace
904	[BUG]  [BUGGY]  Context.checkState(incMoment!=  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [CE]  cannot  find  symbol  Context  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(incMoment!=  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment!=  isBiasCorrected);  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }	  Context.checkState(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  cannot  find  symbol  Context	68	None	replace
905	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected  ||  incMoment);  [CE]  cannot  find  symbol  Context  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  Context.checkState(isBiasCorrected  ||  incMoment);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected  ||  incMoment);	  Context.checkState(isBiasCorrected);    	non-compiled	[CE]  cannot  find  symbol  Context	54	None	replace
906	[BUG]  [BUGGY]  AssertionError.show(message,  accum2,  value);  [CE]  cannot  find  symbol  message  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  AssertionError.show(message,  accum2,  value);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	AssertionError.show(message,  accum2,  value);	  AssertionError.show(accum2,    value);    	non-compiled	[CE]  cannot  find  symbol  message	90	None	replace
907	[BUG]  [BUGGY]  AssertionError.show(mean,  accum,  dev,  begin,  length);  [CE]  cannot  find  symbol  accum  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  AssertionError.show(mean,  accum,  dev,  begin,  length);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	AssertionError.show(mean,  accum,  dev,  begin,  length);	  AssertionError.show(accum,    dev,    weights,    begin,    length);    	non-compiled	[CE]  cannot  find  symbol  accum	13	None	replace
908	[BUG]  [BUGGY]  AssertionError.show(m2Error,  accum,  dev,  begin,  length);  [CE]  cannot  find  symbol  m2Error  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  AssertionError.show(m2Error,  accum,  dev,  begin,  length);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	AssertionError.show(m2Error,  accum,  dev,  begin,  length);	  AssertionError.show(accum,    dev,    weights,    begin,    length);    	non-compiled	[CE]  cannot  find  symbol  m2Error	13	None	replace
909	[BUG]  [BUGGY]  AssertionError.show(mean,  dev,  values,  begin,  length);  [CE]  cannot  find  symbol  dev  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  AssertionError.show(mean,  dev,  values,  begin,  length);  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	AssertionError.show(mean,  dev,  values,  begin,  length);	  AssertionError.show(accum,    dev,    weights,    begin,    length);    	non-compiled	[CE]  cannot  find  symbol  dev	13	None	replace
910	[BUG]  [BUGGY]  if(incMoment)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  [CE]  '.class'  expected  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=	  if(incMoment)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    	non-compiled	[CE]  '.class'  expected	148	None	replace
911	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  0,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	                if(test(values,        weights,        begin,        length))        {        var        =        0.0;        }        if(test(values,    values,    begin,    length))    {    var    =    0.0;    }    if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  0,  length))  {  var  =  0.0;  }	  	compilable	  [FE]  AssertionError  	169	1	add
912	[BUG]  [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  0,  length))  {  var  =  0.0;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  0,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                if(test(values,        weights,        begin,        length))        {        var        =        0.0;        }        if(test(values,    values,    begin,    length))    {    var    =    0.0;    }    if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  0,  length))  {  var  =  0.0;  }	  	compilable	  [FE]  AssertionError  	169	1	add
913	[BUG]  [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  (values[i]  *  ValueWts);  }  [CE]  cannot  find  symbol  ValueWts  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  (values[i]  *  ValueWts);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  (values[i]  *  ValueWts);  }	  double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    ValueWts);    }    	non-compiled	[CE]  cannot  find  symbol  ValueWts	178	None	replace
914	[BUG]  [BUGGY]  if(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  ValueWts);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  ValueWts);  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  ValueWts);  }	  double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    ValueWts);    }    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
915	[BUG]  [BUGGY]  if(!incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[  [CE]  '.class'  expected  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(!incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(!incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[	  if(incMoment)    {    if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[    	non-compiled	[CE]  '.class'  expected	77	None	replace
916	[BUG]  [BUGGY]  if(test(values,  weights,  begin,  length))  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[  [CE]  '.class'  expected  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(test(values,  weights,  begin,  length))  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(test(values,  weights,  begin,  length))  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[	  if(incMoment)    {    if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[    	non-compiled	[CE]  '.class'  expected	77	None	replace
917	[BUG]  [BUGGY]  if(test(values,  weights,  begin,  length))  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(test(values,  weights,  begin,  length))  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(test(values,  weights,  begin,  length))  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values	  if(incMoment)    {    if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[    	non-compiled	[CE]  ';'  expected	77	None	replace
918	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length!=  1)  {  }  else  if(length!=  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}        else        if(length        ==        1)        {        }    else    if(length!=    1)    {    }  else  if(length!=  2)  {	  	compilable	  [FE]  AssertionError  	21	2	add
919	[BUG]  [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length!=  1)  {  }  else  if(length!=  2)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  }    else    if(length    ==    1)    {    }  else  if(length!=  1)  {  }  else  if(length!=  2)  {  [BUGGY]      double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}        else        if(length        ==        1)        {        }    else    if(length!=    1)    {    }  else  if(length!=  2)  {	  	compilable	  [FE]  AssertionError  	21	2	add
920	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  while(test(values,  begin,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	while(test(values,  begin,  length))  {  var  =  0.0;  }	          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    while(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    	compilable	  [FE]  AssertionError  	125	2	replace
921	[BUG]  [BUGGY]  while(test(values,  begin,  length))  {  var  =  0.0;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  while(test(values,  begin,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	while(test(values,  begin,  length))  {  var  =  0.0;  }	          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    while(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    	compilable	  [FE]  AssertionError  	125	2	replace
922	[BUG]  [BUGGY]  timeout  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  var  =  0.0;  }  while(test(values,  weights,  begin,  length))  {  var  =  0.0;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	var  =  0.0;  }  while(test(values,  weights,  begin,  length))  {  var  =  0.0;	          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    while(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    	compilable	timeout	125	1	replace
923	[BUG]  [BUGGY]  var  =  0.0;  }  while(test(values,  weights,  begin,  length))  {  var  =  0.0;  timeout  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  var  =  0.0;  }  while(test(values,  weights,  begin,  length))  {  var  =  0.0;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	var  =  0.0;  }  while(test(values,  weights,  begin,  length))  {  var  =  0.0;	          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    while(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    	compilable	timeout	125	1	replace
924	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	                if(test(values,        weights,        begin,        length))        {        var        =        0.0;        }        if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }	  	compilable	  [FE]  AssertionError  	104	1	add
925	[BUG]  [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                if(test(values,        weights,        begin,        length))        {        var        =        0.0;        }        if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }	  	compilable	  [FE]  AssertionError  	104	1	add
926	[BUG]  [BUGGY]          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  }  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  }  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                incMoment        =        isBiasCorrected?        Boolean.TRUE        :        Boolean.FALSE;        if(isBiasCorrected)    {    incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    }    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.	  	non-compiled	[CE]  <identifier>  expected	155	None	add
927	[BUG]  [BUGGY]          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  }  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]          incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  }  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	                incMoment        =        isBiasCorrected?        Boolean.TRUE        :        Boolean.FALSE;        if(isBiasCorrected)    {    incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    }    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean	  	non-compiled	[CE]  ';'  expected	155	None	add
928	[BUG]  [BUGGY]  ||  isBiasCorrected)  {  values[begin]  -  mean;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  ||  isBiasCorrected)  {  values[begin]  -  mean;  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	||  isBiasCorrected)  {  values[begin]  -  mean;	  ||    isBiasCorrected)    {    values[i]    -    mean;    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
929	[BUG]  [BUGGY]  if(accum  <  0.0)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(accum  <  0.0)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(accum  <  0.0)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }	  if(accum2    ==    0.0)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
930	[BUG]  [BUGGY]  if(accum  <  =  0.0)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(accum  <  =  0.0)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(accum  <  =  0.0)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }	  if(accum2    ==    0.0)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
931	[BUG]  [BUGGY]  if(accum  <  0.0)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(accum  <  0.0)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(accum  <  0.0)  {  if(test(values,  values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }	  if(accum2    ==    0.0)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
932	[BUG]  [BUGGY]  if(accum  >  0.0)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(accum  >  0.0)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(accum  >  0.0)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }	  if(accum2    ==    0.0)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
933	[BUG]  [BUGGY]  if(!incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(!incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(!incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }	  if(length    ==    1)    {    if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
934	[BUG]  [BUGGY]  accum  =  1.0  -  mean.doubleValue();  [CE]  cannot  find  symbol  accum  [FE]                    AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  accum  =  1.0  -  mean.doubleValue();  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum  =  1.0  -  mean.doubleValue();	  accum2    =    1.0    -    mean.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  accum	167	None	replace
935	[BUG]  [BUGGY]  if(incMoment)  {  ble  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;      [BUGGY]  if(incMoment)  {  ble  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [BUGGY]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  ble  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }	  ble    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
