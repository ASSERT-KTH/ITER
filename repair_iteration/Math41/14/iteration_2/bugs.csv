bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  }  else  if(length  ==  2)  {  [BUGGY]    double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}  else  if(length  ==  2)  {	  }    else    if(length    ==    1)    {    	compilable	  [FE]  AssertionError  	7	2	replace
2	[BUG]  [BUGGY]  }  else  if(length  ==  2)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  }  else  if(length  ==  2)  {  [BUGGY]    double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}  else  if(length  ==  2)  {	  }    else    if(length    ==    1)    {    	compilable	  [FE]  AssertionError  	7	2	replace
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;	      incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    	compilable	  [FE]  AssertionError  	19	2	replace
4	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;	      incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    	compilable	  [FE]  AssertionError  	19	2	replace
5	[BUG]  [BUGGY]  varMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  cannot  find  symbol  varMoment  [FE]      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  varMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	varMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;	      incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  cannot  find  symbol  varMoment	19	None	replace
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]      incMoment  =  isBiasCorrected;  incMoment  =  isBiasCorrected;  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	        incMoment    =    isBiasCorrected;    incMoment  =  isBiasCorrected;	  	compilable	  [FE]  AssertionError  	20	1	add
7	[BUG]  [BUGGY]      incMoment  =  isBiasCorrected;  incMoment  =  isBiasCorrected;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]      incMoment  =  isBiasCorrected;  incMoment  =  isBiasCorrected;  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	        incMoment    =    isBiasCorrected;    incMoment  =  isBiasCorrected;	  	compilable	  [FE]  AssertionError  	20	1	add
8	[BUG]  [BUGGY]      incMoment  =  isBiasCorrected;  Integer  incMoment  =  isBiasCorrected;  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]      incMoment  =  isBiasCorrected;  Integer  incMoment  =  isBiasCorrected;  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	        incMoment    =    isBiasCorrected;    Integer  incMoment  =  isBiasCorrected;	  	non-compiled	[CE]  incompatible  types	20	None	add
9	[BUG]  [BUGGY]      incMoment  =  isBiasCorrected;  accum  =  isBiasCorrected;  [CE]  cannot  find  symbol  accum  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]      incMoment  =  isBiasCorrected;  accum  =  isBiasCorrected;  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	        incMoment    =    isBiasCorrected;    accum  =  isBiasCorrected;	  	non-compiled	[CE]  cannot  find  symbol  accum	20	None	add
10	[BUG]  [BUGGY]      incMoment  =  isBiasCorrected;  imcMoment  =  isBiasCorrected;  [CE]  cannot  find  symbol  imcMoment  [FE]          AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]      incMoment  =  isBiasCorrected;  imcMoment  =  isBiasCorrected;  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	        incMoment    =    isBiasCorrected;    imcMoment  =  isBiasCorrected;	  	non-compiled	[CE]  cannot  find  symbol  imcMoment	20	None	add
11	[BUG]  [BUGGY]  accum2  +=  values[i]  *  (dev  *  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  accum2  +=  values[i]  *  (dev  *  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  +=  values[i]  *  (dev  *	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    (dev    *    	non-compiled	[CE]  ')'  expected	14	None	replace
12	[BUG]  [BUGGY]  accum2  =  values[i]  -  mean;  [CE]  cannot  find  symbol  accum2  [FE]              AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  accum2  =  values[i]  -  mean;  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  =  values[i]  -  mean;	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    (dev    *    	non-compiled	[CE]  cannot  find  symbol  accum2	14	None	replace
13	[BUG]  [BUGGY]  AssertionError.show(accum,  dev,  weights,  begin,  length);  [CE]  cannot  find  symbol  accum  [FE]                AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  AssertionError.show(accum,  dev,  weights,  begin,  length);  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	AssertionError.show(accum,  dev,  weights,  begin,  length);	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    (dev    *    	non-compiled	[CE]  cannot  find  symbol  accum	14	None	replace
14	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  }  else  if(length  ==  1)  {  }  else  if(length  ==  1)  {  [BUGGY]    double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}    else    if(length    ==    1)    {    }  else  if(length  ==  1)  {	  	compilable	  [FE]  AssertionError  	6	1	add
15	[BUG]  [BUGGY]  }  else  if(length  ==  1)  {  }  else  if(length  ==  1)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  }  else  if(length  ==  1)  {  }  else  if(length  ==  1)  {  [BUGGY]    double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length    ==    1)    {    }  else  if(length  ==  1)  {	  	compilable	  [FE]  AssertionError  	6	1	add
16	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  }  else  if(length  ==  1)  {  }  else  if(length  ==  2)  {  [BUGGY]    double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}    else    if(length    ==    1)    {    }  else  if(length  ==  2)  {	  	compilable	  [FE]  AssertionError  	6	1	add
17	[BUG]  [BUGGY]  }  else  if(length  ==  1)  {  }  else  if(length  ==  2)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  }  else  if(length  ==  1)  {  }  else  if(length  ==  2)  {  [BUGGY]    double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length    ==    1)    {    }  else  if(length  ==  2)  {	  	compilable	  [FE]  AssertionError  	6	1	add
18	[BUG]  [BUGGY]  }  else  if(length  ==  1)  {  }  else  if(length  {  1)  {  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  }  else  if(length  ==  1)  {  }  else  if(length  {  1)  {  [BUGGY]    double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length    ==    1)    {    }  else  if(length  {  1)  {	  	non-compiled	[CE]  ')'  expected	6	None	add
19	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  }  else  if(length  ==  1)  {  }  else  if(length  >=  1)  {  [BUGGY]    double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}    else    if(length    ==    1)    {    }  else  if(length  >=  1)  {	  	compilable	  [FE]  AssertionError  	6	2	add
20	[BUG]  [BUGGY]  }  else  if(length  ==  1)  {  }  else  if(length  >=  1)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  }  else  if(length  ==  1)  {  }  else  if(length  >=  1)  {  [BUGGY]    double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length    ==    1)    {    }  else  if(length  >=  1)  {	  	compilable	  [FE]  AssertionError  	6	2	add
21	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  }  else  if(length  ==  1)  {  }  else  if(length!=  1)  {  [BUGGY]    double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}    else    if(length    ==    1)    {    }  else  if(length!=  1)  {	  	compilable	  [FE]  AssertionError  	6	2	add
22	[BUG]  [BUGGY]  }  else  if(length  ==  1)  {  }  else  if(length!=  1)  {  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  }  else  if(length  ==  1)  {  }  else  if(length!=  1)  {  [BUGGY]    double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length    ==    1)    {    }  else  if(length!=  1)  {	  	compilable	  [FE]  AssertionError  	6	2	add
23	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  }  else  if(length  >  2)  {  }  else  if(length  >  2)  {  [BUGGY]    double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}    else    if(length    >    2)    {    }  else  if(length  >  2)  {	  	compilable	  [FE]  AssertionError  	10	2	add
24	[BUG]  [BUGGY]  }  else  if(length  >  2)  {  }  else  if(length  >  2)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  }  else  if(length  >  2)  {  }  else  if(length  >  2)  {  [BUGGY]    double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length    >    2)    {    }  else  if(length  >  2)  {	  	compilable	  [FE]  AssertionError  	10	2	add
25	[BUG]  [BUGGY]  }  else  if(length  >  2)  {  else  if(length  >  2)  {  [CE]  'else'  without  'if'  [FE]      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  }  else  if(length  >  2)  {  else  if(length  >  2)  {  [BUGGY]    double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length    >    2)    {    else  if(length  >  2)  {	  	non-compiled	[CE]  'else'  without  'if'	10	None	add
26	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  }  else  if(length  >  2)  {  }  else  if(length  >  1)  {  [BUGGY]    double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}    else    if(length    >    2)    {    }  else  if(length  >  1)  {	  	compilable	  [FE]  AssertionError  	10	2	add
27	[BUG]  [BUGGY]  }  else  if(length  >  2)  {  }  else  if(length  >  1)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  }  else  if(length  >  2)  {  }  else  if(length  >  1)  {  [BUGGY]    double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length    >    2)    {    }  else  if(length  >  1)  {	  	compilable	  [FE]  AssertionError  	10	2	add
28	[BUG]  [BUGGY]  }  else  if(length  >  2)  {  }  else  if(length  >  2  {  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  }  else  if(length  >  2)  {  }  else  if(length  >  2  {  [BUGGY]    double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length    >    2)    {    }  else  if(length  >  2  {	  	non-compiled	[CE]  ')'  expected	10	None	add
29	[BUG]  [BUGGY]  if(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i];  }  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i];  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i];  }	      if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  not  a  statement	4	None	replace
30	[BUG]  [BUGGY]  if(incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values	      if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  not  a  statement	4	None	replace
31	[BUG]  [BUGGY]  if(incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[	      if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  not  a  statement	4	None	replace
32	[BUG]  [BUGGY]  if(incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  [CE]  not  a  statement  [FE]                    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *	      if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  not  a  statement	4	None	replace
33	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  }  else  if(length  <  1)  {  }  else  if(length  <  1)  {  [BUGGY]    double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}    else    if(length    <    1)    {    }  else  if(length  <  1)  {	  	compilable	  [FE]  AssertionError  	8	1	add
34	[BUG]  [BUGGY]  }  else  if(length  <  1)  {  }  else  if(length  <  1)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  }  else  if(length  <  1)  {  }  else  if(length  <  1)  {  [BUGGY]    double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length    <    1)    {    }  else  if(length  <  1)  {	  	compilable	  [FE]  AssertionError  	8	1	add
35	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  }  else  if(length  <  1)  {  }  else  if(length  >=  1)  {  [BUGGY]    double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}    else    if(length    <    1)    {    }  else  if(length  >=  1)  {	  	compilable	  [FE]  AssertionError  	8	2	add
36	[BUG]  [BUGGY]  }  else  if(length  <  1)  {  }  else  if(length  >=  1)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  }  else  if(length  <  1)  {  }  else  if(length  >=  1)  {  [BUGGY]    double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length    <    1)    {    }  else  if(length  >=  1)  {	  	compilable	  [FE]  AssertionError  	8	2	add
37	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  }  else  if(length  <  1)  {  }  else  if(length  <  2)  {  [BUGGY]    double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}    else    if(length    <    1)    {    }  else  if(length  <  2)  {	  	compilable	  [FE]  AssertionError  	8	1	add
38	[BUG]  [BUGGY]  }  else  if(length  <  1)  {  }  else  if(length  <  2)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  }  else  if(length  <  1)  {  }  else  if(length  <  2)  {  [BUGGY]    double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length    <    1)    {    }  else  if(length  <  2)  {	  	compilable	  [FE]  AssertionError  	8	1	add
39	[BUG]  [BUGGY]  }  else  if(length  <  1)  {  else  if(length  <  1)  {  [CE]  'else'  without  'if'  [FE]          AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  }  else  if(length  <  1)  {  else  if(length  <  1)  {  [BUGGY]    double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length    <    1)    {    else  if(length  <  1)  {	  	non-compiled	[CE]  'else'  without  'if'	8	None	add
40	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  }  else  if(length  <  2)  {  [BUGGY]    double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}  else  if(length  <  2)  {	  }    else    if(length    <    1)    {    	compilable	  [FE]  AssertionError  	9	2	replace
41	[BUG]  [BUGGY]  }  else  if(length  <  2)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  }  else  if(length  <  2)  {  [BUGGY]    double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}  else  if(length  <  2)  {	  }    else    if(length    <    1)    {    	compilable	  [FE]  AssertionError  	9	2	replace
42	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  var  =  0.0;  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	var  =  0.0;	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    	compilable	  [FE]  AssertionError  	16	2	replace
43	[BUG]  [BUGGY]  var  =  0.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  var  =  0.0;  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	var  =  0.0;	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    	compilable	  [FE]  AssertionError  	16	2	replace
44	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(test(values,  begin,  length))  {  var  =  0.0;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	if(test(values,  begin,  length))  {  var  =  0.0;  }	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    	compilable	  [FE]  AssertionError  	16	2	replace
45	[BUG]  [BUGGY]  if(test(values,  begin,  length))  {  var  =  0.0;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(test(values,  begin,  length))  {  var  =  0.0;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(test(values,  begin,  length))  {  var  =  0.0;  }	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    	compilable	  [FE]  AssertionError  	16	2	replace
46	[BUG]  [BUGGY]  ||  test(values,  begin,  length))  {  var  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  ||  test(values,  begin,  length))  {  var  =  0.0;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	||  test(values,  begin,  length))  {  var  =  0.0;  }	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
47	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(length  ==  1)  {  var  =  0.0;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	if(length  ==  1)  {  var  =  0.0;  }	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    	compilable	  [FE]  AssertionError  	16	2	replace
48	[BUG]  [BUGGY]  if(length  ==  1)  {  var  =  0.0;  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(length  ==  1)  {  var  =  0.0;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  ==  1)  {  var  =  0.0;  }	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    	compilable	  [FE]  AssertionError  	16	2	replace
49	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(isBiasCorrected)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
50	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(isBiasCorrected)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
51	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
52	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(isBiasCorrected)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  ';'  expected	13	None	replace
53	[BUG]  [BUGGY]  Context.checkMoment(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  Context.checkMoment(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkMoment(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  ';'  expected	3	None	replace
54	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected);  [CE]  cannot  find  symbol  Context  [FE]              AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  Context.checkState(isBiasCorrected);  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected);	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  cannot  find  symbol  Context	3	None	replace
55	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected());  [CE]  cannot  find  symbol  Context  [FE]                AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  Context.checkState(isBiasCorrected());  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(isBiasCorrected());	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  cannot  find  symbol  Context	3	None	replace
56	[BUG]  [BUGGY]  Context.checkMoment(incMoment)  {  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  Context.checkMoment(incMoment)  {  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkMoment(incMoment)  {  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  dev  =  values[i]  -  mean;  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  ';'  expected	3	None	replace
57	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  Context.checkState(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }	      if(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    amount);    }    	non-compiled	[CE]  ';'  expected	24	None	replace
58	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  Context.checkState(incMoment)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }	      if(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    amount);    }    	non-compiled	[CE]  ';'  expected	24	None	replace
59	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  amount);  }  [CE]  ';'  expected  [FE]                    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  Context.checkState(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  amount);  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  amount);  }	      if(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    amount);    }    	non-compiled	[CE]  ';'  expected	24	None	replace
60	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  }  else  if(length  >=  1)  {  }  else  if(length  >=  1)  {  [BUGGY]    double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}    else    if(length    >=    1)    {    }  else  if(length  >=  1)  {	  	compilable	  [FE]  AssertionError  	25	2	add
61	[BUG]  [BUGGY]  }  else  if(length  >=  1)  {  }  else  if(length  >=  1)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  }  else  if(length  >=  1)  {  }  else  if(length  >=  1)  {  [BUGGY]    double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length    >=    1)    {    }  else  if(length  >=  1)  {	  	compilable	  [FE]  AssertionError  	25	2	add
62	[BUG]  [BUGGY]  }  else  if(length  >=  1)  {  }  else  if(length  >>  1)  {  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  }  else  if(length  >=  1)  {  }  else  if(length  >>  1)  {  [BUGGY]    double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length    >=    1)    {    }  else  if(length  >>  1)  {	  	non-compiled	[CE]  incompatible  types	25	None	add
63	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  }  else  if(length  >=  1)  {  }  else  if(length  ==  1)  {  [BUGGY]    double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}    else    if(length    >=    1)    {    }  else  if(length  ==  1)  {	  	compilable	  [FE]  AssertionError  	25	2	add
64	[BUG]  [BUGGY]  }  else  if(length  >=  1)  {  }  else  if(length  ==  1)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  }  else  if(length  >=  1)  {  }  else  if(length  ==  1)  {  [BUGGY]    double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length    >=    1)    {    }  else  if(length  ==  1)  {	  	compilable	  [FE]  AssertionError  	25	2	add
65	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  }  else  if(length  >=  1)  {  }  else  if(length!=  1)  {  [BUGGY]    double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}    else    if(length    >=    1)    {    }  else  if(length!=  1)  {	  	compilable	  [FE]  AssertionError  	25	2	add
66	[BUG]  [BUGGY]  }  else  if(length  >=  1)  {  }  else  if(length!=  1)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  }  else  if(length  >=  1)  {  }  else  if(length!=  1)  {  [BUGGY]    double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length    >=    1)    {    }  else  if(length!=  1)  {	  	compilable	  [FE]  AssertionError  	25	2	add
67	[BUG]  [BUGGY]  }  else  if(length  >=  1)  {  }  else  if(length  [Delete]  1)  {  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  }  else  if(length  >=  1)  {  }  else  if(length  [Delete]  1)  {  [BUGGY]    double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}    else    if(length    >=    1)    {    }  else  if(length  [Delete]  1)  {	  	non-compiled	[CE]  ')'  expected	25	None	add
68	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  Context.checkState(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }	      if(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  ';'  expected	23	None	replace
69	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  Context.checkState(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  (values[i]  *  valueWts);  }	      if(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  ';'  expected	23	None	replace
70	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueW  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  Context.checkState(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueW  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueW	      if(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  ';'  expected	23	None	replace
71	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [CE]  ';'  expected  [FE]                    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  Context.checkState(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }	      if(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  ';'  expected	23	None	replace
72	[BUG]  [BUGGY]  Context.checkMoment(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  Context.checkMoment(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkMoment(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  ';'  expected	2	None	replace
73	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  ';'  expected	2	None	replace
74	[BUG]  [BUGGY]  Context.checkMoment(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[0]  *  values[i];  }  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  Context.checkMoment(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[0]  *  values[i];  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkMoment(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[0]  *  values[i];  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  ';'  expected	2	None	replace
75	[BUG]  [BUGGY]  if(incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }	      if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
76	[BUG]  [BUGGY]  if(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }	      if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
77	[BUG]  [BUGGY]  if(incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[  [CE]  '.class'  expected  [FE]            AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[	      if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i];    }    	non-compiled	[CE]  '.class'  expected	1	None	replace
78	[BUG]  [BUGGY]  if(incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i]  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i]  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i]	      if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i];    }    	non-compiled	[CE]  ';'  expected	1	None	replace
79	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  Context.checkState(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }	      if(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
80	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  Context.checkState(incMoment)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment)  {  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }	      if(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
81	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  mean;  }  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  Context.checkState(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  mean;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  +=  values[i]  *  mean;  }	      if(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
82	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]      incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	        incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;	  	compilable	  [FE]  AssertionError  	18	1	add
83	[BUG]  [BUGGY]      incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]      incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	        incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;	  	compilable	  [FE]  AssertionError  	18	1	add
84	[BUG]  [BUGGY]      incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  accum  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  cannot  find  symbol  accum  [FE]      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]      incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  accum  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	        incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    accum  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;	  	non-compiled	[CE]  cannot  find  symbol  accum	18	None	add
85	[BUG]  [BUGGY]      incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FULL;  [CE]  cannot  find  symbol  FULL  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]      incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FULL;  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	        incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FULL;	  	non-compiled	[CE]  cannot  find  symbol  FULL	18	None	add
86	[BUG]  [BUGGY]      incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FIELD;  [CE]  cannot  find  symbol  FIELD  [FE]          AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]      incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FIELD;  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	        incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FIELD;	  	non-compiled	[CE]  cannot  find  symbol  FIELD	18	None	add
87	[BUG]  [BUGGY]  accum2  +=  values[i]  *  value  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  accum2  +=  values[i]  *  value  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  +=  values[i]  *  value	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    value    	non-compiled	[CE]  ';'  expected	17	None	replace
88	[BUG]  [BUGGY]  accum2  +=  weights[i]  *  value  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  accum2  +=  weights[i]  *  value  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  +=  weights[i]  *  value	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    value    	non-compiled	[CE]  ';'  expected	17	None	replace
89	[BUG]  [BUGGY]  accum2  =  Math.abs(accum2  -  mean);  [CE]  cannot  find  symbol  accum2  [FE]                    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  accum2  =  Math.abs(accum2  -  mean);  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  =  Math.abs(accum2  -  mean);	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    value    	non-compiled	[CE]  cannot  find  symbol  accum2	17	None	replace
90	[BUG]  [BUGGY]  AssertionError.show(accum2,  value);  [CE]  cannot  find  symbol  accum2  [FE]                      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  AssertionError.show(accum2,  value);  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	AssertionError.show(accum2,  value);	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    value    	non-compiled	[CE]  cannot  find  symbol  accum2	17	None	replace
91	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  }  else  if(length  >=  2)  {  [BUGGY]    double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}  else  if(length  >=  2)  {	  }    else    if(length    >    2)    {    	compilable	  [FE]  AssertionError  	11	1	replace
92	[BUG]  [BUGGY]  }  else  if(length  >=  2)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  }  else  if(length  >=  2)  {  [BUGGY]    double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}  else  if(length  >=  2)  {	  }    else    if(length    >    2)    {    	compilable	  [FE]  AssertionError  	11	1	replace
93	[BUG]  [BUGGY]  varMoment  =  isBiasCorrected;  [CE]  cannot  find  symbol  varMoment  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  varMoment  =  isBiasCorrected;  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	varMoment  =  isBiasCorrected;	      incMoment    =    isBiasCorrected;    	non-compiled	[CE]  cannot  find  symbol  varMoment	21	None	replace
94	[BUG]  [BUGGY]  incMoment  =  var;  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  incMoment  =  var;  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment  =  var;	      incMoment    =    isBiasCorrected;    	non-compiled	[CE]  incompatible  types	21	None	replace
95	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  incMoment  =  false;  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	incMoment  =  false;	      incMoment    =    isBiasCorrected;    	compilable	  [FE]  AssertionError  	21	2	replace
96	[BUG]  [BUGGY]  incMoment  =  false;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  incMoment  =  false;  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment  =  false;	      incMoment    =    isBiasCorrected;    	compilable	  [FE]  AssertionError  	21	2	replace
97	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(isBiasCorrected)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
98	[BUG]  [BUGGY]  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
99	[BUG]  [BUGGY]  if(length  ==  1)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(length  ==  1)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  ==  1)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
100	[BUG]  [BUGGY]  if(isBiasCorrected)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(isBiasCorrected)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  }	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
101	[BUG]  [BUGGY]  ||  isBiasCorrected)  {  values[i]  -  mean;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  ||  isBiasCorrected)  {  values[i]  -  mean;  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	||  isBiasCorrected)  {  values[i]  -  mean;	      if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
102	[BUG]  [BUGGY]  ||  isBiasCorrected)  {  values[i]  -  mean;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  ||  isBiasCorrected)  {  values[i]  -  mean;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	||  isBiasCorrected)  {  values[i]  -  mean;  }	      if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
103	[BUG]  [BUGGY]  ||  isBiasCorrected)  {  values[0]  -  mean;  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  ||  isBiasCorrected)  {  values[0]  -  mean;  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	||  isBiasCorrected)  {  values[0]  -  mean;	      if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
104	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]      if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	        if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }	  	compilable	  [FE]  AssertionError  	15	1	add
105	[BUG]  [BUGGY]      if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]      if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	        if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }	  	compilable	  [FE]  AssertionError  	15	1	add
106	[BUG]  [BUGGY]      if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  start,  length))  {  var  =  0.0;  }  [CE]  cannot  find  symbol  start  [FE]      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]      if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  start,  length))  {  var  =  0.0;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	        if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  weights,  start,  length))  {  var  =  0.0;  }	  	non-compiled	[CE]  cannot  find  symbol  start	15	None	add
107	[BUG]  [BUGGY]      if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  beginning,  length))  {  var  =  0.0;  }  [CE]  cannot  find  symbol  beginning  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]      if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  weights,  beginning,  length))  {  var  =  0.0;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	        if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  weights,  beginning,  length))  {  var  =  0.0;  }	  	non-compiled	[CE]  cannot  find  symbol  beginning	15	None	add
108	[BUG]  [BUGGY]      if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  If(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]      if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  If(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	        if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    If(test(values,  weights,  begin,  length))  {  var  =  0.0;  }	  	non-compiled	[CE]  ';'  expected	15	None	add
109	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  }  else  if(length!=  1)  {  [BUGGY]    double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}  else  if(length!=  1)  {	  }    else    if(length    >=    1)    {    	compilable	  [FE]  AssertionError  	26	1	replace
110	[BUG]  [BUGGY]  }  else  if(length!=  1)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  }  else  if(length!=  1)  {  [BUGGY]    double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}  else  if(length!=  1)  {	  }    else    if(length    >=    1)    {    	compilable	  [FE]  AssertionError  	26	1	replace
111	[BUG]  [BUGGY]      incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  Integer  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]      incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  Integer  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	        incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    Integer  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;	  	non-compiled	[CE]  incompatible  types	18	None	add
112	[BUG]  [BUGGY]      incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  double  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]      incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  double  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	        incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    double  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;	  	non-compiled	[CE]  incompatible  types	18	None	add
113	[BUG]  [BUGGY]  if(length  ==  2)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(length  ==  2)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  ==  2)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
114	[BUG]  [BUGGY]  if(length  ==  1)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(length  ==  1)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  ==  1)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    value    	non-compiled	[CE]  ';'  expected	17	None	replace
115	[BUG]  [BUGGY]  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    value    	non-compiled	[CE]  ';'  expected	17	None	replace
116	[BUG]  [BUGGY]  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [CE]  ';'  expected  [FE]                    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    value    	non-compiled	[CE]  ';'  expected	17	None	replace
117	[BUG]  [BUGGY]  if(length  ==  2)  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [CE]  ';'  expected  [FE]                      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(length  ==  2)  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  ==  2)  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    value    	non-compiled	[CE]  ';'  expected	17	None	replace
118	[BUG]  [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }  [CE]  cannot  find  symbol  amount  [FE]                AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }	      if(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    amount);    }    	non-compiled	[CE]  cannot  find  symbol  amount	24	None	replace
119	[BUG]  [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  (values[i]  *  amount);  }  [CE]  cannot  find  symbol  amount  [FE]                  AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  (values[i]  *  amount);  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  (values[i]  *  amount);  }	      if(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    amount);    }    	non-compiled	[CE]  cannot  find  symbol  amount	24	None	replace
120	[BUG]  [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  weights[i]  *  amount;  }  [CE]  cannot  find  symbol  amount  [FE]                    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  weights[i]  *  amount;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  weights[i]  *  amount;  }	      if(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    amount);    }    	non-compiled	[CE]  cannot  find  symbol  amount	24	None	replace
121	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
122	[BUG]  [BUGGY]  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  not  a  statement	2	None	replace
123	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  values[i];  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  values[i];  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  values[i];  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
124	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]      if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  while(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	        if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    while(test(values,  weights,  begin,  length))  {  var  =  0.0;  }	  	compilable	  [FE]  AssertionError  	15	1	add
125	[BUG]  [BUGGY]      if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  while(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]      if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  while(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	        if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    while(test(values,  weights,  begin,  length))  {  var  =  0.0;  }	  	compilable	  [FE]  AssertionError  	15	1	add
126	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  ';'  expected	3	None	replace
127	[BUG]  [BUGGY]  MiscUtilities.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  MiscUtilities.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	MiscUtilities.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  ';'  expected	3	None	replace
128	[BUG]  [BUGGY]  MiscUtilities.checkState(incMoment)&&  isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  MiscUtilities.checkState(incMoment)&&  isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	MiscUtilities.checkState(incMoment)&&  isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  not  a  statement	3	None	replace
129	[BUG]  [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [CE]  variable  values  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }	      if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i];    }    	non-compiled	[CE]  variable  values  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	1	None	replace
130	[BUG]  [BUGGY]  if(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  start;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  start;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  start;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }	      if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
131	[BUG]  [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [CE]  cannot  find  symbol  valueWts  [FE]              AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }	      if(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  cannot  find  symbol  valueWts	23	None	replace
132	[BUG]  [BUGGY]  ble  accum  =  Double.POSITIVE_INFINITY;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  ble  accum  =  Double.POSITIVE_INFINITY;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	ble  accum  =  Double.POSITIVE_INFINITY;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }	      if(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
133	[BUG]  [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  (values[i]  *  valueWts);  }  [CE]  cannot  find  symbol  valueWts  [FE]                  AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  (values[i]  *  valueWts);  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  (values[i]  *  valueWts);  }	      if(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  cannot  find  symbol  valueWts	23	None	replace
134	[BUG]  [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  weights[i]  *  valueWts;  }  [CE]  cannot  find  symbol  valueWts  [FE]                    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  weights[i]  *  valueWts;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  weights[i]  *  valueWts;  }	      if(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  cannot  find  symbol  valueWts	23	None	replace
135	[BUG]  [BUGGY]  if(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }	      if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    }    	non-compiled	[CE]  not  a  statement	5	None	replace
136	[BUG]  [BUGGY]  if(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  start;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  start;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  start;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }	      if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    }    	non-compiled	[CE]  not  a  statement	5	None	replace
137	[BUG]  [BUGGY]  if(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  *  mean;  }  [CE]  not  a  statement  [FE]                    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  *  mean;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  *  mean;  }	      if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    }    	non-compiled	[CE]  not  a  statement	5	None	replace
138	[BUG]  [BUGGY]  luate(values,  begin,  length))  {  if(isBiasCorrected)  {  values[0]  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[  [CE]  ';'  expected  [FE]                      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  luate(values,  begin,  length))  {  if(isBiasCorrected)  {  values[0]  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	luate(values,  begin,  length))  {  if(isBiasCorrected)  {  values[0]  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[	      if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    }    	non-compiled	[CE]  ';'  expected	5	None	replace
139	[BUG]  [BUGGY]  if(length  ==  1)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(length  ==  1)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  ==  1)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
140	[BUG]  [BUGGY]  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
141	[BUG]  [BUGGY]  if(length  ==  2)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(length  ==  2)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  ==  2)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  }	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
142	[BUG]  [BUGGY]  if(length  ==  1)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(length  ==  1)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(length  ==  1)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
143	[BUG]  [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i];  }  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i];  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i];  }	      if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  not  a  statement	4	None	replace
144	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i];  }  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  Context.checkState(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i];  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i];  }	      if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  ';'  expected	4	None	replace
145	[BUG]  [BUGGY]  if(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  Accum2  +=  values[i]  *  values[i];  }  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  Accum2  +=  values[i]  *  values[i];  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  Accum2  +=  values[i]  *  values[i];  }	      if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  not  a  statement	4	None	replace
146	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE  +  1;  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE  +  1;	      incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	19	None	replace
147	[BUG]  [BUGGY]  if(incMoment)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (dev  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(incMoment)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (dev  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (dev	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    (dev    *    	non-compiled	[CE]  ')'  expected	14	None	replace
148	[BUG]  [BUGGY]  if(incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  [CE]  '.class'  expected  [FE]              AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    (dev    *    	non-compiled	[CE]  '.class'  expected	14	None	replace
149	[BUG]  [BUGGY]  if(incMoment)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (dev  *  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(incMoment)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (dev  *  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (dev  *	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    (dev    *    	non-compiled	[CE]  ')'  expected	14	None	replace
150	[BUG]  [BUGGY]  if(incMoment)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  [CE]  '.class'  expected  [FE]                  AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(incMoment)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(test(values,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    (dev    *    	non-compiled	[CE]  '.class'  expected	14	None	replace
151	[BUG]  [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }	      if(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	22	None	replace
152	[BUG]  [BUGGY]  ble  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  ble  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	ble  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }	      if(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
153	[BUG]  [BUGGY]  nisipIsBiasCorrected  &&  isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  nisipIsBiasCorrected  &&  isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	nisipIsBiasCorrected  &&  isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }	      if(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  not  a  statement	22	None	replace
154	[BUG]  [BUGGY]      incMoment  =  isBiasCorrected;  incMoment  =  isBiasCorrected.doubleValue();  [CE]  boolean  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]      incMoment  =  isBiasCorrected;  incMoment  =  isBiasCorrected.doubleValue();  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	        incMoment    =    isBiasCorrected;    incMoment  =  isBiasCorrected.doubleValue();	  	non-compiled	[CE]  boolean  cannot  be  dereferenced	20	None	add
155	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]      incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	        incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  }	  	compilable	  [FE]  AssertionError  	18	1	add
156	[BUG]  [BUGGY]      incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]      incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	        incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    if(isBiasCorrected)  {  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  }	  	compilable	  [FE]  AssertionError  	18	1	add
157	[BUG]  [BUGGY]  accum2  =  accum2.doubleValue();  [CE]  cannot  find  symbol  accum2  [FE]            AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  accum2  =  accum2.doubleValue();  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  =  accum2.doubleValue();	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    (dev    *    	non-compiled	[CE]  cannot  find  symbol  accum2	14	None	replace
158	[BUG]  [BUGGY]  MiscMoment  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  MiscMoment  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	MiscMoment  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  ';'  expected	3	None	replace
159	[BUG]  [BUGGY]  MiscMoment  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  *  mean;  }  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  MiscMoment  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  *  mean;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	MiscMoment  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  *  mean;  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  ';'  expected	3	None	replace
160	[BUG]  [BUGGY]  Context.checkState(incMoment);  [CE]  cannot  find  symbol  Context  [FE]                AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  Context.checkState(incMoment);  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkState(incMoment);	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    }    	non-compiled	[CE]  cannot  find  symbol  Context	3	None	replace
161	[BUG]  [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }	      if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    }    	non-compiled	[CE]  not  a  statement	5	None	replace
162	[BUG]  [BUGGY]  Context.checkMoment(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  Context.checkMoment(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	Context.checkMoment(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }	      if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    }    	non-compiled	[CE]  ';'  expected	5	None	replace
163	[BUG]  [BUGGY]  accum2  =  0.0;  [CE]  cannot  find  symbol  accum2  [FE]          AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  accum2  =  0.0;  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  =  0.0;	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  cannot  find  symbol  accum2	13	None	replace
164	[BUG]  [BUGGY]  if(incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
165	[BUG]  [BUGGY]  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(test(values,  mean,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
166	[BUG]  [BUGGY]  if(accum2  ==  0.0)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(accum2  ==  0.0)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(accum2  ==  0.0)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
167	[BUG]  [BUGGY]  accum2  =  1.0  -  mean.doubleValue();  [CE]  cannot  find  symbol  accum2  [FE]                AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  accum2  =  1.0  -  mean.doubleValue();  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	accum2  =  1.0  -  mean.doubleValue();	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    value    	non-compiled	[CE]  cannot  find  symbol  accum2	17	None	replace
168	[BUG]  [BUGGY]  if(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i]  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i]  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i]	      if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -    mean;    accum2    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  not  a  statement	4	None	replace
169	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]      if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	        if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  values,  begin,  length))  {  var  =  0.0;  }	  	compilable	  [FE]  AssertionError  	15	1	add
170	[BUG]  [BUGGY]      if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]      if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  if(test(values,  values,  begin,  length))  {  var  =  0.0;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	        if(test(values,    weights,    begin,    length))    {    var    =    0.0;    }    if(test(values,  values,  begin,  length))  {  var  =  0.0;  }	  	compilable	  [FE]  AssertionError  	15	1	add
171	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected?  1  :  0;  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  incMoment  =  isBiasCorrected?  1  :  0;  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment  =  isBiasCorrected?  1  :  0;	      incMoment    =    isBiasCorrected;    	non-compiled	[CE]  incompatible  types	21	None	replace
172	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  incMoment  =  isBiasCorrected  +  1;  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment  =  isBiasCorrected  +  1;	      incMoment    =    isBiasCorrected;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	21	None	replace
173	[BUG]  [BUGGY]  var  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  var  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	var  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;	      incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  incompatible  types	19	None	replace
174	[BUG]  [BUGGY]  incMoment  :  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  incMoment  :  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	incMoment  :  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;	      incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  not  a  statement	19	None	replace
175	[BUG]  [BUGGY]  if(isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }	      if(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
176	[BUG]  [BUGGY]  if(isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  mean;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  mean;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(isBiasCorrected)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  weights[i]  *  mean;  }	      if(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    mean;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
177	[BUG]  [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  sumWts);  }  [CE]  cannot  find  symbol  sumWts  [FE]              AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  sumWts);  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  sumWts);  }	      if(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	23	None	replace
178	[BUG]  [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  ValueWts);  }  [CE]  cannot  find  symbol  ValueWts  [FE]                AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  ValueWts);  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  ValueWts);  }	      if(incMoment)    {    double    accum    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    +=    values[i]    *    (values[i]    *    valueWts);    }    	non-compiled	[CE]  cannot  find  symbol  ValueWts	23	None	replace
179	[BUG]  [BUGGY]  if(incMoment)  {  Double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(incMoment)  {  Double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  Double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }	      if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
180	[BUG]  [BUGGY]  if(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i].doubleValue();  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i].doubleValue();  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i].doubleValue();  }	      if(isBiasCorrected)    {    double[]    values    =    getValues();    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    values[i]    -=    values[i]    *    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
181	[BUG]  [BUGGY]  while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
182	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i].doubleValue();  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i].doubleValue();  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i].doubleValue();  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[i]    *    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
183	[BUG]  [BUGGY]      incMoment  =  isBiasCorrected;  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  else  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]      incMoment  =  isBiasCorrected;  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  else  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	        incMoment    =    isBiasCorrected;    if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  else  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
184	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]      incMoment  =  isBiasCorrected;  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	        incMoment    =    isBiasCorrected;    if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }	  	compilable	  [FE]  AssertionError  	20	1	add
185	[BUG]  [BUGGY]      incMoment  =  isBiasCorrected;  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]      incMoment  =  isBiasCorrected;  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	        incMoment    =    isBiasCorrected;    if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }	  	compilable	  [FE]  AssertionError  	20	1	add
186	[BUG]  [BUGGY]      incMoment  =  isBiasCorrected;  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  else  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]      incMoment  =  isBiasCorrected;  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  else  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	        incMoment    =    isBiasCorrected;    if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  else  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
187	[BUG]  [BUGGY]      incMoment  =  isBiasCorrected;  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  else  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]      incMoment  =  isBiasCorrected;  if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  else  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	        incMoment    =    isBiasCorrected;    if(incMoment  ==  isBiasCorrected)  {  incMoment  =  isBiasCorrected;  }  else  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum	  	non-compiled	[CE]  not  a  statement	20	None	add
188	[BUG]  [BUGGY]  if(incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  if(incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	if(incMoment)  {  if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
189	[BUG]  [BUGGY]  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [CE]  cannot  find  symbol  accum2  [FE]          AssertionError    [CONTEXT]    final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;    [BUGGY]  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [BUGGY]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }	      if(test(values,    weights,    begin,    length))    {    var    =    0.0;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    =    0.0;    }    	non-compiled	[CE]  cannot  find  symbol  accum2	12	None	replace
