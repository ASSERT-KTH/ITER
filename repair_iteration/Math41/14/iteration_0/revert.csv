projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java509
projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java509if(isBiasCorrected){double[]values=getValues();for(inti=begin;i<begin+length;i++){values[i]-=values[i]*values[i];}
projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java509if(isBiasCorrected){for(inti=begin;i<begin+length;i++){sumWts+=values[i]*values[i];}
projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java509if(isBiasCorrected){for(inti=begin;i<begin+length;i++){dev=values[i]-mean;}
projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java509if(isBiasCorrected){double[]values=getValues();for(inti=begin;i<begin+length;i++){values[i]-mean;accum2+=values[i]*values[i];}
projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java509if(isBiasCorrected){double[]values=getValues();for(inti=begin;i<begin+length;i++){values[i]-mean;}
projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java509}elseif(length>1){
projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java509}elseif(length==1){
projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java509}elseif(length<1){
projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java509}elseif(length>2){
projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java509if(test(values,weights,begin,length)){var=0.0;for(inti=begin;i<begin+length;i++){accum2=0.0;}
projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java509if(test(values,weights,begin,length)){var=0.0;for(inti=begin;i<begin+length;i++){dev=values[i]-mean;accum2=0.0;}
projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java509if(test(values,weights,begin,length)){var=0.0;for(inti=begin;i<begin+length;i++){dev=values[i]-mean;accum2+=values[i]*(dev*
projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java509if(test(values,weights,begin,length)){var=0.0;}
projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java509if(test(values,weights,begin,length)){var=0.0;for(inti=begin;i<begin+length;i++){dev=values[i]-mean;accum2+=values[i]*value
projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java509incMoment=isBiasCorrected?Boolean.TRUE:Boolean.FALSE;
projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java509incMoment=isBiasCorrected;
projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java509if(incMoment){doubleaccum=0.0;for(inti=begin;i<begin+length;i++){accum+=values[i]*mean;}
projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java509if(incMoment){doubleaccum=0.0;for(inti=begin;i<begin+length;i++){accum+=values[i]*(values[i]*valueWts);}
projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java509if(incMoment){doubleaccum=0.0;for(inti=begin;i<begin+length;i++){accum+=values[i]*(values[i]*amount);}
projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java509}elseif(length>=1){
