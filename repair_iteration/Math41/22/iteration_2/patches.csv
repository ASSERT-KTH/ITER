bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(isBiasCorrected)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	70	None	replace
2	[BUG]  [BUGGY]  if(incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  [CE]  >  expected  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	70	None	replace
3	[BUG]  [BUGGY]  accum2  +=  values[i]  *  dev;  [CE]  cannot  find  symbol  i  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  accum2  +=  values[i]  *  dev;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	accum2  +=  values[i]  *  dev;	  accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    	non-compiled	[CE]  cannot  find  symbol  i	69	None	replace
4	[BUG]  [BUGGY]  double  amountWts  =  1.0;  [CE]  cannot  find  symbol  sumWts  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  amountWts  =  1.0;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  amountWts  =  1.0;	  double    sumWts    =    1.0;    double    amountWts    =    1.0;    	non-compiled	[CE]  cannot  find  symbol  sumWts	118	None	replace
5	[BUG]  [BUGGY]  int  sumWts  =  1.0;  [CE]  possible  loss  of  precision  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  sumWts  =  1.0;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  sumWts  =  1.0;	  double    sumWts    =    1.0;    double    amountWts    =    1.0;    	non-compiled	[CE]  possible  loss  of  precision	118	None	replace
6	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  DEV;  }  [CE]  cannot  find  symbol  DEV  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  DEV;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  DEV;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    DEV;    }    	non-compiled	[CE]  cannot  find  symbol  DEV	142	None	replace
7	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  DEV;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  DEV;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  DEV;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    DEV;    }    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
8	[BUG]  [BUGGY]  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  DEV;  [CE]  cannot  find  symbol  i  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  DEV;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  DEV;	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    DEV;    }    	non-compiled	[CE]  cannot  find  symbol  i	142	None	replace
9	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected());  [CE]  cannot  find  symbol  Context  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Context.checkState(isBiasCorrected());  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Context.checkState(isBiasCorrected());	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    }    	non-compiled	[CE]  cannot  find  symbol  Context	6	None	replace
10	[BUG]  [BUGGY]  vice.validate(accum,  dev);  [CE]  cannot  find  symbol  vice  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  vice.validate(accum,  dev);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	vice.validate(accum,  dev);	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    }    	non-compiled	[CE]  cannot  find  symbol  vice	6	None	replace
11	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  weights[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  weights[i]  *  dev;  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
12	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
13	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected,  dev);  [CE]  cannot  find  symbol  Context  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Context.checkState(isBiasCorrected,  dev);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Context.checkState(isBiasCorrected,  dev);	  Context.checkState(isBiasCorrected);    	non-compiled	[CE]  cannot  find  symbol  Context	95	None	replace
14	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected  ||  isMoment);  [CE]  cannot  find  symbol  isMoment  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Context.checkState(isBiasCorrected  ||  isMoment);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Context.checkState(isBiasCorrected  ||  isMoment);	  Context.checkState(isBiasCorrected);    	non-compiled	[CE]  cannot  find  symbol  isMoment	95	None	replace
15	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected  ||  isIncMoment);  [CE]  cannot  find  symbol  isIncMoment  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Context.checkState(isBiasCorrected  ||  isIncMoment);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Context.checkState(isBiasCorrected  ||  isIncMoment);	  Context.checkState(isBiasCorrected);    	non-compiled	[CE]  cannot  find  symbol  isIncMoment	95	None	replace
16	[BUG]  [BUGGY]  if(isBiasCorrected)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	26	None	replace
17	[BUG]  [BUGGY]  double  accum  =  begin;  i  <  begin  +  length;  i++)  {  dev  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  accum  =  begin;  i  <  begin  +  length;  i++)  {  dev  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  accum  =  begin;  i  <  begin  +  length;  i++)  {  dev  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	26	None	replace
18	[BUG]  [BUGGY]  if(!incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(!incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(!incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	26	None	replace
19	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  mean;  }  [CE]  cannot  find  symbol  sumWts  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  mean;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  mean;  }	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    mean;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	144	None	replace
20	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  mean;  }  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  mean;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  mean;  }	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    mean;    }    	non-compiled	[CE]  >  expected	144	None	replace
21	[BUG]  [BUGGY]  if(isBiasCorrected)  {  var  =  accum  -  (accum1  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [CE]  cannot  find  symbol  accum1  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  var  =  accum  -  (accum1  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  var  =  accum  -  (accum1  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }	  if(incMoment)    {    var    =    accum    -    (accum1    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  accum1	120	None	replace
22	[BUG]  [BUGGY]  float  sumWts  =  1.0;  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  float  sumWts  =  1.0;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	float  sumWts  =  1.0;	  double    sumWts    =    1.0;    int    sumWts    =    1.0;    	non-compiled	[CE]  possible  loss  of  precision	41	None	replace
23	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
24	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
25	[BUG]  [BUGGY]  if(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
26	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
27	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	59	3	add
28	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	59	3	add
29	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  mean;  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	59	3	add
30	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  mean;  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	59	3	add
31	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	59	3	add
32	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  dev;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	59	3	add
33	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  means;  accum2  -=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  means  [FE]          AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  means;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  means;  accum2  -=  values[i]  *  dev;  }	  	non-compiled	[CE]  cannot  find  symbol  means	59	None	add
34	[BUG]  [BUGGY]  vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  dev);  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  dev);  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    weights[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  ';'  expected	164	None	replace
35	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  dev);  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  dev);  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    weights[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  ';'  expected	164	None	replace
36	[BUG]  [BUGGY]  vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  dev  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  dev  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  dev	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    weights[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  ';'  expected	164	None	replace
37	[BUG]  [BUGGY]  vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  poids[i]  *  (dev  *  dev);  }  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  poids[i]  *  (dev  *  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  poids[i]  *  (dev  *  dev);  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    weights[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  ';'  expected	164	None	replace
38	[BUG]  [BUGGY]  double  sumWts  =  10.0;  double  sumWts  =  10.0;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  10.0;  double  sumWts  =  10.0;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    10.0;    double  sumWts  =  10.0;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	1	None	add
39	[BUG]  [BUGGY]  double  sumWts  =  10.0;  Double  sumWts  =  10.0;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  10.0;  Double  sumWts  =  10.0;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    10.0;    Double  sumWts  =  10.0;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	1	None	add
40	[BUG]  [BUGGY]  double  sumWts  =  10.0;  int  sumWts  =  10.0;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  10.0;  int  sumWts  =  10.0;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    10.0;    int  sumWts  =  10.0;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	1	None	add
41	[BUG]  [BUGGY]  double  sumWts  =  10.0;  long  sumWts  =  10.0;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  10.0;  long  sumWts  =  10.0;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    10.0;    long  sumWts  =  10.0;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	1	None	add
42	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  accum  -=  values[i]  *  dev;  }  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  accum  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  accum  -=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    int    begin    =    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    	non-compiled	[CE]  ';'  expected	148	None	replace
43	[BUG]  [BUGGY]  double  sumWts  =  0.5;  double  sumWts  =  0.5;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  0.5;  double  sumWts  =  0.5;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    0.5;    double  sumWts  =  0.5;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	100	None	add
44	[BUG]  [BUGGY]  double  sumWts  =  0.5;  Double  sumWts  =  0.5;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  0.5;  Double  sumWts  =  0.5;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    0.5;    Double  sumWts  =  0.5;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	100	None	add
45	[BUG]  [BUGGY]  double  sumWts  =  0.5;  int  sumWts  =  0.5;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  0.5;  int  sumWts  =  0.5;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    0.5;    int  sumWts  =  0.5;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	100	None	add
46	[BUG]  [BUGGY]  double  sumWts  =  0.5;  long  sumWts  =  0.5;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  0.5;  long  sumWts  =  0.5;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    0.5;    long  sumWts  =  0.5;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	100	None	add
47	[BUG]  [BUGGY]  double  sumWts  =  0.5;  double  amountWts  =  0.5;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  0.5;  double  amountWts  =  0.5;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    0.5;    double  amountWts  =  0.5;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	100	None	add
48	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  dev;  }  [CE]  >  expected  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  dev;  }	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	56	None	replace
49	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  dev;  }  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  dev;  }	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	56	None	replace
50	[BUG]  [BUGGY]  AssertionError.show(accum,  dev,  isBiasCorrected,  begin  +  length);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum,  dev,  isBiasCorrected,  begin  +  length);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum,  dev,  isBiasCorrected,  begin  +  length);	  AssertionError.show(accum,    isBiasCorrected,    dev,    begin    +    length);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
51	[BUG]  [BUGGY]  AssertionError.show(accum,  isBiasCorrected,  dev,  begin  +  length,  dev);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum,  isBiasCorrected,  dev,  begin  +  length,  dev);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum,  isBiasCorrected,  dev,  begin  +  length,  dev);	  AssertionError.show(accum,    isBiasCorrected,    dev,    begin    +    length);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
52	[BUG]  [BUGGY]  AssertionError.show(accum,  isBiasCorrected,  dev,  begin  +  length,  mean);  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum,  isBiasCorrected,  dev,  begin  +  length,  mean);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum,  isBiasCorrected,  dev,  begin  +  length,  mean);	  AssertionError.show(accum,    isBiasCorrected,    dev,    begin    +    length);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
53	[BUG]  [BUGGY]  AssertionError.show(accum,  dev,  accum,  begin  +  length);  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum,  dev,  accum,  begin  +  length);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum,  dev,  accum,  begin  +  length);	  AssertionError.show(accum,    isBiasCorrected,    dev,    begin    +    length);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
54	[BUG]  [BUGGY]  if(isBiasCorrected)  {  double  sumWts  =  1.0;  double  sumWts  =  1.0;  }  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  double  sumWts  =  1.0;  double  sumWts  =  1.0;  }  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  double  sumWts  =  1.0;  double  sumWts  =  1.0;  }	  double    sumWts    =    1.0;    double    sumWts    =    1.0;    	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	39	None	replace
55	[BUG]  [BUGGY]  if(isBiasCorrected)  {  double  sumWts  =  1.0;  double  sumWts  =  1.0;  }  else  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  width;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  double  sumWts  =  1.0;  double  sumWts  =  1.0;  }  else  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  width;  }  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  double  sumWts  =  1.0;  double  sumWts  =  1.0;  }  else  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  width;  }	  double    sumWts    =    1.0;    double    sumWts    =    1.0;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
56	[BUG]  [BUGGY]  if(isBiasCorrected)  {  double  sumWts  =  1.0;  double  sumWts  =  1.0;  }  else  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  mean;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  double  sumWts  =  1.0;  double  sumWts  =  1.0;  }  else  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  mean;  }  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  double  sumWts  =  1.0;  double  sumWts  =  1.0;  }  else  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  mean;  }	  double    sumWts    =    1.0;    double    sumWts    =    1.0;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
57	[BUG]  [BUGGY]  int  sumWts  =  0.0;  [CE]  possible  loss  of  precision  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  sumWts  =  0.0;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  sumWts  =  0.0;	  double    sumWts    =    0.0;    double    sumWts    =    0.0;    	non-compiled	[CE]  possible  loss  of  precision	44	None	replace
58	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Double  sumWts  =  0.0;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	Double  sumWts  =  0.0;	  double    sumWts    =    0.0;    double    sumWts    =    0.0;    	compilable	  [FE]  AssertionError  	44	1	replace
59	[BUG]  [BUGGY]  Double  sumWts  =  0.0;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Double  sumWts  =  0.0;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Double  sumWts  =  0.0;	  double    sumWts    =    0.0;    double    sumWts    =    0.0;    	compilable	  [FE]  AssertionError  	44	1	replace
60	[BUG]  [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  dev;  }  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  dev;  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
61	[BUG]  [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  dev;  }  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  dev;  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
62	[BUG]  [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  dev;  }  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  dev;  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
63	[BUG]  [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  sumWts  +=  weights[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  sumWts  +=  weights[i]  *  dev;  }  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  start  +  length;  i++)  {  sumWts  +=  weights[i]  *  dev;  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
64	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	60	None	replace
65	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	60	None	replace
66	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  Accum2  -=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  Accum2  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  Accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  Accum2  -=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  Accum2	60	None	replace
67	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  DEV;  }  [CE]  cannot  find  symbol  DEV  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  DEV;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  DEV;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    DEV;    }    	non-compiled	[CE]  cannot  find  symbol  DEV	76	None	replace
68	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  DEV;  }  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  DEV;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  DEV;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    DEV;    }    	non-compiled	[CE]  >  expected	76	None	replace
69	[BUG]  [BUGGY]  vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  ';'  expected	163	None	replace
70	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  ';'  expected	163	None	replace
71	[BUG]  [BUGGY]  vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  ';'  expected	163	None	replace
72	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                if(isBiasCorrected)        {        var        =        accum        -        (accum2        *        accum2        /        dev);        accum2        +=        dev        *        dev;        }        if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }	  	compilable	  [FE]  AssertionError  	87	3	add
73	[BUG]  [BUGGY]          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                if(isBiasCorrected)        {        var        =        accum        -        (accum2        *        accum2        /        dev);        accum2        +=        dev        *        dev;        }        if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }	  	compilable	  [FE]  AssertionError  	87	3	add
74	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  if(isBiasCorrected)  {  accum  -=  accum2  *  accum2  /  dev;  accum2  +=  dev  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                if(isBiasCorrected)        {        var        =        accum        -        (accum2        *        accum2        /        dev);        accum2        +=        dev        *        dev;        }        if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  accum  -=  accum2  *  accum2  /  dev;  accum2  +=  dev  *  dev;  }	  	compilable	  [FE]  AssertionError  	87	3	add
75	[BUG]  [BUGGY]          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  if(isBiasCorrected)  {  accum  -=  accum2  *  accum2  /  dev;  accum2  +=  dev  *  dev;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  if(isBiasCorrected)  {  accum  -=  accum2  *  accum2  /  dev;  accum2  +=  dev  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                if(isBiasCorrected)        {        var        =        accum        -        (accum2        *        accum2        /        dev);        accum2        +=        dev        *        dev;        }        if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  accum  -=  accum2  *  accum2  /  dev;  accum2  +=  dev  *  dev;  }	  	compilable	  [FE]  AssertionError  	87	3	add
76	[BUG]  [BUGGY]          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  else  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  else  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                if(isBiasCorrected)        {        var        =        accum        -        (accum2        *        accum2        /        dev);        accum2        +=        dev        *        dev;        }        if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  else  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev	  	non-compiled	[CE]  ')'  expected	87	None	add
77	[BUG]  [BUGGY]          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  else  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  else  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                if(isBiasCorrected)        {        var        =        accum        -        (accum2        *        accum2        /        dev);        accum2        +=        dev        *        dev;        }        if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  else  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /	  	non-compiled	[CE]  ')'  expected	87	None	add
78	[BUG]  [BUGGY]  while(!isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }	  while(!incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
79	[BUG]  [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }	  while(!incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
80	[BUG]  [BUGGY]  while(!incMoment  &&  isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!incMoment  &&  isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!incMoment  &&  isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }	  while(!incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
81	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights  }  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    weights    >=    ';'    	non-compiled	[CE]  ';'  expected	31	None	replace
82	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev2  +=  weights[i]  *  dev;  }  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev2  +=  weights[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  ';'  expected	18	None	replace
83	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev2  +=  values[i]  *  dev;  }  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev2  +=  values[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  ';'  expected	18	None	replace
84	[BUG]  [BUGGY]  luate(secondMoment,  begin,  begin  +  length))  {  dev2  +=  weights[i]  *  dev;  }  [CE]  ';'  expected  [FE]                            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(secondMoment,  begin,  begin  +  length))  {  dev2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(secondMoment,  begin,  begin  +  length))  {  dev2  +=  weights[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  ';'  expected	18	None	replace
85	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev1  +=  weights[i]  *  dev;  }  [CE]  ';'  expected  [FE]                              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev1  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev1  +=  weights[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  ';'  expected	18	None	replace
86	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
87	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  sumWts  =  values.length  -  1;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	int  sumWts  =  values.length  -  1;	  int    sumWts    =    values.length;    	compilable	  [FE]  AssertionError  	132	3	replace
88	[BUG]  [BUGGY]  int  sumWts  =  values.length  -  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  sumWts  =  values.length  -  1;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  sumWts  =  values.length  -  1;	  int    sumWts    =    values.length;    	compilable	  [FE]  AssertionError  	132	3	replace
89	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  sumWts  =  weights.length  -  1;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	int  sumWts  =  weights.length  -  1;	  int    sumWts    =    values.length;    	compilable	  [FE]  AssertionError  	132	3	replace
90	[BUG]  [BUGGY]  int  sumWts  =  weights.length  -  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  sumWts  =  weights.length  -  1;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  sumWts  =  weights.length  -  1;	  int    sumWts    =    values.length;    	compilable	  [FE]  AssertionError  	132	3	replace
91	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  sumWts  =  weights.length;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	int  sumWts  =  weights.length;	  int    sumWts    =    values.length;    	compilable	  [FE]  AssertionError  	132	3	replace
92	[BUG]  [BUGGY]  int  sumWts  =  weights.length;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  sumWts  =  weights.length;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  sumWts  =  weights.length;	  int    sumWts    =    values.length;    	compilable	  [FE]  AssertionError  	132	3	replace
93	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  sumWts  =  0;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	int  sumWts  =  0;	  int    sumWts    =    values.length;    	compilable	  [FE]  AssertionError  	132	2	replace
94	[BUG]  [BUGGY]  int  sumWts  =  0;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  sumWts  =  0;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  sumWts  =  0;	  int    sumWts    =    values.length;    	compilable	  [FE]  AssertionError  	132	2	replace
95	[BUG]  [BUGGY]  double  sumWts  =  Math.abs(values[i]  -  dev);  [CE]  cannot  find  symbol  i  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  Math.abs(values[i]  -  dev);  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  Math.abs(values[i]  -  dev);	  double    sumWts    =    Math.abs(values[i]    -    mean);    	non-compiled	[CE]  cannot  find  symbol  i	161	None	replace
96	[BUG]  [BUGGY]  double  sumWts  =  Math.abs(values[i]  /  mean);  [CE]  cannot  find  symbol  i  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  Math.abs(values[i]  /  mean);  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  Math.abs(values[i]  /  mean);	  double    sumWts    =    Math.abs(values[i]    -    mean);    	non-compiled	[CE]  cannot  find  symbol  i	161	None	replace
97	[BUG]  [BUGGY]  double  sumWts  =  Math.abs(values[i]  -  mean,  dev);  [CE]  cannot  find  symbol  i  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  Math.abs(values[i]  -  mean,  dev);  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  Math.abs(values[i]  -  mean,  dev);	  double    sumWts    =    Math.abs(values[i]    -    mean);    	non-compiled	[CE]  cannot  find  symbol  i	161	None	replace
98	[BUG]  [BUGGY]  long  sumWts  =  0.0;  [CE]  possible  loss  of  precision  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  long  sumWts  =  0.0;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	long  sumWts  =  0.0;	  double    sumWts    =    0.0;    long    sumWts    =    0.0;    	non-compiled	[CE]  possible  loss  of  precision	47	None	replace
99	[BUG]  [BUGGY]  null  sumWts  =  0.0;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  null  sumWts  =  0.0;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	null  sumWts  =  0.0;	  double    sumWts    =    0.0;    long    sumWts    =    0.0;    	non-compiled	[CE]  not  a  statement	47	None	replace
100	[BUG]  [BUGGY]  accum  -=  values[i]  -  dev  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  [CE]  cannot  find  symbol  i  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  accum  -=  values[i]  -  dev  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	accum  -=  values[i]  -  dev  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    dev    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  i	159	None	replace
101	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    dev    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	159	None	replace
102	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	62	None	replace
103	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  mean;  accum2  -=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	62	None	replace
104	[BUG]  [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev2  +=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev2  +=  values[i]  *  dev;  }	  while(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
105	[BUG]  [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  dev;  }	  while(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
106	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[0]  *  DEV;  }  [CE]  >  expected  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[0]  *  DEV;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[0]  *  DEV;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    DEV;    }    	non-compiled	[CE]  >  expected	122	None	replace
107	[BUG]  [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
108	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  ';'  expected	15	None	replace
109	[BUG]  [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev2  +=  weights[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev2  +=  weights[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
110	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  begin  +  width;  accum2  +=  weights[i]  *  dev;  }  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  begin  +  width;  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  begin  +  width;  accum2  +=  weights[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  ';'  expected	15	None	replace
111	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    weights[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	80	3	add
112	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    weights[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	80	3	add
113	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    weights[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	80	3	add
114	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    weights[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	80	3	add
115	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum2  +=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  Accum2  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    weights[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum2  +=  values[i]  *  dev;  }	  	non-compiled	[CE]  cannot  find  symbol  Accum2	80	None	add
116	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  DEV;  }  [CE]  cannot  find  symbol  DEV  [FE]          AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  DEV;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    weights[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  DEV;  }	  	non-compiled	[CE]  cannot  find  symbol  DEV	80	None	add
117	[BUG]  [BUGGY]  if(!incMoment)  {  var  =  accum  -  (accum1  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [CE]  cannot  find  symbol  accum1  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(!incMoment)  {  var  =  accum  -  (accum1  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(!incMoment)  {  var  =  accum  -  (accum1  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }	  if(!incMoment)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  accum1	119	None	replace
118	[BUG]  [BUGGY]  AssertionError.show(accum,  dev,  isBiasCorrected);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum,  dev,  isBiasCorrected);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum,  dev,  isBiasCorrected);	  AssertionError.show(accum,    isBiasCorrected,    dev);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
119	[BUG]  [BUGGY]  AssertionError.show(dev,  isBiasCorrected,  accum);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(dev,  isBiasCorrected,  accum);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(dev,  isBiasCorrected,  accum);	  AssertionError.show(accum,    isBiasCorrected,    dev);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
120	[BUG]  [BUGGY]  AssertionError.show(accum,  isBiasCorrected,  dev,  dev);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum,  isBiasCorrected,  dev,  dev);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum,  isBiasCorrected,  dev,  dev);	  AssertionError.show(accum,    isBiasCorrected,    dev);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
121	[BUG]  [BUGGY]  if(isBiasCorrected)  {  sumWts  +=  weights[i];  }  [CE]  cannot  find  symbol  sumWts  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  sumWts  +=  weights[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  sumWts  +=  weights[i];  }	  if(isBiasCorrected)    {    sumWts    +=    values[i];    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	134	None	replace
122	[BUG]  [BUGGY]  incMoment)  {  sumWts  +=  values[i];  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  incMoment)  {  sumWts  +=  values[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	incMoment)  {  sumWts  +=  values[i];  }	  if(isBiasCorrected)    {    sumWts    +=    values[i];    }    	non-compiled	[CE]  not  a  statement	134	None	replace
123	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  positions[i]  *  dev;  }  [CE]  cannot  find  symbol  positions  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  positions[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  positions[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    positions[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  positions	153	None	replace
124	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  positions[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  positions[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  positions[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    positions[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
125	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  positions[i]  *  dev;  }  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  positions[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  positions[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    positions[i]    *    dev;    }    	non-compiled	[CE]  >  expected	153	None	replace
126	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  positions[i]  *  mean;  accum2  -=  positions[i]  *  dev;  }  [CE]  cannot  find  symbol  positions  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  positions[i]  *  mean;  accum2  -=  positions[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  positions[i]  *  mean;  accum2  -=  positions[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    positions[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  positions	153	None	replace
127	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  sumWts  =  1;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	int  sumWts  =  1;	  double    sumWts    =    1;    long    sumWts    =    1;    	compilable	  [FE]  AssertionError  	10	3	replace
128	[BUG]  [BUGGY]  int  sumWts  =  1;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  sumWts  =  1;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  sumWts  =  1;	  double    sumWts    =    1;    long    sumWts    =    1;    	compilable	  [FE]  AssertionError  	10	3	replace
129	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  long  sumWts  =  1;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	long  sumWts  =  1;	  double    sumWts    =    1;    long    sumWts    =    1;    	compilable	  [FE]  AssertionError  	10	3	replace
130	[BUG]  [BUGGY]  long  sumWts  =  1;  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  long  sumWts  =  1;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	long  sumWts  =  1;	  double    sumWts    =    1;    long    sumWts    =    1;    	compilable	  [FE]  AssertionError  	10	3	replace
131	[BUG]  [BUGGY]  luate(accum,  begin,  length));  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(accum,  begin,  length));  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(accum,  begin,  length));	  luate(secondMoment,    begin,    begin    +    length));    	non-compiled	[CE]  ';'  expected	111	None	replace
132	[BUG]  [BUGGY]  luate(m2,  begin,  begin  +  length));  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(m2,  begin,  begin  +  length));  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(m2,  begin,  begin  +  length));	  luate(secondMoment,    begin,    begin    +    length));    	non-compiled	[CE]  ';'  expected	111	None	replace
133	[BUG]  [BUGGY]  luate(secondMoment,  begin,  length,  dev));  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(secondMoment,  begin,  length,  dev));  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(secondMoment,  begin,  length,  dev));	  luate(secondMoment,    begin,    begin    +    length));    	non-compiled	[CE]  ';'  expected	111	None	replace
134	[BUG]  [BUGGY]  luate(secondMoment,  begin,  length,  weights.length));  [CE]  ';'  expected  [FE]                            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(secondMoment,  begin,  length,  weights.length));  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(secondMoment,  begin,  length,  weights.length));	  luate(secondMoment,    begin,    begin    +    length));    	non-compiled	[CE]  ';'  expected	111	None	replace
135	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    weights[i]    	non-compiled	[CE]  ';'  expected	117	None	replace
136	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    weights[i]    	non-compiled	[CE]  ';'  expected	117	None	replace
137	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    weights[i]    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
138	[BUG]  [BUGGY]  vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  poids[i]  *  (dev  *  dev);  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  poids[i]  *  (dev  *  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  poids[i]  *  (dev  *  dev);  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    poids[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  ';'  expected	165	None	replace
139	[BUG]  [BUGGY]  vices.add(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  poids[i]  *  (dev  *  dev);  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  vices.add(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  poids[i]  *  (dev  *  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	vices.add(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  poids[i]  *  (dev  *  dev);  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    poids[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  ';'  expected	165	None	replace
140	[BUG]  [BUGGY]  vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  poids[i]  *  (dev  *  dev  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  poids[i]  *  (dev  *  dev  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  poids[i]  *  (dev  *  dev	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    poids[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  ';'  expected	165	None	replace
141	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
142	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
143	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
144	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights!=  '  [CE]  illegal  line  end  in  character  literal  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights!=  '  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights!=  '	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    weights    >=    '    	non-compiled	[CE]  illegal  line  end  in  character  literal	156	None	replace
145	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights  >=  '  [CE]  illegal  line  end  in  character  literal  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights  >=  '  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights  >=  '	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    weights    >=    '    	non-compiled	[CE]  illegal  line  end  in  character  literal	156	None	replace
146	[BUG]  [BUGGY]  double  sumWts  =  1.0d;  double  sumWts  =  1.0d;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  1.0d;  double  sumWts  =  1.0d;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    1.0d;    double  sumWts  =  1.0d;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	102	None	add
147	[BUG]  [BUGGY]  double  sumWts  =  1.0d;  Double  sumWts  =  1.0d;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  1.0d;  Double  sumWts  =  1.0d;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    1.0d;    Double  sumWts  =  1.0d;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	102	None	add
148	[BUG]  [BUGGY]  double  sumWts  =  1.0d;  int  sumWts  =  1.0d;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  1.0d;  int  sumWts  =  1.0d;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    1.0d;    int  sumWts  =  1.0d;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	102	None	add
149	[BUG]  [BUGGY]  double  sumWts  =  1.0d;  double  sumWts  =  0.0d;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  1.0d;  double  sumWts  =  0.0d;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    1.0d;    double  sumWts  =  0.0d;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	102	None	add
150	[BUG]  [BUGGY]  double  sumWts  =  1.0d;  long  sumWts  =  1.0d;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  1.0d;  long  sumWts  =  1.0d;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    1.0d;    long  sumWts  =  1.0d;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	102	None	add
151	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  +=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  +=  values[i]  *  dev;  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev    *    dev;    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
152	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  +=  weights[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  +=  weights[i]  *  dev;  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev    *    dev;    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
153	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev    *    dev;    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
154	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
155	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  -=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  -=  values[i]  *  dev;  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
156	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  weights[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  weights[i]  *  dev;  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
157	[BUG]  [BUGGY]  AssertionError.show(accum2,  dev,  length);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum2,  dev,  length);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum2,  dev,  length);	  AssertionError.show(accum2,    length);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
158	[BUG]  [BUGGY]  AssertionError.show(accum2,  dev);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum2,  dev);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum2,  dev);	  AssertionError.show(accum2,    length);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
159	[BUG]  [BUGGY]  AssertionError.show(accum,  dev,  length);  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum,  dev,  length);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum,  dev,  length);	  AssertionError.show(accum2,    length);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
160	[BUG]  [BUGGY]  AssertionError.show(mean,  accum2,  length);  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(mean,  accum2,  length);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(mean,  accum2,  length);	  AssertionError.show(accum2,    length);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
161	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weight  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weight  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weight	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    weights!=    '    	non-compiled	[CE]  ';'  expected	30	None	replace
162	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *dev  *  dev;  accum2  +=  weights  }  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *dev  *  dev;  accum2  +=  weights  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *dev  *  dev;  accum2  +=  weights  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    weights!=    '    	non-compiled	[CE]  ';'  expected	30	None	replace
163	[BUG]  [BUGGY]  double  sumWts  =  values[i]  *  dev;  [CE]  cannot  find  symbol  i  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  values[i]  *  dev;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  values[i]  *  dev;	  double    sumWts    =    values[i]    /    dev;    	non-compiled	[CE]  cannot  find  symbol  i	160	None	replace
164	[BUG]  [BUGGY]  double  sumWts  =  weights[i]  /  dev;  [CE]  cannot  find  symbol  i  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  weights[i]  /  dev;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  weights[i]  /  dev;	  double    sumWts    =    values[i]    /    dev;    	non-compiled	[CE]  cannot  find  symbol  i	160	None	replace
165	[BUG]  [BUGGY]  double  sumWts  =  values[i]  /  dev2;  [CE]  cannot  find  symbol  i  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  values[i]  /  dev2;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  values[i]  /  dev2;	  double    sumWts    =    values[i]    /    dev;    	non-compiled	[CE]  cannot  find  symbol  i	160	None	replace
166	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(!incMoment)  {  var  =  accum  -  (dev  *  accum2  /  dev);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(!incMoment)  {  var  =  accum  -  (dev  *  accum2  /  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(!incMoment)  {  var  =  accum  -  (dev  *  accum2  /  dev);  }	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    if(!incMoment)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    }    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
167	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (dev  *  accum2  /  dev);  }  [CE]  cannot  find  symbol  sumWts  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (dev  *  accum2  /  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (dev  *  accum2  /  dev);  }	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    if(!incMoment)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	151	None	replace
168	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(isBiasCorrected)  {  var  =  accum  -  (dev  *  dev  /  dev);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(isBiasCorrected)  {  var  =  accum  -  (dev  *  dev  /  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(isBiasCorrected)  {  var  =  accum  -  (dev  *  dev  /  dev);  }	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    if(isBiasCorrected)    {    var    =    accum    -    (dev    *    accum2    /    dev);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
169	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (dev  *  accum2  /  dev);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (dev  *  accum2  /  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (dev  *  accum2  /  dev);  }	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    if(isBiasCorrected)    {    var    =    accum    -    (dev    *    accum2    /    dev);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
170	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(isBiasCorrected)  {  var  =  accum  -  (dev  *  dev);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(isBiasCorrected)  {  var  =  accum  -  (dev  *  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(isBiasCorrected)  {  var  =  accum  -  (dev  *  dev);  }	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    if(isBiasCorrected)    {    var    =    accum    -    (dev    *    accum2    /    dev);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
171	[BUG]  [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  dev  *  values[i];  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  dev  *  values[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  dev  *  values[i];  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    dev    *    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
172	[BUG]  [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  dev  *  values[i];  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  dev  *  values[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  dev  *  values[i];  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    dev    *    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
173	[BUG]  [BUGGY]  while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  dev  *  values[i];  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  dev  *  values[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  dev  *  values[i];  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    dev    *    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
174	[BUG]  [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  values[i];  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  values[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  values[i];  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    dev    *    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
175	[BUG]  [BUGGY]  double  amountWts  =  1;  [CE]  cannot  find  symbol  sumWts  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  amountWts  =  1;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  amountWts  =  1;	  double    sumWts    =    1;    double    amountWts    =    1;    	non-compiled	[CE]  cannot  find  symbol  sumWts	11	None	replace
176	[BUG]  [BUGGY]  double  i  =  begin;  i  <  begin  +  length;  i++)  {  if(isBiasCorrected)  {  var  =  accum  -  (dev  *  accum2  /  dev);  }  [CE]  >  expected  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  i  =  begin;  i  <  begin  +  length;  i++)  {  if(isBiasCorrected)  {  var  =  accum  -  (dev  *  accum2  /  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  i  =  begin;  i  <  begin  +  length;  i++)  {  if(isBiasCorrected)  {  var  =  accum  -  (dev  *  accum2  /  dev);  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    if(isBiasCorrected)    {    var    =    accum    -    (dev    *    accum2    /    dev);    }    	non-compiled	[CE]  >  expected	130	None	replace
177	[BUG]  [BUGGY]  if(incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (dev  *  accum2  /  dev);  }  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (dev  *  accum2  /  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (dev  *  accum2  /  dev);  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    if(isBiasCorrected)    {    var    =    accum    -    (dev    *    accum2    /    dev);    }    	non-compiled	[CE]  >  expected	130	None	replace
178	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(isBiasCorrected)  {  var  =  accum  -  (dev  *  dev  /  dev);  }  [CE]  >  expected  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(isBiasCorrected)  {  var  =  accum  -  (dev  *  dev  /  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(isBiasCorrected)  {  var  =  accum  -  (dev  *  dev  /  dev);  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    if(isBiasCorrected)    {    var    =    accum    -    (dev    *    accum2    /    dev);    }    	non-compiled	[CE]  >  expected	130	None	replace
179	[BUG]  [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }	  if(!incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
180	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  -=  values[i]  *  dev  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  -=  values[i]  *  dev  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  -=  values[i]  *  dev	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev    *    dev;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  ';'  expected	85	None	replace
181	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	74	3	add
182	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	74	3	add
183	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	74	3	add
184	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	74	3	add
185	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  DEV;  }  [CE]  cannot  find  symbol  DEV  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  DEV;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  DEV;  }	  	non-compiled	[CE]  cannot  find  symbol  DEV	74	None	add
186	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	61	3	add
187	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	61	3	add
188	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	61	3	add
189	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	61	3	add
190	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	61	3	add
191	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	61	3	add
192	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  mean;  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	61	3	add
193	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  mean;  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	61	3	add
194	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	61	3	add
195	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  dev;  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	61	3	add
196	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  -=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  DEV  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  -=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    DEV);    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  DEV	51	None	replace
197	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  -=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  -=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    DEV);    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
198	[BUG]  [BUGGY]  accum  -=  values[i]  *  (dev  *  DEV);  accum2  -=  values[i]  *  dev;  [CE]  cannot  find  symbol  i  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  accum  -=  values[i]  *  (dev  *  DEV);  accum2  -=  values[i]  *  dev;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	accum  -=  values[i]  *  (dev  *  DEV);  accum2  -=  values[i]  *  dev;	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    DEV);    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  i	51	None	replace
199	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	57	3	add
200	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	57	3	add
201	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	57	3	add
202	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	57	3	add
203	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	57	3	add
204	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  dev;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	57	3	add
205	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	57	3	add
206	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	57	3	add
207	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  *  mean;  }  [CE]  cannot  find  symbol  sumWts  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  *  mean;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  *  mean;  }	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    -=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	91	None	replace
208	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  weights[i]  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  weights[i]  *  dev;  }	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    -=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	91	None	replace
209	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	81	None	replace
210	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  dev  *  values[i];  }  [CE]  cannot  find  symbol  sumWts  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  dev  *  values[i];  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  dev  *  values[i];  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	81	None	replace
211	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  dev;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  ';'  expected	67	None	replace
212	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  dev;  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  ';'  expected	67	None	replace
213	[BUG]  [BUGGY]  if(isBiasCorrected)  {  double  sumWts  =  1.0;  double  sumWts  =  0.0;  }  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  double  sumWts  =  1.0;  double  sumWts  =  0.0;  }  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  double  sumWts  =  1.0;  double  sumWts  =  0.0;  }	  double    sumWts    =    1.0;    double    sumWts    =    0.0;    	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	43	None	replace
214	[BUG]  [BUGGY]  if(isBiasCorrected)  {  double  sumWts  =  1.0;  double  sumWts  =  0.0;  }  else  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  width;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  double  sumWts  =  1.0;  double  sumWts  =  0.0;  }  else  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  width;  }  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  double  sumWts  =  1.0;  double  sumWts  =  0.0;  }  else  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  width;  }	  double    sumWts    =    1.0;    double    sumWts    =    0.0;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
215	[BUG]  [BUGGY]  Double  sumWts  =  1;  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Double  sumWts  =  1;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Double  sumWts  =  1;	  double    sumWts    =    1;    Double    sumWts    =    1;    	non-compiled	[CE]  incompatible  types	8	None	replace
216	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Double  sumWts  =  1.0;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	Double  sumWts  =  1.0;	  double    sumWts    =    1;    Double    sumWts    =    1;    	compilable	  [FE]  AssertionError  	8	3	replace
217	[BUG]  [BUGGY]  Double  sumWts  =  1.0;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Double  sumWts  =  1.0;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Double  sumWts  =  1.0;	  double    sumWts    =    1;    Double    sumWts    =    1;    	compilable	  [FE]  AssertionError  	8	3	replace
218	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  }  [CE]  cannot  find  symbol  sumWts  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  }	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	55	None	replace
219	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  weights[i]  -  mean;  accum  +=  weights[i]  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  weights[i]  -  mean;  accum  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  weights[i]  -  mean;  accum  +=  weights[i]  *  dev;  }	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	55	None	replace
220	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	77	3	add
221	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	77	3	add
222	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	77	3	add
223	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	77	3	add
224	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum2  +=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  Accum2  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum2  +=  values[i]  *  dev;  }	  	non-compiled	[CE]  cannot  find  symbol  Accum2	77	None	add
225	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  DEV;  }  [CE]  cannot  find  symbol  DEV  [FE]          AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  DEV;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  DEV;  }	  	non-compiled	[CE]  cannot  find  symbol  DEV	77	None	add
226	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  mean;  }  [CE]  cannot  find  symbol  sumWts  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  mean;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  mean;  }	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    mean;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	129	None	replace
227	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  }  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  }	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    mean;    }    	non-compiled	[CE]  >  expected	129	None	replace
228	[BUG]  [BUGGY]  AssertionError.show(accum2,  isBiasCorrected);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum2,  isBiasCorrected);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum2,  isBiasCorrected);	  AssertionError.show(accum,    isBiasCorrected);    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
229	[BUG]  [BUGGY]  AssertionError.show(accum,  isBiasCorrected,  moment);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum,  isBiasCorrected,  moment);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum,  isBiasCorrected,  moment);	  AssertionError.show(accum,    isBiasCorrected);    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
230	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    }    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
231	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  values[  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  values[  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  values[	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    }    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
232	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  values[i]  *	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    }    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
233	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    }    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
234	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti	          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)    {    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    	non-compiled	[CE]  not  a  statement	89	None	replace
235	[BUG]  [BUGGY]  var  =  accum  -  (accum1  *  accum2  /  dev);  accum2  +=  dev  *  dev;  [CE]  cannot  find  symbol  accum1  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  var  =  accum  -  (accum1  *  accum2  /  dev);  accum2  +=  dev  *  dev;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	var  =  accum  -  (accum1  *  accum2  /  dev);  accum2  +=  dev  *  dev;	  var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    	non-compiled	[CE]  cannot  find  symbol  accum1	99	None	replace
236	[BUG]  [BUGGY]  var  =  accum  -  (accum  *  accum2  /  dev);  accum2  +=  dev  *  dev;  [CE]  cannot  find  symbol  sumWts  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  var  =  accum  -  (accum  *  accum2  /  dev);  accum2  +=  dev  *  dev;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	var  =  accum  -  (accum  *  accum2  /  dev);  accum2  +=  dev  *  dev;	  var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    	non-compiled	[CE]  cannot  find  symbol  sumWts	99	None	replace
237	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	27	None	replace
238	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  -  mean;  accum  +=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  -  mean;  accum  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  -  mean;  accum  +=  values[i]  *  dev;  }	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	27	None	replace
239	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	27	None	replace
240	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  ';'  expected	17	None	replace
241	[BUG]  [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
242	[BUG]  [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev2  +=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev2  +=  values[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
243	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	22	3	add
244	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	22	3	add
245	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	22	3	add
246	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	22	3	add
247	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    dev;    }    if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
248	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    dev;    }    if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
249	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	22	3	add
250	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	22	3	add
251	[BUG]  [BUGGY]  long  sumWts  =  1.0;  [CE]  possible  loss  of  precision  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  long  sumWts  =  1.0;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	long  sumWts  =  1.0;	  double    sumWts    =    1.0;    long    sumWts    =    1.0;    	non-compiled	[CE]  possible  loss  of  precision	42	None	replace
252	[BUG]  [BUGGY]  Integer  sumWts  =  1.0;  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Integer  sumWts  =  1.0;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Integer  sumWts  =  1.0;	  double    sumWts    =    1.0;    long    sumWts    =    1.0;    	non-compiled	[CE]  incompatible  types	42	None	replace
253	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  values[  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  values[  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  values[	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
254	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  start  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  start;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  start;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    double    accum    =    values[i]    -    mean;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  start	125	None	replace
255	[BUG]  [BUGGY]  int  begin  =  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  begin  =  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  begin  =  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    int    begin    =    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  ';'  expected	149	None	replace
256	[BUG]  [BUGGY]  AssertionError.show(accum,  begin,  length,  dev);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum,  begin,  length,  dev);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum,  begin,  length,  dev);	  AssertionError.show(accum,    begin,    length);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
257	[BUG]  [BUGGY]  AssertionError.show(mean,  accum,  length);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(mean,  accum,  length);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(mean,  accum,  length);	  AssertionError.show(accum,    begin,    length);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
258	[BUG]  [BUGGY]  AssertionError.show(accum,  length,  begin);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum,  length,  begin);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum,  length,  begin);	  AssertionError.show(accum,    begin,    length);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
259	[BUG]  [BUGGY]  if(isBiasCorrected)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  dev;  accum2  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  dev;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  dev;  accum2  -=  values[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    dev;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	138	None	replace
260	[BUG]  [BUGGY]  if(isBiasCorrected)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    dev;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	138	None	replace
261	[BUG]  [BUGGY]  if(incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  dev;  accum2  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  dev;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  dev;  accum2  -=  values[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    dev;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	138	None	replace
262	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	52	3	add
263	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	52	3	add
264	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	52	3	add
265	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	52	3	add
266	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
267	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  }	  	compilable	  [FE]  AssertionError  	52	3	add
268	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  }	  	compilable	  [FE]  AssertionError  	52	3	add
269	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  weights[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	52	3	add
270	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  weights[i]  *  dev;  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  weights[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	52	3	add
271	[BUG]  [BUGGY]  if(isBiasCorrected)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	128	None	replace
272	[BUG]  [BUGGY]  if(!incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(!incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(!incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	128	None	replace
273	[BUG]  [BUGGY]  Integer  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Integer  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Integer  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	128	None	replace
274	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum2  +=  values[i]  *  dev;  }  [CE]  >  expected  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum2  +=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	79	None	replace
275	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  DEV;  }  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  DEV;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  DEV;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	79	None	replace
276	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
277	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  accum  -=  values[i]  *  dev;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  accum  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  accum  -=  values[i]  *  dev;  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    	non-compiled	[CE]  ';'  expected	92	None	replace
278	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
279	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  -=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  -=  values[i]  *  dev;  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
280	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	49	3	add
281	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	49	3	add
282	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	49	3	add
283	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  dev;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	49	3	add
284	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	49	3	add
285	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	49	3	add
286	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  -=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  DEV  [FE]          AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  -=  values[i]  *  dev;  }	  	non-compiled	[CE]  cannot  find  symbol  DEV	49	None	add
287	[BUG]  [BUGGY]  if(incMoment)  {  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }	          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    If(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
288	[BUG]  [BUGGY]  accum2  -=  values[i]  *  dev;  [CE]  cannot  find  symbol  i  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  accum2  -=  values[i]  *  dev;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	accum2  -=  values[i]  *  dev;	  accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    	non-compiled	[CE]  cannot  find  symbol  i	86	None	replace
289	[BUG]  [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
290	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  ';'  expected	154	None	replace
291	[BUG]  [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  dev;  accum2  -=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  dev;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  dev;  accum2  -=  values[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
292	[BUG]  [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  weights[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  weights[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
293	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[0]  *  dev;  }  [CE]  >  expected  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[0]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[0]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	73	None	replace
294	[BUG]  [BUGGY]  if(incMoment)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  DEV;  }  [CE]  cannot  find  symbol  DEV  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  DEV;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  DEV;  }	          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    DEV;    }    	non-compiled	[CE]  cannot  find  symbol  DEV	116	None	replace
295	[BUG]  [BUGGY]  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  DEV;  [CE]  cannot  find  symbol  DEV  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  DEV;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  DEV;	          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    DEV;    }    	non-compiled	[CE]  cannot  find  symbol  DEV	116	None	replace
296	[BUG]  [BUGGY]  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  DEV;  }  [CE]  cannot  find  symbol  DEV  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  DEV;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  DEV;  }	          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    DEV;    }    	non-compiled	[CE]  cannot  find  symbol  DEV	116	None	replace
297	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  weights  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  weights  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  weights	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    }    	non-compiled	[CE]  ';'  expected	32	None	replace
298	[BUG]  [BUGGY]  incMoment)  {  sumWts  +=  values[i]  *  dev;  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  incMoment)  {  sumWts  +=  values[i]  *  dev;  }  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	incMoment)  {  sumWts  +=  values[i]  *  dev;  }	  if(isBiasCorrected)    {    sumWts    +=    values[i]    *    dev;    }    	non-compiled	[CE]  not  a  statement	135	None	replace
299	[BUG]  [BUGGY]  while(isBiasCorrected)  {  sumWts  +=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]                          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(isBiasCorrected)  {  sumWts  +=  values[i]  *  dev;  }  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(isBiasCorrected)  {  sumWts  +=  values[i]  *  dev;  }	  if(isBiasCorrected)    {    sumWts    +=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	135	None	replace
300	[BUG]  [BUGGY]  luate(m2,  begin,  begin  +  length);  [CE]  cannot  find  symbol  m2  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(m2,  begin,  begin  +  length);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(m2,  begin,  begin  +  length);	  luate(secondMoment,    begin,    begin    +    length);    	non-compiled	[CE]  cannot  find  symbol  m2	109	None	replace
301	[BUG]  [BUGGY]  luate(mean,  begin,  begin  +  length);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(mean,  begin,  begin  +  length);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(mean,  begin,  begin  +  length);	  luate(secondMoment,    begin,    begin    +    length);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
302	[BUG]  [BUGGY]  luate(accum,  begin,  begin  +  length);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(accum,  begin,  begin  +  length);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(accum,  begin,  begin  +  length);	  luate(secondMoment,    begin,    begin    +    length);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
303	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  weights  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  weights  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  weights	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    	non-compiled	[CE]  ';'  expected	33	None	replace
304	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    	non-compiled	[CE]  ';'  expected	33	None	replace
305	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    	non-compiled	[CE]  ';'  expected	33	None	replace
306	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  weight  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  weight  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  weight	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    	non-compiled	[CE]  ';'  expected	33	None	replace
307	[BUG]  [BUGGY]  double  amountWts  =  0.0;  [CE]  cannot  find  symbol  sumWts  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  amountWts  =  0.0;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  amountWts  =  0.0;	  double    sumWts    =    0.0;    double    amountWts    =    0.0;    	non-compiled	[CE]  cannot  find  symbol  sumWts	48	None	replace
308	[BUG]  [BUGGY]  AssertionError.show(accum2,  dev,  weights[i]  *  length);  [CE]  cannot  find  symbol  i  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum2,  dev,  weights[i]  *  length);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum2,  dev,  weights[i]  *  length);	  AssertionError.show(accum2,    length,    weights[i]    *    dev);    	non-compiled	[CE]  cannot  find  symbol  i	112	None	replace
309	[BUG]  [BUGGY]  AssertionError.show(accum2,  mean,  weights[i]  *  dev);  [CE]  cannot  find  symbol  i  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum2,  mean,  weights[i]  *  dev);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum2,  mean,  weights[i]  *  dev);	  AssertionError.show(accum2,    length,    weights[i]    *    dev);    	non-compiled	[CE]  cannot  find  symbol  i	112	None	replace
310	[BUG]  [BUGGY]  AssertionError.show(accum,  dev,  weights[i]  *  length);  [CE]  cannot  find  symbol  i  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum,  dev,  weights[i]  *  length);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum,  dev,  weights[i]  *  length);	  AssertionError.show(accum2,    length,    weights[i]    *    dev);    	non-compiled	[CE]  cannot  find  symbol  i	112	None	replace
311	[BUG]  [BUGGY]  AssertionError.show(accum2,  length,  values[i]  *  dev);  [CE]  cannot  find  symbol  i  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum2,  length,  values[i]  *  dev);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum2,  length,  values[i]  *  dev);	  AssertionError.show(accum2,    length,    weights[i]    *    dev);    	non-compiled	[CE]  cannot  find  symbol  i	112	None	replace
312	[BUG]  [BUGGY]  if(incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	137	None	replace
313	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	137	None	replace
314	[BUG]  [BUGGY]  if(isBiasCorrected)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	84	None	replace
315	[BUG]  [BUGGY]  if(incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	84	None	replace
316	[BUG]  [BUGGY]  if(!incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(!incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(!incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	84	None	replace
317	[BUG]  [BUGGY]  int  begin  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  begin  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  begin  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    int    begin    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	121	None	replace
318	[BUG]  [BUGGY]  int  begin  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean  *  dev;  }  [CE]  >  expected  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  begin  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  begin  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    int    begin    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	121	None	replace
319	[BUG]  [BUGGY]  int  begin  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[0]  *  dev;  }  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  begin  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[0]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  begin  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[0]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    int    begin    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	121	None	replace
320	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	23	None	replace
321	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
322	[BUG]  [BUGGY]  accum  -=  values[i]  -  dev;  accum2  -=  values[i]  *  dev;  [CE]  cannot  find  symbol  i  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  accum  -=  values[i]  -  dev;  accum2  -=  values[i]  *  dev;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	accum  -=  values[i]  -  dev;  accum2  -=  values[i]  *  dev;	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    dev;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  i	136	None	replace
323	[BUG]  [BUGGY]  int  begin  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [CE]  >  expected  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  begin  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  begin  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    int    begin    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	127	None	replace
324	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum2  +=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum2  +=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    int    begin    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
325	[BUG]  [BUGGY]  double  sumWts  =  1.0  +  mean.length;  [CE]  double  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  1.0  +  mean.length;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  1.0  +  mean.length;	  double    sumWts    =    1.0    +    values.length;    	non-compiled	[CE]  double  cannot  be  dereferenced	140	None	replace
326	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  1.0  +  dev;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	double  sumWts  =  1.0  +  dev;	  double    sumWts    =    1.0    +    values.length;    	compilable	  [FE]  AssertionError  	140	3	replace
327	[BUG]  [BUGGY]  double  sumWts  =  1.0  +  dev;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  1.0  +  dev;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  1.0  +  dev;	  double    sumWts    =    1.0    +    values.length;    	compilable	  [FE]  AssertionError  	140	3	replace
328	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  1.0  +  weights.length;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	double  sumWts  =  1.0  +  weights.length;	  double    sumWts    =    1.0    +    values.length;    	compilable	  [FE]  AssertionError  	140	3	replace
329	[BUG]  [BUGGY]  double  sumWts  =  1.0  +  weights.length;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  1.0  +  weights.length;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  1.0  +  weights.length;	  double    sumWts    =    1.0    +    values.length;    	compilable	  [FE]  AssertionError  	140	3	replace
330	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	75	None	replace
331	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  dev  *  values[i];  }  [CE]  cannot  find  symbol  sumWts  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  dev  *  values[i];  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  dev  *  values[i];  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	75	None	replace
332	[BUG]  [BUGGY]  double  sumWts  =  Math.abs(values[i]  *  dev);  [CE]  cannot  find  symbol  i  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  Math.abs(values[i]  *  dev);  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  Math.abs(values[i]  *  dev);	  double    sumWts    =    Math.abs(values[i]    /    dev);    	non-compiled	[CE]  cannot  find  symbol  i	162	None	replace
333	[BUG]  [BUGGY]  double  sumWts  =  Math.abs(values[i]  /  dev,  mean);  [CE]  cannot  find  symbol  i  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  Math.abs(values[i]  /  dev,  mean);  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  Math.abs(values[i]  /  dev,  mean);	  double    sumWts    =    Math.abs(values[i]    /    dev);    	non-compiled	[CE]  cannot  find  symbol  i	162	None	replace
334	[BUG]  [BUGGY]  double  sumWts  =  Math.abs(values[i]  /  dev2);  [CE]  cannot  find  symbol  i  [FE]                          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  Math.abs(values[i]  /  dev2);  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  Math.abs(values[i]  /  dev2);	  double    sumWts    =    Math.abs(values[i]    /    dev);    	non-compiled	[CE]  cannot  find  symbol  i	162	None	replace
335	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	53	None	replace
336	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
337	[BUG]  [BUGGY]  double  sumWts  =  1.0  +  values.length;  double  sumWts  =  1.0  +  values.length;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  1.0  +  values.length;  double  sumWts  =  1.0  +  values.length;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    1.0    +    values.length;    double  sumWts  =  1.0  +  values.length;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	139	None	add
338	[BUG]  [BUGGY]  double  sumWts  =  1.0  +  values.length;  Double  sumWts  =  1.0  +  values.length;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  1.0  +  values.length;  Double  sumWts  =  1.0  +  values.length;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    1.0    +    values.length;    Double  sumWts  =  1.0  +  values.length;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	139	None	add
339	[BUG]  [BUGGY]  double  sumWts  =  1.0  +  values.length;  int  sumWts  =  1.0  +  values.length;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  1.0  +  values.length;  int  sumWts  =  1.0  +  values.length;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    1.0    +    values.length;    int  sumWts  =  1.0  +  values.length;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	139	None	add
340	[BUG]  [BUGGY]  double  sumWts  =  1.0  +  values.length;  long  sumWts  =  1.0  +  values.length;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  1.0  +  values.length;  long  sumWts  =  1.0  +  values.length;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    1.0    +    values.length;    long  sumWts  =  1.0  +  values.length;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	139	None	add
341	[BUG]  [BUGGY]  double  sumWts  =  1.0  +  values.length;  double  sumWts  =  0.0  +  values.length;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  1.0  +  values.length;  double  sumWts  =  0.0  +  values.length;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    1.0    +    values.length;    double  sumWts  =  0.0  +  values.length;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	139	None	add
342	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    }    	non-compiled	[CE]  ';'  expected	150	None	replace
343	[BUG]  [BUGGY]  Context.checkState(incMoment  ||  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Context.checkState(incMoment  ||  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Context.checkState(incMoment  ||  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    }    	non-compiled	[CE]  ';'  expected	150	None	replace
344	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (dev  *  accum2  /  dev);  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (dev  *  accum2  /  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (dev  *  accum2  /  dev);  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    }    	non-compiled	[CE]  ';'  expected	150	None	replace
345	[BUG]  [BUGGY]  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  dev  /  dev);  accum2  +=  dev  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  dev  /  dev);  accum2  +=  dev  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  dev  /  dev);  accum2  +=  dev  *  dev;  }	  if(incMoment)    {    var    =    accum    -    (accum2    *    dev    /    dev);    accum2    +=    dev    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	147	None	replace
346	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  DEV;  }  [CE]  cannot  find  symbol  DEV  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  DEV;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  DEV;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    DEV;    }    	non-compiled	[CE]  cannot  find  symbol  DEV	63	None	replace
347	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  DEV;  }  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  DEV;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  DEV;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    DEV;    }    	non-compiled	[CE]  >  expected	63	None	replace
348	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  DEV;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  DEV;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  DEV;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    DEV;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
349	[BUG]  [BUGGY]  vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  pounds[i]  *  (dev  *  dev);  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  pounds[i]  *  (dev  *  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  pounds[i]  *  (dev  *  dev);  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    pounds[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  ';'  expected	166	None	replace
350	[BUG]  [BUGGY]  vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  pounds[i]  *  (dev  *  dev);  }  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  pounds[i]  *  (dev  *  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  pounds[i]  *  (dev  *  dev);  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    pounds[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  ';'  expected	166	None	replace
351	[BUG]  [BUGGY]  vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  pounds[i]  *  (dev  *  dev  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  pounds[i]  *  (dev  *  dev  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  pounds[i]  *  (dev  *  dev	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    pounds[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  ';'  expected	166	None	replace
352	[BUG]  [BUGGY]  while(incMoment)  {  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(incMoment)  {  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(incMoment)  {  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  dev;  }	  while(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
353	[BUG]  [BUGGY]  int  sumWts  =  values.length;  int  sumWts  =  values.length;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  sumWts  =  values.length;  int  sumWts  =  values.length;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int    sumWts    =    values.length;    int  sumWts  =  values.length;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	131	None	add
354	[BUG]  [BUGGY]  int  sumWts  =  values.length;  int  amountWts  =  values.length;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  sumWts  =  values.length;  int  amountWts  =  values.length;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int    sumWts    =    values.length;    int  amountWts  =  values.length;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	131	None	add
355	[BUG]  [BUGGY]  int  sumWts  =  values.length;  Int  sumWts  =  values.length;  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  sumWts  =  values.length;  Int  sumWts  =  values.length;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int    sumWts    =    values.length;    Int  sumWts  =  values.length;	  	non-compiled	[CE]  cannot  find  symbol	131	None	add
356	[BUG]  [BUGGY]  int  sumWts  =  values.length;  int  weightWts  =  values.length;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  sumWts  =  values.length;  int  weightWts  =  values.length;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int    sumWts    =    values.length;    int  weightWts  =  values.length;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	131	None	add
357	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  values[length]  -  mean;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	double  sumWts  =  values[length]  -  mean;	  double    sumWts    =    values[i]    -    mean;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	133	3	replace
358	[BUG]  [BUGGY]  double  sumWts  =  values[length]  -  mean;  [FE]  ArrayIndexOutOfBoundsException  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  values[length]  -  mean;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  values[length]  -  mean;	  double    sumWts    =    values[i]    -    mean;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	133	3	replace
359	[BUG]  [BUGGY]  double  sumWts  =  weights[i]  -  mean;  [CE]  cannot  find  symbol  i  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  weights[i]  -  mean;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  weights[i]  -  mean;	  double    sumWts    =    values[i]    -    mean;    	non-compiled	[CE]  cannot  find  symbol  i	133	None	replace
360	[BUG]  [BUGGY]  double  sumWts  =  values[i]  /  mean;  [CE]  cannot  find  symbol  i  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  values[i]  /  mean;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  values[i]  /  mean;	  double    sumWts    =    values[i]    -    mean;    	non-compiled	[CE]  cannot  find  symbol  i	133	None	replace
361	[BUG]  [BUGGY]  var  =  accum  -  (accum1  *  dev  /  dev);  accum2  +=  dev  *  dev;  [CE]  cannot  find  symbol  accum1  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  var  =  accum  -  (accum1  *  dev  /  dev);  accum2  +=  dev  *  dev;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	var  =  accum  -  (accum1  *  dev  /  dev);  accum2  +=  dev  *  dev;	  var    =    accum    -    (accum2    *    dev    /    dev);    accum2    +=    dev    *    dev;    	non-compiled	[CE]  cannot  find  symbol  accum1	146	None	replace
362	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum2  +=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  Accum2  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum2  +=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  Accum2	78	None	replace
363	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  dev  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  dev  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  dev  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	78	None	replace
364	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  DEV;  }  [CE]  cannot  find  symbol  DEV  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  DEV;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  DEV;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    DEV;    }    	non-compiled	[CE]  cannot  find  symbol  DEV	82	None	replace
365	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  Accum2  -=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  Accum2  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  Accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  Accum2  -=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  Accum2	58	None	replace
366	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(!isBiasCorrected)  {  var  =  accum  -  (dev  *  dev  /  dev);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(!isBiasCorrected)  {  var  =  accum  -  (dev  *  dev  /  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(!isBiasCorrected)  {  var  =  accum  -  (dev  *  dev  /  dev);  }	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    if(!isBiasCorrected)    {    var    =    accum    -    (accum2    *    dev    /    dev);    }    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
367	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (accum2  *  dev  /  dev);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (accum2  *  dev  /  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (accum2  *  dev  /  dev);  }	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    if(!isBiasCorrected)    {    var    =    accum    -    (accum2    *    dev    /    dev);    }    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
368	[BUG]  [BUGGY]  if(isBiasCorrected)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [CE]  >  expected  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	143	None	replace
369	[BUG]  [BUGGY]  if(!incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [CE]  >  expected  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(!incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(!incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	143	None	replace
370	[BUG]  [BUGGY]  Integer  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Integer  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Integer  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	143	None	replace
371	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	71	3	add
372	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	71	3	add
373	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	71	3	add
374	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	71	3	add
375	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  DEV;  }  [CE]  cannot  find  symbol  DEV  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  DEV;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  DEV;  }	  	non-compiled	[CE]  cannot  find  symbol  DEV	71	None	add
376	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  -=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  Accum  [FE]          AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  Accum  -=  values[i]  *  dev;  }	  	non-compiled	[CE]  cannot  find  symbol  Accum	71	None	add
377	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *dev  *  dev;  accum2  +=  values[i]  *  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *dev  *  dev;  accum2  +=  values[i]  *  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *dev  *  dev;  accum2  +=  values[i]  *  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    values[i]    *dev    *    dev;    accum2    +=    values[i]    *    }    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
378	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *dev  *  dev;  accum2  +=  values[i]  *  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *dev  *  dev;  accum2  +=  values[i]  *  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *dev  *  dev;  accum2  +=  values[i]  *	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    values[i]    *dev    *    dev;    accum2    +=    values[i]    *    }    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
379	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *dev  *  dev;  accum2  +=  values[i]  *  }  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *dev  *  dev;  accum2  +=  values[i]  *  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *dev  *  dev;  accum2  +=  values[i]  *  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    values[i]    *dev    *    dev;    accum2    +=    values[i]    *    }    	non-compiled	[CE]  ';'  expected	155	None	replace
380	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *dev  *  dev;  accum2  +=  values[i]  *  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *dev  *  dev;  accum2  +=  values[i]  *  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *dev  *  dev;  accum2  +=  values[i]  *	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    values[i]    *dev    *    dev;    accum2    +=    values[i]    *    }    	non-compiled	[CE]  ';'  expected	155	None	replace
381	[BUG]  [BUGGY]  vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  dev;  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
382	[BUG]  [BUGGY]  vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
383	[BUG]  [BUGGY]  if(isMoment)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [CE]  cannot  find  symbol  isMoment  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isMoment)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isMoment)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }	          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  isMoment	88	None	replace
384	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  DEV;  }  [CE]  cannot  find  symbol  DEV  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  DEV;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  DEV;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    DEV;    }    	non-compiled	[CE]  cannot  find  symbol  DEV	126	None	replace
385	[BUG]  [BUGGY]  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  DEV;  [CE]  cannot  find  symbol  i  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  DEV;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  DEV;	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    DEV;    }    	non-compiled	[CE]  cannot  find  symbol  i	126	None	replace
386	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  DEV;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  DEV;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  DEV;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    DEV;    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
387	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  dev;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  ';'  expected	66	None	replace
388	[BUG]  [BUGGY]  vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  dev;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	vice(accum,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  ';'  expected	66	None	replace
389	[BUG]  [BUGGY]  double  sumWts  =  2.0;  double  sumWts  =  2.0;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  2.0;  double  sumWts  =  2.0;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    2.0;    double  sumWts  =  2.0;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	3	None	add
390	[BUG]  [BUGGY]  double  sumWts  =  2.0;  Double  sumWts  =  2.0;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  2.0;  Double  sumWts  =  2.0;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    2.0;    Double  sumWts  =  2.0;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	3	None	add
391	[BUG]  [BUGGY]  double  sumWts  =  2.0;  int  sumWts  =  2.0;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  2.0;  int  sumWts  =  2.0;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    2.0;    int  sumWts  =  2.0;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	3	None	add
392	[BUG]  [BUGGY]  double  sumWts  =  2.0;  long  sumWts  =  2.0;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  2.0;  long  sumWts  =  2.0;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    2.0;    long  sumWts  =  2.0;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	3	None	add
393	[BUG]  [BUGGY]  double  sumWts  =  2.0;  double  sumWts  =  1.0;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  2.0;  double  sumWts  =  1.0;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    2.0;    double  sumWts  =  1.0;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	3	None	add
394	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
395	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
396	[BUG]  [BUGGY]  AssertionError.show(dev,  length,  accum2);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(dev,  length,  accum2);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(dev,  length,  accum2);	  AssertionError.show(accum2,    length,    dev);    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
397	[BUG]  [BUGGY]  AssertionError.show(dev,  accum2,  length);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(dev,  accum2,  length);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(dev,  accum2,  length);	  AssertionError.show(accum2,    length,    dev);    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
398	[BUG]  [BUGGY]  AssertionError.show(accum2,  dev,  weights[i],  length);  [CE]  cannot  find  symbol  i  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum2,  dev,  weights[i],  length);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum2,  dev,  weights[i],  length);	  AssertionError.show(accum2,    length,    weights[i],    dev);    	non-compiled	[CE]  cannot  find  symbol  i	113	None	replace
399	[BUG]  [BUGGY]  AssertionError.show(accum2,  mean,  weights[i],  dev);  [CE]  cannot  find  symbol  i  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum2,  mean,  weights[i],  dev);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum2,  mean,  weights[i],  dev);	  AssertionError.show(accum2,    length,    weights[i],    dev);    	non-compiled	[CE]  cannot  find  symbol  i	113	None	replace
400	[BUG]  [BUGGY]  AssertionError.show(accum2,  weights[i],  dev);  [CE]  cannot  find  symbol  i  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum2,  weights[i],  dev);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum2,  weights[i],  dev);	  AssertionError.show(accum2,    length,    weights[i],    dev);    	non-compiled	[CE]  cannot  find  symbol  i	113	None	replace
401	[BUG]  [BUGGY]  AssertionError.show(accum2,  length,  values[i],  dev);  [CE]  cannot  find  symbol  i  [FE]                          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum2,  length,  values[i],  dev);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum2,  length,  values[i],  dev);	  AssertionError.show(accum2,    length,    weights[i],    dev);    	non-compiled	[CE]  cannot  find  symbol  i	113	None	replace
402	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  +=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  DEV  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  +=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    DEV);    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  DEV	21	None	replace
403	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  +=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  +=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    DEV);    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
404	[BUG]  [BUGGY]  accum  -=  values[i]  *  (dev  *  DEV);  accum2  +=  values[i]  *  dev;  [CE]  cannot  find  symbol  i  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  accum  -=  values[i]  *  (dev  *  DEV);  accum2  +=  values[i]  *  dev;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	accum  -=  values[i]  *  (dev  *  DEV);  accum2  +=  values[i]  *  dev;	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    DEV);    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  i	21	None	replace
405	[BUG]  [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  dev;  }  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  dev;  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
406	[BUG]  [BUGGY]  while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  +=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  +=  values[i]  *  dev;  }	  while(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
407	[BUG]  [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  +=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  +=  values[i]  *  dev;  }	  while(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
408	[BUG]  [BUGGY]  Integer  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Integer  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Integer  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	93	None	replace
409	[BUG]  [BUGGY]  double  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	93	None	replace
410	[BUG]  [BUGGY]  ble  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  ble  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	ble  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	93	None	replace
411	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  dev  *  dev;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  dev  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  dev  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    dev    *    dev;    }    	non-compiled	[CE]  ';'  expected	157	None	replace
412	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev2  +=  dev  *  dev;  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev2  +=  dev  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev2  +=  dev  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    dev    *    dev;    }    	non-compiled	[CE]  ';'  expected	157	None	replace
413	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  +=  dev  *  dev;  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  +=  dev  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  +=  dev  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    dev    *    dev;    }    	non-compiled	[CE]  ';'  expected	157	None	replace
414	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	19	3	add
415	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	19	3	add
416	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	19	3	add
417	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	19	3	add
418	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  +=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  DEV  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  +=  values[i]  *  dev;  }	  	non-compiled	[CE]  cannot  find  symbol  DEV	19	None	add
419	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  +=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	19	3	add
420	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  +=  values[i]  *  dev;  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  +=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	19	3	add
421	[BUG]  [BUGGY]  if(isBiasCorrected)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CE]  >  expected  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  >  expected	124	None	replace
422	[BUG]  [BUGGY]  if(incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CE]  >  expected  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  >  expected	124	None	replace
423	[BUG]  [BUGGY]  if(!incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(!incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(!incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  >  expected	124	None	replace
424	[BUG]  [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  dev);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  dev);  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    weights[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
425	[BUG]  [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  dev);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  dev);  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    weights[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
426	[BUG]  [BUGGY]  luate(secondMoment,  begin,  begin  +  length))  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  dev);  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(secondMoment,  begin,  begin  +  length))  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(secondMoment,  begin,  begin  +  length))  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  dev);  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    weights[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  ';'  expected	164	None	replace
427	[BUG]  [BUGGY]  while(isBiasCorrected)  {  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  dev);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(isBiasCorrected)  {  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(isBiasCorrected)  {  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  dev);  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    weights[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
428	[BUG]  [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
429	[BUG]  [BUGGY]  luate(secondMoment,  begin,  begin  +  length))  {  accum2  +=  weights[i]  *  dev;  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(secondMoment,  begin,  begin  +  length))  {  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(secondMoment,  begin,  begin  +  length))  {  accum2  +=  weights[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  ';'  expected	15	None	replace
430	[BUG]  [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
431	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	60	None	replace
432	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  [CE]  >  expected  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	60	None	replace
433	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	60	None	replace
434	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }  [CE]  >  expected  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	79	None	replace
435	[BUG]  [BUGGY]  if(incMoment)  {  sumWts  +=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  sumWts  +=  values[i]  *  dev;  }  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  sumWts  +=  values[i]  *  dev;  }	  if(isBiasCorrected)    {    sumWts    +=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	135	None	replace
436	[BUG]  [BUGGY]  if(isBiasCorrected)  {  sumWts  +=  weights[i]  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]                          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  sumWts  +=  weights[i]  *  dev;  }  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  sumWts  +=  weights[i]  *  dev;  }	  if(isBiasCorrected)    {    sumWts    +=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	135	None	replace
437	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  -  mean;  accum2  -=  weights[i]  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  -  mean;  accum2  -=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  -  mean;  accum2  -=  weights[i]  *  dev;  }	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	27	None	replace
438	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	27	None	replace
439	[BUG]  [BUGGY]  While(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev2  +=  values[i]  *  dev;  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  While(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	While(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev2  +=  values[i]  *  dev;  }	  while(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  ';'  expected	106	None	replace
440	[BUG]  [BUGGY]  while(!incMoment)  {  begin  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!incMoment)  {  begin  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!incMoment)  {  begin  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    int    begin    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	121	None	replace
441	[BUG]  [BUGGY]  int  begin  =  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  begin  =  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  begin  =  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    int    begin    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    	non-compiled	[CE]  ';'  expected	121	None	replace
442	[BUG]  [BUGGY]  while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  dev;  }  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  dev;  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
443	[BUG]  [BUGGY]  while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  dev;  }  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  dev;  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
444	[BUG]  [BUGGY]  luate(secondMoment,  begin,  begin  +  length))  {  sumWts  +=  values[i]  *  dev;  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(secondMoment,  begin,  begin  +  length))  {  sumWts  +=  values[i]  *  dev;  }  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(secondMoment,  begin,  begin  +  length))  {  sumWts  +=  values[i]  *  dev;  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    values[i]    *    dev;    }    	non-compiled	[CE]  ';'  expected	12	None	replace
445	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean  *  dev;  accum2  -=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean  *  dev;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean  *  dev;  accum2  -=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    double    accum    =    values[i]    -    mean;    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	125	None	replace
446	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(!isBiasCorrected)  {  var  =  accum  -  (dev  *  dev  /  dev);  }  [CE]  >  expected  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(!isBiasCorrected)  {  var  =  accum  -  (dev  *  dev  /  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(!isBiasCorrected)  {  var  =  accum  -  (dev  *  dev  /  dev);  }	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    if(!isBiasCorrected)    {    var    =    accum    -    (accum2    *    dev    /    dev);    }    	non-compiled	[CE]  >  expected	152	None	replace
447	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  *  DEV;  }  [CE]  cannot  find  symbol  DEV  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  *  DEV;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  *  DEV;  }	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    -=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  DEV	91	None	replace
448	[BUG]  [BUGGY]  }  else  if(incMoment)  {  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [CE]  cannot  find  symbol  accum  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  }  else  if(incMoment)  {  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	}  else  if(incMoment)  {  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }	          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    If(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  accum	90	None	replace
449	[BUG]  [BUGGY]  ble  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  ble  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	ble  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	128	None	replace
450	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  accum2  =  0;  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  accum2  =  0;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    dev;    }    double  accum2  =  0;	  	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	22	None	add
451	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  accum2  =  0.0;  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  accum2  =  0.0;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    dev;    }    double  accum2  =  0.0;	  	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	22	None	add
452	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  accum  =  0;  [CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  accum  =  0;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    dev;    }    double  accum  =  0;	  	non-compiled	[CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	22	None	add
453	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  int  begin  =  accum;  [CE]  variable  begin  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  int  begin  =  accum;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    dev;    }    int  begin  =  accum;	  	non-compiled	[CE]  variable  begin  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	22	None	add
454	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  int  begin  =  0;  [CE]  variable  begin  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  int  begin  =  0;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    dev;    }    int  begin  =  0;	  	non-compiled	[CE]  variable  begin  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	22	None	add
455	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  1.0  /  values.length;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	double  sumWts  =  1.0  /  values.length;	  double    sumWts    =    1.0    +    values.length;    	compilable	  [FE]  AssertionError  	140	3	replace
456	[BUG]  [BUGGY]  double  sumWts  =  1.0  /  values.length;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  1.0  /  values.length;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  1.0  /  values.length;	  double    sumWts    =    1.0    +    values.length;    	compilable	  [FE]  AssertionError  	140	3	replace
457	[BUG]  [BUGGY]  luate(secondMoment,  begin,  begin  +  length))  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  dev;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(secondMoment,  begin,  begin  +  length))  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(secondMoment,  begin,  begin  +  length))  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  ';'  expected	67	None	replace
458	[BUG]  [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
459	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	53	None	replace
460	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  double  accum2  =  0;  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  double  accum2  =  0;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    mean;    accum2    -=    values[i]    *    dev;    }    double  accum2  =  0;	  	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	59	None	add
461	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  int  begin  =  start  +  length;  [CE]  variable  begin  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  int  begin  =  start  +  length;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    mean;    accum2    -=    values[i]    *    dev;    }    int  begin  =  start  +  length;	  	non-compiled	[CE]  variable  begin  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	59	None	add
462	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  double  accum2  =  0.0;  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  double  accum2  =  0.0;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    mean;    accum2    -=    values[i]    *    dev;    }    double  accum2  =  0.0;	  	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	59	None	add
463	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  int  begin  =  0;  [CE]  variable  begin  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  int  begin  =  0;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    mean;    accum2    -=    values[i]    *    dev;    }    int  begin  =  0;	  	non-compiled	[CE]  variable  begin  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	59	None	add
464	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  double  accum2  =  1.0;  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  double  accum2  =  1.0;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    mean;    accum2    -=    values[i]    *    dev;    }    double  accum2  =  1.0;	  	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	59	None	add
465	[BUG]  [BUGGY]  luate(secondMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(secondMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(secondMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    }    	non-compiled	[CE]  ';'  expected	150	None	replace
466	[BUG]  [BUGGY]  luate(secondMoment,  begin,  begin  +  length))  {  var  =  accum  -  (accum2  *  accum2  /  dev);  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(secondMoment,  begin,  begin  +  length))  {  var  =  accum  -  (accum2  *  accum2  /  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(secondMoment,  begin,  begin  +  length))  {  var  =  accum  -  (accum2  *  accum2  /  dev);  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    }    	non-compiled	[CE]  ';'  expected	150	None	replace
467	[BUG]  [BUGGY]  luate(secondMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -(values[i]  *  accum2  /  dev);  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(secondMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -(values[i]  *  accum2  /  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(secondMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -(values[i]  *  accum2  /  dev);  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    }    	non-compiled	[CE]  ';'  expected	150	None	replace
468	[BUG]  [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    }    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
469	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  values  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  values  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  values	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    }    	non-compiled	[CE]  ';'  expected	145	None	replace
470	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  *  mean;  }  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  *  mean;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  *  mean;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	93	None	replace
471	[BUG]  [BUGGY]  var  =  accum  -  (dev  *  accum2  /  dev);  accum2  +=  dev  *  dev;  [CE]  cannot  find  symbol  sumWts  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  var  =  accum  -  (dev  *  accum2  /  dev);  accum2  +=  dev  *  dev;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	var  =  accum  -  (dev  *  accum2  /  dev);  accum2  +=  dev  *  dev;	  var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    	non-compiled	[CE]  cannot  find  symbol  sumWts	99	None	replace
472	[BUG]  [BUGGY]  var  =  accum  -  (accum  *  dev  /  dev);  accum2  +=  dev  *  dev;  [CE]  cannot  find  symbol  sumWts  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  var  =  accum  -  (accum  *  dev  /  dev);  accum2  +=  dev  *  dev;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	var  =  accum  -  (accum  *  dev  /  dev);  accum2  +=  dev  *  dev;	  var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    	non-compiled	[CE]  cannot  find  symbol  sumWts	99	None	replace
473	[BUG]  [BUGGY]  ble  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CE]  >  expected  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  ble  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	ble  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  >  expected	124	None	replace
474	[BUG]  [BUGGY]  if(incMoment)  {  sumWts  +=  values[i];  }  [CE]  cannot  find  symbol  sumWts  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  sumWts  +=  values[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  sumWts  +=  values[i];  }	  if(isBiasCorrected)    {    sumWts    +=    values[i];    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	134	None	replace
475	[BUG]  [BUGGY]  ble  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  ble  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	ble  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	26	None	replace
476	[BUG]  [BUGGY]  while(!incMoment)  {  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!incMoment)  {  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!incMoment)  {  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	26	None	replace
477	[BUG]  [BUGGY]  AssertionError.show(accum2,  values[i],  weights[i],  dev);  [CE]  cannot  find  symbol  i  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum2,  values[i],  weights[i],  dev);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum2,  values[i],  weights[i],  dev);	  AssertionError.show(accum2,    length,    weights[i],    dev);    	non-compiled	[CE]  cannot  find  symbol  i	113	None	replace
478	[BUG]  [BUGGY]  if(incMoment)  {  var  =  accum  -  (accum1  *  dev  /  dev);  accum2  +=  dev  *  dev;  }  [CE]  cannot  find  symbol  accum1  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  var  =  accum  -  (accum1  *  dev  /  dev);  accum2  +=  dev  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  var  =  accum  -  (accum1  *  dev  /  dev);  accum2  +=  dev  *  dev;  }	  if(incMoment)    {    var    =    accum    -    (accum2    *    dev    /    dev);    accum2    +=    dev    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  accum1	147	None	replace
479	[BUG]  [BUGGY]  float  sumWts  =  0.0;  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  float  sumWts  =  0.0;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	float  sumWts  =  0.0;	  double    sumWts    =    0.0;    int    sumWts    =    0.0;    	non-compiled	[CE]  possible  loss  of  precision	46	None	replace
480	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  -=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    DEV);    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	51	None	replace
481	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  DEV;  accum2  -=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  DEV;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  DEV;  accum2  -=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    DEV);    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
482	[BUG]  [BUGGY]  luate(secondMoment,  begin,  length));  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(secondMoment,  begin,  length));  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(secondMoment,  begin,  length));	  luate(secondMoment,    begin,    begin    +    length));    	non-compiled	[CE]  ';'  expected	111	None	replace
483	[BUG]  [BUGGY]  luate(values,  begin,  begin  +  length));  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(values,  begin,  begin  +  length));  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(values,  begin,  begin  +  length));	  luate(secondMoment,    begin,    begin    +    length));    	non-compiled	[CE]  ';'  expected	111	None	replace
484	[BUG]  [BUGGY]  luate(secondMoment,  begin,  length  +  1));  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(secondMoment,  begin,  length  +  1));  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(secondMoment,  begin,  length  +  1));	  luate(secondMoment,    begin,    begin    +    length));    	non-compiled	[CE]  ';'  expected	111	None	replace
485	[BUG]  [BUGGY]  luate(values,  begin,  length));  [CE]  ';'  expected  [FE]                            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(values,  begin,  length));  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(values,  begin,  length));	  luate(secondMoment,    begin,    begin    +    length));    	non-compiled	[CE]  ';'  expected	111	None	replace
486	[BUG]  [BUGGY]  For(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  }  [CE]  '.class'  expected  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  For(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	For(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  }	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    mean;    }    	non-compiled	[CE]  '.class'  expected	129	None	replace
487	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  [CE]  >  expected  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    	non-compiled	[CE]  >  expected	54	None	replace
488	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  -=  values[i]  *  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  -=  values[i]  *  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  -=  values[i]  *  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
489	[BUG]  [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  poids[i]  *  (dev  *  dev);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  poids[i]  *  (dev  *  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  poids[i]  *  (dev  *  dev);  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    poids[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
490	[BUG]  [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    poids[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
491	[BUG]  [BUGGY]  luate(secondMoment,  begin,  begin  +  length))  {  dev  =  values[i]  -  mean;  accum  +=  poids[i]  *  (dev  *  dev);  }  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(secondMoment,  begin,  begin  +  length))  {  dev  =  values[i]  -  mean;  accum  +=  poids[i]  *  (dev  *  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(secondMoment,  begin,  begin  +  length))  {  dev  =  values[i]  -  mean;  accum  +=  poids[i]  *  (dev  *  dev);  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    poids[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  ';'  expected	165	None	replace
492	[BUG]  [BUGGY]  luate(secondMoment,  begin,  begin  +  length))  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  }  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(secondMoment,  begin,  begin  +  length))  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(secondMoment,  begin,  begin  +  length))  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    poids[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  ';'  expected	165	None	replace
493	[BUG]  [BUGGY]  Integer  sumWts  =  0.0;  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Integer  sumWts  =  0.0;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Integer  sumWts  =  0.0;	  double    sumWts    =    0.0;    long    sumWts    =    0.0;    	non-compiled	[CE]  incompatible  types	47	None	replace
494	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    }    	non-compiled	[CE]  ';'  expected	35	None	replace
495	[BUG]  [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
496	[BUG]  [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *dev  *  dev;  accum2  +=  values[i]  *  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *dev  *  dev;  accum2  +=  values[i]  *  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *dev  *  dev;  accum2  +=  values[i]  *  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    values[i]    *dev    *    dev;    accum2    +=    values[i]    *    }    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
497	[BUG]  [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *dev  *  dev;  accum2  +=  values[i]  *  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *dev  *  dev;  accum2  +=  values[i]  *  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *dev  *  dev;  accum2  +=  values[i]  *	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    values[i]    *dev    *    dev;    accum2    +=    values[i]    *    }    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
498	[BUG]  [BUGGY]  if(isBiasCorrected)  {  double  sumWts  =  1.0;  double  sumWts  =  1.0;  }  else  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  height;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  double  sumWts  =  1.0;  double  sumWts  =  1.0;  }  else  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  height;  }  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  double  sumWts  =  1.0;  double  sumWts  =  1.0;  }  else  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  height;  }	  double    sumWts    =    1.0;    double    sumWts    =    1.0;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
499	[BUG]  [BUGGY]  else  if(incMoment)  {  var  =  accum  -  (accum1  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [CE]  'else'  without  'if'  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  else  if(incMoment)  {  var  =  accum  -  (accum1  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	else  if(incMoment)  {  var  =  accum  -  (accum1  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }	          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)    {    var    =    accum    -    (accum1    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    	non-compiled	[CE]  'else'  without  'if'	115	None	replace
500	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(!incMoment)  {  var  =  accum  -  (dev  *  accum2  /  dev);  }  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(!incMoment)  {  var  =  accum  -  (dev  *  accum2  /  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(!incMoment)  {  var  =  accum  -  (dev  *  accum2  /  dev);  }	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    if(!incMoment)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    }    	non-compiled	[CE]  >  expected	151	None	replace
501	[BUG]  [BUGGY]  AssertionError.show(accum2,  dev,  begin,  length);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum2,  dev,  begin,  length);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum2,  dev,  begin,  length);	  AssertionError.show(accum,    begin,    length);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
502	[BUG]  [BUGGY]  AssertionError.show(accum2,  begin,  length);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum2,  begin,  length);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum2,  begin,  length);	  AssertionError.show(accum,    begin,    length);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
503	[BUG]  [BUGGY]  AssertionError.show(accum,  dev,  begin,  length);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum,  dev,  begin,  length);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum,  dev,  begin,  length);	  AssertionError.show(accum,    begin,    length);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
504	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  Math.abs(values[length]  -  mean);  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	double  sumWts  =  Math.abs(values[length]  -  mean);	  double    sumWts    =    Math.abs(values[i]    -    mean);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	161	3	replace
505	[BUG]  [BUGGY]  double  sumWts  =  Math.abs(values[length]  -  mean);  [FE]  ArrayIndexOutOfBoundsException  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  Math.abs(values[length]  -  mean);  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  Math.abs(values[length]  -  mean);	  double    sumWts    =    Math.abs(values[i]    -    mean);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	161	3	replace
506	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  Math.abs(values[begin]  -  mean);  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	double  sumWts  =  Math.abs(values[begin]  -  mean);	  double    sumWts    =    Math.abs(values[i]    -    mean);    	compilable	  [FE]  AssertionError  	161	3	replace
507	[BUG]  [BUGGY]  double  sumWts  =  Math.abs(values[begin]  -  mean);  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  Math.abs(values[begin]  -  mean);  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  Math.abs(values[begin]  -  mean);	  double    sumWts    =    Math.abs(values[i]    -    mean);    	compilable	  [FE]  AssertionError  	161	3	replace
508	[BUG]  [BUGGY]  double  sumWts  =  Math.abs(values[b]  -  mean);  [CE]  cannot  find  symbol  b  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  Math.abs(values[b]  -  mean);  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  Math.abs(values[b]  -  mean);	  double    sumWts    =    Math.abs(values[i]    -    mean);    	non-compiled	[CE]  cannot  find  symbol  b	161	None	replace
509	[BUG]  [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  pounds[i]  *  (dev  *  dev);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  pounds[i]  *  (dev  *  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  pounds[i]  *  (dev  *  dev);  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    pounds[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
510	[BUG]  [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  pounds[i]  *  (dev  *  dev);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  pounds[i]  *  (dev  *  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  pounds[i]  *  (dev  *  dev);  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    pounds[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
511	[BUG]  [BUGGY]  luate(secondMoment,  begin,  begin  +  length))  {  dev  =  values[i]  -  mean;  accum  +=  pounds[i]  *  (dev  *  dev);  }  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(secondMoment,  begin,  begin  +  length))  {  dev  =  values[i]  -  mean;  accum  +=  pounds[i]  *  (dev  *  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(secondMoment,  begin,  begin  +  length))  {  dev  =  values[i]  -  mean;  accum  +=  pounds[i]  *  (dev  *  dev);  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    pounds[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  ';'  expected	166	None	replace
512	[BUG]  [BUGGY]  luate(secondMoment,  begin,  length))  {  dev  =  values[i]  -  mean;  accum  +=  pounds[i]  *  (dev  *  dev);  }  [CE]  ';'  expected  [FE]                            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(secondMoment,  begin,  length))  {  dev  =  values[i]  -  mean;  accum  +=  pounds[i]  *  (dev  *  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(secondMoment,  begin,  length))  {  dev  =  values[i]  -  mean;  accum  +=  pounds[i]  *  (dev  *  dev);  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    pounds[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  ';'  expected	166	None	replace
513	[BUG]  [BUGGY]  luate(values,  begin,  begin  +  length);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(values,  begin,  begin  +  length);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(values,  begin,  begin  +  length);	  luate(secondMoment,    begin,    begin    +    length);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
514	[BUG]  [BUGGY]  AssertionError.show(accum,  isBiasCorrected,  dev,  begin  +  length,  incMoment);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum,  isBiasCorrected,  dev,  begin  +  length,  incMoment);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum,  isBiasCorrected,  dev,  begin  +  length,  incMoment);	  AssertionError.show(accum,    isBiasCorrected,    dev,    begin    +    length);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
515	[BUG]  [BUGGY]  while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
516	[BUG]  [BUGGY]  while(incMoment)  {  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(incMoment)  {  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(incMoment)  {  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
517	[BUG]  [BUGGY]  if(!incMoment)  {  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(!incMoment)  {  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(!incMoment)  {  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }	          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
518	[BUG]  [BUGGY]  luate(secondMoment,  begin,  length))  {  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(secondMoment,  begin,  length))  {  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(secondMoment,  begin,  length))  {  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    }    	non-compiled	[CE]  ';'  expected	6	None	replace
519	[BUG]  [BUGGY]  luate(secondMoment,  begin,  length))  {  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (accum2  *  accum2  /  dev  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(secondMoment,  begin,  length))  {  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (accum2  *  accum2  /  dev  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(secondMoment,  begin,  length))  {  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (accum2  *  accum2  /  dev	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    }    	non-compiled	[CE]  ';'  expected	6	None	replace
520	[BUG]  [BUGGY]  luate(secondMoment,  begin,  length))  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(secondMoment,  begin,  length))  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(secondMoment,  begin,  length))  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    }    	non-compiled	[CE]  ';'  expected	6	None	replace
521	[BUG]  [BUGGY]  while(!isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  dev;  }	  while(!incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
522	[BUG]  [BUGGY]  if(!incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(!incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(!incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	137	None	replace
523	[BUG]  [BUGGY]  ble  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  ble  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	ble  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	137	None	replace
524	[BUG]  [BUGGY]  if(!incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  dev;  accum2  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(!incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  dev;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(!incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  dev;  accum2  -=  values[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    dev;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	138	None	replace
525	[BUG]  [BUGGY]  ble  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [CE]  >  expected  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  ble  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	ble  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	143	None	replace
526	[BUG]  [BUGGY]  AssertionError.show(accum2,  dev,  weights[i]  *  dev);  [CE]  cannot  find  symbol  i  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum2,  dev,  weights[i]  *  dev);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum2,  dev,  weights[i]  *  dev);	  AssertionError.show(accum2,    length,    weights[i]    *    dev);    	non-compiled	[CE]  cannot  find  symbol  i	112	None	replace
527	[BUG]  [BUGGY]  AssertionError.show(accum2,  values[i]  *  dev);  [CE]  cannot  find  symbol  i  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum2,  values[i]  *  dev);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum2,  values[i]  *  dev);	  AssertionError.show(accum2,    length,    weights[i]    *    dev);    	non-compiled	[CE]  cannot  find  symbol  i	112	None	replace
528	[BUG]  [BUGGY]  while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  -=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  -=  values[i]  *  dev;  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev    *    dev;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
529	[BUG]  [BUGGY]  while(incMoment)  {  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  -=  values[i]  *  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(incMoment)  {  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  -=  values[i]  *  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(incMoment)  {  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  -=  values[i]  *	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev    *    dev;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
530	[BUG]  [BUGGY]  while(incMoment)  {  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  -=  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(incMoment)  {  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  -=  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(incMoment)  {  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  -=	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev    *    dev;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
531	[BUG]  [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }	  if(!incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
532	[BUG]  [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
533	[BUG]  [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
534	[BUG]  [BUGGY]  while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
535	[BUG]  [BUGGY]  while(incMoment)  {  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(incMoment)  {  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(incMoment)  {  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
536	[BUG]  [BUGGY]  if(incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(isBiasCorrected)  {  var  =  accum  -  (dev  *  accum2  /  dev);  }  [CE]  >  expected  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(isBiasCorrected)  {  var  =  accum  -  (dev  *  accum2  /  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(isBiasCorrected)  {  var  =  accum  -  (dev  *  accum2  /  dev);  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    if(isBiasCorrected)    {    var    =    accum    -    (dev    *    accum2    /    dev);    }    	non-compiled	[CE]  >  expected	130	None	replace
537	[BUG]  [BUGGY]  ble  i  =  begin;  i  <  begin  +  length;  i++)  {  if(isBiasCorrected)  {  var  =  accum  -  (dev  *  accum2  /  dev);  }  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  ble  i  =  begin;  i  <  begin  +  length;  i++)  {  if(isBiasCorrected)  {  var  =  accum  -  (dev  *  accum2  /  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	ble  i  =  begin;  i  <  begin  +  length;  i++)  {  if(isBiasCorrected)  {  var  =  accum  -  (dev  *  accum2  /  dev);  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    if(isBiasCorrected)    {    var    =    accum    -    (dev    *    accum2    /    dev);    }    	non-compiled	[CE]  >  expected	130	None	replace
538	[BUG]  [BUGGY]  luate(secondMoment,  begin,  begin  +  length))  {  accum  -=  values[i]  *  dev;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(secondMoment,  begin,  begin  +  length))  {  accum  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(secondMoment,  begin,  begin  +  length))  {  accum  -=  values[i]  *  dev;  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    	non-compiled	[CE]  ';'  expected	92	None	replace
539	[BUG]  [BUGGY]  luate(secondMoment,  begin,  begin  +  length))  {  accum  -=  values[i]  *  dev;  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(secondMoment,  begin,  begin  +  length))  {  accum  -=  values[i]  *  dev;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(secondMoment,  begin,  begin  +  length))  {  accum  -=  values[i]  *  dev;	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    	non-compiled	[CE]  ';'  expected	92	None	replace
540	[BUG]  [BUGGY]  luate(secondMoment,  begin,  begin  +  length))  {  accum  -=  values[0]  *  dev;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(secondMoment,  begin,  begin  +  length))  {  accum  -=  values[0]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(secondMoment,  begin,  begin  +  length))  {  accum  -=  values[0]  *  dev;  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    	non-compiled	[CE]  ';'  expected	92	None	replace
541	[BUG]  [BUGGY]  AssertionError.show(accum,  begin  +  length,  dev,  isBiasCorrected);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum,  begin  +  length,  dev,  isBiasCorrected);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum,  begin  +  length,  dev,  isBiasCorrected);	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
542	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  }	  	compilable	  [FE]  AssertionError  	74	3	add
543	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  }	  	compilable	  [FE]  AssertionError  	74	3	add
544	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected  ||  incMoment);  [CE]  cannot  find  symbol  Context  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Context.checkState(isBiasCorrected  ||  incMoment);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Context.checkState(isBiasCorrected  ||  incMoment);	  Context.checkState(isBiasCorrected);    	non-compiled	[CE]  cannot  find  symbol  Context	95	None	replace
545	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected  &&  isMoment);  [CE]  cannot  find  symbol  isMoment  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Context.checkState(isBiasCorrected  &&  isMoment);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Context.checkState(isBiasCorrected  &&  isMoment);	  Context.checkState(isBiasCorrected);    	non-compiled	[CE]  cannot  find  symbol  isMoment	95	None	replace
546	[BUG]  [BUGGY]  luate(secondMoment,  begin,  begin  +  length))  {  accum2  +=  values[i]  *  dev;  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(secondMoment,  begin,  begin  +  length))  {  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(secondMoment,  begin,  begin  +  length))  {  accum2  +=  values[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  ';'  expected	17	None	replace
547	[BUG]  [BUGGY]  luate(secondMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(secondMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(secondMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  ';'  expected	17	None	replace
548	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  }  [CE]  >  expected  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	73	None	replace
549	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  double  accum2  =  0;  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  double  accum2  =  0;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    double  accum2  =  0;	  	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	61	None	add
550	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  double  accum2  =  0.0;  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  double  accum2  =  0.0;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    double  accum2  =  0.0;	  	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	61	None	add
551	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  int  begin  =  start  +  length;  [CE]  variable  begin  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  int  begin  =  start  +  length;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    int  begin  =  start  +  length;	  	non-compiled	[CE]  variable  begin  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	61	None	add
552	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  int  begin  =  0;  [CE]  variable  begin  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  int  begin  =  0;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    int  begin  =  0;	  	non-compiled	[CE]  variable  begin  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	61	None	add
553	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  double  accum2  =  1.0;  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  double  accum2  =  1.0;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    double  accum2  =  1.0;	  	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	61	None	add
554	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  Math.abs(values[1]  /  dev);  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	double  sumWts  =  Math.abs(values[1]  /  dev);	  double    sumWts    =    Math.abs(values[i]    /    dev);    	compilable	  [FE]  AssertionError  	162	3	replace
555	[BUG]  [BUGGY]  double  sumWts  =  Math.abs(values[1]  /  dev);  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  Math.abs(values[1]  /  dev);  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  Math.abs(values[1]  /  dev);	  double    sumWts    =    Math.abs(values[i]    /    dev);    	compilable	  [FE]  AssertionError  	162	3	replace
556	[BUG]  [BUGGY]  double  sumWts  =  Math.abs(values[b]  /  dev);  [CE]  cannot  find  symbol  b  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  Math.abs(values[b]  /  dev);  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  Math.abs(values[b]  /  dev);	  double    sumWts    =    Math.abs(values[i]    /    dev);    	non-compiled	[CE]  cannot  find  symbol  b	162	None	replace
557	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  values[length]  /  dev;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	double  sumWts  =  values[length]  /  dev;	  double    sumWts    =    values[i]    /    dev;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	160	3	replace
558	[BUG]  [BUGGY]  double  sumWts  =  values[length]  /  dev;  [FE]  ArrayIndexOutOfBoundsException  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  values[length]  /  dev;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  values[length]  /  dev;	  double    sumWts    =    values[i]    /    dev;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	160	3	replace
559	[BUG]  [BUGGY]  double  sumWts  =  values[b]  /  dev;  [CE]  cannot  find  symbol  b  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  values[b]  /  dev;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  values[b]  /  dev;	  double    sumWts    =    values[i]    /    dev;    	non-compiled	[CE]  cannot  find  symbol  b	160	None	replace
560	[BUG]  [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
561	[BUG]  [BUGGY]  if(!incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(!incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(!incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	70	None	replace
562	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum1  +=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  accum1  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum1  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum1  +=  values[i]  *  dev;  }	  	non-compiled	[CE]  cannot  find  symbol  accum1	77	None	add
563	[BUG]  [BUGGY]  var  =  accum  -  (dev  *  dev  /  dev);  accum2  +=  dev  *  dev;  [CE]  cannot  find  symbol  sumWts  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  var  =  accum  -  (dev  *  dev  /  dev);  accum2  +=  dev  *  dev;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	var  =  accum  -  (dev  *  dev  /  dev);  accum2  +=  dev  *  dev;	  var    =    accum    -    (accum2    *    dev    /    dev);    accum2    +=    dev    *    dev;    	non-compiled	[CE]  cannot  find  symbol  sumWts	146	None	replace
564	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean  *  dev;  accum2  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean  *  dev;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean  *  dev;  accum2  -=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	58	None	replace
565	[BUG]  [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
566	[BUG]  [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
567	[BUG]  [BUGGY]  luate(secondMoment,  begin,  begin  +  length))  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  dev;  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(secondMoment,  begin,  begin  +  length))  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(secondMoment,  begin,  begin  +  length))  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  ';'  expected	66	None	replace
568	[BUG]  [BUGGY]  int  i  =  mean;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  [CE]  >  expected  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  i  =  mean;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  mean;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	20	None	replace
569	[BUG]  [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev1  +=  weights[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev1  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev1  +=  weights[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
570	[BUG]  [BUGGY]  while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  +=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  +=  values[i]  *  dev;  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev    *    dev;    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
571	[BUG]  [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  +=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  +=  values[i]  *  dev;  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev    *    dev;    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
572	[BUG]  [BUGGY]  while(incMoment)  {  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  +=  values[i]  *  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(incMoment)  {  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  +=  values[i]  *  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(incMoment)  {  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  +=  values[i]  *	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev    *    dev;    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
573	[BUG]  [BUGGY]  while(isBiasCorrected)  {  accum2  +=  values[i]  *  dev;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(isBiasCorrected)  {  accum2  +=  values[i]  *  dev;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(isBiasCorrected)  {  accum2  +=  values[i]  *  dev;	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
574	[BUG]  [BUGGY]  while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  values[i];  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  values[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  values[i];  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    dev    *    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
575	[BUG]  [BUGGY]  while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    dev    *    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
576	[BUG]  [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  dev  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  dev  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  dev  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    dev    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
577	[BUG]  [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  dev  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  dev  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  dev  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    dev    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
578	[BUG]  [BUGGY]  luate(secondMoment,  begin,  begin  +  length))  {  accum2  +=  dev  *  dev;  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(secondMoment,  begin,  begin  +  length))  {  accum2  +=  dev  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(secondMoment,  begin,  begin  +  length))  {  accum2  +=  dev  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    dev    *    dev;    }    	non-compiled	[CE]  ';'  expected	157	None	replace
579	[BUG]  [BUGGY]  luate(secondMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  dev  *  dev;  }  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(secondMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  dev  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(secondMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  dev  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    dev    *    dev;    }    	non-compiled	[CE]  ';'  expected	157	None	replace
580	[BUG]  [BUGGY]  if(incMoment)  {  var  =  accum  -  (accum1  *  accum2  /  dev);  accum2  +=  dev  *  DEV;  }  [CE]  cannot  find  symbol  accum1  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  var  =  accum  -  (accum1  *  accum2  /  dev);  accum2  +=  dev  *  DEV;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  var  =  accum  -  (accum1  *  accum2  /  dev);  accum2  +=  dev  *  DEV;  }	          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    DEV;    }    	non-compiled	[CE]  cannot  find  symbol  accum1	116	None	replace
581	[BUG]  [BUGGY]  else  if(incMoment)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  DEV;  }  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  else  if(incMoment)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  DEV;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	else  if(incMoment)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  DEV;  }	          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    DEV;    }    	non-compiled	[CE]  'else'  without  'if'	116	None	replace
582	[BUG]  [BUGGY]  AssertionError.show(accum,  dev);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum,  dev);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum,  dev);	  AssertionError.show(accum,    isBiasCorrected);    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
583	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  +=  values[i]  *  dev;  }  [CE]  >  expected  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  +=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    DEV);    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	21	None	replace
584	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  DEV;  accum2  +=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  DEV;  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  DEV;  accum2  +=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    DEV);    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
585	[BUG]  [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
586	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  double  accum2  =  0;  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  double  accum2  =  0;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    double  accum2  =  0;	  	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	57	None	add
587	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  double  accum2  =  0.0;  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  double  accum2  =  0.0;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    double  accum2  =  0.0;	  	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	57	None	add
588	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  int  begin  =  start  +  length;  [CE]  variable  begin  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  int  begin  =  start  +  length;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    int  begin  =  start  +  length;	  	non-compiled	[CE]  variable  begin  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	57	None	add
589	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  int  begin  =  0;  [CE]  variable  begin  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  int  begin  =  0;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    int  begin  =  0;	  	non-compiled	[CE]  variable  begin  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	57	None	add
590	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  double  accum2  =  1.0;  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  double  accum2  =  1.0;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    double  accum2  =  1.0;	  	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	57	None	add
591	[BUG]  [BUGGY]  if(!incMoment)  {  var  =  accum  -  (dev  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(!incMoment)  {  var  =  accum  -  (dev  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(!incMoment)  {  var  =  accum  -  (dev  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }	  if(!incMoment)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	119	None	replace
592	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  dev  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  [CE]  >  expected  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  dev  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  dev  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    dev    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	159	None	replace
593	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  dev  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  dev  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  dev  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    dev    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	159	None	replace
594	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  dev  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  dev  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  dev  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    dev    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	159	None	replace
595	[BUG]  [BUGGY]  AssertionError.show(DEV,  accum2,  length);  [CE]  cannot  find  symbol  DEV  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(DEV,  accum2,  length);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(DEV,  accum2,  length);	  AssertionError.show(accum2,    length);    	non-compiled	[CE]  cannot  find  symbol  DEV	114	None	replace
596	[BUG]  [BUGGY]  AssertionError.show(accum2,  isBiasCorrected,  dev);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum2,  isBiasCorrected,  dev);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum2,  isBiasCorrected,  dev);	  AssertionError.show(accum,    isBiasCorrected,    dev);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
597	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum1  +=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  accum1  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum1  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    weights[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum1  +=  values[i]  *  dev;  }	  	non-compiled	[CE]  cannot  find  symbol  accum1	80	None	add
598	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i  [CE]  ']'  expected  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    weights[i]    	non-compiled	[CE]  ']'  expected	117	None	replace
599	[BUG]  [BUGGY]  int  sumWts  =  values.length;  int  totalWts  =  values.length;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  sumWts  =  values.length;  int  totalWts  =  values.length;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int    sumWts    =    values.length;    int  totalWts  =  values.length;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	131	None	add
600	[BUG]  [BUGGY]  while(isBiasCorrected)  {  accum2  +=  weights[i]  *  dev;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(isBiasCorrected)  {  accum2  +=  weights[i]  *  dev;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(isBiasCorrected)  {  accum2  +=  weights[i]  *  dev;	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
601	[BUG]  [BUGGY]  if(isBiasCorrected)  {  var  =  accum  -  (accum  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  var  =  accum  -  (accum  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  var  =  accum  -  (accum  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }	  if(incMoment)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	98	None	replace
602	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  poids[i]  *  (dev  *  dev);  accum2  +=  weights  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  poids[i]  *  (dev  *  dev);  accum2  +=  weights  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  poids[i]  *  (dev  *  dev);  accum2  +=  weights  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    weights    }    	non-compiled	[CE]  ';'  expected	28	None	replace
603	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  Accum2  +=  weights  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  Accum2  +=  weights  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  Accum2  +=  weights  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    weights    }    	non-compiled	[CE]  ';'  expected	28	None	replace
604	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  DEV;  }  [CE]  >  expected  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  DEV;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  DEV;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    DEV;    }    	non-compiled	[CE]  >  expected	122	None	replace
605	[BUG]  [BUGGY]  luate(secondMoment,  begin,  begin  +  length))  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  dev;  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(secondMoment,  begin,  begin  +  length))  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(secondMoment,  begin,  begin  +  length))  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
606	[BUG]  [BUGGY]  luate(secondMoment,  begin,  length))  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  dev;  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(secondMoment,  begin,  length))  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(secondMoment,  begin,  length))  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
607	[BUG]  [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  Accum2  +=  weights[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  Accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  Accum2  +=  weights[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
608	[BUG]  [BUGGY]  while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  DEV;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  DEV;  }  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  DEV;  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
609	[BUG]  [BUGGY]  while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  pounds[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  pounds[i]  *  dev;  }  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  pounds[i]  *  dev;  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
610	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  +=  values[i]  *  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  +=  values[i]  *  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  +=  values[i]  *  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
611	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    	non-compiled	[CE]  >  expected	24	None	replace
612	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	62	None	replace
613	[BUG]  [BUGGY]  long  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  long  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	long  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	62	None	replace
614	[BUG]  [BUGGY]  long  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  long  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	long  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	62	None	replace
615	[BUG]  [BUGGY]  while(incMoment)  {  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(incMoment)  {  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(incMoment)  {  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
616	[BUG]  [BUGGY]  while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
617	[BUG]  [BUGGY]  while(incMoment)  {  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(incMoment)  {  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(incMoment)  {  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  ';'  expected	25	None	replace
618	[BUG]  [BUGGY]  while(incMoment)  {  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(incMoment)  {  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(incMoment)  {  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
619	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  double  accum2  =  0;  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  double  accum2  =  0;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    double  accum2  =  0;	  	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	19	None	add
620	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  double  accum2  =  0.0;  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  double  accum2  =  0.0;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    double  accum2  =  0.0;	  	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	19	None	add
621	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  double  accum  =  0;  [CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  double  accum  =  0;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    double  accum  =  0;	  	non-compiled	[CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	19	None	add
622	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  int  begin  =  accum;  [CE]  variable  begin  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  int  begin  =  accum;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    int  begin  =  accum;	  	non-compiled	[CE]  variable  begin  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	19	None	add
623	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  int  begin  =  0;  [CE]  variable  begin  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  int  begin  =  0;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    int  begin  =  0;	  	non-compiled	[CE]  variable  begin  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	19	None	add
624	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights  >>  '  [CE]  illegal  line  end  in  character  literal  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights  >>  '  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights  >>  '	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    weights    >=    ';'    	non-compiled	[CE]  illegal  line  end  in  character  literal	31	None	replace
625	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  positions[i]  -  mean;  accum2  -=  positions[i]  *  dev;  }  [CE]  cannot  find  symbol  positions  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  positions[i]  -  mean;  accum2  -=  positions[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  positions[i]  -  mean;  accum2  -=  positions[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    positions[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  positions	153	None	replace
626	[BUG]  [BUGGY]          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  if(isBiasCorrected)  {  var  =  accum  -  (accum1  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [CE]  cannot  find  symbol  accum1  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  if(isBiasCorrected)  {  var  =  accum  -  (accum1  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                if(isBiasCorrected)        {        var        =        accum        -        (accum2        *        accum2        /        dev);        accum2        +=        dev        *        dev;        }        if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  var  =  accum  -  (accum1  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }	  	non-compiled	[CE]  cannot  find  symbol  accum1	87	None	add
627	[BUG]  [BUGGY]          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  if(isBiasCorrected)  {  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  if(isBiasCorrected)  {  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                if(isBiasCorrected)        {        var        =        accum        -        (accum2        *        accum2        /        dev);        accum2        +=        dev        *        dev;        }        if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }	  	non-compiled	[CE]  not  a  statement	87	None	add
628	[BUG]  [BUGGY]          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum1  /  dev);  accum2  +=  dev  *  dev;  }  [CE]  cannot  find  symbol  accum1  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum1  /  dev);  accum2  +=  dev  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                if(isBiasCorrected)        {        var        =        accum        -        (accum2        *        accum2        /        dev);        accum2        +=        dev        *        dev;        }        if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum1  /  dev);  accum2  +=  dev  *  dev;  }	  	non-compiled	[CE]  cannot  find  symbol  accum1	87	None	add
629	[BUG]  [BUGGY]  AssertionError.show(DEV,  dev,  accum2);  [CE]  cannot  find  symbol  DEV  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(DEV,  dev,  accum2);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(DEV,  dev,  accum2);	  AssertionError.show(accum2,    length,    dev);    	non-compiled	[CE]  cannot  find  symbol  DEV	108	None	replace
630	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  weights[length]  -  mean;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	double  sumWts  =  weights[length]  -  mean;	  double    sumWts    =    values[i]    -    mean;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	133	3	replace
631	[BUG]  [BUGGY]  double  sumWts  =  weights[length]  -  mean;  [FE]  ArrayIndexOutOfBoundsException  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  weights[length]  -  mean;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  weights[length]  -  mean;	  double    sumWts    =    values[i]    -    mean;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	133	3	replace
632	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  values[begin]  -  mean;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	double  sumWts  =  values[begin]  -  mean;	  double    sumWts    =    values[i]    -    mean;    	compilable	  [FE]  AssertionError  	133	3	replace
633	[BUG]  [BUGGY]  double  sumWts  =  values[begin]  -  mean;  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  values[begin]  -  mean;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  values[begin]  -  mean;	  double    sumWts    =    values[i]    -    mean;    	compilable	  [FE]  AssertionError  	133	3	replace
634	[BUG]  [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
635	[BUG]  [BUGGY]  luate(secondMoment,  begin,  length))  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(secondMoment,  begin,  length))  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(secondMoment,  begin,  length))  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  ';'  expected	154	None	replace
636	[BUG]  [BUGGY]  luate(secondMoment,  begin,  begin  +  length))  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  luate(secondMoment,  begin,  begin  +  length))  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(secondMoment,  begin,  begin  +  length))  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  ';'  expected	154	None	replace
637	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  DEV;  }  [CE]  >  expected  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  DEV;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  DEV;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    DEV;    }    	non-compiled	[CE]  >  expected	142	None	replace
638	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  -=  values[i]  *  DEV;  }  [CE]  cannot  find  symbol  DEV  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  -=  values[i]  *  DEV;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  -=  values[i]  *  DEV;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    DEV;    }    	non-compiled	[CE]  cannot  find  symbol  DEV	142	None	replace
639	[BUG]  [BUGGY]  accum  -=  weights[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  [CE]  cannot  find  symbol  i  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  accum  -=  weights[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	accum  -=  weights[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;	  accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    	non-compiled	[CE]  cannot  find  symbol  i	69	None	replace
640	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  weights[i]  -  mean;  accum  +=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  weights[i]  -  mean;  accum  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  weights[i]  -  mean;  accum  +=  values[i]  *  dev;  }	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	56	None	replace
641	[BUG]  [BUGGY]  if(incMoment)  {  var  =  accum  -  (dev  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  var  =  accum  -  (dev  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  var  =  accum  -  (dev  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }	  if(incMoment)    {    var    =    accum    -    (accum1    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	120	None	replace
642	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  double  accum2  =  0;  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  double  accum2  =  0;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    double  accum2  =  0;	  	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	52	None	add
643	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  int  begin  =  start  +  length;  [CE]  variable  begin  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  int  begin  =  start  +  length;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    int  begin  =  start  +  length;	  	non-compiled	[CE]  variable  begin  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	52	None	add
644	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  double  accum2  =  0.0;  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  double  accum2  =  0.0;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    double  accum2  =  0.0;	  	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	52	None	add
645	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  double  accum  =  0;  [CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  double  accum  =  0;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    double  accum  =  0;	  	non-compiled	[CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	52	None	add
646	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  int  begin  =  accum;  [CE]  variable  begin  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  int  begin  =  accum;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    int  begin  =  accum;	  	non-compiled	[CE]  variable  begin  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	52	None	add
647	[BUG]  [BUGGY]  int  begin  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }  [CE]  >  expected  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  begin  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  begin  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    int    begin    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	127	None	replace
648	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  DEV;  }  [CE]  >  expected  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  DEV;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  DEV;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    DEV;    }    	non-compiled	[CE]  >  expected	126	None	replace
649	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  +=  values[i]  *  DEV;  }  [CE]  cannot  find  symbol  DEV  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  +=  values[i]  *  DEV;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  +=  values[i]  *  DEV;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    DEV;    }    	non-compiled	[CE]  cannot  find  symbol  DEV	126	None	replace
650	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  double  accum2  =  0;  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  double  accum2  =  0;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    double  accum2  =  0;	  	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	49	None	add
651	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  int  begin  =  start  +  length;  [CE]  variable  begin  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  int  begin  =  start  +  length;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    int  begin  =  start  +  length;	  	non-compiled	[CE]  variable  begin  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	49	None	add
652	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  double  accum2  =  0.0;  [CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  double  accum2  =  0.0;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    double  accum2  =  0.0;	  	non-compiled	[CE]  variable  accum2  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	49	None	add
653	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  double  accum  =  0;  [CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  double  accum  =  0;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    double  accum  =  0;	  	non-compiled	[CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	49	None	add
654	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  int  begin  =  accum;  [CE]  variable  begin  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  int  begin  =  accum;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    int  begin  =  accum;	  	non-compiled	[CE]  variable  begin  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	49	None	add
655	[BUG]  [BUGGY]  int  i  =  mean;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CE]  >  expected  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  i  =  mean;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  mean;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  >  expected	23	None	replace
656	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  dev  *  values[i]  -  dev  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  dev  *  values[i]  -  dev  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  dev  *  values[i]  -  dev  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    dev    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	159	None	replace
657	[BUG]  [BUGGY]  if(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
658	[BUG]  [BUGGY]  accum  -=  values[i]  *  (dev  *  dev)+  1;  accum2  +=  values[i]  *  dev;  [CE]  cannot  find  symbol  i  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  accum  -=  values[i]  *  (dev  *  dev)+  1;  accum2  +=  values[i]  *  dev;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	accum  -=  values[i]  *  (dev  *  dev)+  1;  accum2  +=  values[i]  *  dev;	  accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    	non-compiled	[CE]  cannot  find  symbol  i	69	None	replace
659	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  dev  *  values[i];  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  dev  *  values[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  dev  *  values[i];  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    dev    *    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
660	[BUG]  [BUGGY]  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  dev  *  values[i];  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  dev  *  values[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  dev  *  values[i];  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    dev    *    values[i];    }    	non-compiled	[CE]  not  a  statement	14	None	replace
661	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    dev    *    values[i];    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
662	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  dev;  }	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	56	None	replace
663	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  DEV;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  DEV;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  DEV;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    DEV;    }    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
664	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  -=  values[i]  *  DEV;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  -=  values[i]  *  DEV;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  -=  values[i]  *  DEV;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    DEV;    }    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
665	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  positions[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  positions[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  positions[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    positions[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
666	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  DEV;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  DEV;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  DEV;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    DEV;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
667	[BUG]  [BUGGY]  MiscUtilities.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (dev  *  accum2  /  dev);  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  MiscUtilities.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (dev  *  accum2  /  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	MiscUtilities.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (dev  *  accum2  /  dev);  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    }    	non-compiled	[CE]  ';'  expected	150	None	replace
668	[BUG]  [BUGGY]  MiscUtilities.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  MiscUtilities.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	MiscUtilities.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    }    	non-compiled	[CE]  ';'  expected	150	None	replace
669	[BUG]  [BUGGY]  MiscUtilities.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (accum2  *  dev  /  dev);  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  MiscUtilities.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (accum2  *  dev  /  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	MiscUtilities.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (accum2  *  dev  /  dev);  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    }    	non-compiled	[CE]  ';'  expected	150	None	replace
670	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  }	  	compilable	  [FE]  AssertionError  	71	3	add
671	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  }	  	compilable	  [FE]  AssertionError  	71	3	add
672	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  double  dev  =  accum  -  mean.doubleValue()  *  dev;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  double  dev  =  accum  -  mean.doubleValue()  *  dev;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    mean;    accum2    -=    values[i]    *    dev;    }    double  dev  =  accum  -  mean.doubleValue()  *  dev;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	59	None	add
673	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  double  dev  =  accum  -  mean.doubleValue();  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  double  dev  =  accum  -  mean.doubleValue();  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    mean;    accum2    -=    values[i]    *    dev;    }    double  dev  =  accum  -  mean.doubleValue();	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	59	None	add
674	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  double  dev  =  accum  -  mean  *  dev;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  double  dev  =  accum  -  mean  *  dev;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    mean;    accum2    -=    values[i]    *    dev;    }    double  dev  =  accum  -  mean  *  dev;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	59	None	add
675	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  double  dev  =  accum  -  mean  *  Math.sqrt(dev);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  double  dev  =  accum  -  mean  *  Math.sqrt(dev);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    mean;    accum2    -=    values[i]    *    dev;    }    double  dev  =  accum  -  mean  *  Math.sqrt(dev);	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	59	None	add
676	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  double  dev  =  accum  -  mean  *  Math.sqrt(mean);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  double  dev  =  accum  -  mean  *  Math.sqrt(mean);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    mean;    accum2    -=    values[i]    *    dev;    }    double  dev  =  accum  -  mean  *  Math.sqrt(mean);	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	59	None	add
677	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  poids[i]  *  (dev  *  dev);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  poids[i]  *  (dev  *  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  poids[i]  *  (dev  *  dev);  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    poids[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
678	[BUG]  [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  poids[i]  *  (dev  *  dev);  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  poids[i]  *  (dev  *  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Context.checkState(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  poids[i]  *  (dev  *  dev);  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    poids[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  ';'  expected	165	None	replace
679	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  dev;  accum2  -=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  dev;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  dev;  accum2  -=  values[i]  *  dev;  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
680	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  dev;  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
681	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
682	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
683	[BUG]  [BUGGY]  AssertionError.show(accum2,  dev,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum2,  dev,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum2,  dev,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    	non-compiled	[CE]  ';'  expected	64	None	replace
684	[BUG]  [BUGGY]  AssertionError.show(accum2,  dev,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum2,  dev,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum2,  dev,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    	non-compiled	[CE]  ';'  expected	64	None	replace
685	[BUG]  [BUGGY]  AssertionError.show(accum2,  dev,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum2,  dev,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum2,  dev,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    	non-compiled	[CE]  ';'  expected	64	None	replace
686	[BUG]  [BUGGY]  AssertionError.show(accum2,  dev,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum2,  dev,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum2,  dev,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    	non-compiled	[CE]  ';'  expected	64	None	replace
687	[BUG]  [BUGGY]  if(incMoment)  {  var  =  accum  -  (accum2  *  dev);  accum2  +=  dev  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  var  =  accum  -  (accum2  *  dev);  accum2  +=  dev  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  var  =  accum  -  (accum2  *  dev);  accum2  +=  dev  *  dev;  }	          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    If(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	90	None	replace
688	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  double  dev  =  accum  -  mean  *  dev;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  double  dev  =  accum  -  mean  *  dev;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    double  dev  =  accum  -  mean  *  dev;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	49	None	add
689	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  double  dev  =  accum  /  dev;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  double  dev  =  accum  /  dev;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    double  dev  =  accum  /  dev;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	49	None	add
690	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  double  dev  =  Math.abs(dev  /  dev);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  double  dev  =  Math.abs(dev  /  dev);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    double  dev  =  Math.abs(dev  /  dev);	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	49	None	add
691	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  double  dev  =  accum  /  dev  *  dev;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  double  dev  =  accum  /  dev  *  dev;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    double  dev  =  accum  /  dev  *  dev;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	49	None	add
692	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  double  dev  =  0;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  double  dev  =  0;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    double  dev  =  0;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	49	None	add
693	[BUG]  [BUGGY]  while(!incMoment)  {  accum  -=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  i  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!incMoment)  {  accum  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!incMoment)  {  accum  -=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  i	73	None	replace
694	[BUG]  [BUGGY]  while(!incMoment)  {  accum  -=  values[0]  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!incMoment)  {  accum  -=  values[0]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!incMoment)  {  accum  -=  values[0]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	73	None	replace
695	[BUG]  [BUGGY]  if(!incMoment)  {  var  =  accum  -  (accum2  *  dev  /  dev);  accum2  +=  dev  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(!incMoment)  {  var  =  accum  -  (accum2  *  dev  /  dev);  accum2  +=  dev  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(!incMoment)  {  var  =  accum  -  (accum2  *  dev  /  dev);  accum2  +=  dev  *  dev;  }	  if(incMoment)    {    var    =    accum    -    (accum2    *    dev    /    dev);    accum2    +=    dev    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	147	None	replace
696	[BUG]  [BUGGY]  if(incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	26	None	replace
697	[BUG]  [BUGGY]  Integer  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Integer  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Integer  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	26	None	replace
698	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	26	None	replace
699	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
700	[BUG]  [BUGGY]  if(incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	128	None	replace
701	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
702	[BUG]  [BUGGY]  while(!incMoment)  {  accum2  +=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  i  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!incMoment)  {  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!incMoment)  {  accum2  +=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  i	78	None	replace
703	[BUG]  [BUGGY]  AssertionError.show(accum,  dev,  weights[i]  *  dev);  [CE]  cannot  find  symbol  i  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum,  dev,  weights[i]  *  dev);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum,  dev,  weights[i]  *  dev);	  AssertionError.show(accum2,    length,    weights[i]    *    dev);    	non-compiled	[CE]  cannot  find  symbol  i	112	None	replace
704	[BUG]  [BUGGY]  AssertionError.show(accum2,  dev,  values[i]  *  dev);  [CE]  cannot  find  symbol  i  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum2,  dev,  values[i]  *  dev);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum2,  dev,  values[i]  *  dev);	  AssertionError.show(accum2,    length,    weights[i]    *    dev);    	non-compiled	[CE]  cannot  find  symbol  i	112	None	replace
705	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  accum2  -=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  accum2  -=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
706	[BUG]  [BUGGY]  int  begin  =  begin  +  length;  accum2  +=  values[i]  *  dev;  [CE]  variable  begin  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  begin  =  begin  +  length;  accum2  +=  values[i]  *  dev;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  begin  =  begin  +  length;  accum2  +=  values[i]  *  dev;	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    int    begin    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  variable  begin  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	127	None	replace
707	[BUG]  [BUGGY]  accum  =  accum  -  (accum2  *  dev);  accum2  +=  dev  *  dev;  [CE]  cannot  find  symbol  sumWts  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  accum  =  accum  -  (accum2  *  dev);  accum2  +=  dev  *  dev;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	accum  =  accum  -  (accum2  *  dev);  accum2  +=  dev  *  dev;	          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)    {    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	89	None	replace
708	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  dev  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CE]  >  expected  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  dev  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  dev  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  >  expected	124	None	replace
709	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  *  dev;  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
710	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  double  dev  =  accum  -  mean.doubleValue();  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  double  dev  =  accum  -  mean.doubleValue();  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    double  dev  =  accum  -  mean.doubleValue();	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	57	None	add
711	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  double  dev  =  accum  -  mean.doubleValue()  *  dev;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  double  dev  =  accum  -  mean.doubleValue()  *  dev;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    double  dev  =  accum  -  mean.doubleValue()  *  dev;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	57	None	add
712	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  double  dev  =  accum  -  mean  *  dev;  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  double  dev  =  accum  -  mean  *  dev;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    double  dev  =  accum  -  mean  *  dev;	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	57	None	add
713	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  double  dev  =  accum  -  mean  *  Math.sqrt(dev);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  double  dev  =  accum  -  mean  *  Math.sqrt(dev);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    double  dev  =  accum  -  mean  *  Math.sqrt(dev);	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	57	None	add
714	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  double  dev  =  accum  -  mean  *  Math.sqrt(mean);  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  double  dev  =  accum  -  mean  *  Math.sqrt(mean);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    double  dev  =  accum  -  mean  *  Math.sqrt(mean);	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	57	None	add
715	[BUG]  [BUGGY]  For(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  *  dev;  }  [CE]  '.class'  expected  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  For(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	For(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  *  dev;  }	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    -=    values[i]    *    dev;    }    	non-compiled	[CE]  '.class'  expected	91	None	replace
716	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *dev  *  dev;  accum2  +=  values[i]  *  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *dev  *  dev;  accum2  +=  values[i]  *  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *dev  *  dev;  accum2  +=  values[i]  *  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    values[i]    *dev    *    dev;    accum2    +=    values[i]    *    }    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
717	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *dev  *  dev;  accum2  +=  values[i]  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *dev  *  dev;  accum2  +=  values[i]  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *dev  *  dev;  accum2  +=  values[i]	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    values[i]    *dev    *    dev;    accum2    +=    values[i]    *    }    	non-compiled	[CE]  ';'  expected	155	None	replace
718	[BUG]  [BUGGY]  AssertionError.show(accum,  dev,  weights[i],  length);  [CE]  cannot  find  symbol  i  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum,  dev,  weights[i],  length);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum,  dev,  weights[i],  length);	  AssertionError.show(accum2,    length,    weights[i],    dev);    	non-compiled	[CE]  cannot  find  symbol  i	113	None	replace
719	[BUG]  [BUGGY]  AssertionError.show(accum1,  dev,  weights[i],  length);  [CE]  cannot  find  symbol  accum1  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum1,  dev,  weights[i],  length);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum1,  dev,  weights[i],  length);	  AssertionError.show(accum2,    length,    weights[i],    dev);    	non-compiled	[CE]  cannot  find  symbol  accum1	113	None	replace
720	[BUG]  [BUGGY]  accum2  +=  weights[i]  *  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  accum2  +=  weights[i]  *  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	accum2  +=  weights[i]  *	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
721	[BUG]  [BUGGY]  Accum2  +=  weights[i]  *  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Accum2  +=  weights[i]  *  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Accum2  +=  weights[i]  *	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
722	[BUG]  [BUGGY]  accum2  +=  dev  *  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  accum2  +=  dev  *  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	accum2  +=  dev  *	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
723	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
724	[BUG]  [BUGGY]  while(!incMoment)  {  accum2  +=  values[i]  *  dev;  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!incMoment)  {  accum2  +=  values[i]  *  dev;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!incMoment)  {  accum2  +=  values[i]  *  dev;	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
725	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }  double  dev  =  values[i]  -  mean;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }  double  dev  =  values[i]  -  mean;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    weights[i]    *    dev;    }    double  dev  =  values[i]  -  mean;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	80	None	add
726	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  dev;  }	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	55	None	replace
727	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  poids[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  poids[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  poids[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
728	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  dev);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  dev);  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
729	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  +=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  +=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    DEV);    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
730	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights  >  '  [CE]  illegal  line  end  in  character  literal  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights  >  '  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights  >  '	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    weights    >=    ';'    	non-compiled	[CE]  illegal  line  end  in  character  literal	31	None	replace
731	[BUG]  [BUGGY]  int  begin  =  begin  +  length;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  begin  =  begin  +  length;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  begin  =  begin  +  length;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    int    begin    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	121	None	replace
732	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  +=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  +=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
733	[BUG]  [BUGGY]  int  sumWts  =  values.length;  double  sumWts  =  values.length;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  sumWts  =  values.length;  double  sumWts  =  values.length;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int    sumWts    =    values.length;    double  sumWts  =  values.length;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	131	None	add
734	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	52	3	add
735	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  dev;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	52	3	add
736	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	52	3	add
737	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  accum2  -=  values[i]  *  dev;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	52	3	add
738	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
739	[BUG]  [BUGGY]  AssertionError.show(accum2,  dev,  accum2);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum2,  dev,  accum2);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum2,  dev,  accum2);	  AssertionError.show(accum2,    length,    dev);    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
740	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *dev  *  dev;  accum2  +=  weights[i]  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *dev  *  dev;  accum2  +=  weights[i]  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *dev  *  dev;  accum2  +=  weights[i]	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    weights[i]    	non-compiled	[CE]  ';'  expected	117	None	replace
741	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    }    	non-compiled	[CE]  ';'  expected	32	None	replace
742	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  dev;  }  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  dev;  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
743	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  dev;  }  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  dev;  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    sumWts    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
744	[BUG]  [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  +=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  +=  values[i]  *  dev;  }	  while(!incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
745	[BUG]  [BUGGY]  if(incMoment)  {  var  =  accum  -  (accum2  *  dev  /  dev);  accum2  +=  dev  *  DEV;  }  [CE]  cannot  find  symbol  DEV  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  var  =  accum  -  (accum2  *  dev  /  dev);  accum2  +=  dev  *  DEV;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  var  =  accum  -  (accum2  *  dev  /  dev);  accum2  +=  dev  *  DEV;  }	          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    DEV;    }    	non-compiled	[CE]  cannot  find  symbol  DEV	116	None	replace
746	[BUG]  [BUGGY]  if(incMoment)  {  var  =  accum  -  (accum2  *  dev);  accum2  +=  dev  *  DEV;  }  [CE]  cannot  find  symbol  DEV  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  var  =  accum  -  (accum2  *  dev);  accum2  +=  dev  *  DEV;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  var  =  accum  -  (accum2  *  dev);  accum2  +=  dev  *  DEV;  }	          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    DEV;    }    	non-compiled	[CE]  cannot  find  symbol  DEV	116	None	replace
747	[BUG]  [BUGGY]  accum2  =  accum  -  (accum2  *  dev);  accum2  +=  dev  *  DEV;  [CE]  cannot  find  symbol  DEV  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  accum2  =  accum  -  (accum2  *  dev);  accum2  +=  dev  *  DEV;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	accum2  =  accum  -  (accum2  *  dev);  accum2  +=  dev  *  DEV;	          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    DEV;    }    	non-compiled	[CE]  cannot  find  symbol  DEV	116	None	replace
748	[BUG]  [BUGGY]  accum2  +=  values[i]  *  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  accum2  +=  values[i]  *  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	accum2  +=  values[i]  *	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
749	[BUG]  [BUGGY]  accum2  =  values[i]  -  mean;  accum2  +=  values[i]  *  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  accum2  =  values[i]  -  mean;  accum2  +=  values[i]  *  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	accum2  =  values[i]  -  mean;  accum2  +=  values[i]  *	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
750	[BUG]  [BUGGY]  accum2  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  [CE]  cannot  find  symbol  i  [FE]                            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  accum2  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	accum2  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    	non-compiled	[CE]  cannot  find  symbol  i	38	None	replace
751	[BUG]  [BUGGY]  if(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    weights    >>    ';'    	non-compiled	[CE]  ';'  expected	123	None	replace
752	[BUG]  [BUGGY]  AssertionError.show(DEV,  accum,  begin,  length);  [CE]  cannot  find  symbol  DEV  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(DEV,  accum,  begin,  length);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(DEV,  accum,  begin,  length);	  AssertionError.show(accum,    begin,    length);    	non-compiled	[CE]  cannot  find  symbol  DEV	110	None	replace
753	[BUG]  [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev2  +=  dev  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev2  +=  dev  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev2  +=  dev  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    dev    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
754	[BUG]  [BUGGY]  AssertionError.show(dev,  isBiasCorrected,  dev);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(dev,  isBiasCorrected,  dev);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(dev,  isBiasCorrected,  dev);	  AssertionError.show(accum,    isBiasCorrected,    dev);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
755	[BUG]  [BUGGY]  AssertionError.show(accum2,  dev,  isBiasCorrected);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum2,  dev,  isBiasCorrected);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum2,  dev,  isBiasCorrected);	  AssertionError.show(accum,    isBiasCorrected,    dev);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
756	[BUG]  [BUGGY]  AssertionError.show(accum,  dev,  accum2,  begin  +  length);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum,  dev,  accum2,  begin  +  length);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum,  dev,  accum2,  begin  +  length);	  AssertionError.show(accum,    isBiasCorrected,    dev,    begin    +    length);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
757	[BUG]  [BUGGY]  double  sumWts  =  values[i]  /  dev  +  mean;  [CE]  cannot  find  symbol  i  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  values[i]  /  dev  +  mean;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  values[i]  /  dev  +  mean;	  double    sumWts    =    values[i]    /    dev;    	non-compiled	[CE]  cannot  find  symbol  i	160	None	replace
758	[BUG]  [BUGGY]  double  sumWts  =  values[i]  /  dev.doubleValue();  [CE]  cannot  find  symbol  i  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  values[i]  /  dev.doubleValue();  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  values[i]  /  dev.doubleValue();	  double    sumWts    =    values[i]    /    dev;    	non-compiled	[CE]  cannot  find  symbol  i	160	None	replace
759	[BUG]  [BUGGY]  For(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  '.class'  expected  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  For(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	For(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  '.class'  expected	27	None	replace
760	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	61	3	add
761	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	61	3	add
762	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	61	3	add
763	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  accum2  -=  values[i]  *  dev;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        -        mean;        accum2        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	61	3	add
764	[BUG]  [BUGGY]  if(!incMoment)  {  var  =  accum  -  (accum  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(!incMoment)  {  var  =  accum  -  (accum  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(!incMoment)  {  var  =  accum  -  (accum  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }	  if(!incMoment)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	119	None	replace
765	[BUG]  [BUGGY]  if(incMoment)  {  var  =  accum  -  (accum  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  var  =  accum  -  (accum  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  var  =  accum  -  (accum  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }	  if(incMoment)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	98	None	replace
766	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  values[i]  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  values[i]  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  values[i]	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    }    	non-compiled	[CE]  ';'  expected	145	None	replace
767	[BUG]  [BUGGY]  double  sumWts  =  values[i]  -  dev;  [CE]  cannot  find  symbol  i  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  values[i]  -  dev;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  values[i]  -  dev;	  double    sumWts    =    values[i]    -    mean;    	non-compiled	[CE]  cannot  find  symbol  i	133	None	replace
768	[BUG]  [BUGGY]  double  sumWts  =  weights[i]  -  dev;  [CE]  cannot  find  symbol  i  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  weights[i]  -  dev;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  weights[i]  -  dev;	  double    sumWts    =    values[i]    -    mean;    	non-compiled	[CE]  cannot  find  symbol  i	133	None	replace
769	[BUG]  [BUGGY]  double  sumWts  =  10.0;  double  sumWts  =  1.0;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  10.0;  double  sumWts  =  1.0;  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    10.0;    double  sumWts  =  1.0;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	1	None	add
770	[BUG]  [BUGGY]  accum  -=  values[i]  *  dev  *  dev;  accum2  -=  values[i]  *  dev;  [CE]  cannot  find  symbol  i  [FE]            AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  accum  -=  values[i]  *  dev  *  dev;  accum2  -=  values[i]  *  dev;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	accum  -=  values[i]  *  dev  *  dev;  accum2  -=  values[i]  *  dev;	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev    *    dev;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  i	85	None	replace
771	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  dev  /  dev);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  dev  /  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  dev  /  dev);  }	  for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    if(!incMoment)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    }    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
772	[BUG]  [BUGGY]  Context.checkState(incMoment);  [CE]  cannot  find  symbol  Context  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  Context.checkState(incMoment);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Context.checkState(incMoment);	  Context.checkState(isBiasCorrected);    	non-compiled	[CE]  cannot  find  symbol  Context	95	None	replace
773	[BUG]  [BUGGY]  double  sumWts  =  Math.abs(values[i]  /  dev  +  1);  [CE]  cannot  find  symbol  i  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  double  sumWts  =  Math.abs(values[i]  /  dev  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  Math.abs(values[i]  /  dev  +  1);	  double    sumWts    =    Math.abs(values[i]    /    dev);    	non-compiled	[CE]  cannot  find  symbol  i	162	None	replace
774	[BUG]  [BUGGY]  if(incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [CE]  >  expected  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	143	None	replace
775	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  +=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	22	3	add
776	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  +=  values[i]  *  dev;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  accum2  +=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	22	3	add
777	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  positions[i]  *  dev;  }  [CE]  cannot  find  symbol  positions  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  positions[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        (dev        *        dev);        accum2        +=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  positions[i]  *  dev;  }	  	non-compiled	[CE]  cannot  find  symbol  positions	22	None	add
778	[BUG]  [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  }  double  dev  =  values[i]  -  mean;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  }  double  dev  =  values[i]  -  mean;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                for(int        i        =        begin;        i        <        begin        +        length;        i++)        {        accum        -=        values[i]        *        dev;        }        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    weights[i]    *    dev;    }    double  dev  =  values[i]  -  mean;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }	  	non-compiled	[CE]  variable  dev  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	74	None	add
779	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  DEV;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  DEV;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  DEV;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    DEV;    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
780	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  +=  values[i]  *  DEV;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  +=  values[i]  *  DEV;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  +=  values[i]  *  DEV;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    DEV;    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
781	[BUG]  [BUGGY]  bărbați  accum2  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  dev);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  bărbați  accum2  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  dev);  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	bărbați  accum2  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  dev);	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    weights[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
782	[BUG]  [BUGGY]  accum  -=  values[i]  *  dev  *  dev;  accum2  +=  values[i]  *  dev;  [CE]  cannot  find  symbol  i  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  accum  -=  values[i]  *  dev  *  dev;  accum2  +=  values[i]  *  dev;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	accum  -=  values[i]  *  dev  *  dev;  accum2  +=  values[i]  *  dev;	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev    *    dev;    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  i	158	None	replace
783	[BUG]  [BUGGY]  while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev2  +=  weights[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev2  +=  weights[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev2  +=  weights[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
784	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  pounds[i]  *  (dev  *  dev);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  pounds[i]  *  (dev  *  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  pounds[i]  *  (dev  *  dev);  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    pounds[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
785	[BUG]  [BUGGY]  while(incMoment)  {  accum2  +=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  i  [FE]                AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  while(incMoment)  {  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(incMoment)  {  accum2  +=  values[i]  *  dev;  }	  while(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  i	104	None	replace
786	[BUG]  [BUGGY]  accum2  =  accum  -  (accum1  *  accum2  /  dev);  accum2  +=  dev  *  dev;  [CE]  cannot  find  symbol  accum1  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  accum2  =  accum  -  (accum1  *  accum2  /  dev);  accum2  +=  dev  *  dev;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	accum2  =  accum  -  (accum1  *  accum2  /  dev);  accum2  +=  dev  *  dev;	          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)    {    var    =    accum    -    (accum1    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  accum1	115	None	replace
787	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  -=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  -=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  -=  values[i]  *  dev;  }	          for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    DEV);    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
788	[BUG]  [BUGGY]  accum  =  accum  -  (accum2  *  dev  /  dev);  accum2  +=  dev  *  dev;  [CE]  cannot  find  symbol  sumWts  [FE]        AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  accum  =  accum  -  (accum2  *  dev  /  dev);  accum2  +=  dev  *  dev;  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	accum  =  accum  -  (accum2  *  dev  /  dev);  accum2  +=  dev  *  dev;	  var    =    accum    -    (accum2    *    dev    /    dev);    accum2    +=    dev    *    dev;    	non-compiled	[CE]  cannot  find  symbol  sumWts	146	None	replace
789	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *dev  *  dev;  accum2  +=  weights[i]  *  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *dev  *  dev;  accum2  +=  weights[i]  *  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *dev  *  dev;  accum2  +=  weights[i]  *  }	  if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
790	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  if(incMoment)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	                if(isBiasCorrected)        {        var        =        accum        -        (accum2        *        accum2        /        dev);        accum2        +=        dev        *        dev;        }        if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(incMoment)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }	  	compilable	  [FE]  AssertionError  	87	3	add
791	[BUG]  [BUGGY]          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  if(incMoment)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  if(incMoment)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                if(isBiasCorrected)        {        var        =        accum        -        (accum2        *        accum2        /        dev);        accum2        +=        dev        *        dev;        }        if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(incMoment)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }	  	compilable	  [FE]  AssertionError  	87	3	add
792	[BUG]  [BUGGY]          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                if(isBiasCorrected)        {        var        =        accum        -        (accum2        *        accum2        /        dev);        accum2        +=        dev        *        dev;        }        if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev	  	non-compiled	[CE]  ')'  expected	87	None	add
793	[BUG]  [BUGGY]          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  else  {  var  =  accum  -  (accum2  *  accum2  /  dev  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]          if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  else  {  var  =  accum  -  (accum2  *  accum2  /  dev  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	                if(isBiasCorrected)        {        var        =        accum        -        (accum2        *        accum2        /        dev);        accum2        +=        dev        *        dev;        }        if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  else  {  var  =  accum  -  (accum2  *  accum2  /  dev	  	non-compiled	[CE]  ')'  expected	87	None	add
794	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
795	[BUG]  [BUGGY]  AssertionError.show(accum2,  dev,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  dev;  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  AssertionError.show(accum2,  dev,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  dev;  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum2,  dev,  incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  dev;  }	  if(incMoment)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  ';'  expected	67	None	replace
796	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(isBiasCorrected)  {  var  =  accum  -  (dev  *  dev);  }  [CE]  >  expected  [FE]              AssertionError      [CONTEXT]      }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }      [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(isBiasCorrected)  {  var  =  accum  -  (dev  *  dev);  }  [BUGGY]      double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(isBiasCorrected)  {  var  =  accum  -  (dev  *  dev);  }	  int    i    =    begin;    i    <    begin    +    length;    i++)    {    if(isBiasCorrected)    {    var    =    accum    -    (dev    *    accum2    /    dev);    }    	non-compiled	[CE]  >  expected	130	None	replace
