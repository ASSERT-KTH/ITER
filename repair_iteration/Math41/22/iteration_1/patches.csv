bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  double  sumWts  =  10.0;  [BUGGY]    for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	double  sumWts  =  10.0;	  double    sumWts    =    0.0;    	compilable	  [FE]  AssertionError  	6	3	replace
2	[BUG]  [BUGGY]  double  sumWts  =  10.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  double  sumWts  =  10.0;  [BUGGY]    for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  10.0;	  double    sumWts    =    0.0;    	compilable	  [FE]  AssertionError  	6	3	replace
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  double  sumWts  =  2.0;  [BUGGY]    for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	double  sumWts  =  2.0;	  double    sumWts    =    0.0;    	compilable	  [FE]  AssertionError  	6	3	replace
4	[BUG]  [BUGGY]  double  sumWts  =  2.0;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  double  sumWts  =  2.0;  [BUGGY]    for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  2.0;	  double    sumWts    =    0.0;    	compilable	  [FE]  AssertionError  	6	3	replace
5	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(isBiasCorrected)  {  var  =  accum  -  (dev  *  accum2  /  dev);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(isBiasCorrected)  {  var  =  accum  -  (dev  *  accum2  /  dev);  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(isBiasCorrected)  {  var  =  accum  -  (dev  *  accum2  /  dev);  }	      for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
6	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  }	      for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
7	[BUG]  [BUGGY]  double  sumWts  =  1;  double  sumWts  =  1;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  double  sumWts  =  1;  double  sumWts  =  1;  [BUGGY]    for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    1;    double  sumWts  =  1;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	3	None	add
8	[BUG]  [BUGGY]  double  sumWts  =  1;  Double  sumWts  =  1;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]      AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  double  sumWts  =  1;  Double  sumWts  =  1;  [BUGGY]    for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    1;    Double  sumWts  =  1;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	3	None	add
9	[BUG]  [BUGGY]  double  sumWts  =  1;  int  sumWts  =  1;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  double  sumWts  =  1;  int  sumWts  =  1;  [BUGGY]    for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    1;    int  sumWts  =  1;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	3	None	add
10	[BUG]  [BUGGY]  double  sumWts  =  1;  long  sumWts  =  1;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  double  sumWts  =  1;  long  sumWts  =  1;  [BUGGY]    for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    1;    long  sumWts  =  1;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	3	None	add
11	[BUG]  [BUGGY]  double  sumWts  =  1;  double  amountWts  =  1;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  double  sumWts  =  1;  double  amountWts  =  1;  [BUGGY]    for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    1;    double  amountWts  =  1;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	3	None	add
12	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  dev;  }  [BUGGY]    for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  dev;  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
13	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  dev;  }  [BUGGY]    for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  weights[i]  *  dev;  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
14	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  dev  *  values[i];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  dev  *  values[i];  }  [BUGGY]    for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  dev  *  values[i];  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
15	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
16	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  dev;  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
17	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
18	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev2  +=  weights[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev2  +=  weights[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev2  +=  weights[i]  *  dev;  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
19	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	24	3	add
20	[BUG]  [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	24	3	add
21	[BUG]  [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  +=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  DEV  [FE]      AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  +=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  +=  values[i]  *  dev;  }	  	non-compiled	[CE]  cannot  find  symbol  DEV	24	None	add
22	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	24	3	add
23	[BUG]  [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	24	3	add
24	[BUG]  [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  [CE]  '.class'  expected  [FE]          AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *	  	non-compiled	[CE]  '.class'  expected	24	None	add
25	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	      for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
26	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]      AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	      for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	27	None	replace
27	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]        AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	      for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	27	None	replace
28	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights  }  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    weights    	non-compiled	[CE]  ';'  expected	16	None	replace
29	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights!=  ';'  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights!=  ';'  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights!=  ';'	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    weights    	non-compiled	[CE]  ';'  expected	16	None	replace
30	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights!=  '  [CE]  illegal  line  end  in  character  literal  [FE]                  AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights!=  '  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights!=  '	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    weights    	non-compiled	[CE]  illegal  line  end  in  character  literal	16	None	replace
31	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights  >=  ';'  [CE]  ';'  expected  [FE]                    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights  >=  ';'  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights  >=  ';'	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    weights    	non-compiled	[CE]  ';'  expected	16	None	replace
32	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
33	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
34	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
35	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    values[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
36	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
37	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
38	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
39	[BUG]  [BUGGY]  double  sumWts  =  1.0;  double  sumWts  =  1.0;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  double  sumWts  =  1.0;  double  sumWts  =  1.0;  [BUGGY]    for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    1.0;    double  sumWts  =  1.0;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	1	None	add
40	[BUG]  [BUGGY]  double  sumWts  =  1.0;  Double  sumWts  =  1.0;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]      AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  double  sumWts  =  1.0;  Double  sumWts  =  1.0;  [BUGGY]    for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    1.0;    Double  sumWts  =  1.0;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	1	None	add
41	[BUG]  [BUGGY]  double  sumWts  =  1.0;  int  sumWts  =  1.0;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  double  sumWts  =  1.0;  int  sumWts  =  1.0;  [BUGGY]    for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    1.0;    int  sumWts  =  1.0;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	1	None	add
42	[BUG]  [BUGGY]  double  sumWts  =  1.0;  long  sumWts  =  1.0;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  double  sumWts  =  1.0;  long  sumWts  =  1.0;  [BUGGY]    for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    1.0;    long  sumWts  =  1.0;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	1	None	add
43	[BUG]  [BUGGY]  double  sumWts  =  1.0;  double  sumWts  =  0.0;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  double  sumWts  =  1.0;  double  sumWts  =  0.0;  [BUGGY]    for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    1.0;    double  sumWts  =  0.0;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	1	None	add
44	[BUG]  [BUGGY]  double  sumWts  =  0.0;  double  sumWts  =  0.0;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  double  sumWts  =  0.0;  double  sumWts  =  0.0;  [BUGGY]    for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    0.0;    double  sumWts  =  0.0;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	5	None	add
45	[BUG]  [BUGGY]  double  sumWts  =  0.0;  Double  sumWts  =  0.0;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]      AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  double  sumWts  =  0.0;  Double  sumWts  =  0.0;  [BUGGY]    for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    0.0;    Double  sumWts  =  0.0;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	5	None	add
46	[BUG]  [BUGGY]  double  sumWts  =  0.0;  int  sumWts  =  0.0;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]        AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  double  sumWts  =  0.0;  int  sumWts  =  0.0;  [BUGGY]    for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    0.0;    int  sumWts  =  0.0;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	5	None	add
47	[BUG]  [BUGGY]  double  sumWts  =  0.0;  long  sumWts  =  0.0;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]          AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  double  sumWts  =  0.0;  long  sumWts  =  0.0;  [BUGGY]    for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    0.0;    long  sumWts  =  0.0;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	5	None	add
48	[BUG]  [BUGGY]  double  sumWts  =  0.0;  double  amountWts  =  0.0;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]            AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  double  sumWts  =  0.0;  double  amountWts  =  0.0;  [BUGGY]    for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    0.0;    double  amountWts  =  0.0;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	5	None	add
49	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	18	3	add
50	[BUG]  [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	18	3	add
51	[BUG]  [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  -=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  DEV  [FE]      AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  -=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  DEV);  accum2  -=  values[i]  *  dev;  }	  	non-compiled	[CE]  cannot  find  symbol  DEV	18	None	add
52	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	18	3	add
53	[BUG]  [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	18	3	add
54	[BUG]  [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  [CE]  '.class'  expected  [FE]          AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *	  	non-compiled	[CE]  '.class'  expected	18	None	add
55	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  dev;  }	      for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	9	None	replace
56	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]      AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *  dev;  }	      for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	9	None	replace
57	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	26	3	add
58	[BUG]  [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	26	3	add
59	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	26	3	add
60	[BUG]  [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	26	3	add
61	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	26	3	add
62	[BUG]  [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	26	3	add
63	[BUG]  [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  DEV;  }  [CE]  cannot  find  symbol  DEV  [FE]          AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  DEV;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  DEV;  }	  	non-compiled	[CE]  cannot  find  symbol  DEV	26	None	add
64	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
65	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
66	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  dev;  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
67	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  dev;  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
68	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }	      for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
69	[BUG]  [BUGGY]  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  [CE]  cannot  find  symbol  i  [FE]      AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;	      for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  i	25	None	replace
70	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  [CE]  >  expected  [FE]        AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }	      for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	25	None	replace
71	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	22	3	add
72	[BUG]  [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	22	3	add
73	[BUG]  [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]      AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }	  	non-compiled	[CE]  >  expected	22	None	add
74	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	22	3	add
75	[BUG]  [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  weights[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	22	3	add
76	[BUG]  [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  DEV;  }  [CE]  cannot  find  symbol  DEV  [FE]          AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  DEV;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  DEV;  }	  	non-compiled	[CE]  cannot  find  symbol  DEV	22	None	add
77	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	8	3	add
78	[BUG]  [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	8	3	add
79	[BUG]  [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [CE]  >  expected  [FE]      AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }	  	non-compiled	[CE]  >  expected	8	None	add
80	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	8	3	add
81	[BUG]  [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  weights[i]  *  dev;  }	  	compilable	  [FE]  AssertionError  	8	3	add
82	[BUG]  [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  DEV;  }  [CE]  cannot  find  symbol  DEV  [FE]          AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  DEV;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  DEV;  }	  	non-compiled	[CE]  cannot  find  symbol  DEV	8	None	add
83	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }	      for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
84	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]      AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }	      for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	19	None	replace
85	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  -=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  -=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  -=  values[i]  *  dev;  }	      for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
86	[BUG]  [BUGGY]  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  [CE]  cannot  find  symbol  i  [FE]          AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;	      for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  i	19	None	replace
87	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	        if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }	  	compilable	  [FE]  AssertionError  	20	3	add
88	[BUG]  [BUGGY]      if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	        if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }	  	compilable	  [FE]  AssertionError  	20	3	add
89	[BUG]  [BUGGY]      if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  if(isBiasCorrected)  {  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  if(isBiasCorrected)  {  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	        if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }	  	non-compiled	[CE]  not  a  statement	20	None	add
90	[BUG]  [BUGGY]      if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  If(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  If(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	        if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    If(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }	  	non-compiled	[CE]  ';'  expected	20	None	add
91	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  *  dev;  }	      for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	23	None	replace
92	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }	      for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
93	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]        AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  -=  values[i]  *  dev;  }	      for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	23	None	replace
94	[BUG]  [BUGGY]  AssertionError.show(accum,  isBiasCorrected);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  AssertionError.show(accum,  isBiasCorrected);  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum,  isBiasCorrected);	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
95	[BUG]  [BUGGY]  Context.checkState(isBiasCorrected);  [CE]  cannot  find  symbol  Context  [FE]              AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  Context.checkState(isBiasCorrected);  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	Context.checkState(isBiasCorrected);	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  cannot  find  symbol  Context	15	None	replace
96	[BUG]  [BUGGY]  AssertionError.show(accum,  isBiasCorrected,  dev);  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  AssertionError.show(accum,  isBiasCorrected,  dev);  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum,  isBiasCorrected,  dev);	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
97	[BUG]  [BUGGY]  AssertionError.show(accum,  isBiasCorrected,  dev,  begin  +  length);  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  AssertionError.show(accum,  isBiasCorrected,  dev,  begin  +  length);  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum,  isBiasCorrected,  dev,  begin  +  length);	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
98	[BUG]  [BUGGY]  if(incMoment)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(incMoment)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }	      if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	21	None	replace
99	[BUG]  [BUGGY]  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  [CE]  cannot  find  symbol  sumWts  [FE]      AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;	      if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	21	None	replace
100	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  double  sumWts  =  0.5;  [BUGGY]    for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	double  sumWts  =  0.5;	  double    sumWts    =    1.0;    	compilable	  [FE]  AssertionError  	2	3	replace
101	[BUG]  [BUGGY]  double  sumWts  =  0.5;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  double  sumWts  =  0.5;  [BUGGY]    for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  0.5;	  double    sumWts    =    1.0;    	compilable	  [FE]  AssertionError  	2	3	replace
102	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  double  sumWts  =  1.0d;  [BUGGY]    for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	double  sumWts  =  1.0d;	  double    sumWts    =    1.0;    	compilable	  [FE]  AssertionError  	2	3	replace
103	[BUG]  [BUGGY]  double  sumWts  =  1.0d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  double  sumWts  =  1.0d;  [BUGGY]    for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  1.0d;	  double    sumWts    =    1.0;    	compilable	  [FE]  AssertionError  	2	3	replace
104	[BUG]  [BUGGY]  while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
105	[BUG]  [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
106	[BUG]  [BUGGY]  while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev2  +=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev2  +=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev2  +=  values[i]  *  dev;  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
107	[BUG]  [BUGGY]  while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	while(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  dev;  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
108	[BUG]  [BUGGY]  AssertionError.show(accum2,  length,  dev);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  AssertionError.show(accum2,  length,  dev);  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum2,  length,  dev);	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
109	[BUG]  [BUGGY]  luate(secondMoment,  begin,  begin  +  length);  [CE]  cannot  find  symbol  secondMoment  [FE]              AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  luate(secondMoment,  begin,  begin  +  length);  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(secondMoment,  begin,  begin  +  length);	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  cannot  find  symbol  secondMoment	15	None	replace
110	[BUG]  [BUGGY]  AssertionError.show(accum,  begin,  length);  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  AssertionError.show(accum,  begin,  length);  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum,  begin,  length);	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
111	[BUG]  [BUGGY]  luate(secondMoment,  begin,  begin  +  length));  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  luate(secondMoment,  begin,  begin  +  length));  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	luate(secondMoment,  begin,  begin  +  length));	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  ';'  expected	15	None	replace
112	[BUG]  [BUGGY]  AssertionError.show(accum2,  length,  weights[i]  *  dev);  [CE]  cannot  find  symbol  i  [FE]              AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  AssertionError.show(accum2,  length,  weights[i]  *  dev);  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum2,  length,  weights[i]  *  dev);	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  i	12	None	replace
113	[BUG]  [BUGGY]  AssertionError.show(accum2,  length,  weights[i],  dev);  [CE]  cannot  find  symbol  i  [FE]                AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  AssertionError.show(accum2,  length,  weights[i],  dev);  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum2,  length,  weights[i],  dev);	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  i	12	None	replace
114	[BUG]  [BUGGY]  AssertionError.show(accum2,  length);  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  AssertionError.show(accum2,  length);  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	AssertionError.show(accum2,  length);	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
115	[BUG]  [BUGGY]      if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  if(isBiasCorrected)  {  var  =  accum  -  (accum1  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [CE]  cannot  find  symbol  accum1  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  if(isBiasCorrected)  {  var  =  accum  -  (accum1  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	        if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  var  =  accum  -  (accum1  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }	  	non-compiled	[CE]  cannot  find  symbol  accum1	20	None	add
116	[BUG]  [BUGGY]      if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  DEV;  }  [CE]  cannot  find  symbol  DEV  [FE]      AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  DEV;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	        if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    if(isBiasCorrected)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  DEV;  }	  	non-compiled	[CE]  cannot  find  symbol  DEV	20	None	add
117	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    weights[i]    *    	non-compiled	[CE]  ';'  expected	13	None	replace
118	[BUG]  [BUGGY]  double  sumWts  =  1.0;  double  amountWts  =  1.0;  [CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  double  sumWts  =  1.0;  double  amountWts  =  1.0;  [BUGGY]    for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double    sumWts    =    1.0;    double  amountWts  =  1.0;	  	non-compiled	[CE]  variable  sumWts  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	1	None	add
119	[BUG]  [BUGGY]  if(!incMoment)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(!incMoment)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(!incMoment)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }	      if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	21	None	replace
120	[BUG]  [BUGGY]  if(incMoment)  {  var  =  accum  -  (accum1  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [CE]  cannot  find  symbol  accum1  [FE]      AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(incMoment)  {  var  =  accum  -  (accum1  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  var  =  accum  -  (accum1  *  accum2  /  dev);  accum2  +=  dev  *  dev;  }	      if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  accum1	21	None	replace
121	[BUG]  [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  int  begin  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  int  begin  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    int  begin  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }	  	non-compiled	[CE]  >  expected	22	None	add
122	[BUG]  [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  DEV;  }  [CE]  >  expected  [FE]      AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  DEV;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  DEV;  }	  	non-compiled	[CE]  >  expected	22	None	add
123	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights  >>  ';'  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights  >>  ';'  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights  >>  ';'	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    weights    	non-compiled	[CE]  ';'  expected	16	None	replace
124	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [CE]  >  expected  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }	      for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	25	None	replace
125	[BUG]  [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  double  accum  =  values[i]  -  mean;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  double  accum  =  values[i]  -  mean;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    double  accum  =  values[i]  -  mean;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	  	non-compiled	[CE]  variable  accum  is  already  defined  in  method  evaluate(double[],double[],double,int,int)	26	None	add
126	[BUG]  [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  DEV;  }  [CE]  cannot  find  symbol  DEV  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  DEV;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  DEV;  }	  	non-compiled	[CE]  cannot  find  symbol  DEV	24	None	add
127	[BUG]  [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  int  begin  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [CE]  >  expected  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  int  begin  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    int  begin  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }	  	non-compiled	[CE]  >  expected	8	None	add
128	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }	      for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	23	None	replace
129	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  }  [CE]  cannot  find  symbol  sumWts  [FE]      AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  mean;  }	      for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	23	None	replace
130	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(isBiasCorrected)  {  var  =  accum  -  (dev  *  accum2  /  dev);  }  [CE]  >  expected  [FE]          AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(isBiasCorrected)  {  var  =  accum  -  (dev  *  accum2  /  dev);  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(isBiasCorrected)  {  var  =  accum  -  (dev  *  accum2  /  dev);  }	      for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    }    	non-compiled	[CE]  >  expected	10	None	replace
131	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  int  sumWts  =  values.length;  [BUGGY]    for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	int  sumWts  =  values.length;	      	compilable	  [FE]  AssertionError  	7	3	replace
132	[BUG]  [BUGGY]  int  sumWts  =  values.length;  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  int  sumWts  =  values.length;  [BUGGY]    for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  sumWts  =  values.length;	      	compilable	  [FE]  AssertionError  	7	3	replace
133	[BUG]  [BUGGY]  double  sumWts  =  values[i]  -  mean;  [CE]  cannot  find  symbol  i  [FE]                AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  double  sumWts  =  values[i]  -  mean;  [BUGGY]    for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  values[i]  -  mean;	      	non-compiled	[CE]  cannot  find  symbol  i	7	None	replace
134	[BUG]  [BUGGY]  if(isBiasCorrected)  {  sumWts  +=  values[i];  }  [CE]  cannot  find  symbol  sumWts  [FE]                  AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(isBiasCorrected)  {  sumWts  +=  values[i];  }  [BUGGY]    for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  sumWts  +=  values[i];  }	      	non-compiled	[CE]  cannot  find  symbol  sumWts	7	None	replace
135	[BUG]  [BUGGY]  if(isBiasCorrected)  {  sumWts  +=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]                    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(isBiasCorrected)  {  sumWts  +=  values[i]  *  dev;  }  [BUGGY]    for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  sumWts  +=  values[i]  *  dev;  }	      	non-compiled	[CE]  cannot  find  symbol  sumWts	7	None	replace
136	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  dev;  accum2  -=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  dev;  accum2  -=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  dev;  accum2  -=  values[i]  *  dev;  }	      for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	27	None	replace
137	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]      AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	      for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	27	None	replace
138	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  dev;  accum2  -=  values[i]  *  dev;  }  [CE]  >  expected  [FE]        AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  dev;  accum2  -=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  dev;  accum2  -=  values[i]  *  dev;  }	      for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	27	None	replace
139	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  double  sumWts  =  1.0  +  values.length;  [BUGGY]    for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	add	double  sumWts  =  1.0  +  values.length;	  double    sumWts    =    1.0;    	compilable	  [FE]  AssertionError  	2	3	replace
140	[BUG]  [BUGGY]  double  sumWts  =  1.0  +  values.length;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  double  sumWts  =  1.0  +  values.length;  [BUGGY]    for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  1.0  +  values.length;	  double    sumWts    =    1.0;    	compilable	  [FE]  AssertionError  	2	3	replace
141	[BUG]  [BUGGY]  if(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(!incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }	      for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
142	[BUG]  [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  DEV;  }  [CE]  cannot  find  symbol  DEV  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  DEV;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  (dev  *  dev);  accum2  -=  values[i]  *  DEV;  }	  	non-compiled	[CE]  cannot  find  symbol  DEV	18	None	add
143	[BUG]  [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [CE]  >  expected  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }	      for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  >  expected	9	None	replace
144	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  mean;  }  [CE]  cannot  find  symbol  sumWts  [FE]      AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  mean;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  mean;  }	      for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	9	None	replace
145	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  values[i]  *  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
146	[BUG]  [BUGGY]  var  =  accum  -  (accum2  *  dev  /  dev);  accum2  +=  dev  *  dev;  [CE]  cannot  find  symbol  sumWts  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  var  =  accum  -  (accum2  *  dev  /  dev);  accum2  +=  dev  *  dev;  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	var  =  accum  -  (accum2  *  dev  /  dev);  accum2  +=  dev  *  dev;	      if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	21	None	replace
147	[BUG]  [BUGGY]  if(incMoment)  {  var  =  accum  -  (accum2  *  dev  /  dev);  accum2  +=  dev  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]      AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(incMoment)  {  var  =  accum  -  (accum2  *  dev  /  dev);  accum2  +=  dev  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  var  =  accum  -  (accum2  *  dev  /  dev);  accum2  +=  dev  *  dev;  }	      if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    accum2    +=    dev    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	21	None	replace
148	[BUG]  [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  int  begin  =  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  int  begin  =  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    dev;    }    int  begin  =  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev;  }	  	non-compiled	[CE]  ';'  expected	22	None	add
149	[BUG]  [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  int  begin  =  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  int  begin  =  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    values[i]    *    dev;    }    int  begin  =  begin  +  length;  i++)  {  accum2  +=  values[i]  *  dev;  }	  	non-compiled	[CE]  ';'  expected	8	None	add
150	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  }	      for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
151	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(!incMoment)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(!incMoment)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(!incMoment)  {  var  =  accum  -  (accum2  *  accum2  /  dev);  }	      for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
152	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(!isBiasCorrected)  {  var  =  accum  -  (accum2  *  dev  /  dev);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(!isBiasCorrected)  {  var  =  accum  -  (accum2  *  dev  /  dev);  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  if(!isBiasCorrected)  {  var  =  accum  -  (accum2  *  dev  /  dev);  }	      for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    if(isBiasCorrected)    {    var    =    accum    -    (accum2    *    accum2    /    dev);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
153	[BUG]  [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  positions[i]  *  dev;  }  [CE]  cannot  find  symbol  positions  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]      for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  positions[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	        for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  positions[i]  *  dev;  }	  	non-compiled	[CE]  cannot  find  symbol  positions	26	None	add
154	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  mean;  accum2  -=  values[i]  *  dev;  }	      for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    -    mean;    accum2    -=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
155	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *dev  *  dev;  accum2  +=  values[i]  *  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *dev  *  dev;  accum2  +=  values[i]  *  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  values[i]  *dev  *  dev;  accum2  +=  values[i]  *  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
156	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights  >=  '  [CE]  illegal  line  end  in  character  literal  [FE]              AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights  >=  '  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights  >=  '	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    accum2    +=    weights    	non-compiled	[CE]  illegal  line  end  in  character  literal	16	None	replace
157	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  dev  *  dev;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  dev  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  +=  dev  *  dev;  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum2    +=    weights[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
158	[BUG]  [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  +=  values[i]  *  dev;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  +=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  *  dev  *  dev;  accum2  +=  values[i]  *  dev;  }	      for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
159	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  dev  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  [CE]  cannot  find  symbol  sumWts  [FE]      AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  dev  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  -=  values[i]  -  dev  *  (dev  *  dev);  accum2  +=  values[i]  *  dev;  }	      for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    accum    -=    values[i]    *    (dev    *    dev);    accum2    +=    values[i]    *    dev;    }    	non-compiled	[CE]  cannot  find  symbol  sumWts	25	None	replace
160	[BUG]  [BUGGY]  double  sumWts  =  values[i]  /  dev;  [CE]  cannot  find  symbol  i  [FE]              AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  double  sumWts  =  values[i]  /  dev;  [BUGGY]    for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  values[i]  /  dev;	      	non-compiled	[CE]  cannot  find  symbol  i	7	None	replace
161	[BUG]  [BUGGY]  double  sumWts  =  Math.abs(values[i]  -  mean);  [CE]  cannot  find  symbol  i  [FE]                AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  double  sumWts  =  Math.abs(values[i]  -  mean);  [BUGGY]    for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  Math.abs(values[i]  -  mean);	      	non-compiled	[CE]  cannot  find  symbol  i	7	None	replace
162	[BUG]  [BUGGY]  double  sumWts  =  Math.abs(values[i]  /  dev);  [CE]  cannot  find  symbol  i  [FE]                  AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  double  sumWts  =  Math.abs(values[i]  /  dev);  [BUGGY]    for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	double  sumWts  =  Math.abs(values[i]  /  dev);	      	non-compiled	[CE]  cannot  find  symbol  i	7	None	replace
163	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
164	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  dev);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  dev);  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  weights[i]  *  (dev  *  dev);  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
165	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  poids[i]  *  (dev  *  dev);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  poids[i]  *  (dev  *  dev);  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  poids[i]  *  (dev  *  dev);  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
166	[BUG]  [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  pounds[i]  *  (dev  *  dev);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }    [BUGGY]  if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  pounds[i]  *  (dev  *  dev);  }  [BUGGY]    double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	519	519	1	replace	if(incMoment)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  pounds[i]  *  (dev  *  dev);  }	      if(isBiasCorrected)    {    for(int    i    =    begin;    i    <    begin    +    length;    i++)    {    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
