projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158intfmtCount=foundDescriptions.size();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158char[]c=pattern.toCharArray();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158pos.setIndex(fmtCount);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158intfmtCount=findDescriptions.length;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158intfmtCount=foundDescriptions.length;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()<pattern.length()){
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()<c.length()){
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()<fmtCount){
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()>=pattern.length()){
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158if(c!=null){for(Iteratorit=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,stripCustom,true);break;}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158if(c!=null){for(Iteratorit=foundDescriptions.iterator();it.hasNext();){toPattern=it.next();}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158if(c!=null){for(Iteratorit=foundDescriptions.iterator();it.hasNext();){System.arraycopy(c,0,foundDescriptions,0,fmtCount);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158if(c!=null){for(Iteratorit=foundDescriptions.iterator();it.hasNext();){System.arraycopy(c,start,foundDescriptions,0,fmtCount);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158if(c!=null){for(Iteratorit=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,stripCustom,false);break;}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158intfmtCount=readArgumentIndex(pattern,pos);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158intfmtCount=readArgumentIndex(pattern,pos.getIndex());
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158intfmtCount=readArgumentIndex(pattern,start,pos);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158intfmtCount=readArgumentIndex(pattern,pos);break;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()<c.length){
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()>pattern.length()){
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()<fmtCount){while(pos.getIndex()<fmtCount){
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()<fmtCount){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,pos,stripCustom,true);break;}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()<fmtCount){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,pos,stripCustom,true);break;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()<fmtCount){char[]c=pattern.toCharArray();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()<fmtCount){intfmtCount=readArgumentIndex(pattern,pos);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()>=c.length){
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()<c.length-1){
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()==c.length){
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()>=c.length()){
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158pos.setIndex(fmtCount);pos.setIndex(fmtCount);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158pos.setIndex(fmtCount);pos.setIndex(fmtCount);caseEND_FE:toPattern=registry.toPattern();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158pos.setIndex(fmtCount);intfmtCount=findIndex(c);pos.setIndex(fmtCount);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158pos.setIndex(fmtCount);pos.setIndex(fmtCount);caseEND_FE:toPattern=registry.withUTC();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158pos.setIndex(fmtCount);pos.setIndex(fmtCount);caseEND_FE:toPattern=registry.withUTC();break;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()>=pattern.length()){while(pos.getIndex()>=pattern.length()){
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()>=pattern.length()){char[]c=pattern.toCharArray();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()>=pattern.length()){intfmtCount=readArgumentIndex(pattern,pos);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()>=pattern.length()){char[]c=pattern.toCharArray();while(pos.getIndex()>=pattern.length()){
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()>=pattern.length()){intfmtCount=readArgumentIndex(pattern,start,pos);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()>pattern.length()){while(pos.getIndex()>pattern.length()){
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()>pattern.length()){intfmtCount=readArgumentIndex(pattern,pos);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()>pattern.length()){char[]c=pattern.toCharArray();while(pos.getIndex()>pattern.length()){
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()>pattern.length()){for(pos.getIndex()>pattern.length()){
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()>pattern.length()){char[]c=pattern.toCharArray();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()>fmtCount){
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()>=fmtCount){
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158intfmtCount=readArgumentIndex(pattern,next(pos));
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158intfmtCount=readArgumentIndex(c,pos);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158intfmtCount=readArgumentIndex(pattern,start);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158intfmtCount=readArgumentIndex(pattern,index);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158if(fmtCount==0){for(Iteratorit=foundDescriptions.iterator();it.hasNext();){System.arraycopy(c,start,foundDescriptions,0,fmtCount);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158if(fmtCount!=0){for(Iteratorit=foundDescriptions.iterator();it.hasNext();){System.arraycopy(c,start,foundDescriptions,0,fmtCount);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158if(fmtCount>=0){for(Iteratorit=foundDescriptions.iterator();it.hasNext();){System.arraycopy(c,start,foundDescriptions,0,fmtCount);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158if(c==null){for(Iteratorit=foundDescriptions.iterator();it.hasNext();){toPattern=it.next();}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158if(fmtCount==0){for(Iteratorit=foundDescriptions.iterator();it.hasNext();){toPattern=it.next();}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158char[]c=foundDescriptions.toCharArray();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158intfmtCount=readArgumentIndex(pattern,start,index);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158intfmtCount=readArgumentIndex(pattern,index,pos);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158intfmtCount=readArgumentIndex(pattern,pos,start);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()<c.length){char[]c=pattern.toCharArray();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()<c.length){junit.framework.AssertionFailedError:toPattern=registry.withIndex(c);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()<c.length){junit.framework.AssertionFailedError:toPattern=registry.createAssertionFailedError();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()<c.length){junit.framework.AssertionFailedError:registry.appendQuotedString(pattern,pos,stripCustom,true);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()<c.length){junit.framework.AssertionFailedError:registry.appendQuotedString(pattern,pos,stripCustom,true);break;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158if(fmtCount==0){for(Iteratorit=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,stripCustom,true);break;}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158if(fmtCount==0){for(Iteratorit=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,stripCustom,false);break;}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158pos.setIndex(fmtCount+1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158pos.setIndex(c);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158pos.setIndex(c.length);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158pos.setIndex(fmtCount-1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158char[]c=toPattern.toCharArray();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158char[]c=pattern.toCharArray(fmtCount);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158char[]c=pattern.toCharArray()+fmtCount;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158intfmtCount=foundDescriptions.length-1;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158intfmtCount=foundDescriptions.length+1;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158intfmtCount=foundDescriptions.length-2;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158intfmtCount=readArgumentIndex(c,pos.getIndex());
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158intfmtCount=readArgumentIndex(pattern,pos.getIndex()-1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158intfmtCount=readArgumentIndex(pattern,pos.getIndex()+1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158intfmtCount=readArgumentIndex(p,pos.getIndex());
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158if(fmtCount==0){for(Iteratorit=foundDescriptions.iterator();it.hasNext();){System.arraycopy(c,0,foundDescriptions,0,fmtCount);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158if(fmtCount!=0){for(Iteratorit=foundDescriptions.iterator();it.hasNext();){System.arraycopy(c,0,foundDescriptions,0,fmtCount);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158if(c==null){for(Iteratorit=foundDescriptions.iterator();it.hasNext();){System.arraycopy(c,0,foundDescriptions,0,fmtCount);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158intfmtCount=readArgumentIndex(pattern,next(pos));break;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158intfmtCount=readArgumentIndex(pattern,start);break;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158intfmtCount=readArgumentIndex(pattern,index);break;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158intfmtCount=readArgumentIndex(c,pos);break;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158intfmtCount=foundDescriptions.size()-1;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158intfmtCount=foundDescriptions.size()+1;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158intfmtCount=foundDescriptions.size()-2;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()<c.length()||toPattern.getIndex()<c.length()){
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()<c.length()||c.charAt(pos.getIndex()-1)!='-'){
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158charfmtCount=foundDescriptions.length;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158charfmtCount=findDescriptions.length;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158char[]c=pattern.toCharArray()+1;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()!=c.length){
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158charfmtCount=readArgumentIndex(pattern,pos);break;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158intfmtCount=readArgumentIndex(pattern,next(pos),c);break;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158intfmtCount=readArgumentIndex(pattern,next(pos.getIndex()));
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158pos.setIndex(i);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158pos.setIndex(index);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158pos.setIndex(start);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158intfmtCount=readArgumentIndex(pattern,start,pos+1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158intfmtCount=readArgumentIndex(pattern,start,pos.length);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158intfmtCount=readArgumentIndex(pattern,end);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158intfmtCount=readArgumentIndex(pattern,pos,foundDescriptions);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(c.getIndex()<pos.length()){
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(p.getIndex()<c.length()){
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158if(fmtCount>=0){for(Iteratorit=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,stripCustom,true);break;}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158if(c==null){for(Iteratorit=foundDescriptions.iterator();it.hasNext();){System.arraycopy(c,start,foundDescriptions,0,fmtCount);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()>pattern.length()){intindex=readArgumentIndex(pattern,pos);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()>pattern.length()){pos.getIndex()>pattern.length()){
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()>pattern.length()){intindex=readArgumentIndex(pattern,start,pos);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()<fmtCount){intfmtCount=readArgumentIndex(pattern,pos.getIndex());
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()<fmtCount){intfmtCount=readArgumentIndex(pattern,start,pos);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()>=pattern.length()){charc=pattern.charAt(pos.getIndex());
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()>=pattern.length()){intpos=readIndex(pattern,start,fmtCount);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()<c.length){junit.framework.AssertionFailedError:toPattern=super.toPattern();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()<c.length){charc=pattern.toCharArray();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()<c.length){junit.framework.AssertionFailedError:toPattern=it.create();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()<c.length){char[]c=it.toCharArray();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158pos.setIndex(fmtCount);intfmtCount=findFormats.size();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158pos.setIndex(fmtCount);intfmtCount=findDescriptions.size();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158pos.setIndex(fmtCount);intfmtCount=findDescriptions.length;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158pos.setIndex(fmtCount);intfmtCount=findFormats.length;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158if(fmtCount>=0){for(Iteratorit=foundDescriptions.iterator();it.hasNext();){System.arraycopy(c,0,foundDescriptions,0,fmtCount);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158if(c!=null&&c.length>0){for(Iteratorit=foundDescriptions.iterator();it.hasNext();){toPattern=it.next();}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158if(c!=null){for(Iteratorit=foundDescriptions.iterator();it.hasNext();){toPattern=Iterator.next();}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158intfmtCount=readArgumentIndex(pattern,start,pos,c);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158intfmtCount=readArgumentIndex(pattern,start,pos,c.length);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158if(c==null){for(Iteratorit=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,stripCustom,false);break;}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()>pattern.length()){intfmtCount=readArgumentIndex(pattern,pos);while(pos.getIndex()>pattern.length()){
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()>pattern.length()){intfmtCount=readArgumentIndex(pattern,pos.getIndex());while(pos.getIndex()>pattern.length()){
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()>pattern.length()){intfmtCount=readArgumentIndex(pattern.length());while(pos.getIndex()>pattern.length()){
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158pos.setIndex(fmtCount);intfmtCount=readArgumentIndex(pattern,pos);pos.setIndex(fmtCount);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158pos.setIndex(fmtCount);intfmtCount=readArgumentIndex(pattern.length());pos.setIndex(fmtCount);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158pos.setIndex(fmtCount);intfmtCount=readArgumentIndex(pattern,pos.getIndex());pos.setIndex(fmtCount);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158pos.setIndex(fmtCount);intfmtCount=readArgumentIndex(pattern,start,pos);pos.setIndex(fmtCount);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()>=pattern.length()){intpos=readArgumentIndex(pattern,pos);while(pos.getIndex()>=pattern.length()){
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()>=pattern.length()){intpos=readArgumentIndex(pattern,pos.getIndex());while(pos.getIndex()>=pattern.length()){
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()>=pattern.length()){intpos=readIndex(pattern,pos);while(pos.getIndex()>=pattern.length()){
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158if(c==null){for(Iteratorit=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,stripCustom,true);break;}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()<c.length){while(pos.getIndex()<c.length){
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()<c.length){char[]c=pattern.toCharArray();while(pos.getIndex()<c.length){
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()<c.length){intfmtCount=readArgumentIndex(pattern,pos);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()<c.length){intfmtCount=readArgumentIndex(pattern,pos.getIndex());
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158intfmtCount=readArgumentIndex(pattern,next(pos),c);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158intfmtCount=readArgumentIndex(pattern,pos,c);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()>c.length){
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()<c.length||c.charAt(pos.getIndex()-1)!='-'){
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()<fmtCount){intfmtCount=readArgumentIndex(pattern,pos);while(pos.getIndex()<fmtCount){
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()<fmtCount){char[]c=pattern.toCharArray();while(pos.getIndex()<fmtCount){
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java158while(pos.getIndex()>c.length()){
