projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152List<String>foundDescriptions=newArrayList<String>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(0);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats==null){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendPattern(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendPattern(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){toPattern.add(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(8);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<String>it=foundFormats.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<Format>it=foundFormats.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundDescriptions=newArrayList<Format>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats==null){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats==null){for(Iterator<Format>it=foundFormats.iterator();it.hasNext();){appendFormats(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(4);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());break;}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundFormats=newArrayList<Format>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(2);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<Format>it=foundDescriptions.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<Format>it=this.foundFormats.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<Format>it=origFormats.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats!=null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){toPattern.add(it.next());}}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats==null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){toPattern.add(it.next());}}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(!foundFormats.isEmpty()){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){toPattern.add(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(0);ArrayList<String>foundDescriptions=newArrayList<String>(0);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(0);ArrayList<String>foundDescriptions=newArrayList<String>(1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(0);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,true);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(0);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(0);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,this);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(1);ArrayList<String>foundDescriptions=newArrayList<String>(1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(1);java.util.ArrayList<String>foundDescriptions=newjava.util.ArrayList<String>(1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(1);ArrayList<String>foundDescriptions=newArrayList<String>(2);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(1);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,true);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(1);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(7);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(6);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendPattern(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats==null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendPattern(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats!=null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendPattern(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats!=null){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendPattern(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(!foundFormats.isEmpty()){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());break;}}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());break;}}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(!foundFormats.isEmpty()){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());break;}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats!=null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.n
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<String>it=foundDescriptions.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<String>it=origFormats.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<String>it=this.foundFormats.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundDescriptions=newArrayList<Format>(toPattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152List<Format>foundDescriptions=newArrayList<Format>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundDescriptions=newArrayList<Format>(1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundFormats=Lists.newArrayList();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundFormats=newArrayList<Format>();toPattern.addAll(origFormats);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Collection<String>foundDescriptions=newArrayList<String>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats==null){for(Iterator<Format>it=foundDescriptions.iterator();it.hasNext();){appendFormats(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<Format>it=foundDescriptions.iterator();it.hasNext();){appendFormats(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats!=null){for(Iterator<Format>it=foundDescriptions.iterator();it.hasNext();){appendFormats(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats!=null){for(Iterator<Format>it=foundFormats.iterator();it.hasNext();){appendFormats(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(!foundFormats.isEmpty()){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(4);ArrayList<String>foundDescriptions=newArrayList<String>(4);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(4);java.util.ArrayList<String>foundDescriptions=newArrayList<String>(4);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(4);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,true);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(4);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(4);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,this);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(8);ArrayList<String>foundDescriptions=newArrayList<String>(8);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(8);java.util.ArrayList<String>foundDescriptions=newArrayList<String>(8);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(8);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,true);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(8);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(8);ArrayList<String>foundDescriptions=newArrayList<String>(7);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(!foundFormats.isEmpty()){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendPattern(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats!=null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendPattern(pattern,it.next());}}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats!=null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendPattern(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(!foundFormats.isEmpty()){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats!=null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){applyPattern(it.next());}}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<String>it=foundFormats.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundFormats=newArrayList<Format>(toPattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundFormats=newArrayList<Format>(1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152List<Format>foundFormats=newArrayList<Format>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats==null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats!=null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats!=null){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats!=null){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){toPattern.add(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<String>it=foundFormats.iterator();it.hasNext();){toPattern.add(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendPattern(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(!foundFormats.isEmpty()){for(Iterator<String>it=origFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<Format>it=foundFormats.iterator();it.hasNext();){appendFormats(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<Format>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>toPattern=newArrayList<Format>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(8);List<String>foundDescriptions=newArrayList<String>(8);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(8);Iterator<String>it=foundFormats.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(8);ArrayList<String>foundDescriptions=newArrayList<String>(6);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundFormats=newArrayList<Format>(0);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundFormats=newArrayList<Format>(2);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats!=null){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(0);List<String>foundDescriptions=newArrayList<String>(0);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(0);List<String>foundDescriptions=newArrayList<String>(1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(4);List<String>foundDescriptions=newArrayList<String>(4);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(4);ArrayList<String>foundDescriptions=newArrayList<String>(5);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(4);Iterator<String>it=foundFormats.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(4);ArrayList<String>foundDescriptions=newArrayList<String>(6);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Collections.<String>foundDescriptions=newArrayList<String>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(5);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<Format>it=this.foundDescriptions.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundDescriptions=newArrayList<Format>(2);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(1);List<String>foundDescriptions=newArrayList<String>(1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(1);Iterator<String>it=foundFormats.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(1);ArrayList<String>foundDescriptions=newArrayList<String>(3);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats!=null){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());break;}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());break;}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(4);ArrayList<String>foundDescriptions=newArrayList<String>(8);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundFormats=newArrayList<Format>(fmtCount);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundFormats=newArrayList<Format>(4);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(0);ArrayList<String>foundDescriptions=newArrayList<String>((0);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(toPattern==null){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendPattern(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(toPattern==null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendPattern(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(1);ArrayList<String>foundDescriptions=newArrayList<String>(4);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(8);ArrayList<String>discoveredDescriptions=newArrayList<String>(8);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(toPattern==null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<String>it=this.foundDescriptions.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152List<String>foundDescriptions=newArrayList<String>(4);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundFormats=newArrayList<String>(4);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<Object>it=foundFormats.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<?>it=foundFormats.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(4);registry.registerFormat(foundDescriptions,this);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(2);registry.registerFormat(foundDescriptions,this);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(1);registry.registerFormat(foundDescriptions,this);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152List<String>foundDescriptions=newArrayList<Format>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<Format>(toPattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());break;}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());break;}}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152List<Format>foundFormats=Lists.newArrayList();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundFormats=Lists.newArrayList(toPattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<String>it=toPattern.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152List<String>foundDescriptions=newArrayList<String>(8);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundDescriptions!=null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152List<String>foundDescriptions=newArrayList<String>(8);Iterator<String>it=foundFormats.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>();Iterator<String>it=foundFormats.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152List<String>foundDescriptions=newArrayList<String>(1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Set<String>foundDescriptions=newHashSet<String>(1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(toPattern==null){if(!foundDescriptions.isEmpty()){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(toPattern!=null){if(!foundDescriptions.isEmpty()){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(toPattern==null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(toPattern!=null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(origFormats==null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){toPattern.add(it.next());}}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(origFormats==null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){toPattern.add(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundDescriptions=newArrayList<Format>(4);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<String>it=findFormats.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(0);registry.registerFormat(foundDescriptions,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(1);registry.registerFormat(foundDescriptions,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>();registry.registerFormat(foundDescriptions,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152List<Format>foundFormats=newArrayList<Format>();toPattern.addAll(origFormats);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundFormats=newArrayList<Format>(1);toPattern.addAll(origFormats);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundFormats=newArrayList<Format>();toPattern.addAll(originalFormats);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats.isEmpty()){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());break;}}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(!foundDescriptions.isEmpty()){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());break;}}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>toPattern=newArrayList<Format>(fmtCount);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152List<Format>toPattern=newArrayList<Format>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>toPattern=newArrayList<Format>(1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Formats.for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());break;}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());break;}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(origFormats==null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendPattern(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(origFormats==null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendPattern(pattern,it.n
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(origFormats==null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendPattern(pattern,it.
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152List<String>foundDescriptions=newArrayList<String>(6);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152List<String>foundDescriptions=newArrayList<String>(0);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Formats.for(Iterator<Format>it=foundFormats.iterator();it.hasNext();){appendFormats(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<Format>it=foundFormats.entrySet().iterator();it.hasNext();){appendFormats(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(0,0);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152List<String>foundDescriptions=newArrayList<String>(4);Iterator<String>it=foundFormats.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(4);Iterator<String>it=origFormats.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Formats.for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152For(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){toPattern.add(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<Object>it=foundFormats.iterator();it.hasNext();){toPattern.add(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<String>it=foundFormats.iterator();toPattern.add(it.next());
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Collections.<String>foundDescriptions=newArrayList<String>(fmtCount);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Collections.<String>foundDescriptions=newArrayList<String>(0);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<Object>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,toPattern.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(5);ArrayList<String>foundDescriptions=newArrayList<String>(5);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(5);ArrayList<String>foundDescriptions=newArrayList<String>(6);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(5);java.util.ArrayList<String>foundDescriptions=newArrayList<String>(5);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(5);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,true);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(5);ArrayList<String>foundDescriptions=newArrayList<String>(7);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(7);ArrayList<String>foundDescriptions=newArrayList<String>(7);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(7);java.util.ArrayList<String>foundDescriptions=newArrayList<String>(7);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(7);ArrayList<String>foundDescriptions=newArrayList<String>(8);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(7);Object[]foundDescriptions=newObject[7];
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(7);ArrayList<String>foundDescriptions=newArrayList<String>(6);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(origFormats==null){if(!origFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(origFormats!=null){if(!origFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundDescriptions!=null){if(!foundDescriptions.isEmpty()){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundDescriptions!=null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendPattern(pattern,it.next());}}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats!=null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendPattern(pattern,it.next());}}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundDescriptions!=null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendPattern(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(8);registry.registerFormat(foundDescriptions,true);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(8);registry.registerFormat(foundDescriptions,false);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(4);registry.registerFormat(foundDescriptions,true);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(6);ArrayList<String>foundDescriptions=newArrayList<String>(6);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(6);ArrayList<String>foundDescriptions=newArrayList<String>(7);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(6);java.util.ArrayList<String>foundDescriptions=newArrayList<String>(6);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(6);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,true);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(6);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Formats.for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152For(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<Object>it=foundFormats.iterator();it.hasNext();){appendPattern(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats!=null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){toPattern.add(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(4);registry.registerFormat(foundDescriptions,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(2);registry.registerFormat(foundDescriptions,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(2);ArrayList<String>foundDescriptions=newArrayList<String>(2);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(2);java.util.ArrayList<String>foundDescriptions=newjava.util.ArrayList<String>(2);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(2);java.util.ArrayList<String>foundDescriptions=newArrayList<String>(2);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(2);ArrayList<String>foundDescriptions=newArrayList<String>(4);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(2);ArrayList<String>foundDescriptions=newArrayList<String>(3);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundFormats=newArrayList<String>(8);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundDescriptions!=null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){applyPattern(it.next());}}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundDescriptions!=null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(4);registry.registerFormat(foundDescriptions,false);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(2);registry.registerFormat(foundDescriptions,true);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(0);registry.registerFormat(foundDescriptions,this);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152List<String>foundDescriptions=newArrayList<String>(0);registry.registerFormat(foundDescriptions,this);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<Format>it=registry.foundDescriptions.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Set<String>foundDescriptions=newHashSet<String>(4);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(3);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152List<String>foundDescriptions=newArrayList<String>(3);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(origFormats!=null){if(!foundFormats.isEmpty()){for(Iterator<String>it=origFormats.iterator();it.hasNext();){appendQuotedString(pattern,
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(origFormats!=null){if(!foundFormats.isEmpty()){for(Iterator<String>it=origFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.n
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(origFormats!=null){if(!foundFormats.isEmpty()){for(Iterator<String>it=origFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152List<String>foundDescriptions=newArrayList<String>(1);Iterator<String>it=foundFormats.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(0);Iterator<String>it=foundFormats.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<Object>it=foundFormats.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundFormats=newArrayList<Format>(fmtCount+1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundFormats=newArrayList<Format>(fmtCount,toPattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundFormats=newArrayList<Format>(fmtCount*2);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<Format>it=toPattern.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Formats.for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendPattern(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152For(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendPattern(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(foundFormats.size());
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats!=null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(toPattern==null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendPattern(pattern,it.next());}}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(toPattern==null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendPattern(pattern,it.n
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(1);registry.registerFormat(foundDescriptions,true);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(1);registry.registerFormat(foundDescriptions,false);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundDescriptions!=null){if(!foundDescriptions.isEmpty()){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){applyPattern(it.next());}}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundDescriptions!=null){if(!foundDescriptions.isEmpty()){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Collection<Format>foundDescriptions=newArrayList<Format>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Set<String>foundDescriptions=newHashSet<String>(8);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendPattern(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(0);registry.registerFormat(foundDescriptions,true);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(0);registry.registerFormat(foundDescriptions,false);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundFormats=newArrayList<Format>(5);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(8);registry.registerFormat(foundDescriptions,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(7);registry.registerFormat(foundDescriptions,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Collection<String>foundDescriptions=newArrayList<String>(toPattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Collection<String>foundDescriptions=newArrayList<String>(fmtCount);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats!=null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());break;}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats==null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());break;}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Formats.for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152For(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Formats.for(Iterator<Format>it=foundDescriptions.iterator();it.hasNext();){appendFormats(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152For(Iterator<Format>it=foundDescriptions.iterator();it.hasNext();){appendFormats(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Formats.append(foundDescriptions.iterator();it.hasNext();){appendFormats(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152java.util.ArrayList<String>foundDescriptions=newjava.util.ArrayList<String>(8);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundDescriptions=newArrayList<Format>(toPattern,toPattern.length);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundDescriptions=newArrayList<Format>(toPattern.length);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundDescriptions=newArrayList<Format>(origFormats);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundDescriptions=newArrayList<Format>(toPattern,toPattern.length());
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundFormats=newArrayList<Format>(toPattern,toPattern.length);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundFormats=newArrayList<Format>(origFormats);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundFormats=newArrayList<Format>(toPattern.length);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundFormats=newArrayList<Format>(toPattern,toPattern.length());
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152List<String>foundDescriptions=newArrayList<String>(2);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundDescriptions!=null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){toPattern.add(it.next());}}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats!=null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){toPattern.add(it.next());}}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundDescriptions!=null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){toPattern.add(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundDescriptions!=null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.n
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats!=null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.n
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundFormats=newArrayList<Format>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<Format>it=foundFormats.iterator();it.hasNext();){toPattern.add(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundDescriptions=Lists.newArrayList();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(toPattern==null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(origFormats==null){if(!origFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundFormats=newArrayList<Format>(fmtCount,1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundFormats=newArrayList<Format>(fmtCount-1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(7);List<String>foundDescriptions=newArrayList<String>(7);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(7);Iterator<String>it=foundFormats.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152For(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());break;}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152For(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());break;}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(!foundFormats.isEmpty()){for(Iterator<String>it=origFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());break;}}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(!foundFormats.isEmpty()){for(Iterator<String>it=origFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());break;}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(!foundFormats.isEmpty()){for(Iterator<String>it=toPattern.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());break;}}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<String>it=origFormats.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<String>it=origFormats.iterator();it.hasNext();){toPattern.add(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(0;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats==null){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());break;}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(toPattern!=null){if(!foundDescriptions.isEmpty()){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(toPattern==null){if(!foundDescriptions.isEmpty()){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Collections.<String>foundDescriptions=newArrayList<String>(8);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<String>it=origFormats.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(8);registry.registerFormat(foundDescriptions,this);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Collection<String>foundDescriptions=newArrayList<String>(8);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Collection<String>foundDescriptions=newArrayList<String>(4);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<Format>it=this.foundFormats.iterator();it.hasNext();){appendFormats(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<Format>it=origFormats.iterator();it.hasNext();){appendFormats(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundFormats=Lists.newArrayListWithCapacity(fmtCount);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundFormats=Lists.newLinkedList();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(toPattern==null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){applyPattern(it.next());}}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(toPattern==null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152For(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendPattern(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<String>it=this.foundDescriptions.iterator();it.hasNext();){appendPattern(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(5);List<String>foundDescriptions=newArrayList<String>(5);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(5);ArrayList<String>foundDescriptions=newArrayList<String>(8);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(registry!=null){ArrayList<String>foundDescriptions=newArrayList<String>(1);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(junit.framework!=null){ArrayList<String>foundDescriptions=newArrayList<String>(1);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<String>it=newArrayList<String>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<Format>it=this.foundDescriptions.iterator();it.hasNext();){appendFormats(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats!=null){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());break;}}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<String>it=origFormats.iterator();it.hasNext();){appendPattern(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(origFormats!=null){if(!foundFormats.isEmpty()){for(Iterator<String>it=origFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(origFormats==null){if(!foundFormats.isEmpty()){for(Iterator<String>it=origFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(origFormats==null){if(!foundFormats.isEmpty()){for(Iterator<String>it=origFormats.iterator();it.hasNext();){appendQuotedString(pattern,
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<String>it=origFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<Format>it=findFormats.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(!foundFormats.isEmpty()){for(Iterator<Format>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Set<Format>foundDescriptions=newHashSet<Format>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<Format>().length;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Set<Format>foundFormats=newHashSet<Format>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>toPattern=newArrayList<Format>(0);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundDescriptions=newArrayList<Format>(DUMMY_PATTERN);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundDescriptions=newArrayList<Format>(toPattern,toPattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(2);List<String>foundDescriptions=newArrayList<String>(2);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(2);Iterator<String>it=foundFormats.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152For(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<String>it=this.foundDescriptions.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(6);List<String>foundDescriptions=newArrayList<String>(6);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(6);Iterator<String>it=foundFormats.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(6);ArrayList<String>foundDescriptions=newArrayList<String>(8);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152List<String>foundDescriptions=newArrayList<String>(7);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<String>it=origFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<String>it=origFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,foundFormats.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<String>it=foundFormats.iterator();it.hasNext();){appendPattern(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152For(Iterator<String>it=foundFormats.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<String>it=this.foundDescriptions.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats==null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152java.util.ArrayList<String>foundDescriptions=newArrayList<String>(8);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(junit.framework.AssertionFailedError!=null){ArrayList<String>foundDescriptions=newArrayList<String>(4);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,pattern);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(junit.framework.AssertionFailedError!=null){ArrayList<String>foundDescriptions=newArrayList<String>(4);registry.registerFormat(foundDescriptions,pattern);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<Format>(fmtCount);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<String>it=this.foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<String>it=left.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(toPattern!=null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){toPattern.add(it.next());}}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(toPattern!=null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){toPattern.add(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<Format>it=left.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(junit.framework.AssertionFailedError!=null){ArrayList<String>foundDescriptions=newArrayList<String>(4);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(junit.framework.AssertionFailedError!=null){ArrayList<String>foundDescriptions=newArrayList<String>(4);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(6);ArrayList<String>foundDescriptions=newArrayList<String>(5);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<String>it=left.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(7);ArrayList<String>discoveredDescriptions=newArrayList<String>(7);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){appendPattern(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<?>it=foundFormats.iterator();it.hasNext();){appendPattern(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(toPattern==null){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());break;}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats!=null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());break;}}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(origFormats==null){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());break;}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(8);Iterator<String>it=this.foundFormats.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(toPattern!=null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendPattern(pattern,it.next());}}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(toPattern==null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendPattern(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(toPattern!=null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendPattern(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(toPattern==null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){toPattern.add(it.next());}}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<Format>it=toPattern.foundDescriptions.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(2);ArrayList<String>foundDescriptions=newArrayList<String>(1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(origFormats==null){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(origFormats!=null){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(origFormats==null||!foundFormats.isEmpty()){for(Iterator<String>it=origFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<String>it=left.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(junit.framework.AssertionFailedError!=null){ArrayList<String>foundDescriptions=newArrayList<String>(4);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,this);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(junit.framework.AssertionFailedError!=null){ArrayList<String>foundDescriptions=newArrayList<String>(4);registry.registerFormat(foundDescriptions,this);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<String>it=left.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());break;}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<String>it=this.foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());break;}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats==null){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<String>it=toPattern.foundDescriptions.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<Format>it=left.iterator();it.hasNext();){appendFormats(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<Format>it=leftDescriptions.iterator();it.hasNext();){appendFormats(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(toPattern!=null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(toPattern!=null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<String>it=left.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(toPattern!=null){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendPattern(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>discoveredDescriptions=newArrayList<String>(8);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Collection<Format>foundFormats=newArrayList<Format>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<Format>it=registry.foundFormats.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(junit.framework.AssertionFailedError!=null){ArrayList<String>foundDescriptions=newArrayList<String>(8);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(junit.framework.AssertionFailedError!=null){ArrayList<String>foundDescriptions=newArrayList<String>(8);registry.registerFormat(foundDescriptions,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<String>it=foundDescriptions.iterator();it.hasNext();){toPattern.add(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<?>it=foundFormats.iterator();it.hasNext();){toPattern.add(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(1;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(5);ArrayList<String>foundDescriptions=newArrayList<String>(4);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Set<String>foundDescriptions=newHashSet<String>(2);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundFormats=Lists.newArrayListWithCapacity(size());
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Collection<String>foundDescriptions=newArrayList<String>(1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(junit.framework.AssertionFailedError!=null){ArrayList<String>foundDescriptions=newArrayList<String>(0);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,this);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(junit.framework.AssertionFailedError!=null){ArrayList<String>foundDescriptions=newArrayList<String>(0);registry.registerFormat(foundDescriptions,this);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(1);Iterator<String>it=this.foundFormats.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(1);Iterator<String>it=this.foundDescriptions.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<Format>it=this.formatDescriptions.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(origFormats==null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){applyPattern(it.next());}}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats==null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats!=null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(junit.framework.AssertionFailedError)registry.registerFormat(foundDescriptions,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(junit.framework.AssertionFailedError!=null){ArrayList<String>foundDescriptions=newArrayList<String>(1);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(junit.framework.AssertionFailedError!=null){ArrayList<String>foundDescriptions=newArrayList<String>(1);registry.registerFormat(foundDescriptions,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(toPattern==null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendPattern(pattern,it.next()
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152java.util.ArrayList<String>foundDescriptions=newjava.util.ArrayList<String>(4);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundFormats=newArrayList<Format>(8);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundFormats=newArrayList<Format>(6);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(!toPattern.isEmpty()){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());break;}}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(!foundFormats.isEmpty()){for(Iterator<String>it=this.origFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());break;}}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats==null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){toPattern.add(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(toPattern==null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Collections.<String>foundDescriptions=newArrayList<Format>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats==null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());break;}}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(4);Iterator<String>it=this.foundFormats.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(4);Iterator<String>it=this.foundDescriptions.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(junit.framework.AssertionFailedError!=null){ArrayList<String>foundDescriptions=newArrayList<String>(8);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,pattern);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(junit.framework.AssertionFailedError!=null){ArrayList<String>foundDescriptions=newArrayList<String>(8);registry.registerFormat(foundDescriptions,pattern);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<String>it=left.iterator();it.hasNext();){appendPattern(pattern,it.next());}
