projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152List<String>foundDescriptions=newArrayList<String>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(0);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats==null){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendPattern(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendPattern(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){toPattern.add(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(8);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<String>it=foundFormats.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<Format>it=foundFormats.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundDescriptions=newArrayList<Format>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats==null){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats==null){for(Iterator<Format>it=foundFormats.iterator();it.hasNext();){appendFormats(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(4);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());break;}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundFormats=newArrayList<Format>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(2);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<Format>it=foundDescriptions.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<Format>it=this.foundFormats.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<Format>it=origFormats.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats!=null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){toPattern.add(it.next());}}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats==null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){toPattern.add(it.next());}}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(!foundFormats.isEmpty()){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){toPattern.add(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(0);ArrayList<String>foundDescriptions=newArrayList<String>(0);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(0);ArrayList<String>foundDescriptions=newArrayList<String>(1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(0);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,true);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(0);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(0);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,this);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(1);ArrayList<String>foundDescriptions=newArrayList<String>(1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(1);java.util.ArrayList<String>foundDescriptions=newjava.util.ArrayList<String>(1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(1);ArrayList<String>foundDescriptions=newArrayList<String>(2);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(1);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,true);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(1);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(7);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(6);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendPattern(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats==null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendPattern(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats!=null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendPattern(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats!=null){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendPattern(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(!foundFormats.isEmpty()){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());break;}}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());break;}}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(!foundFormats.isEmpty()){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());break;}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats!=null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.n
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<String>it=foundDescriptions.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<String>it=origFormats.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<String>it=this.foundFormats.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundDescriptions=newArrayList<Format>(toPattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152List<Format>foundDescriptions=newArrayList<Format>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundDescriptions=newArrayList<Format>(1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundFormats=Lists.newArrayList();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundFormats=newArrayList<Format>();toPattern.addAll(origFormats);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Collection<String>foundDescriptions=newArrayList<String>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats==null){for(Iterator<Format>it=foundDescriptions.iterator();it.hasNext();){appendFormats(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<Format>it=foundDescriptions.iterator();it.hasNext();){appendFormats(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats!=null){for(Iterator<Format>it=foundDescriptions.iterator();it.hasNext();){appendFormats(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats!=null){for(Iterator<Format>it=foundFormats.iterator();it.hasNext();){appendFormats(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(!foundFormats.isEmpty()){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(4);ArrayList<String>foundDescriptions=newArrayList<String>(4);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(4);java.util.ArrayList<String>foundDescriptions=newArrayList<String>(4);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(4);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,true);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(4);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(4);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,this);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(8);ArrayList<String>foundDescriptions=newArrayList<String>(8);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(8);java.util.ArrayList<String>foundDescriptions=newArrayList<String>(8);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(8);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,true);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(8);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(8);ArrayList<String>foundDescriptions=newArrayList<String>(7);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(!foundFormats.isEmpty()){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendPattern(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats!=null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendPattern(pattern,it.next());}}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats!=null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendPattern(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(!foundFormats.isEmpty()){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats!=null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){applyPattern(it.next());}}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<String>it=foundFormats.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundFormats=newArrayList<Format>(toPattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundFormats=newArrayList<Format>(1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152List<Format>foundFormats=newArrayList<Format>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats==null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats!=null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats!=null){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats!=null){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){toPattern.add(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<String>it=foundFormats.iterator();it.hasNext();){toPattern.add(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendPattern(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(!foundFormats.isEmpty()){for(Iterator<String>it=origFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<Format>it=foundFormats.iterator();it.hasNext();){appendFormats(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<Format>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>toPattern=newArrayList<Format>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(8);List<String>foundDescriptions=newArrayList<String>(8);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(8);Iterator<String>it=foundFormats.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(8);ArrayList<String>foundDescriptions=newArrayList<String>(6);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundFormats=newArrayList<Format>(0);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundFormats=newArrayList<Format>(2);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats!=null){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(0);List<String>foundDescriptions=newArrayList<String>(0);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(0);List<String>foundDescriptions=newArrayList<String>(1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(4);List<String>foundDescriptions=newArrayList<String>(4);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(4);ArrayList<String>foundDescriptions=newArrayList<String>(5);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(4);Iterator<String>it=foundFormats.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(4);ArrayList<String>foundDescriptions=newArrayList<String>(6);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Collections.<String>foundDescriptions=newArrayList<String>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(5);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<Format>it=this.foundDescriptions.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundDescriptions=newArrayList<Format>(2);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(1);List<String>foundDescriptions=newArrayList<String>(1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(1);Iterator<String>it=foundFormats.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(1);ArrayList<String>foundDescriptions=newArrayList<String>(3);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(foundFormats!=null){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());break;}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());break;}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(4);ArrayList<String>foundDescriptions=newArrayList<String>(8);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundFormats=newArrayList<Format>(fmtCount);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<Format>foundFormats=newArrayList<Format>(4);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(0);ArrayList<String>foundDescriptions=newArrayList<String>((0);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(toPattern==null){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendPattern(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(toPattern==null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendPattern(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(1);ArrayList<String>foundDescriptions=newArrayList<String>(4);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152ArrayList<String>foundDescriptions=newArrayList<String>(8);ArrayList<String>discoveredDescriptions=newArrayList<String>(8);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152if(toPattern==null){if(!foundFormats.isEmpty()){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java152Iterator<String>it=this.foundDescriptions.iterator();
