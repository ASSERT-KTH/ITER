bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
7	[BUG] [BUGGY] ParsePosition pos = new ParsePosition(0); [FE] junit.framework.AssertionFailedError: registry [CONTEXT] public final void applyPattern(String pattern) { if (registry == null) { super.applyPattern(pattern); toPattern = super.toPattern(); return; } ArrayList<Format> foundFormats = new ArrayList<Format>(); ArrayList<String> foundDescriptions = new ArrayList<String>(); StringBuilder stripCustom = new StringBuilder(pattern.length()); [BUGGY] ParsePosition pos = new ParsePosition(0); [BUGGY] char[] c = pattern.toCharArray(); int fmtCount = 0; while (pos.getIndex() < pattern.length()) { switch (c[pos.getIndex()]) { case QUOTE: appendQuotedString(pattern, pos, stripCustom, true); break; case START_FE: fmtCount++; seekNonWs(pattern, pos); [CLASS] ExtendedMessageFormat [METHOD] applyPattern [RETURN_TYPE] void  String pattern [VARIABLES] StringBuilder stripCustom Format[] origFormats ArrayList foundDescriptions foundFormats String DUMMY_PATTERN ESCAPED_QUOTE formatDescription pattern toPattern long serialVersionUID int fmtCount i index start char[] c Format f format boolean char END_FE QUOTE START_FE START_FMT Iterator it Map registry ParsePosition pos  	projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java	0.4472135954999579	155	155	1	replace	
8	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: registry [CONTEXT] public final void applyPattern(String pattern) { if (registry == null) { super.applyPattern(pattern); toPattern = super.toPattern(); return; } ArrayList<Format> foundFormats = new ArrayList<Format>(); ArrayList<String> foundDescriptions = new ArrayList<String>(); StringBuilder stripCustom = new StringBuilder(pattern.length()); [BUGGY] [BUGGY] ParsePosition pos = new ParsePosition(0); char[] c = pattern.toCharArray(); int fmtCount = 0; while (pos.getIndex() < pattern.length()) { switch (c[pos.getIndex()]) { case QUOTE: appendQuotedString(pattern, pos, stripCustom, true); break; case START_FE: fmtCount++; seekNonWs(pattern, pos); [CLASS] ExtendedMessageFormat [METHOD] applyPattern [RETURN_TYPE] void  String pattern [VARIABLES] StringBuilder stripCustom Format[] origFormats ArrayList foundDescriptions foundFormats String DUMMY_PATTERN ESCAPED_QUOTE formatDescription pattern toPattern long serialVersionUID int fmtCount i index start char[] c Format f format boolean char END_FE QUOTE START_FE START_FMT Iterator it Map registry ParsePosition pos  	projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java	0.4472135954999579	155	155	1	add	
