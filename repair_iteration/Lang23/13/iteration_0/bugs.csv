bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
25	[BUG] [BUGGY] stripCustom.append(START_FE).append(index); [FE] junit.framework.AssertionFailedError: registry [CONTEXT] while (pos.getIndex() < pattern.length()) { switch (c[pos.getIndex()]) { case QUOTE: appendQuotedString(pattern, pos, stripCustom, true); break; case START_FE: fmtCount++; seekNonWs(pattern, pos); int start = pos.getIndex(); int index = readArgumentIndex(pattern, next(pos)); [BUGGY] stripCustom.append(START_FE).append(index); [BUGGY] seekNonWs(pattern, pos); Format format = null; String formatDescription = null; if (c[pos.getIndex()] == START_FMT) { formatDescription = parseFormatDescription(pattern, next(pos)); format = getFormat(formatDescription); if (format == null) { stripCustom.append(START_FMT).append(formatDescription); } [CLASS] ExtendedMessageFormat [METHOD] applyPattern [RETURN_TYPE] void  String pattern [VARIABLES] StringBuilder stripCustom Format[] origFormats ArrayList foundDescriptions foundFormats String DUMMY_PATTERN ESCAPED_QUOTE formatDescription pattern toPattern long serialVersionUID int fmtCount i index start char[] c Format f format boolean char END_FE QUOTE START_FE START_FMT Iterator it Map registry ParsePosition pos  	projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java	0.4472135954999579	168	168	1	replace	
26	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: registry [CONTEXT] while (pos.getIndex() < pattern.length()) { switch (c[pos.getIndex()]) { case QUOTE: appendQuotedString(pattern, pos, stripCustom, true); break; case START_FE: fmtCount++; seekNonWs(pattern, pos); int start = pos.getIndex(); int index = readArgumentIndex(pattern, next(pos)); [BUGGY] [BUGGY] stripCustom.append(START_FE).append(index); seekNonWs(pattern, pos); Format format = null; String formatDescription = null; if (c[pos.getIndex()] == START_FMT) { formatDescription = parseFormatDescription(pattern, next(pos)); format = getFormat(formatDescription); if (format == null) { stripCustom.append(START_FMT).append(formatDescription); } [CLASS] ExtendedMessageFormat [METHOD] applyPattern [RETURN_TYPE] void  String pattern [VARIABLES] StringBuilder stripCustom Format[] origFormats ArrayList foundDescriptions foundFormats String DUMMY_PATTERN ESCAPED_QUOTE formatDescription pattern toPattern long serialVersionUID int fmtCount i index start char[] c Format f format boolean char END_FE QUOTE START_FE START_FMT Iterator it Map registry ParsePosition pos  	projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java	0.4472135954999579	168	168	1	add	
