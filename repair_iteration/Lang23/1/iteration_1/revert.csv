projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151List<Format>foundFormats=newArrayList<Format>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(toPattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,pos,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,pos,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,i,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151intfmtCount=toPattern.length();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,i+1,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<Object>it=toPattern.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(Iterator<Object>it=toPattern.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=toPattern.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=toPattern.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<Object>it=toPatterns.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<Object>it=toPattern.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<String>it=pattern.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<Object>it=toPattern.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<Object>it=toPattern.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){toPattern=newFormat[fmtCount];for(inti=start;i<fmtCount;++i){appendQuotedString(pattern,i);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,i+1,stripCustom,false);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,pos+1,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(Iterator<Object>it=toPattern.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=this.toPattern.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=registry.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=this.formatDescription.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=register.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);junit.framework.AssertionFailedError:this.registry.applyPattern(pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);junit.framework.AssertionFailedError:this.registry.appendPattern(pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);junit.framework.AssertionFailedError:this.registry.applyPattern(pattern,toPattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(Iterator<Object>it=toPattern.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=toPattern.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){toPattern=newFormat[fmtCount];for(inti=start;i<fmtCount;++i){appendQuotedString(pattern,i);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(c==null){if(toPattern==null){toPattern=newFormat[fmtCount];for(inti=start;i<fmtCount;++i){appendQuotedString(pattern,i);}}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(fmtCount==0){if(toPattern==null){toPattern=newFormat[fmtCount];for(inti=start;i<fmtCount;++i){appendQuotedString(pattern,
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<String>foundDescriptions=newArrayList<String>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<String>foundDescriptions=newArrayList<String>(toPattern.length());
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<String>foundDescriptions=newArrayList<String>(origFormats.length);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<String>foundDescriptions=newArrayList<String>(toPattern.size());
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,pos,stripCustom,false);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,pos,stripCustom,false);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(Iterator<Object>it=toPattern.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(Iterator<Object>it=toPatterns.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=toPatterns.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,i,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(2);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151intfmtCount=pattern.length();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151intfmtCount=toPattern.length()-1;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151intfmtCount=toPattern.length()+1;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151intfmtCount=toPattern.length()*2;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=registry.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=this.toPattern.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=register.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(origFormats);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(toPattern,toPattern.length);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(toPattern.length);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(toPattern,origFormats);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Set<Format>foundFormats=newHashSet<Format>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:this.registry.applyPattern(pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,true);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:this.registry.applyPattern(pattern,toPattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(4);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(fmtCount==0){toPattern=newFormat[fmtCount];for(inti=start;i<fmtCount;++i){appendQuotedString(pattern,i);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){toPattern=newFormat[1];for(inti=start;i<fmtCount;++i){appendQuotedString(pattern,i);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(Iterator<String>it=pattern.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=pattern.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<String>it=pattern.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,i+1,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,i+1,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,i+1,stripCustom,false);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=toPattern.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=toPattern.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);ArrayList<Format>foundFormats=newArrayList<Format>(1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:registry.
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:registry.registerFormat(DUMMY_PATTERN,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:registry.registerFormat(this,foundFormats);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:toPattern;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Collection<Format>foundFormats=newArrayList<Format>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=toPatterns.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=toPattern.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=toPattern.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<String>it=origFormats.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<String>foundDescriptions=Lists.newArrayList();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<String>it=origFormats.iterator();it.hasNext();){appendDescription(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=this.registry.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=toPattern.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=toPattern.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=toPattern.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=this.registry.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);junit.framework.AssertionFailedError:registry.
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);junit.framework.AssertionFailedError:registry.registerFormat(DUMMY_PATTERN,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);junit.framework.AssertionFailedError:toPattern;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);junit.framework.AssertionFailedError:registry.registerFormat(DUMMY_PATTERN,foundFormats);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);junit.framework.AssertionFailedError:registry.registerFormat(this,foundFormats);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,pos,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<Object>it=pattern.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=pattern.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(c==null){for(Iterator<Object>it=c.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<Object>it=this.toPatterns.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(fmtCount==0){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,pos,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(fmtCount==0){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,i,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151intfmtCount=this.toPattern.length();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(8);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=pattern.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:it.remove();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:registry.registerFormat(DUMMY_PATTERN,newFormat[]{pattern});
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:registry.registerFormat(DUMMY_PATTERN,foundFormats);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(fmtCount==0){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,i+1,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,pos+1,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(fmtCount==0){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,pos+1,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=pattern.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(fmtCount);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(fmtCount==0){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,pos,stripCustom,false);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(c==null){toPattern=newFormat[fmtCount];for(inti=start;i<fmtCount;++i){appendQuotedString(pattern,i);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);ArrayList<Format>foundFormats=newArrayList<Format>(1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);ArrayList<Format>foundFormats=newArrayList<Format>(0);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);junit.framework.AssertionFailedError:it.remove();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=this.formatDescription.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<String>it=origFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(Iterator<String>it=origFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<String>it=origFormats.iterator();it.hasNext();){appendQuotedString(pattern,toPattern,stripCustom,true);}
