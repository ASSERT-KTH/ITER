projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151List<Format>foundFormats=newArrayList<Format>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(toPattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,pos,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,pos,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,i,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151intfmtCount=toPattern.length();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,i+1,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<Object>it=toPattern.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(Iterator<Object>it=toPattern.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=toPattern.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=toPattern.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<Object>it=toPatterns.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<Object>it=toPattern.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<String>it=pattern.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<Object>it=toPattern.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<Object>it=toPattern.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){toPattern=newFormat[fmtCount];for(inti=start;i<fmtCount;++i){appendQuotedString(pattern,i);}
